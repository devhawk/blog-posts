<?xml version="1.0" encoding="UTF-8" ?>
<!-- This is a WordPress eXtended RSS file generated by WordPress as an export of your site. -->
<!-- It contains information about your site's posts, pages, comments, categories, and other content. -->
<!-- You may use this file to transfer that content from one site to another. -->
<!-- This file is not intended to serve as a complete backup of your site. -->

<!-- To import this information into a WordPress site follow these steps: -->
<!-- 1. Log in to that site as an administrator. -->
<!-- 2. Go to Tools: Import in the WordPress admin panel. -->
<!-- 3. Install the "WordPress" importer from the list. -->
<!-- 4. Activate & Run Importer. -->
<!-- 5. Upload this file using the form provided on that page. -->
<!-- 6. You will first be asked to map the authors in this export file to users -->
<!--    on the site. For each author, you may choose to map to an -->
<!--    existing user on the site or to create a new user. -->
<!-- 7. WordPress will then import each of the posts, pages, comments, categories, etc. -->
<!--    contained in this file into your site. -->


<rss version="2.0"
	xmlns:excerpt="http://wordpress.org/export/1.2/excerpt/"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:wp="http://wordpress.org/export/1.2/"
>

<channel>
	<title>DevHawk</title>
	<link>http://devhawk.net</link>
	<description>Passion * Technology * Ruthless Competence</description>
	<pubDate>Fri, 18 Oct 2013 06:06:14 +0000</pubDate>
	<language>en-US</language>
	<wp:wxr_version>1.2</wp:wxr_version>
	<wp:base_site_url>http://devhawk.net</wp:base_site_url>
	<wp:base_blog_url>http://devhawk.net</wp:base_blog_url>

	<wp:author><wp:author_id>1</wp:author_id><wp:author_login>devhawk</wp:author_login><wp:author_email>harry@devhawk.net</wp:author_email><wp:author_display_name><![CDATA[DevHawk]]></wp:author_display_name><wp:author_first_name><![CDATA[Harry]]></wp:author_first_name><wp:author_last_name><![CDATA[Pierson]]></wp:author_last_name></wp:author>
	<wp:author><wp:author_id>2</wp:author_id><wp:author_login>dale</wp:author_login><wp:author_email>dale@microsoft.com</wp:author_email><wp:author_display_name><![CDATA[Dale Churchward]]></wp:author_display_name><wp:author_first_name><![CDATA[Dale]]></wp:author_first_name><wp:author_last_name><![CDATA[Churchward]]></wp:author_last_name></wp:author>


	

	<item>
		<title>Morning Coffee 1</title>
		<link>http://devhawk.net/2007/01/02/morning-coffee-1/</link>
		<pubDate>Tue, 02 Jan 2007 09:41:19 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://c3388fc2-c864-4232-b802-6e7b84b493fc</guid>
		<description></description>
		<content:encoded><![CDATA[<blockquote><p>I gave up drinkin', I gave up smokin'<br />I gave up thinkin' all the time, stone cold revoken<br />No reason to my rhyme, I wasn't jokin'<br />If there's a phony bone in me, I want it broken<br />"<a href="http://play.rhapsody.com/alldaysucker/alldaysucker/rubitin">Rub It In</a>" by <a href="http://alldaysucker.net/">All Day Sucker</a></p></blockquote><p>I'm trying to write more in 2007. Here's a roundup of stuff rattling around my brain:</p><ul><li><a href="http://sports.espn.go.com/ncf/recap?gameId=270010130">Fight On</a>! So much for Michigan and their bleating about being left out of the championship game. Also, massive congrats to <a href="http://sports.espn.go.com/ncf/recap?gameId=270010201">Boise State</a>.  </li><li>Santa did <a href="http://devhawk.net/2006/12/13/Good+Week+For+Hobbyists+And+Students.aspx">bring me free time</a> this holiday, but I spent it playing games rather than writing them. I'm digging <a href="http://www.xbox.com/games/gearsofwar">Gears</a> (big surprise) and <a href="http://xbox.com/games/deadrising">Dead Rising</a>, and I've starting playing <a href="http://xbox.com/games/vivapinata">Viva Pinata</a> with Patrick. Plus, I finished <a href="http://www.xbox.com/games/tomclancysghostreconadvancedwarfighterxbox360">GRAW</a> which I had on loan from a friend just in time to start playing <a href="http://xbox.com/games/tomclancyrainbowsixvegas/">Vegas</a>. Note I said "free time" which is to say time when I wasn't hanging out with my family. Typically during naps or after everyone was in bed, though I did skip at least one birthday party to play instead.  </li><li>We had a "surprise" snow storm two days after Christmas. Not enough to be dangerous driving, but enough to make a snowman with my kids. It's still there, though now that it's 55 degrees, I'm guessing it will be totally melted by the time I get home from work. It's been melting a little bit each day, so it's been like watching the climax of Raiders of the Lost Ark in slow motion.  </li><li>My wife and I finished watching season 5 of Alias last night. Fun, though it had really jumped the shark by Season 5. We watched the entire series on DVD, which really makes me wonder about the future of broadcast TV. We watched season 1 of Lost on DVD but we've been watching on TV ever since. I'm hooked on Lost, so there's no way I could go back to DVDs at this point, but I'm thinking that DVD is a better way to go for most TV. I wonder how this will change TV storytelling.  </li><li>I wish I could see how a show like Lost or Alias evolves over time. How much of the Rimbaldi story arc was mapped out before the show started? How did the production team deal with forced changes like Jennifer Garner's pregnancy or the apparently surprise series cancellation?  </li><li>I had 12 days off for the holidays, so it's very tough to be back at work. As I suggested above, I did very little coding while I was off, so getting back in the saddle won't be easy. It's especially hard on my little boy that I'm back to work. He was acting up yesterday which is fairly unusual. I finally asked him if he was sad about me going back to work and he broke down crying. I'm very lucky to be a part of such a tight knit family.  </li><li>I've been in my <a href="http://devhawk.net/2006/06/15/Moving+On.aspx">"new" job</a> for six months, but it seems like longer. I mean that in a good way. It feels like I fit better in this job, on a much smaller team, actually building stuff instead of just "evangelizing" it. Nothing against evangelism, I just think I burned out on that job. </li></ul><p>So starts a new feature on DevHawk. As you might guess from the "1" in the title, I'm hoping to make this a regular feature. As I ease back into work, expect more tech related nuggets along with the more random stuff. I should admit, however, that I actually don't drink coffee. :)</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>839</wp:post_id>
		<wp:post_date>2007-01-02 09:41:19</wp:post_date>
		<wp:post_date_gmt>2007-01-02 09:41:19</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>morning-coffee-1</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="college-football"><![CDATA[College Football]]></category>
		<category domain="category" nicename="morning-coffee"><![CDATA[Morning Coffee]]></category>
		<category domain="category" nicename="sports"><![CDATA[Sports]]></category>
		<category domain="post_tag" nicename="television"><![CDATA[Television]]></category>
		<category domain="post_tag" nicename="working-at-msft"><![CDATA[Working at MSFT]]></category>
		<category domain="post_tag" nicename="xbox-360"><![CDATA[Xbox 360]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Morning+Coffee+1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[c3388fc2-c864-4232-b802-6e7b84b493fc]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/01/02/Morning+Coffee+1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>My Wife, YouTube, MySpace and All Day Sucker</title>
		<link>http://devhawk.net/2007/01/02/my-wife-youtube-myspace-and-all-day-sucker/</link>
		<pubDate>Tue, 02 Jan 2007 08:42:05 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://2d34a3a9-9e9a-453c-ade3-66d627b0bcdb</guid>
		<description></description>
		<content:encoded><![CDATA[<p style="text-align: justify">My wife was poking around on <a href="http://www.youtube.com/">YouTube</a> and found two videos she wanted to show me. The first was a music video from a band called <a href="http://okgo.net">okgo</a> where they <a href="http://www.youtube.com/watch?v=pv5zWaTEVkI">dance on treadmills</a>. Interesting for about 60 seconds. Unfortunately, the video is three minutes long. Still, it is currently #8 on YouTube's <a href="http://www.youtube.com/browse?s=mp&amp;t=a">Most Watched All Time</a> list. The other was a much funnier video called <a href="http://www.youtube.com/watch?v=KmsOIjzQ1V8">Stick Magnetic Ribbons on Your SUV</a> (sung to the tune of <a href="http://en.wikipedia.org/wiki/Yellow_ribbon">Tie a Yellow Ribbon 'Round the Old Oak Tree</a>). The song is by the <a href="http://www.asylumstreetspankers.com/">Asylum Street Spankers</a> and the video was produced by <a href="http://devilsnight.com">Devil's Night Productions</a>. 
</p><p style="text-align: justify">Among Devil's Night's other work is an almost unknown movie called <a href="http://www.imdb.com/title/tt0480557/">Matters of Consequence</a> that stared <a href="http://www.myspace.com/morty">Morty Coyle</a>. Morty fronts a band called <a href="http://www.alldaysucker.net/">All Day Sucker</a>, which was born out of the ashes of a band called THE iMPOSTERS. Back when I lived in LA, I used to go see THE iMPOSTERS pretty much whenever they played. This must have been the second half of 1996, when I was dealing with a massively broken heart. They had a regular gig every week, though I forget the name of the place. But I was there, pretty much every week. I used to carry Morty around the club on my shoulders during the harmonica solo of Rational Anthem. Wow, was that really 10 years ago?
</p><p style="text-align: justify">Anyway, you check out a few songs from of All Day Sucker on their <a href="http://www.myspace.com/alldaysuckermyspace">MySpace page</a>. Some of the songs – Heavy Weather and Rub It In – date back to the iMPOSTERS days. Their album is available from <a href="http://www.cdbaby.com/cd/alldaysucker">CD Baby</a> and from <a href="http://zune.net">Zune</a>, <a href="http://www.rhapsody.com/alldaysucker?pcode=msn&amp;cpath=artistpage&amp;rsrc=alldaysucker">Rhapsody</a> and <a href="http://phobos.apple.com/WebObjects/MZStore.woa/wa/viewArtist?artistId=14076567">iTunes</a>. (No direct link for artists on Zune?) Check them out.
</p><p style="text-align: justify">It's amazing how small the world seems when you run across old friends online like this. Especially when the recent wind storm and power outage two weeks ago served as such a rude reminder of just how big the world really is, regardless of how it seems.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>840</wp:post_id>
		<wp:post_date>2007-01-02 00:42:05</wp:post_date>
		<wp:post_date_gmt>2007-01-02 08:42:05</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>my-wife-youtube-myspace-and-all-day-sucker</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="music"><![CDATA[Music]]></category>
		<category domain="category" nicename="personal"><![CDATA[Personal]]></category>
		<category domain="post_tag" nicename="web-2-0"><![CDATA[Web 2.0]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[My+Wife+YouTube+MySpace+And+All+Day+Sucker]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/01/02/My+Wife+YouTube+MySpace+And+All+Day+Sucker]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[2d34a3a9-9e9a-453c-ade3-66d627b0bcdb]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Morning Coffee 2</title>
		<link>http://devhawk.net/2007/01/03/morning-coffee-2/</link>
		<pubDate>Wed, 03 Jan 2007 10:03:55 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://33edca8d-2d3c-4474-990c-afe07864e330</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Late start + early meeting = short post today</p><ul><li>Want a free SAAB? Drop a line to <a href="http://rickbarn.spaces.live.com/">my boss</a>. Note, you have to be willing to steal it.</li><li>Saw <a href="http://www.imdb.com/title/tt0424345/">Clerks II</a> last night. It was the first Kevin Smith movie I haven't seen in the theaters since the original. Better than I expected, but it's time for Kevin to move on to new material.</li><li>Unlike most avid movie fans I know, I'm not a NetFlix customer. Nothing against them, but I've never been moved to sign up. But we did just sign up for the free trial of <a href="https://www.blockbuster.com/totalaccess">Blockbuster Total Access</a>. Basically, it's a clone of NetFlix, but you can bring your movies back to your local Blockbuster store and get a free rental on the spot. Plus, you get eCoupons (I think once a month) which are good for free movie or DVD rentals in the store. We'll see how it goes.</li><li>As expected, I didn't get much done yesterday. I don't think anyone did around here. I did pave the dev partition on my laptop. My laptop isn't very Vista friendly and we blew our hardware budget on new desktops (which I am definitely not complaining about) so I'm still on XP.</li><li>I wonder how well <a href="http://www.microsoft.com/sql/editions/compact/default.mspx">SQL <strike>Mobile</strike><strike>Anywhere</strike> Compact Edition</a> works with ASP.NET? Seems like that would be a better choice than SQL Express for small websites like personal blogs.</li><li>Almost finished getting Christmas put away. What with the wind storm, it seems like it went by very fast this year.</li></ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>841</wp:post_id>
		<wp:post_date>2007-01-03 10:03:55</wp:post_date>
		<wp:post_date_gmt>2007-01-03 10:03:55</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>morning-coffee-2</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="morning-coffee"><![CDATA[Morning Coffee]]></category>
		<category domain="post_tag" nicename="movies"><![CDATA[Movies]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[33edca8d-2d3c-4474-990c-afe07864e330]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Morning+Coffee+2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/01/03/Morning+Coffee+2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Morning Coffee 3</title>
		<link>http://devhawk.net/2007/01/04/morning-coffee-3/</link>
		<pubDate>Thu, 04 Jan 2007 09:58:26 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://fffaa875-d1e7-4cc9-8c2c-84e5129f057f</guid>
		<description></description>
		<content:encoded><![CDATA[<blockquote><p>I'm living in a tinder box, hosing down the roof<br />It's raging all around me, and I still refuse to move<br />There's a lesson I'm desperate to learn<br />And I'm willing to burn<br />     "<a href="http://play.rhapsody.com/maiasharp/maiasharp/willingtoburn">Willing To Burn</a>" by <a href="http://www.maiasharp.com/">Maia Sharp</a></p></blockquote><ul><li>A warm welcome goes out to the 110th congress. Between the Democratic majority in both houses and Republicans looking to distance themselves from President Decider and his abysmal approval ratings, maybe we'll actually get something accomplished in the next two years.</li><li>Not as nice as USC trouncing Michigan, but I like seeing Notre Dame on the receiving end of a <a href="http://sports.espn.go.com/ncf/recap?gameId=270030099&amp;confId=null">41-14 beatdown</a> from LSU in the Sugar Bowl. That's the 9th consecutive bowl loss for the Irish. </li><li>Actually started getting some work done yesterday. Today I'm doing some WCF STS work, but yesterday I focused on SSB and WF. </li><li>I need to better understand WF's faulting and compensation model. I got sidetracked yesterday when I realized that when a WF instance faults, the built-in SQL persistence service deletes the persisted instance from the database. That doesn't seem right to me, but <a href="http://devhawk.net/2006/10/17/WF+Clarifications+And+Corrections.aspx">I was wrong</a> last time I called out the WF SQL persistence service so I want to do more digging before I open my trap.</li><li>I dig WF persistence. I <a href="http://devhawk.net/2006/12/11/Transactions+In+Workflow+Foundationland.aspx">wrote a few weeks ago</a> about shipping a WF instance to a developer for debugging. Yesterday, I thought about having a persistence service that kept a history of the WF instance rather than overwriting it. I wonder if that would help with production debugging?</li><li>Great quote yesterday by my boss, speaking ill of a project that will remain nameless:<br />"Basically, they've spent the last month building an executive presentation to say we're screwed"</li></ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>842</wp:post_id>
		<wp:post_date>2007-01-04 09:58:26</wp:post_date>
		<wp:post_date_gmt>2007-01-04 09:58:26</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>morning-coffee-3</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="college-football"><![CDATA[College Football]]></category>
		<category domain="category" nicename="morning-coffee"><![CDATA[Morning Coffee]]></category>
		<category domain="category" nicename="politics"><![CDATA[Politics]]></category>
		<category domain="post_tag" nicename="wf"><![CDATA[WF]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[fffaa875-d1e7-4cc9-8c2c-84e5129f057f]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Morning+Coffee+3]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/01/04/Morning+Coffee+3]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>More WCS Docs Please</title>
		<link>http://devhawk.net/2007/01/04/more-wcs-docs-please/</link>
		<pubDate>Thu, 04 Jan 2007 17:12:29 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://e35de381-c2f5-42dc-8e70-c1078d3021cb</guid>
		<description></description>
		<content:encoded><![CDATA[<p>I love me some CardSpace, but I sure wish there was better documentation on how to use it, especially from WCF. The <a href="http://msdn2.microsoft.com/en-us/library/ms733090.aspx">current documentation</a> is very conceptual so you really only have the <a href="http://msdn2.microsoft.com/en-us/library/aa347820.aspx">samples</a> to go on, which sucks not to put too fine a point on it. </p><p>One example shows how to use <a href="http://msdn2.microsoft.com/en-us/library/ms751504.aspx">WCS with WCF's wsHttpBinding</a>. However, it turns out you can also use <a href="http://msdn2.microsoft.com/en-us/library/ms752259.aspx">WCS with WCF's wsFederationHttpBinding</a>. I've been experimenting with that binding talking to an STS, and it's never invoked the WCS UI before. Why does this example invoke WCS? I'm guessing because it doesn't specify an <a href="http://msdn2.microsoft.com/en-us/library/aa347735.aspx">issuer</a> in the config file, but I'd need to see documentation to be sure. </p><p>Also, using the federation binding appears to be the only way to request/demand additional claims beyond the private personal identifier (aka the PPID). If you want the client's email address, name, address, etc, you need to specify that via the <a href="http://msdn2.microsoft.com/en-us/library/aa749850.aspx">claimTypeRequirements</a> of the binding's <a href="http://msdn2.microsoft.com/en-us/library/ms731376.aspx">message</a><a href="http://msdn2.microsoft.com/en-us/library/ms731381.aspx">security</a> element. But that configuration isn't valid for the wsHttp binding. Why? </p><p>Finally, the two bindings produce different results on the security token. Using wsHttp, you get three claims: RSA Identity, RDA Possess Property and PPID Possess Property. When using wsFederationHttp, you get Hash Possess Property and PPID Possess Property (plus the claims you request). What happened to the RSA claims? If you attempt to add RSA to the claimTypeRequirements, CardSpace throws an error as an invalid request. Again, why? <a href="http://www.pluralsight.com/keith.aspx">Keith Brown</a> recently <a href="http://msdn.microsoft.com/msdnmag/issues/06/10/SecurityBriefs/">wrote</a> about how to use the RSA claim, so it sounds like a valuable piece of information to have. How come the federation binding doesn't send it?</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>843</wp:post_id>
		<wp:post_date>2007-01-04 17:12:29</wp:post_date>
		<wp:post_date_gmt>2007-01-04 17:12:29</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>more-wcs-docs-please</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="cardspace"><![CDATA[CardSpace]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<category domain="post_tag" nicename="wcf"><![CDATA[WCF]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[e35de381-c2f5-42dc-8e70-c1078d3021cb]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[More+WCS+Docs+Please]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/01/05/More+WCS+Docs+Please]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Morning Coffee 4</title>
		<link>http://devhawk.net/2007/01/05/morning-coffee-4/</link>
		<pubDate>Fri, 05 Jan 2007 10:39:54 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://39f2d3bd-b09c-4ca7-ac8d-4b623b877a39</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Recurring 8am Friday meetings are not my style. </p><ul><li>I've been tracking WCF for a long time. Yet, it's still a dauntingly large topic. Yesterday I spoke to a friend who works in Windows Live who is just beginning to learn about WCF and it's literally overwhelming him. His reaction reminded me of my early reactions to COM. It feels like no matter how much you learn about WCF, the "pile" of stuff still to learn doesn't shrink. In contrast, while my initial exposure to the .NET Framework was overwhelming, eventually I got to the point where I felt like I had a good handle on what was in there. </li><li>With all the configuration settings in WCF, the number of valid combinations is astronomical. While WCF's configuration based approach is arguably more flexible than a code based approach, it's also more complex and harder to debug in my experience. Config debugging seems to be an endless cycle of tweaking the config file and running the app to see what the effect is. We need better tools than <a href="http://msdn2.microsoft.com/en-us/library/ms732009.aspx">SvcConfigEditor</a>. </li><li>Responding to <u>yesterday's Morning Coffee</u>, <a href="http://www.masteringbiztalk.com/blogs/jon/"><u>Jon Flanders</u></a> confirmed via email that the built-in SQL WF persistence service "doesn't recover from faults to the last good persistence point" and that "when a fault happens, the instance closes and...is removed from the persistence database." Is this the right behavior? I'm thinking it depends on the workflow. More on this later.</li><li>I'm trying to get my teammates to start using the <a href="http://www.beyondbullets.com/">Beyond Bullet Points</a> approach to the various presentations we build as a team. Interestingly enough, it's been easier to get my team to adopt an agile development methodology than to adopt the Beyond Bullet Point presentation methodology. I would have expected the opposite. </li><li>The Caps <a href="http://scores.espn.go.com/nhl/recap?gameId=270104023">trounced the Canadiens</a> last night, ending a five game losing streak. I'm not that worried about the losing streak - the Caps have had several players out with the flu. But beating Montreal, who came into the game twelve games above .500, so badly is a good sign. And how about <a href="http://sports.espn.go.com/nhl/players/profile?statsId=3257">Nycholat</a>? Two goals and four assists in seven games since he was called up from Hershey. Even more impressive, he's +2 even though the Caps were 2-5 and outscored 24-18 in those seven games while averaging nearly 21 minutes of ice time per game. Here's hoping Nycholat stays hot.</li></ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>844</wp:post_id>
		<wp:post_date>2007-01-05 10:39:54</wp:post_date>
		<wp:post_date_gmt>2007-01-05 10:39:54</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>morning-coffee-4</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="morning-coffee"><![CDATA[Morning Coffee]]></category>
		<category domain="post_tag" nicename="powerpoint"><![CDATA[PowerPoint]]></category>
		<category domain="post_tag" nicename="washington-capitals"><![CDATA[Washington Capitals]]></category>
		<category domain="post_tag" nicename="wcf"><![CDATA[WCF]]></category>
		<category domain="post_tag" nicename="wf"><![CDATA[WF]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/01/05/Morning+Coffee+4]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[39f2d3bd-b09c-4ca7-ac8d-4b623b877a39]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Morning+Coffee+4]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Morning Coffee 5</title>
		<link>http://devhawk.net/2007/01/08/morning-coffee-5/</link>
		<pubDate>Mon, 08 Jan 2007 10:02:45 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://739e9cdf-7633-4c58-9bff-4c6f3df235b9</guid>
		<description></description>
		<content:encoded><![CDATA[<p>I can feel it coming in the air tonight, oh Lord<br />I've been waiting for this moment, all my life, oh Lord<br />Can you feel it coming in the air tonight, oh Lord, oh Lord<br /><a href="http://play.rhapsody.com/philcollins/facevalue/intheairtonight">In The Air Tonight</a> by <a href="http://www.rhapsody.com/philcollins">Phil Collins</a><br /><a href="http://play.rhapsody.com/nonpoint/recoil/intheairtonightalbumversion">Covered</a> by <a href="http://www.rhapsody.com/nonpoint">Nonpoint</a> on the <a href="http://www.rhapsody.com/album/miamiviceoriginalmotionpicturesoundtrack">Miami Vice Soundtrack</a></p><ul><li>It was a tough weekend in the Pierson house. For several hours on Saturday, we thought we were going to have to put our dog D'art down. <a href="http://techiewife.spaces.live.com/blog/cns!3DAECC033B88329C!605.entry">My wife has the details</a>, but the good news is that he had spine trauma, but nothing broken and he seems to be back on his way to his old self.</li><li>I grew up in <a href="http://maps.live.com/default.aspx?v=2&amp;cp=38.936518~-77.184293&amp;style=r&amp;lvl=13&amp;tilt=-90&amp;dir=0&amp;alt=-1000&amp;sp=Point.rybfsj4tq2g9_7332%20166th%20Ave%20NE%2c%20Redmond%2c%20WA%2098052%2c%20United%20States___">Northern Virginia</a>, so I'm a long time member of the Dallas Cowboy Hater's Club. So watching them <a href="http://sports.espn.go.com/nfl/recap?gameId=270106026">snatch defeat from the jaws of victory</a> against my adopted Seahawks was sweet.</li><li>Last night, Bill Gates <a href="http://microsoftatces.com/archive/2007/01/07/2007-international-ces-keynote.aspx">kicked off CES</a> with the usual assortment of product news and announcements. The biggest news, in my opinion anyway, is <a href="http://www.microsoft.com/presspass/press/2007/jan07/01-08IPTVXboxPR.mspx">IPTV support for Xbox 360</a>. (Did you know MSFT has a <a href="http://www.microsoft.com/tv">TV product division</a>?) Details are fairly scarce at this point, but I'm hoping this allows for independent broadcasters to directly reach consumers, much like blogs have done for independent writers. Can I use IPTV to launch my own TV channel? Imagine the possibilities. I'd like a Washington Capitals channel, so I can watch <a href="http://www.washingtoncaps.com/news/news.asp?story_id=4489">post game highlights</a> on my big screen TV rather than on my computer. A <a href="http://www.roosterteeth.com/">Rooster Teeth</a> channel would also be nice.</li><li>No coding this past weekend, though I did reinstall <a href="http://msdn.microsoft.com/directx/XNA/default.aspx">XNA Game Studio Express</a> on my recently paved dev partition. I tried playing <a href="http://www.xbox.com/games/legostarwars2/">Lego Star Wars II</a> with my son over the weekend and he's still having trouble learning how to use the controller. I was thinking I might try making some simple "games" to help him learn.</li></ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>845</wp:post_id>
		<wp:post_date>2007-01-08 10:02:45</wp:post_date>
		<wp:post_date_gmt>2007-01-08 10:02:45</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>morning-coffee-5</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="family"><![CDATA[Family]]></category>
		<category domain="category" nicename="morning-coffee"><![CDATA[Morning Coffee]]></category>
		<category domain="category" nicename="sports"><![CDATA[Sports]]></category>
		<category domain="post_tag" nicename="xbox-360"><![CDATA[Xbox 360]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/01/08/Morning+Coffee+5]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Morning+Coffee+5]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[739e9cdf-7633-4c58-9bff-4c6f3df235b9]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Morning Coffee 6</title>
		<link>http://devhawk.net/2007/01/09/morning-coffee-6/</link>
		<pubDate>Tue, 09 Jan 2007 09:41:09 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://8b4c41f0-601b-4a08-8da1-7c219a70832b</guid>
		<description></description>
		<content:encoded><![CDATA[<p>"The paper sure loves to talk about<br />Selling out<br />Some of us never get the chance"<br />Stick Around by <a href="http://www.olywa.net/previous/">Mr. Jones and the Previous</a></p><ul><li>Didn't see <a href="http://scores.espn.go.com/ncf/recap?gameId=270080194">that</a> coming. I guess the Buckeyes didn't either. Congrats to the Gators. That makes at least three championships in a row won by the underdog. For all the complaining about the <a href="http://www.bcsfootball.org/">BCS</a>, it's hard to argue they got the champion wrong this year. However, with the exception of the <a href="http://sports.espn.go.com/ncf/bowls06/bowls?game=fiesta">Fiesta Bowl</a>, the BCS games weren't very good this year.  </li><li>There's a <a href="http://onten.net/Blogs/tina/you-heard-it-people-carbon-is-real/">video</a> of the new <a href="http://www.xbox.com/en-US/community/events/ces2007/microsoftintegratesiptvsoftwareplatform.htm">Xbox 360 IPTV</a> service up on <a href="http://onten.net">10</a>. I realize it's a demo and we're nearly a year away from release, but I'm not impressed. Xbox 360 Fanboy <a href="http://www.xbox360fanboy.com/2007/01/09/rumor-xbox-iptv-may-not-be-so-grand/">pointed to</a> a blogger who got a <a href="http://thunor.spaces.live.com/blog/cns!71C238B5E0E3724D!149.entry">deeper look at the service</a> at Microsoft's CE booth. Frankly, it doesn't look or sound like it's much different than standard cable service (though I like the sound of 35Mbps bandwidth at my house). I realize familiarity is good, but do we really have to lock ourselves into the existing TV paradigm?  </li><li>I got roped into a webcast today on <a href="http://msevents.microsoft.com/CUI/WebCastEventDetails.aspx?EventID=1032321927&amp;EventCategory=4&amp;culture=en-US&amp;CountryCode=US">Optimizing Application Platform Infrastructure</a>. It's at 11am Pacific time. Stop by and say hi. </li><li>My colleague <a href="http://halfmybrain.spaces.live.com">Dale</a> has a rant about <a href="http://halfmybrain.spaces.live.com/Blog/cns!DF6CA820250998D2!271.entry">Service Oriented Assholes</a>. His definition: "Any person or team that pontificates on Service-Oriented Architecture (SOA) without considering the realities of implementing SOA in a real business environment with real suppliers, customers, and products. These people are great at designing something on a white board or on paper, but couldn't produce a real workable production ready system if their life depended on it." Sort of a more specific (and vulgar) version of Joel's "<a href="http://www.joelonsoftware.com/articles/fog0000000018.html">Architecture Astronauts</a>". How many SOA-holes do you know?</li></ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>846</wp:post_id>
		<wp:post_date>2007-01-09 09:41:09</wp:post_date>
		<wp:post_date_gmt>2007-01-09 09:41:09</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>morning-coffee-6</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="architecture"><![CDATA[Architecture]]></category>
		<category domain="post_tag" nicename="college-football"><![CDATA[College Football]]></category>
		<category domain="post_tag" nicename="entertainment"><![CDATA[Entertainment]]></category>
		<category domain="category" nicename="morning-coffee"><![CDATA[Morning Coffee]]></category>
		<category domain="post_tag" nicename="soa"><![CDATA[SOA]]></category>
		<category domain="post_tag" nicename="xbox-360"><![CDATA[Xbox 360]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/01/09/Morning+Coffee+6]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Morning+Coffee+6]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[8b4c41f0-601b-4a08-8da1-7c219a70832b]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>2440</wp:comment_id>
			<wp:comment_author><![CDATA[Michael.NET]]></wp:comment_author>
			<wp:comment_author_email>michaeldotnet@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://michaeldotnet.blogspot.com</wp:comment_author_url>
			<wp:comment_author_IP>206.140.100.2</wp:comment_author_IP>
			<wp:comment_date>2007-01-09 10:05:36</wp:comment_date>
			<wp:comment_date_gmt>2007-01-09 18:05:36</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[The buckeyes made this programmer cry :(  Actually, I turned the game off before the first quarter was even over...it was obvious where it was going by then.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Morning Coffee 7</title>
		<link>http://devhawk.net/2007/01/10/morning-coffee-7/</link>
		<pubDate>Wed, 10 Jan 2007 10:29:19 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://5514f34b-ddde-4f98-afcc-cb582742766c</guid>
		<description></description>
		<content:encoded><![CDATA[<p>News was expecting inches, but we only got a dusting of snow last night. </p><ul><li>We had dinner last night with my old friend <a href="http://technovangelist.com">Matt</a>, who <a href="http://technovangelist.com/archive/2005/08/11/14.aspx">moved to Amsterdam</a> a year and a half ago and is getting to <a href="http://technovangelist.com/archive/2006/10/30/Visited-Countries-Getting-Redder.aspx">travel the world</a>. Kids didn't have a nap yesterday, so they weren't quite on their best behavior, but it was great to see Matt. Hopefully it won't be another 18 months before we see him again. </li><li>For the second time in four months, the power cable for my laptop failed. I wonder if there is something wrong with the power supply that's causing the cable to fail? At least this time I wasn't <a href="http://devhawk.net/2006/09/20/Hard+On+Hardware.aspx">in Canada</a>.  </li><li>There's a <a href="http://www.xbox.com/NR/rdonlyres/BF491CFF-8B54-4314-9553-FD16F8F8E7B5/0/vidIPTV_InterviewHi.asx">high resolution video</a> of the Xbox 360 IPTV up on <a href="http://www.xbox.com/en-US/community/events/ces2007">Xbox.com's CES page</a>. They make it <em>very</em> clear this is "something you need to get from your service provider". Telling quote: "It's kinda like what I have today, but better". Doesn't seem that much better, so far anyway.  </li><li>I'm knee deep in WCF security code again. Mucking about with X.509 certificates sucks. I tried to follow these <a href="http://msdn2.microsoft.com/en-us/library/ms733813.aspx">directions</a> to create a dev root CA certificate as well as dev certs signed by said dev root CA, but I get security negotiation errors because the system can't check to see if the cert has been revoked. I guess I'll just install <a href="http://msdn2.microsoft.com/en-us/library/aa376539.aspx">Certificate Services</a> instead  </li><li>My nominee for best new acronym: <a href="http://blogs.zdnet.com/service-oriented/?p=790">JBOWS</a> (Just a Bunch of Web Services), apparently coined by <a href="http://blogs.zdnet.com/service-oriented">Joe McKendrick</a>. Web services, to date at least, seem like they're being used primarily for building distributed applications, rather than a loosely coupled services. There's nothing inherently wrong with that, unless you're fooling yourself (or those holding the purse strings) that you'll get integration "automagically" or "for free" just because you're using web services. Joe McKendrick is definitely not an <a href="http://halfmybrain.spaces.live.com/Blog/cns!DF6CA820250998D2!271.entry">SOA-hole</a>.  </li><li>The next new language I learn will be <a href="http://research.microsoft.com/fsharp/fsharp.aspx">F#</a>. Just not sure when or how.</li></ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>847</wp:post_id>
		<wp:post_date>2007-01-10 10:29:19</wp:post_date>
		<wp:post_date_gmt>2007-01-10 10:29:19</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>morning-coffee-7</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="architecture"><![CDATA[Architecture]]></category>
		<category domain="category" nicename="morning-coffee"><![CDATA[Morning Coffee]]></category>
		<category domain="post_tag" nicename="soa"><![CDATA[SOA]]></category>
		<category domain="post_tag" nicename="xbox-360"><![CDATA[Xbox 360]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/01/10/Morning+Coffee+7]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Morning+Coffee+7]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[5514f34b-ddde-4f98-afcc-cb582742766c]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>2441</wp:comment_id>
			<wp:comment_author><![CDATA[Bosse]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>85.228.106.137</wp:comment_author_IP>
			<wp:comment_date>2007-01-12 12:16:53</wp:comment_date>
			<wp:comment_date_gmt>2007-01-12 20:16:53</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[For F# information take a look at http://blogs.msdn.com/dsyme/archive/2006/12/18/DraftChaptersUpdateDec2006.aspx]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Morning Coffee 8</title>
		<link>http://devhawk.net/2007/01/11/morning-coffee-8/</link>
		<pubDate>Thu, 11 Jan 2007 08:01:39 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://643f6ef4-b6b7-4639-803d-fc79053029c1</guid>
		<description></description>
		<content:encoded><![CDATA[<p>The news got the amount of snow right, but the day wrong. Instead of hitting yesterday morning, the storm hit yesterday at rush hour. My boss declaired today "1st Annual Architect work from home day" even though we've already had several weather induced work from home days this winter.</p><ul><li>Growing up in Northern VA, when we got snow it was fairly consistent. If there was about four inches at my house, everyone had about four inches. Here, it seems like there's much more variance. My teammate Buzz who lives only 15 minutes from me (when it's not snowing) said he had 10" of snow while I have about half that.</li><li>Speaking of Northern VA, the last few winters have been easy on us but hard on my parents who still live in McLean. This year seems to be the opposite. The forcast for McLean today is only 45, but it's supposed to get up to 65 by the weekend. </li><li>As it turns out, my parents are in the Bahamas right now anyway, so while I make a snowman with my kids today, they're probably on the beach!</li><li>I almost didn't make it home yesterday as I was trying to get my STS working with CardSpace. I have WCS workng in a direct client to service scenario, but not federated with an STS. I probably would have stayed there all night saying "just one more config tweak, and I'm sure it will work" if I had gotten snowed in. </li><li>Speaking of WCS, check out <a href="http://www.casadehambone.com/HowToUseWindowsCardSpaceWithASPNETFormsAuthentication.aspx">Kevin's screencast</a> on extending ASP.NET's built in SQL membership provider to support WCS. And Garrett <a href="http://blogs.msdn.com/garretts/archive/2006/11/29/asp-net-1-1-token-decryption.aspx">published</a> a WCS security token processor for .NET 1.1 and 2.0 a couple of months ago. So you can use WCS on your website, even if you don't have .NET 3.0 on your server. Pretty cool.</li><li>My old teammate <a href="http://blogs.msdn.com/jevdemon/archive/2007/01/10/nailing-jello-to-the-wall.aspx">John doesn't like</a> the JBOWS acronym. I agree with John that defining a "proper" SOA is waste of time best left to SOAholes. But web services != SOA. Making a distinction between having an architecture where the business and IT levels that rely on independent capabilities and services versus using web services as the protocol between tiers of a distributed application and hoping that you'll be able to integrate in the future makes sense to me.</li></ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>848</wp:post_id>
		<wp:post_date>2007-01-11 08:01:39</wp:post_date>
		<wp:post_date_gmt>2007-01-11 08:01:39</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>morning-coffee-8</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="cardspace"><![CDATA[CardSpace]]></category>
		<category domain="post_tag" nicename="family"><![CDATA[Family]]></category>
		<category domain="category" nicename="morning-coffee"><![CDATA[Morning Coffee]]></category>
		<category domain="post_tag" nicename="wcf"><![CDATA[WCF]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[643f6ef4-b6b7-4639-803d-fc79053029c1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Morning+Coffee+8]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/01/11/Morning+Coffee+8]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>2442</wp:comment_id>
			<wp:comment_author><![CDATA[David]]></wp:comment_author>
			<wp:comment_author_email>david.ing@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>81.156.188.165</wp:comment_author_IP>
			<wp:comment_date>2007-01-12 03:16:16</wp:comment_date>
			<wp:comment_date_gmt>2007-01-12 11:16:16</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[RE: SOAholes. You need some facts Harry! http://soafacts.com/ that is...
]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>(Late) Morning Coffee 9</title>
		<link>http://devhawk.net/2007/01/12/late-morning-coffee-9/</link>
		<pubDate>Fri, 12 Jan 2007 11:23:12 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://ff6bf414-d699-4144-985c-32c9fa0f0840</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Took part of the morning off this morning to let the sun shine down on the icy roads. No major incidents getting to work, though the office parking lot is like an ice rink.</p><ul><li>As mentioned yesterday, I finally got my STS implementation working with WCS. Turns out that using WCS with the wsFederatedHttp binding requires you to specify which claims you want to send to the service. In comparison, using WCS with wsHttpBinding automatically requests the PPID claim. It would be nice if this was documented somewhere. I only figured it out by finding <a href="http://www.dasblonde.net/PermaLink,guid,0de3e38e-a516-4a33-a85d-3027a505f7b8.aspx">this demo</a> from <a href="http://www.dasblonde.net/">Michele</a>.</li><li><a href="http://devhawk.net/2007/01/05/Morning+Coffee+4.aspx">Last week</a>, I said that we need a better tool than <a href="http://msdn2.microsoft.com/en-us/library/ms732009.aspx">SvcConfigEditor</a>. This tool is only marginally better than hand-editing the config files with intellisense. A "real" tool would keep you from building invalid config files. While I appreciate the need for this level of flexibility at the transport layer, we really need a better web service hosting story than IIS + ASP.NET + web.config. WCF makes me long for the days of the MTS/COM+ GUI interface. I never wasted hours troubleshooting config issues with MTS/COM+.</li><li>Apparently, <a href="http://gamerscoreblog.com/team/archive/2007/01/11/540001.aspx">Xbox 360 outsold Wii and PS3 combined in December</a>. That's probably more of a statement about PS3 and Wii shortages, but there's no arguing with numbers like 10.4 million Xbox 360 consoles, 5 millions Xbox Live users, and nearly 3 million copies of Gears of War. Congrats to the Xbox team!</li><li><a href="http://www.from9till2.com/">David</a> may be hiding from his blog of late, but he did venture out long enough to point me to <a href="http://soafacts.com/">SOA Facts</a>. My favorite: Dante has a special level in hell for consultants whose resumes do not say SOA.</li></ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>849</wp:post_id>
		<wp:post_date>2007-01-12 11:23:12</wp:post_date>
		<wp:post_date_gmt>2007-01-12 11:23:12</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>late-morning-coffee-9</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="cardspace"><![CDATA[CardSpace]]></category>
		<category domain="category" nicename="morning-coffee"><![CDATA[Morning Coffee]]></category>
		<category domain="post_tag" nicename="wcf"><![CDATA[WCF]]></category>
		<category domain="post_tag" nicename="xbox-360"><![CDATA[Xbox 360]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[ff6bf414-d699-4144-985c-32c9fa0f0840]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Late+Morning+Coffee+9]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/01/12/Late+Morning+Coffee+9]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Playing in the Snow</title>
		<link>http://devhawk.net/2007/01/11/playing-in-the-snow/</link>
		<pubDate>Fri, 12 Jan 2007 00:07:46 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://0ec6a89a-5e6a-44d9-86f5-a8f533b2fc18</guid>
		<description></description>
		<content:encoded><![CDATA[<p>It was a little too cold to make a snowman at my house, so we headed over to the big hill near our house for a little sledding. The hill was pretty trashed - we weren't the first ones to down the hill - but we all had a fun time nonetheless.</p><p>Here's Mommy and Riley, riding together:</p><blockquote></blockquote><p><embed pluginspage="http://macromedia.com/go/getflashplayer" src="http://images.soapbox.msn.com/flash/soapbox1_1.swf" width="412" height="362" type="application/x-shockwave-flash" flashvars="c=v&amp;v=28d8eec2-5dfb-42e4-8d28-4b8bdd95f87a" wmode="transparent" quality="high"></embed></p><p>And here's Patrick, riding by himself like a big boy:</p><p><embed pluginspage="http://macromedia.com/go/getflashplayer" src="http://images.soapbox.msn.com/flash/soapbox1_1.swf" width="412" height="362" type="application/x-shockwave-flash" flashvars="c=v&amp;v=1e7546fc-a75c-4bee-ad50-9d6cd62430bb" wmode="transparent" quality="high"></embed></p><p>Riley calls Patrick "Bubba" because she can't say "brother". </p><p>And since I promised my teammate Maureen a snowman photo, here's the last one we built:</p><p><a href="http://s3.amazonaws.com/devhawk_images/WindowsLiveWriter/PlayingintheSnow_E1E4/IMG_5869[6].jpg" target="_new" atomicselection="true"><img style="border-top-width: 0px; border-left-width: 0px; border-bottom-width: 0px; border-right-width: 0px" height="480" src="http://s3.amazonaws.com/devhawk_images/WindowsLiveWriter/PlayingintheSnow_E1E4/IMG_5869_thumb[4].jpg" width="640" border="0" /></a></p><p>On top of all this snow play and sledding, I got my STS working with WCS. More on that tomorrow.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>850</wp:post_id>
		<wp:post_date>2007-01-11 16:07:46</wp:post_date>
		<wp:post_date_gmt>2007-01-12 00:07:46</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>playing-in-the-snow</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="family"><![CDATA[Family]]></category>
		<category domain="category" nicename="personal"><![CDATA[Personal]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/01/12/Playing+In+The+Snow]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Playing+In+The+Snow]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[0ec6a89a-5e6a-44d9-86f5-a8f533b2fc18]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Morning Coffee 9</title>
		<link>http://devhawk.net/2007/01/15/morning-coffee-9/</link>
		<pubDate>Mon, 15 Jan 2007 10:38:37 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://ebcef73b-0fb8-49c6-aa1c-2e41a411ae5c</guid>
		<description></description>
		<content:encoded><![CDATA[<p>I have a dream that one day this nation will rise up... live out the true meaning of its creed. We hold these truths to be self-evident that all men are created equal.<br /><a href="http://en.wikipedia.org/wiki/Martin_Luther_King%2C_Jr.">Reverend Doctor Martin Luther King, Jr</a></p><ul><li>My boss asks "<a href="http://rickbarn.spaces.live.com/Blog/cns!F8796F31B57620E9!208.entry">Are We There Yet?</a>" on fulfilling Dr. King's dream. Sadly, the answer is no. I think we're making progress, but we're not "there" yet.</li><li>No <a href="http://sports.espn.go.com/nfl/recap?gameId=270114003">back to back</a> trips to the Super Bowl for the Seahawks. They had chances to win it both down the stretch as well as in overtime and they couldn't capitalize. </li><li>I blogged about "Politics 2.0" <a href="http://devhawk.net/2006/11/07/Certainly+Not+Politics+As+Usual.aspx">back on election day</a>. Here's an article about <a href="http://www.newpolitics.net/node/236">viral video in politics</a> that's very Politics 2.0. </li><li>It finally warmed up enough yesterday to make a snowman. Patrick named the snowman "Capa" which is what he call my father. Apparently, my father and the snowman have the same bushy eyebrows (according to my wife). It's supposed to snow again tonight, so maybe we can make a "Granny" or "Nana" snowman (snow-woman?).</li><li>The new season of <a href="http://www.fox.com/24/">24</a> started last night. Please review Larry's list of the <a href="http://www.knowing.net/PermaLink,guid,d7cfaac8-447a-4506-baeb-cd6171869539.aspx">Top 10 Things I've Learned About Computers From The Movies and Any Episode of '24'</a>. </li><li>My wife <a href="http://techiewife.spaces.live.com/blog/cns!3DAECC033B88329C!623.entry">posted a picture</a> of Patrick and I playing <a href="http://www.xbox.com/games/legostarwars2xbox360/">Lego Star Wars II</a>. We really enjoy it, but I need to watch my language when we play. When we were fighting the <a href="http://www.xbox.com/games/vivapinata">Rancor</a>, Patrick announced to his mommy that we were fighting the "big fucking monster". Woops! Patrick already knows several words that your not supposed to say (and he reminds us if we ever use them) so I guess should add that to the list. Or I could start saying <a href="http://dilbertblog.typepad.com/the_dilbert_blog/2006/12/frack_1.html">frak</a> instead.</li></ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>851</wp:post_id>
		<wp:post_date>2007-01-15 10:38:37</wp:post_date>
		<wp:post_date_gmt>2007-01-15 10:38:37</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>morning-coffee-9</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="entertainment"><![CDATA[Entertainment]]></category>
		<category domain="post_tag" nicename="family"><![CDATA[Family]]></category>
		<category domain="category" nicename="morning-coffee"><![CDATA[Morning Coffee]]></category>
		<category domain="category" nicename="sports"><![CDATA[Sports]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/01/15/Morning+Coffee+9]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Morning+Coffee+9]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[ebcef73b-0fb8-49c6-aa1c-2e41a411ae5c]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Mastering WCF</title>
		<link>http://devhawk.net/2007/01/15/mastering-wcf/</link>
		<pubDate>Mon, 15 Jan 2007 16:43:54 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://e2475cd1-5bf4-4558-b09c-ce588c1e18a8</guid>
		<description></description>
		<content:encoded><![CDATA[<p><a href="http://codebetter.com/blogs/sam.gentile/archive/2007/01/10/New-and-Notable-134.aspx">Sam Gentile writes</a>:</p><blockquote><p><a href="http://devhawk.net/2007/01/05/Morning+Coffee+4.aspx">Harry finds Indigo daunting</a>. Me, I find mastering 8 different stacks (COM+/ES, ASMX, WSE, Remoting, MSMQ, etc) to do the same thing and all the strange nuances a hell of a lot more daunting but that's just me, although the number of timeout settings and config settings is astronomical.</p></blockquote><p>While mastering many different stacks <em>is</em> daunting, the reality is you don't have to master all of them to use one of them. Knowing Sam, he probably has mastered all the different stacks, but MVP's like Sam are an edge case. Most developer don't master <em>any </em>of the stacks, they get comfortable with the one or two stacks they use all the time. </p><p>From that perspective, WCF replaces the "legacy" stack a given developer understands with something much more complex, since WCF replaces legacy stacks <em>other</em> than the one said developer is familiar with. Options like message exchange patterns and network protocol were typically implicit to a given technology stack. For example, if you used ASMX, you could use any network protocol you want, as long as it's HTTP. Using WCF, you get to / have to choose which network protocol you want to use. Multiply that decision making process by the "astronomical" number of choices WCF provides, and you've got to spend a long time making decisions that the "legacy" stacks handled for you automatically.</p><p>To me, it looks like WCF's primary design goals were to support web service standards (aka WS-*) as well as to unify the disparate communications stacks. And I think WCF was fairly successful at these two goals. Previously, the capabilities you needed would drive your communication stack choice. Need web service interop? Use ASMX. Need low-level control over the message pipeline? Use .NET Remoting. Need to flow transactions? Use COM+. Need to flow transactions over web services with low-level control over the message pipeline? Until WCF came along, you were SOL. </p><p>However, if "ease of development" was a goal for WCF, it doesn't look like it was high on the list. And frankly, that's fine. As I've <a href="http://devhawk.net/wcf+karma.aspx">written before</a>, I'd rather have a flexible if complicated low-level foundation to build higher-abstracted application infrastrucutre on top of. </p><p>Just don't try and sell me that WCF is making my life easier, because it's not. Not yet, anyway.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>852</wp:post_id>
		<wp:post_date>2007-01-15 16:43:54</wp:post_date>
		<wp:post_date_gmt>2007-01-15 16:43:54</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>mastering-wcf</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<category domain="post_tag" nicename="wcf"><![CDATA[WCF]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/01/16/Mastering+WCF]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Mastering+WCF]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[e2475cd1-5bf4-4558-b09c-ce588c1e18a8]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Morning Coffee 10</title>
		<link>http://devhawk.net/2007/01/16/morning-coffee-10/</link>
		<pubDate>Tue, 16 Jan 2007 10:18:44 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://48ae9070-9f54-4246-ab43-7f5a3d00e7be</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Wow, I made it to ten of these morning coffee posts. That puts me only two orders of magnitude behind <a href="http://www.larkware.com/">Mike</a> and one order of magnitude behind <a href="http://codebetter.com/blogs/sam.gentile/default.aspx">Sam</a>.</p><ul><li>We got snow, again. My son apparently said the other day "OK God, that's enough snow now". When a 3 year old is tired of snow, you know you've gotten a lot.</li><li>Of course, people in snowier climates than here (the NorthEast, Northen Midwest, pretty much all of Canada, etc) will snicker that 5 inches of snow is "a lot".</li><li>I'm moving my STS code into a new VPC for handoff to the dev team. I was running Virtual Server before, but for individual work like what I do, Virtual PC is much easier to use. Drag and Drop into the VPC alone is worth it to me to use Virtual PC instead of Virtual Server. I am using the <a href="https://connect.microsoft.com/programdetails.aspx?ProgramDetailsID=874">beta of Virual PC 2007</a>, though I couldn't tell you what the differences are. </li><li><a href="http://www.fox.com/24/images/24_stephen_king.pdf">Steven King may love</a> the new season of 24, but I can't shake the feeling of <a href="http://www.jumptheshark.com/">jumped shark</a>. However, I am impressed that Fox released the first 4 episodes of the new season <a href="http://www.calendarlive.com/movies/video/cl-fi-twentyfour16jan16,1,4590067.story?coll=cl-video">today</a>.</li><li>Two name changes later, the RTM version of <a href="http://www.microsoft.com/sql/editions/compact/default.mspx">SQL <strike>Mobile</strike><strike>Anywhere</strike> Compact Edition</a> is now available. BTW, I found <a href="http://blogs.msdn.com/stevelasker/archive/2006/11/27/sql-server-compact-edition-under-asp-net-and-iis.aspx">this blog post</a> by Steve Lasker about using SQLce with ASP.NET. So it sounds doable, though not recommend. Of course, for those of us using shared hosting, SQLce is a non-starter until it becomes part of the standard .NET framework install. </li></ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>853</wp:post_id>
		<wp:post_date>2007-01-16 10:18:44</wp:post_date>
		<wp:post_date_gmt>2007-01-16 10:18:44</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>morning-coffee-10</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="entertainment"><![CDATA[Entertainment]]></category>
		<category domain="category" nicename="morning-coffee"><![CDATA[Morning Coffee]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/01/16/Morning+Coffee+10]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Morning+Coffee+10]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[48ae9070-9f54-4246-ab43-7f5a3d00e7be]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Morning Coffee 11</title>
		<link>http://devhawk.net/2007/01/17/morning-coffee-11/</link>
		<pubDate>Wed, 17 Jan 2007 09:08:20 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://f583b7a8-56fd-4ec7-a07b-b9055fff8e69</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Yes, its true, (yes its true) I'm so happy to be stuck with you<br />'cause I can see, (I can see) that youre happy to be stuck with me<br /><a href="http://play.rhapsody.com/hueylewisandthenews/fore/stuckwithyou">Stuck with You</a> by <a href="http://en.wikipedia.org/wiki/Huey_Lewis_and_The_News">Huey Lewis and the News</a></p><ul><li>I am apparently stuck with my wife's rants. That's fine, as long as she has continues to <a href="http://techiewife.spaces.live.com/Blog/cns!3DAECC033B88329C!624.entry">stand up and rant</a> about the things she and I believe in.  </li><li>I hate wearing suits for the same reasons <a href="http://www.blogmaverick.com/2007/01/16/why-i-dont-wear-a-suit-and-cant-figure-out-why-anyone-does/">Mark Cuban does</a>.  </li><li><a href="http://blogs.zdnet.com/service-oriented/?p=799">According to Joe McKendrick</a> (of JBOWS fame), "many IT executives simply do not have the resources or political clout to get SOA moving in a big way that will transform the business." I guess that blows a huge hole in Thomas Erl's <a href="http://devhawk.net/2006/09/27/Thoughts+On+The+SOA+Workshop.aspx">CIO as Dictator approach</a>.  </li><li>I don't have a Wii (yet) but <a href="http://www.next-gen.biz/index.php?option=com_content&amp;task=view&amp;id=4547&amp;Itemid=2">this game</a> seems pretty cool for the little ones. Patrick is getting pretty good at Lego Star Wars, but this would be right up Riley's alley. (via <a href="http://www.edery.org/2007/01/articles-of-interest-76/">Game Tycoon</a>)  </li><li>I'm in BizTalk 2006 training today and tomorrow, so blogging will be light and BTS focused. Class is being taught by <a href="http://pluralsight.com/blogs/matt/">Matt Milner</a> from <a href="http://pluralsight.com/">PluralSight</a>, so I'm looking forward to it. </li></ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>854</wp:post_id>
		<wp:post_date>2007-01-17 09:08:20</wp:post_date>
		<wp:post_date_gmt>2007-01-17 09:08:20</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>morning-coffee-11</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="morning-coffee"><![CDATA[Morning Coffee]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/01/17/Morning+Coffee+11]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[f583b7a8-56fd-4ec7-a07b-b9055fff8e69]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Morning+Coffee+11]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Morning Coffee 12</title>
		<link>http://devhawk.net/2007/01/18/morning-coffee-12/</link>
		<pubDate>Thu, 18 Jan 2007 09:47:54 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://79e956be-65ba-4468-9893-c9c60c3e1953</guid>
		<description></description>
		<content:encoded><![CDATA[<ul><li>According to <a href="http://www.longtail.com/the_long_tail/2007/01/how_to_make_a_l.html">Chris "Long Tail" Anderson</a> (as opposed to <a href="http://www.simplegeek.com/">Chris "Avalon Architect" Anderson</a>), "Combined with the new low-cost distribution channels, from DVD to digital downloads, all you now need to be a filmmaker is talent." Really? Based on the dreck Hollywood churns out, I thought talent was optional! :) Seriously, check out his post and the sites he points to (<a href="http://foureyedmonsters.com">Four Eyed Monsters</a> and <a href="http://www.kk.org/cooltools/archives/001547.php">DV Rebel's Guide review on Cool Tools</a>). 
</li><li>Speaking of Chris "Avalon" Anderson, he's got a couple of WPF/E tests up on his blog. I wanted to see how it worked under the hood, so I checked out the HTML source for <a href="http://www.simplegeek.com/PermaLink.aspx/5516e540-156a-4672-a804-54c21bedf5b7">this page</a>. It includes around 115kb of XAML! We've seen ViewState and JavaScript page bloat, is XAML bloat next? 
</li><li><a href="http://www.knowing.net/PermaLink,guid,db319518-094a-4d77-b365-2b1b28b2aa38.aspx">Larry O'Brien</a> and <a href="http://ztrek.blogspot.com/2007/01/presenting-threading-maturity-model.html">Alan Zeichick</a> are talking about a Threading Maturity Model. Good ideas there, but frankly I think we need a language that recognizes concurrency as a first-order abstraction if we're going to make much progress up the maturity model. 
</li><li>Dare <a href="http://www.25hoursaday.com/weblog/PermaLink.aspx?guid=3e16e16a-fa4e-4cbf-b18f-ccd8d34eeba4">recommends</a><a href="http://programming.reddit.com/">programming.reddit.com</a>. Definitely worthy of a closer look. 
</li><li>The BTS training I'm in yesterday and today is being held on Microsoft's <a href="http://blogs.msdn.com/jobsblog/archive/2005/07/12/438157.aspx">Red West campus</a>, home of MSN &amp; Windows Live. It's very nice looking and is a good size - five buildings - without being as huge as main campus. It even has a "ski-lodge" cafeteria, though given the slim pickings in my building's cafe anything would be an improvement. 
</li><li>One thing I don't miss about working on campus is the commute. Getting to my office takes 20-30 minutes, depending on the traffic lights. Getting to campus, even though it's physically closer, takes 45-60 minutes, most of it spent sitting still. Every time I wish we'd move to campus, I remember the traffic and decide I like where I am just fine. 
</li><li>Two big learnings from BTS training yesterday: 
<ul><li>Conceptually, BTS hasn't changed much since the 2000/2002 releases that I was more familiar with. In practice, it has heavily embraced .NET which is a good thing. I didn't realize how much of a difference having tools like the pipeline and map editor inside VS would make, but it does. (I realize the orchestration editor is inside VS as well, but we get to that module of the class today). 
</li><li>The MessageBox is a bigger deal than I remember or realized. <a href="http://pluralsight.com/blogs/matt/">Matt</a> called it the "heart of BizTalk". I know BTS has had a SQL based message store since day one, but I don't remember it being called out explicitly. </li></ul></li><li>I've <a href="http://devhawk.net/CommentView,guid,e7b99068-8f9b-47cd-b5d2-e09d5d250ccc.aspx#commentstart">said before</a> that MessageBox is roughly analogous to SSB queues, though BTS wonks (like my teammates) typically jump down my throat when I do. MessageBox has a pub/sub design philosophy which SSB does not. However, I'm guessing pub/sub is used much more in messaging scenarios rather than orchestration scenarios. My efforts around SSB &amp; WF are much more focused on orchestration scenarios, so I'm guessing SSB's lack of pub/sub infrastructure is not a big deal.</li></ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>855</wp:post_id>
		<wp:post_date>2007-01-18 09:47:54</wp:post_date>
		<wp:post_date_gmt>2007-01-18 09:47:54</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>morning-coffee-12</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="biztalk"><![CDATA[BizTalk]]></category>
		<category domain="category" nicename="morning-coffee"><![CDATA[Morning Coffee]]></category>
		<category domain="post_tag" nicename="movies"><![CDATA[Movies]]></category>
		<category domain="post_tag" nicename="working-at-msft"><![CDATA[Working at MSFT]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/01/18/Morning+Coffee+12]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Morning+Coffee+12]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[79e956be-65ba-4468-9893-c9c60c3e1953]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Morning Coffee 14</title>
		<link>http://devhawk.net/2007/01/19/morning-coffee-14/</link>
		<pubDate>Fri, 19 Jan 2007 08:44:57 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://0af6e11c-b708-4dbd-a6d1-58e0a09f34e7</guid>
		<description></description>
		<content:encoded><![CDATA[<p>I just realized that I had Morning Coffee 9 both <a href="http://devhawk.net/2007/01/12/Late+Morning+Coffee+9.aspx">last Friday</a> and <a href="http://devhawk.net/2007/01/15/Morning+Coffee+9.aspx">last Monday</a>. Woops. Rather than changing the titles of four posts, I'm just skipping #13 instead. Just like a hotel.</p><ul><li>The folks behing the <a href="http://www.artlebedev.com/everything/optimus/">Optimus concept keyboard</a> are shipping a <a href="http://www.artlebedev.com/everything/optimus-mini/">mini 3-key keyboard</a>. The basic idea of both keyboards is that the keyface is a little LED screen. Apparently, they're planning on releasing a production version of the full keyboard <a href="http://www.artlebedev.com/everything/optimus/answers/">this year</a>. The 3-key keyboard is <a href="http://store.artlebedev.com/catalog/computer_add-ons/optimus-mini-three/">$160</a>, so I'm guessing the full keyboard will cost quite a bit. (via <a href="http://www.hanselman.com/blog/OptimusMiniThreeKeyboardAndWindowsVistaSideShow.aspx">Scott Hanselman</a>)  </li><li><a href="http://www.456bereastreet.com/archive/200701/new_w3c_html_working_group_chaired_by_microsoft/">Some</a><a href="http://glazman.org/weblog/dotclear/index.php?2007/01/11/2420-future-of-the-html-wg-3">people</a> are up in arms that the chair of the <a href="http://www.w3.org/2006/11/HTML-WG-charter.html">new W3C HTML Working Group</a> is <a href="http://blogs.msdn.com/cwilso/archive/2007/01/10/you-me-and-the-w3c-aka-reinventing-html.aspx">Chris Wilson from Microsoft</a>. I'm guessing these are people who don't understand much about how such working groups work. As Chris writes, most of his time as chair will be herding cats. (via <a href="http://programming.reddit.com/">reddit</a>)  </li><li>I am interested to see what this new working group produces. The #1 <a href="http://www.w3.org/2006/11/HTML-WG-charter.html#deliverables">deliverable</a> for this group is "A language evolved from HTML4 for describing the semantics of documents <strong><u>and applications</u></strong>on the World Wide Web" (emphasis added). Given the already existing <a href="http://www.w3.org/2006/webapi/">Web API WG</a>, it would be nice to see an application model as a formalized part of HTML.  </li><li>Again <a href="http://www.hanselman.com/blog/ImprovingOutlookTodayWithJelloDashboard.aspx">via Scott</a>, <a href="http://jello.wordpress.com/">Jello.Dashboard</a> is a replacement for Outlook Today with a <a href="http://www.davidco.com/what_is_gtd.php">GTD</a> bent. However, as Scott points out, it is <em>slow</em>. Scott blames the Outlook Automation APIs, but I think the scripting engine is also to blame. In the <a href="http://devhawk.net/2006/01/10/Outlook+Integration+Sample.aspx">CRM Integration for Outlook</a> sample, I used a <a href="http://msdn2.microsoft.com/en-us/library/aa479345.aspx#otlkcustinentapp_topic9">WinForms UserControl as a folder homepage</a> and didn't notice any perf issues. If you expose a WinForms UserControl as a COM control (via Guid and ComVisible attributes), you can then host that control within an HTML file which is set as the folder home page. The sample includes a helper function to generate the HTML folder home page to host the UserControl. If there's interest, I can post a small sample. Not only is this approach faster than a script based one, it's easier to design and debug.</li></ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>856</wp:post_id>
		<wp:post_date>2007-01-19 08:44:57</wp:post_date>
		<wp:post_date_gmt>2007-01-19 08:44:57</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>morning-coffee-14</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="morning-coffee"><![CDATA[Morning Coffee]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/01/19/Morning+Coffee+14]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Morning+Coffee+14]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[0af6e11c-b708-4dbd-a6d1-58e0a09f34e7]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Morning Coffee 15</title>
		<link>http://devhawk.net/2007/01/22/morning-coffee-15/</link>
		<pubDate>Mon, 22 Jan 2007 10:04:48 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://4d640dce-4793-4454-b492-fb51eeb9ae1a</guid>
		<description></description>
		<content:encoded><![CDATA[<ul><li>I was checking out the <a href="http://www.asp.net/">ASP.NET community site</a>, and I noticed a small "Microsoft Communities" toolbar across the top. There's a little menu that links to other MS community sites like <a href="http://channel9.msdn.com/">Channel 9</a> and <a href="http://blogs.msdn.com/">MSDN Blogs</a>. I'm surprised the <a href="http://www.netfx3.com/">NetFx3 community site</a> isn't included. 
</li><li>My teammate Dale is blogging about Proper SOA. He lays out <a href="http://halfmybrain.spaces.live.com/Blog/cns!DF6CA820250998D2!309.entry">6 Proper SOA principles</a>, and then drills into the first three: <a href="http://halfmybrain.spaces.live.com/Blog/cns!DF6CA820250998D2!311.entry">meets business needs</a>, <a href="http://halfmybrain.spaces.live.com/Blog/cns!DF6CA820250998D2!312.entry">requires governance</a> and <a href="http://halfmybrain.spaces.live.com/Blog/cns!DF6CA820250998D2!313.entry">responds to changing business drivers</a>. I expect to see posts on the remaining principles this week. Maybe Dale should turn this series into an article. 
</li><li>Speaking of articles about architecture, Architecture Journal 10 is <a href="http://www.msarchitecturejournal.com/pdf/Journal10.pdf">online as a PDF</a>. This issue's topic is Composite Applications. 
</li><li><a href="http://en.wikipedia.org/wiki/Malbolge_programming_language">Malbolge</a> is a programming lanugage that is "specifically designed to be difficult to program in." Here's <a href="http://en.wikipedia.org/wiki/Hello_world">Hello World</a> in Malbolge: 
<div style="MARGIN-TOP: 10px; MARGIN-BOTTOM: 10px; MARGIN-LEFT: 20px"><code>(=&lt;`$9]7&lt;5YXz7wT.3,+O/o'K%$H"'~D|#z@b=`{^Lx8%$Xmrkpohm-kNi;gsedcba`_^][ZYXWVUTSRQPONMLKJIHGFEDCBA@?&gt;=&lt;;:9876543s+O&lt;olm</code></div>Seriously. Actually, it's worse than it looks. The effect of any instruction depends on where it is located in memory.  Malbolge is so difficult, it took <a href="http://www.acooke.org/andrew/writing/malbolge.html">a month to write a Lisp program</a> to generate that program. However, Lou Scheffer thinks we should think about Malbolge as a <a href="http://www.lscheffer.com/malbolge.shtml">cryptosystem</a>. I wonder if it could be used for obfuscation? (via <a href="http://scienceblogs.com/goodmath/2007/01/hellish_programming_malbolge.php">Good Math, Bad Math</a>) 
</li><li>Nat Torkington blogs about <a href="http://radar.oreilly.com/archives/2007/01/why_johnny_cant.html">teaching kids to program</a>. He makes the point about "them to think in terms of small steps". I was lucky to have a computer teacher in elementary school who did something similar. She had us write down instructions for making a peanut butter and jelly sandwich and she then followed them to the letter. For example, if you wrote, "spread peanut butter on the bread" with out first instructing her to take out a slice, she'd happily spread peanut butter on the entire loaf. (via <a href="http://programming.reddit.com/">reddit</a>) 
</li><li>To this day, my wife thinks the peanut butter and jelly lesson negatively affected my ability to communicate with "normal" people. She'll even say "peanut butter and jelly" when she thinks I'm being particularly obtuse in my communication. </li></ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>857</wp:post_id>
		<wp:post_date>2007-01-22 10:04:48</wp:post_date>
		<wp:post_date_gmt>2007-01-22 10:04:48</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>morning-coffee-15</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="development"><![CDATA[Development]]></category>
		<category domain="post_tag" nicename="family"><![CDATA[Family]]></category>
		<category domain="post_tag" nicename="lanugages"><![CDATA[Lanugages]]></category>
		<category domain="category" nicename="morning-coffee"><![CDATA[Morning Coffee]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[4d640dce-4793-4454-b492-fb51eeb9ae1a]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Morning+Coffee+15]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/01/22/Morning+Coffee+15]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Morning Coffee 16</title>
		<link>http://devhawk.net/2007/01/23/morning-coffee-16/</link>
		<pubDate>Tue, 23 Jan 2007 09:39:49 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://5f743d1c-4edd-4319-8980-5f12b7397e60</guid>
		<description></description>
		<content:encoded><![CDATA[<ul><li>Forgot to say this yesterday, but I'm happy the Colts are in the Super Bowl. Well, I guess I'm more happy that New England <em>isn't</em> in it. They've won it enough lately. I wish the Saints has made it, but at least this way I have no question who to root for on Super Bowl Sunday.  </li><li>My Gamerscore <a href="http://gamerscorechart.com/theme/xbox/raytracer.png">cracked 1000</a> over the weekend. I got <a href="http://live.xbox.com/en-US/profile/Achievements/ViewAchievementDetails.aspx?compareTo=RayTracer&amp;tid=%09%5d%3abn%2bi6%05%03">60 points in Dead Rising</a> and <a href="http://live.xbox.com/en-US/profile/Achievements/ViewAchievementDetails.aspx?compareTo=RayTracer&amp;tid=%09%5d%3adh)k0%01%02">100 points in NHL 07</a>. I have played ten games + three arcade games for a maximum possible Gamerscore of 10,600 and a Gamerscore "conversion rate" of 10.28%. I wonder how good that is? All the leader boards I've seen rate purely on Gamerscore.  </li><li>Speaking of games, <a href="http://www.obsidianent.com/">Obsidian</a> (of Neverwind Nights fame) is working on an <a href="http://www.obsidianent.com/aliens_announced.html">Aliens RPG</a>! Check out <a href="http://www.edery.org/2007/01/game-design-research-ala-avellone/">this post</a> by Chris Avellone of Obsidian on Game Design Research (via <a href="http://www.edery.org/">Game Tycoon</a>). </li><li><a href="http://www.richardgrimes.com/">Richard Grimes'</a><a href="http://www.grimes.demon.co.uk/workshops/instrumentationWS.htm">.NET Instrumentation Workshop</a> rocks. Richard also has extensive workshops on <a href="http://www.grimes.demon.co.uk/workshops/securityWS.htm">.NET Security</a> and <a href="http://www.grimes.demon.co.uk/workshops/fusionWS.htm">.NET Fusion</a> (aka runtime binding). If they're as good as the instrumentation workshop, they're worth a read.  </li><li>In my SSB/WF prototypes, I've simply been writing to the console. The lo-tech brute force works okay for a console app, but not at all when I move my code into a shared library. So I decided to bite the bullet now and translate the Console.WriteLine calls into TraceSource calls. My prototype isn't that big (yet), but it went pretty smooth nonetheless. I currently have three TraceSources in my solution - one for the host, one for my SSB activities &amp; workflow service and one for the persistence engine (I just inherited from SqlWorkflowPersistenceService and added the trace calls). I'm sure in time, I'll wish I had set up my TraceSources differently, but for now it works. </li><li>The one feature I lost moving from Console.WriteLine to TraceSources was color support. Since I am creating voluminous tracing data, I used color coding to indicate which part of the application the trace information was coming from. Of course, the OOB ConsoleTraceListener doesn't have any mechanism to color code the output. I hacked up a ColorConsoleTraceListener in a couple of minutes that worked great. I say "hacked" because my color choosing code is currently hard coded, rather than being stored the config file. If I get the time to change that, I'll post the code here. </li><li>While researching ASP.NET's Membership system, I found <a href="http://weblogs.asp.net/scottgu/archive/2006/02/24/ASP.NET-2.0-Membership_2C00_-Roles_2C00_-Forms-Authentication_2C00_-and-Security-Resources-.aspx">this Scott Guthrie post</a> with links to ASP.NET providers for <a href="http://www.codeproject.com/aspnet/MySQLMembershipProvider.asp">MySql</a>, <a href="http://msdn2.microsoft.com/en-us/library/aa479070.aspx">Oracle</a> and <a href="http://www.eggheadcafe.com/articles/20051119.asp">SQLite</a>. I've wondered about the lack of a simple file-based ASP.NET role/membership provider and even started hacking together an XML based one. But the availability of a <a href="http://sqlite.phxsoftware.com/">.NET SQLite data provider</a> makes that an interesting option. XML would be human readable, but porting the <a href="http://weblogs.asp.net/scottgu/archive/2006/04/13/442772.aspx">existing SQL providers</a> to SQLite would probably be easier. </li><li>Politics 2.0 in action: <a href="http://www.talkingpointsmemo.com/">Talking Points Memo</a> is enouraging you (aka <a href="http://www.time.com/time/magazine/article/0,9171,1569514,00.html">Time Magazine's Person of the Year</a>) to <a href="http://www.talkingpointsmemo.com/archives/012075.php">record your own response</a> to tonight's State of the Union. Basically record your response via camcorder, webcam or cellphone. Then upload it to YouTube and add it to the <a href="http://youtube.com/group/tpmsotu">TPM SOTU group</a>. With President Bush's approval rating at <a href="http://www.cbsnews.com/stories/2007/01/22/opinion/polls/main2384943.shtml">all time lows</a>, I'm guessing these videos will be venting some of the pent up hostility towards this administration.</li></ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>859</wp:post_id>
		<wp:post_date>2007-01-23 09:39:49</wp:post_date>
		<wp:post_date_gmt>2007-01-23 09:39:49</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>morning-coffee-16</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="asp-net"><![CDATA[ASP.NET]]></category>
		<category domain="post_tag" nicename="instrumentation"><![CDATA[Instrumentation]]></category>
		<category domain="category" nicename="morning-coffee"><![CDATA[Morning Coffee]]></category>
		<category domain="category" nicename="politics"><![CDATA[Politics]]></category>
		<category domain="post_tag" nicename="xbox-360"><![CDATA[Xbox 360]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/01/23/Morning+Coffee+16]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[5f743d1c-4edd-4319-8980-5f12b7397e60]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Morning+Coffee+16]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>2443</wp:comment_id>
			<wp:comment_author><![CDATA[Tim Marman]]></wp:comment_author>
			<wp:comment_author_email>spam@slahstar.com</wp:comment_author_email>
			<wp:comment_author_url>http://slashstar.com/blogs/tim</wp:comment_author_url>
			<wp:comment_author_IP>12.47.208.34</wp:comment_author_IP>
			<wp:comment_date>2007-01-23 11:54:25</wp:comment_date>
			<wp:comment_date_gmt>2007-01-23 19:54:25</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[My gamerscore is 9709. I've played 11 Arcade games (many of which have been demos) and 32 retail games. My GS completion rate is 29.15% (30.82% for non-demos). 

There are some people out there with ridiculous scores.. I don't know how they do it :) ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>2444</wp:comment_id>
			<wp:comment_author><![CDATA[Rich McCollister]]></wp:comment_author>
			<wp:comment_author_email>kraki5525@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>168.215.128.114</wp:comment_author_IP>
			<wp:comment_date>2007-01-23 12:04:47</wp:comment_date>
			<wp:comment_date_gmt>2007-01-23 20:04:47</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[If you are still interested in the xml file membership provider approach, then check out this codeplex project 

ASP.NET XmlProvider Library
http://www.codeplex.com/XmlProviderLibrary

They got a fairly complete implementation of the membership, role, profile, and personalization providers]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Live Search for Charity</title>
		<link>http://devhawk.net/2007/01/23/live-search-for-charity/</link>
		<pubDate>Tue, 23 Jan 2007 12:30:31 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://bcdadb05-e3e4-48a9-ab45-6a7a93c8aca9</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Dare <a href="http://www.25hoursaday.com/weblog/PermaLink.aspx?guid=4bf96ba0-1229-4349-ab2b-fb9552da5794">posts</a> about two charity search sites hosted by <a href="http://blogs.msdn.com/livesearch/archive/2007/01/22/use-live-search-and-we-ll-donate-to-team-seattle-and-ninemillion-org.aspx">Live Search</a>. Use <a href="http://teamseattle.live.com/Search/Charity/TeamSeattle/Default.aspx"><u>teamseattle.live.com</u></a> to search and you help sponsor Children's Hospital. Use <a href="http://click4thecause.live.com/"><u>click4thecause.live.com</u></a> to search and you help sponsor <a href="http://ninemillion.org/">Ninemillion.org</a>, which is working to help the 9 million refugee children worldwide. </p><p>GIven that I'm already using Live Search, changing my default search page from Live.com to one of these two seems was a no brainer. I use the IE7 Search Box more often than not, so I also set up a <a href="http://www.microsoft.com/windows/ie/searchguide/en-en/default.mspx">custom search provider</a>. However, that's a bit of a PITA, so I took the <a href="http://opensearch.a9.com/spec/1.1/description/">OpenSearch Description</a> XML files and hosted them here @ DevHawk. Click the links below to add them to IE7 search box. </p><ul><li>Add <a onclick="window.external.AddSearchProvider(&quot;http://devhawk.net/content/binary/Click4TheCause.xml&quot;);" href="#">Click4TheCause Charity Search</a> to your IE7 Search Box</li><li>Add <a onclick="window.external.AddSearchProvider(&quot;http://devhawk.net/content/binary/TeamSeattle.xml&quot;);" href="#">TeamSeattle Charity Search</a> to your IE7 Search Box</li></ul><p>I'm sure there's a way to do this for Firefox's search bar, but I have no idea how. If you - dear reader - know how to add search providers, please <a href="mailto:harry.pierson@microsoft.com">send me email</a> and I'll update this post accordingly.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>858</wp:post_id>
		<wp:post_date>2007-01-23 12:30:31</wp:post_date>
		<wp:post_date_gmt>2007-01-23 12:30:31</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>live-search-for-charity</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<category domain="post_tag" nicename="windows-live"><![CDATA[Windows Live]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Live+Search+For+Charity]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/01/23/Live+Search+For+Charity]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[bcdadb05-e3e4-48a9-ab45-6a7a93c8aca9]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Quote of the Day</title>
		<link>http://devhawk.net/2007/01/23/quote-of-the-day/</link>
		<pubDate>Tue, 23 Jan 2007 13:01:03 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://f15f7cf9-fb71-4d38-ab31-b18e6dd7aeeb</guid>
		<description></description>
		<content:encoded><![CDATA[<p>"Having a family member who is in politics, I've learned that whenever you see what seems like a religious fundamentalism there usually is a quest for money and/or power behind it."<br />            -Dare Obasanjo, <a href="http://www.25hoursaday.com/weblog/PermaLink.aspx?guid=ac147359-114a-42d2-9ec4-64aa599dec58">What is Rob Weir (and IBM's) Agenda with the OOXML Bashing?</a></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>860</wp:post_id>
		<wp:post_date>2007-01-23 13:01:03</wp:post_date>
		<wp:post_date_gmt>2007-01-23 13:01:03</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>quote-of-the-day</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="politics"><![CDATA[Politics]]></category>
		<category domain="post_tag" nicename="quote-of-the-day"><![CDATA[Quote of the Day]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/01/23/Quote+Of+The+Day]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Quote+Of+The+Day]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[f15f7cf9-fb71-4d38-ab31-b18e6dd7aeeb]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>DevHawk.ColorConsoleTraceListener</title>
		<link>http://devhawk.net/2007/01/23/devhawk-colorconsoletracelistener/</link>
		<pubDate>Tue, 23 Jan 2007 16:27:40 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://2dd09457-208c-4307-b90b-85d823e5c40d</guid>
		<description></description>
		<content:encoded><![CDATA[<p>As mentioned this morning, I factored the ColorConsoleTraceListener code into a seperate assembly and added config support. It's pretty simple, but I find it useful. Let me know if you do too.</p><p><a href="http://cid-0d9bc809858885a4.office.live.com/self.aspx/DevHawk%20Content/BlogFiles/DevHawk.ColorConsoleTraceListener.zip">Download DevHawk.ColorConsoleTraceListener here.</a></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>861</wp:post_id>
		<wp:post_date>2007-01-23 16:27:40</wp:post_date>
		<wp:post_date_gmt>2007-01-23 16:27:40</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>devhawk-colorconsoletracelistener</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="development"><![CDATA[Development]]></category>
		<category domain="post_tag" nicename="instrumentation"><![CDATA[Instrumentation]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[2dd09457-208c-4307-b90b-85d823e5c40d]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[DevHawkColorConsoleTraceListener]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/01/24/DevHawkColorConsoleTraceListener]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>2445</wp:comment_id>
			<wp:comment_author><![CDATA[Ramon Smits]]></wp:comment_author>
			<wp:comment_author_email>ramon.smits@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://bloggingabout.net/</wp:comment_author_url>
			<wp:comment_author_IP>62.216.8.68</wp:comment_author_IP>
			<wp:comment_date>2007-01-24 01:38:02</wp:comment_date>
			<wp:comment_date_gmt>2007-01-24 09:38:02</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi your code is currently not thread safe. There is a possibility that tracing information is written in the wrong color.

The color is retrieved from the configuration section for each trace statement. Better to optimize this by at least referencing the section from a data member so that a string lookup isn't necessary.

Just my two cents :)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Binding Across States in WF</title>
		<link>http://devhawk.net/2007/01/25/binding-across-states-in-wf/</link>
		<pubDate>Thu, 25 Jan 2007 15:59:48 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://325fc7b2-6102-435a-ae94-6e2686e6889f</guid>
		<description></description>
		<content:encoded><![CDATA[<p>I didn't get much done today - recovering from the norovirus and all. But I did figure out an important point about State Machine Workflows. </p><p>For my SSB/WF prototype, I decided to implement my business logic as both as a <a href="http://msdn2.microsoft.com/en-us/library/ms735937.aspx">sequential</a> and <a href="http://msdn2.microsoft.com/en-us/library/ms735937.aspx">state machine</a> workflow. While everything worked fine in my sequential prototype, things started failing <em>once I got to my second state</em>. Turns out that I was trying to bind property values across states, which is a no-no. Since states may be entered more than once, they are executed in their own subordinate <a href="http://msdn2.microsoft.com/en-us/library/aa349099.aspx">activity execution context</a>. As per the <a href="http://msdn2.microsoft.com/en-us/library/ms735957.aspx">State Activity docs</a>, "the definition of the child activity in the activity tree (referred to as the template) is never executed and is always in the <b>Intialized</b> state". </p><p>I'm fairly sure that when you try to property bind across states, you're connecting to this template activity, rather than the activity that was actually executed. So instead of getting real data (in my case, the handle of a SSB conversation) you get whatever that value was set to in the designer.</p><p>Of course, once I figured out about the subordinate AEC, this behavior makes perfect sense. But it could be better documented. So far, the best information on them is in the Advanced Activity Execution chapter of <a href="http://www.aw-bc.com/catalog/academic/product/0,1144,0321399838,00.html">Essential WF</a>.</p><p><img style="margin: 0px 0px 0px 5px" height="410" alt="Activity Property Bind Dialog" src="http://s3.amazonaws.com/devhawk_images/WindowsLiveWriter/BindingAcrossStatesinWF_E0EC/BindDialog[5].gif" width="510" align="right" /> BTW, to deal with this, you need to promote the values that matter out of the individual activity instance up into the workflow instance itself. In the databind dialog box, there are two tabs: "Bind to an existing member" and "Bind to a new member". I'm not sure why the WF dialog existing member tab is there for state machine workflow since it doesn't do what you might expect it to. Instead, you should create a new member as I've done here. This creates a field or dependency property (whichever you choose) on the parent workflow itself, which is then available to all activities in all states within the workflow.</p><p>I wonder how this works with XAML only workflows? There doesn't appear to be any way to declare a field or dependency property in XAML. The templates that ship with the WF SDK aren't XAML-only, they're a combination of XAML and code. When you create a new member, it's always created in code. The idea of XAML only workflows is very appealing - it severely cuts down the surface area that can be meddled with in your host. But you still need to easily share data between activities!</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>862</wp:post_id>
		<wp:post_date>2007-01-25 15:59:48</wp:post_date>
		<wp:post_date_gmt>2007-01-25 15:59:48</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>binding-across-states-in-wf</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<category domain="post_tag" nicename="wf"><![CDATA[WF]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/01/25/Binding+Across+States+In+WF]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Binding+Across+States+In+WF]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[325fc7b2-6102-435a-ae94-6e2686e6889f]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>2446</wp:comment_id>
			<wp:comment_author><![CDATA[Scott Allen]]></wp:comment_author>
			<wp:comment_author_email>scott@odetocode.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.odetocode.com/blogs/scott/</wp:comment_author_url>
			<wp:comment_author_IP>71.16.197.162</wp:comment_author_IP>
			<wp:comment_date>2007-01-26 12:27:19</wp:comment_date>
			<wp:comment_date_gmt>2007-01-26 20:27:19</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[For XAML only workflows you'd have to define a class and derives from StateMachineWorkflowActivity. This new class can define your dependency properties, and any other code the workflow might need. 

For XAML activation then, you use the new class as the root of your workflow:

<ns0:MyCustomStateMachineWorkflowActivity x:Name="foo" ...>
  <StateActivity ...>
  <StateActivity ...>
  <StateActivity>
     ...
     <ActivityBind Name=foo" Path="MyCustomDependencyProperty"/>
     ...
  </StateActivity>
</ns0:MyCustomStateMachineWorkflowActivity>

I have a working sample of this approach. I'll post it soon.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Morning Coffee 17</title>
		<link>http://devhawk.net/2007/01/25/morning-coffee-17/</link>
		<pubDate>Thu, 25 Jan 2007 09:28:44 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://47f8f0ea-8c7d-420a-a5cc-ca7a7d95b2aa</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Yesterday's Morning Coffee was canceled on account of barfing. For all the gory details (you have been warned), check out <a href="http://techiewife.spaces.live.com/blog/cns!3DAECC033B88329C!641.entry">my wife's blog</a>.</p><ul><li>Only <a href="http://youtube.com/groups_videos?name=tpmsotu">12 responses</a> to the State of the Union were posted as I write this. Dunno why, but I was expecting more. Maybe this whole Web 2.0 thing <em>is </em>overblown a bit! :) </li><li>Speaking of the State of the Union, is it just me, or did anyone else find it odd that the <a href="http://www.msnbc.msn.com/id/16770023/">Scooter Libby trial</a> started the same day?  </li><li><strike>Atlas</strike><a href="http://ajax.asp.net/default.aspx?tabid=47">ASP.NET AJAX 1.0</a> is done. Lots more on this <a href="http://weblogs.asp.net/scottgu/archive/2007/01/23/asp-net-ajax-1-0-released.aspx">from Scott Guthrie's blog</a>. While I'm not personally that interested in ASP.NET AJAX itself, two things strike me as interesting in this release. First, we're shipping <em>all </em>the code for this. The client side JavaScript library, the <a href="http://ajax.asp.net/ajaxtoolkit/">Control Toolkit</a>, even the server-side components. Second, it's nice to see the Developer Division shipping something this significant <em>without</em> waiting for the next release of Visual Studio. Here's hoping that both of these two trends continue.  </li><li>Rich McCollister <a href="http://devhawk.net/CommentView,guid,5f743d1c-4edd-4319-8980-5f12b7397e60.aspx#commentstart">pointed me</a> to the <a href="http://www.codeplex.com/XmlProviderLibrary">XmlProviderLibrary</a>. Bad on me for not looking harder.  </li><li><a href="http://ideas.live.com/programpage.aspx?versionid=4372c8c2-b76f-4d44-aea1-9835b61d8dc1&amp;pageId=0">Windows Live Writer</a> is pretty cool, but it is missing one feature that I needed twice Tuesday. While embedding images in a post is cake, there doesn't seem to be a way to embed non-image files. You know, like the <a href="http://devhawk.net/2007/01/24/DevHawkColorConsoleTraceListener.aspx">ColorConsoleTraceListener Project</a> or the <a href="http://devhawk.net/2007/01/23/Live+Search+For+Charity.aspx">Live Search for Chartity Search Providers</a>. I'm guessing the infrastructure to post images and files would be identical, but there's no UI interface for it. I checked out the <a href="http://msdn2.microsoft.com/en-us/library/aa738906.aspx">WLW SDK online</a> and found the <a href="http://msdn2.microsoft.com/library/aa738940.aspx">ISmartContent.Files.Add</a> method, so I'm guessing it's doable. But there's no such animal on the <a href="http://gallery.live.com/default.aspx?l=8">Live Gallery</a>. I wonder why nobody else has built this yet? Is this really that unique a request?</li></ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>863</wp:post_id>
		<wp:post_date>2007-01-25 09:28:44</wp:post_date>
		<wp:post_date_gmt>2007-01-25 09:28:44</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>morning-coffee-17</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="ajax"><![CDATA[AJAX]]></category>
		<category domain="post_tag" nicename="asp-net"><![CDATA[ASP.NET]]></category>
		<category domain="category" nicename="morning-coffee"><![CDATA[Morning Coffee]]></category>
		<category domain="category" nicename="politics"><![CDATA[Politics]]></category>
		<category domain="post_tag" nicename="windows-live"><![CDATA[Windows Live]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/01/25/Morning+Coffee+17]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[47f8f0ea-8c7d-420a-a5cc-ca7a7d95b2aa]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Morning+Coffee+17]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Morning Coffee 18</title>
		<link>http://devhawk.net/2007/01/26/morning-coffee-18/</link>
		<pubDate>Fri, 26 Jan 2007 09:14:48 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://b8c4e537-1763-437f-b023-765aaa44f1fd</guid>
		<description></description>
		<content:encoded><![CDATA[<ul><li>I'm sure glad <a href="http://www.nbc.com/Heroes">Heroes</a> is back. And so far, I'm liking this season of <a href="http://www.fox.com/24">24</a> better than the last couple. I especially like how they're introducing Jack's family to the storyline - very cool.  </li><li>Bill Gates <a href="http://seattlepi.nwsource.com/business/301067_msfthype25.html">will be on</a><a href="http://www.comedycentral.com/shows/the_daily_show/index.jhtml">The Daily Show with Jon Stewart</a> next Monday. I rarely miss an episode (though I typically watch it a day or two later via my DVR) so I'm looking forward to this.  </li><li>Roger Sessions latest <a href="http://www.objectwatch.com/newsletters/ObjectWatchNewsletter054.pdf">ObjectWatch newsletter</a> is available. Roger does his usual brand of relating architectural concepts to everyday situations (this time, planning his daughter's wedding). This one was funnier than most - especially since I have a 1 year old daughter - though I'm still waiting for one of these that doesn't contain the words "doppio machiato". If you're reading this Roger, don't worry, I<em> am </em>enjoying every moment.  </li><li>Apparently, I am the keeper of obscure development knowledge on my team. My teammate Buzz was getting an error in shdocvw.dll when trying to open an XSD with the BizTalk editor. He's on an interim build of <a href="http://www.microsoft.com/presspass/press/2006/jun06/06-06EtEBusinessProcessPR.mspx">BTS06 R2</a>, so bugs are to be expected, but he wasn't sure what shdocvw was, so he asked me. In case you're curious, shdocvw is the <a href="http://msdn2.microsoft.com/en-us/library/aa752040.aspx">WebBrowser control</a>. </li><li>Did I mention that I left my laptop power cord at the office <em>again</em> on Tuesday? That's three times in four the last five trips to my office (not counting weekends, sick days and training). My boss actually got a spare from <em>his </em>boss that I can leave at the house 24/7. </li></ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>864</wp:post_id>
		<wp:post_date>2007-01-26 09:14:48</wp:post_date>
		<wp:post_date_gmt>2007-01-26 09:14:48</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>morning-coffee-18</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="architecture"><![CDATA[Architecture]]></category>
		<category domain="category" nicename="morning-coffee"><![CDATA[Morning Coffee]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/01/26/Morning+Coffee+18]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Morning+Coffee+18]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[b8c4e537-1763-437f-b023-765aaa44f1fd]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Compiling Workflows</title>
		<link>http://devhawk.net/2007/01/29/compiling-workflows/</link>
		<pubDate>Mon, 29 Jan 2007 15:51:32 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://05c288a9-36d8-481e-9087-5d69ebd0f817</guid>
		<description></description>
		<content:encoded><![CDATA[<a href="http://www.odetocode.com/blogs/scott/">Scott Allen</a><a href="http://devhawk.net/CommentView,guid,325fc7b2-6102-435a-ae94-6e2686e6889f.aspx#commentstart">pointed out</a> that if you need to declare top level properties in a XAML only workflow, you can subclass the root activity class, add the properties you want, then specify the custom subclass in the XAML workflow. That doesn't really solve my problem. I'm trying to limit to activity vocabulary that the workflow author has access to. If they can specify their own custom type as the root activity of their workflow, they can also add whatever execution logic they want, which is what I'm trying to avoid.

There is an example in the Advanced Authoring chapter of <a href="http://dharmashukla.com/essential-wf-page/">Essential WF</a> where they describe building a root activity class that generate top level properties as part of the workflow compilation process. The root activity (in the example, it's called "SequenceWithVars") where you can specify the top level parameters in the XAML. Here's an example from the book:
<div style="font-family: Courier New;">
<pre class="brush:xml">&lt;SequenceWithVars x:Class="Workflow1" xmlns="..." xmlns:x="..."&gt;

<!-- Remaining workflow XAML goes here --></pre>
The SequenceWithVars type includes a custom <a href="http://msdn2.microsoft.com/en-us/library/system.workflow.componentmodel.compiler.activitycodegenerator.aspx">ActivityCodeGenerator</a> that loops thru the VariableDecls collection and adds a top-level property (via <a href="http://msdn2.microsoft.com/en-us/library/system.codedom.aspx">CodeDOM</a>) for each VariableDecl instance. You end up with a workflow class that looks like this:

</div>
<div style="font-family: Courier New;">

<span style="font-size: 16px; font-family: Georgia, 'Bitstream Charter', serif; line-height: 24px;"> </span>
<pre class="brush:csharp">public partial class Workflow1 : SequenceWithVars
{
  public static DependencyProperty OrderProcConversationProp =
    DependencyProperty.Register("OrderProcConversation",
      typeof(Guid), typeof(Workflow1)); 

  public Guid OrderProcConversation
  {
    get 
    { 
      return (Guid)base.GetValue(Workflow1.OrderProcConversationProp); 
    }
    set 
    { 
      base.SetValue(Workflow1.OrderProcConversationProp, value); 
    }
  }

  //Remaining WF type declaration goes here
}</pre>
In order to use the XAML workflow with the SequenceWithVars activity, you do need to <a href="http://msdn2.microsoft.com/en-us/library/ms734733.aspx">compile</a> the XAML first using the <a href="http://msdn2.microsoft.com/en-us/library/system.workflow.componentmodel.compiler.workflowcompiler.aspx">WorkflowCompiler</a> class. <a href="http://msdn2.microsoft.com/en-us/library/system.workflow.componentmodel.compiler.workflowcompiler.compile.aspx">WorkflowCompiler.Compile()</a> returns a compiled type which can then be passed to <a href="http://msdn2.microsoft.com/en-us/library/ms594868.aspx">CreateWorkflow</a>. But adding the separate compile step is a small price to pay, in my opinion. This approach lets me limit the workflows to XAML only while still allowing for top level properties which are needed in many data binding scenarios.

</div>
<em><span style="text-decoration: underline;">Update</span></em>: removed syntax highlighting because it looked bad in my news reader.

<em><span style="text-decoration: underline;">Later Update</span></em>: Fixed syntax highlighting.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>865</wp:post_id>
		<wp:post_date>2007-01-29 15:51:32</wp:post_date>
		<wp:post_date_gmt>2007-01-29 15:51:32</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>compiling-workflows</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<category domain="post_tag" nicename="wf"><![CDATA[WF]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/01/29/Compiling+Workflows]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Compiling+Workflows]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[05c288a9-36d8-481e-9087-5d69ebd0f817]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>2447</wp:comment_id>
			<wp:comment_author><![CDATA[Some crazy guy]]></wp:comment_author>
			<wp:comment_author_email>somecrazyguy@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://somecrazyguy.com</wp:comment_author_url>
			<wp:comment_author_IP>63.243.60.154</wp:comment_author_IP>
			<wp:comment_date>2007-02-02 11:12:52</wp:comment_date>
			<wp:comment_date_gmt>2007-02-02 19:12:52</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[if(this comment has anything interesting)
{
    you should read it
}
else
{
    it is just a waste of time
}]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Morning Coffee 19</title>
		<link>http://devhawk.net/2007/01/29/morning-coffee-19/</link>
		<pubDate>Mon, 29 Jan 2007 10:20:42 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://77ee29e1-99d7-41cf-8d2c-de0f5d63edca</guid>
		<description></description>
		<content:encoded><![CDATA[<ul><li>I find <a href="http://jkobielus.blogspot.com/">Jim Kobielus'</a> "<a href="http://blogs.zdnet.com/Gardner/?p=2405">SOA as 50 square miles of fungus</a>" analogy funny and strangely compelling. The "keep in the dark and feed it shit" jokes practically write themselves. (via <a href="http://blogs.zdnet.com/service-oriented/?p=806">Joe McKendrick</a>) 
</li><li><a href="http://pewresearch.org/pubs/280/election-2006-online">Politics 2.0 Rising</a>: The number of Americans who got "most of their information" about the 2006 midterm elections was double the number from the 2002 elections. 
</li><li>Do you use external/flash drives? Do you have issues when you try to "Safely Remove Hardware" with said drive? I do, all the time. Apparently, <a href="http://ccollomb.free.fr/unlocker/">unlocker</a> is the answer. (via <a href="http://blogs.msdn.com/pandrew/archive/2007/01/15/unlocker-utility-for-ejecting-usb-drives.aspx">Paul Andrew</a>) 
</li><li>How come there's no information about LogToTraceListeners in the WF documentation? As far as I can tell, it's not in the <a href="http://www.microsoft.com/downloads/details.aspx?FamilyId=C2B1E300-F358-4523-B479-F53D234CDCCF&amp;displaylang=en">Windows SDK</a> docs at all and the only reference to it on MSDN is <a href="http://msdn2.microsoft.com/en-us/library/aa663362.aspx">this year-old article</a> and <a href="http://blogs.msdn.com/sonalic/archive/2006/04/29/586838.aspx">this year-old blog post</a>. I only discovered because someone on the internal WF discussion alias asked about it. I've added In my SSB/WF work, I subclassed the <a href="http://msdn2.microsoft.com/en-us/library/system.workflow.runtime.hosting.sqlworkflowpersistenceservice.aspx">built-in SQL persistence service</a> in order to add tracing support. If you're developing a WF host, you <em>need </em>to turn this on. I find it mind-boggling this isn't included anywhere in the official WF docs. 
</li><li>Nice to see Soma <a href="http://blogs.msdn.com/somasegar/archive/2007/01/26/software-factories-100-000-served.aspx">bragging about Software Factories</a>. As he writes, our current solution - consisting of the <a href="http://msdn2.microsoft.com/en-us/teamsystem/aa718948.aspx">Guidance Automation Toolkit</a> and the <a href="http://msdn2.microsoft.com/en-us/teamsystem/aa718368.aspx">DSL Tools</a> - are really just a first step. I'm just starting to experiment with the <a href="http://msdn2.microsoft.com/en-us/library/aa480534.aspx">Web Service Software Factory (WSSF)</a>. <a href="http://pluralsight.com/blogs/aaron/">Aaron Skonnard</a> introduces both the <a href="http://msdn.microsoft.com/msdnmag/issues/06/12/ServiceStation/default.aspx">ASMX</a> and <a href="http://msdn.microsoft.com/msdnmag/issues/07/02/ServiceStation/">WCF</a> version in his two most recent Service Station articles. 
</li><li>Michael.NET makes <a href="http://michaeldotnet.blogspot.com/2007/01/programming-promises.html">Programming Promises</a> and Ted Neward swears the <a href="http://blogs.tedneward.com/2007/01/27/Programming+Promises+Or+The+Professional+Programmers+Hippocratic+Oath.aspx">Oath of the Conscientious Programmer</a>. Why stop there? How about the Architect's Affidavit to actually implement the shit we draw on the white board? The Technologist's Testimony of understanding and belief in all things geeky and gadget? Come on, isn't this just called "doing your job"? Do we really need to make promises and swear oaths to take it seriously and do it to the best of our abilities? </li></ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>866</wp:post_id>
		<wp:post_date>2007-01-29 10:20:42</wp:post_date>
		<wp:post_date_gmt>2007-01-29 10:20:42</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>morning-coffee-19</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="architecture"><![CDATA[Architecture]]></category>
		<category domain="post_tag" nicename="instrumentation"><![CDATA[Instrumentation]]></category>
		<category domain="category" nicename="morning-coffee"><![CDATA[Morning Coffee]]></category>
		<category domain="category" nicename="politics"><![CDATA[Politics]]></category>
		<category domain="post_tag" nicename="soa"><![CDATA[SOA]]></category>
		<category domain="post_tag" nicename="software-factories"><![CDATA[Software Factories]]></category>
		<category domain="post_tag" nicename="wf"><![CDATA[WF]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/01/29/Morning+Coffee+19]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Morning+Coffee+19]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[77ee29e1-99d7-41cf-8d2c-de0f5d63edca]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Hawkeye on Web Service Software Factory</title>
		<link>http://devhawk.net/2007/01/30/hawkeye-on-web-service-software-factory/</link>
		<pubDate>Tue, 30 Jan 2007 14:53:20 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://a8ceccf6-df2a-4213-9b87-ef1d46e31516</guid>
		<description></description>
		<content:encoded><![CDATA[<p>As I wrote the other day, I've been investigating the <a href="http://msdn2.microsoft.com/en-us/library/aa480534.aspx">Web Service Software Factory</a>. The WSSF includes four guidance packages: Data Access, ASMX, WCF and WCF Security. The Data Access isn't service specific (I'm guessing it's also included in p&amp;p's <a href="http://msdn2.microsoft.com/en-us/library/aa137950.aspx">other factories</a>) so I didn't focus on it much. I also didn't investigate the ASMX package at all. </p><p>For the WCF and WCF Security packages, I walked through the tutorial in the documentation. The tutorial contains the usual WCF suspects such as creating a data contract, creating a service contract and implementing a service contract. While you can do these things manually, the WSSF provides wizards for most if not all these operations. This seems like overkill for some of these operations. For example, filling out the grid of data contract members was more cumbersome (for me) then just typing the values in the code file. </p><p>Also on the subject of somewhat more complex than necessary, WSSF provides wizards for building type translators. This is pretty standard stuff: given an instance of a given type, the translator returns an instance of a different type. Again, I find it faster to write the code for this directly than to individually select the matching fields in the wizard UI. Somewhere on the complexity scale between CRUD stored procedures and service data contracts is the tipping point where it's faster and easier to just write the code than it is to manipulate the wizard UI which generates the code.</p><p>On the plus side, the WSSF includes snippets which are very convenient to use. For example, WSSF includes the WCFDataMember snippet (short name: wcfDM). It's a lot like the standard prop snippet, but with the automatic addition of the DataMember attribute.</p><p>I had much more success with the main WCF package than I did with the WCF Security package. I wasn't interested in the anonymous or direct authentication mechanisms, which left only two security recipes that I cared about: kerberos and x.509 certificates. Unfortunately, I couldn't make either of these tutorials work. For kerberos, the baseline configuration works (i.e. standard wsHttpBinding with no additional configuration), but after running the "Secure a Service Using Kerberos" recipe, I get an exception that "The token provider cannot get tokens for target". It wasn't in me to debug the sample to figure out what that meant. For x.509 certificates, I can't even complete the wizard - I click OK in the certificate selection dialog, but the wizard doesn't get updated and won't let me continue. </p><p>I really dig the new <a href="http://blogs.msdn.com/tomholl/archive/2006/06/07/GuidanceNavigator.aspx">Guidance Navigator</a> window, especially the history window, but I do have one problem with it. Is there a way to mark a recipe so it doesn't show up in the history view? The WSSF includes some recipes like "View Service in Browser" and "Run Client" that don't change the project state and quickly clutter up the history view. It would be great if they didn't show up there in the first place.</p><p>I'm guessing the WSSF is designed primarily new WCF developers, so I'm not exactly in the target demographic. Many of my issues above stem from my deeper than average experience with it (though nowhere near the depth of experience some members of the community have already). But it's a good start and I'm sure it will get better with successive releases.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>867</wp:post_id>
		<wp:post_date>2007-01-30 14:53:20</wp:post_date>
		<wp:post_date_gmt>2007-01-30 14:53:20</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>hawkeye-on-web-service-software-factory</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="architecture"><![CDATA[Architecture]]></category>
		<category domain="post_tag" nicename="guidance"><![CDATA[Guidance]]></category>
		<category domain="post_tag" nicename="wcf"><![CDATA[WCF]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/01/30/Hawkeye+On+Web+Service+Software+Factory]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Hawkeye+On+Web+Service+Software+Factory]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[a8ceccf6-df2a-4213-9b87-ef1d46e31516]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>2448</wp:comment_id>
			<wp:comment_author><![CDATA[Don Smith]]></wp:comment_author>
			<wp:comment_author_email>dons@microsoft.com</wp:comment_author_email>
			<wp:comment_author_url>http://blogs.msdn.com/donsmith</wp:comment_author_url>
			<wp:comment_author_IP>131.107.0.102</wp:comment_author_IP>
			<wp:comment_date>2007-01-31 11:39:42</wp:comment_date>
			<wp:comment_date_gmt>2007-01-31 19:39:42</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[It's interesting that you took the developer perspective Harry. I can see how a real proficient dev who has memorized all the necessary WCF attributes and config sections might just choose to write the code instead of invoke wizards. Most of these recipes certainly aren't generating mind-bending code ... actually they are generating mind-numbing code. It isn't interesting code to write and certainly not fun. The exception might be the code generated by the data access guidance package - this stuff is more interesting, but there sure can be a lot of it ... but is data access the problem we want to go solve ... again? :)

I'm surprised you didn't take the architect perspective. What about the ability to modify the guidance packages to include the architectural or policy decisions of the solutions? I know it isn't super easy, but it's more interesting than writing property assessors :) I would think the ability to define new code analysis rules interesting to architects too.

I'll check into disabling recipes from being shown in the guidance navigator window. I'm almost positive there is a way to do this. I'll ping you offline. 

I'll also have someone ping you about the x.509 and kerb issues you ran into. We don't have any known issues around these recipes so I'm interested in what caused them.

As always, thanks for the feedback and insight!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Morning Coffee 20</title>
		<link>http://devhawk.net/2007/01/30/morning-coffee-20/</link>
		<pubDate>Tue, 30 Jan 2007 10:12:56 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://6df627ad-c0c0-46ec-8b8c-d75db0b48d99</guid>
		<description></description>
		<content:encoded><![CDATA[<ul><li><a href="http://research.microsoft.com/~Gray/">Jim Gray</a> has been <a href="http://sfgate.com/cgi-bin/article.cgi?f=/c/a/2007/01/30/BAGGTNR93G1.DTL">missing at sea</a> since Sunday. My thoughts are with him. (via <a href="http://www.allthingsdistributed.com/2007/01/jim_gray_missing_at_sea.html">Werner Vogels</a>) </li><li>We <a href="http://microsoftwowlaunch.com/">launched</a><a href="http://www.microsoft.com/windows/products/windowsvista">Windows Vista</a> and <a href="http://office.microsoft.com/2007">Office 2007</a> yesterday. There were parties on campus, but <a href="http://devhawk.net/2006/09/30/quotWorkingquot+From+Home+As+The+Office+Moves.aspx">my office</a> is a little off the beaten path, so we didn't get a party. </li><li><a href="http://msdn2.microsoft.com/en-us/library/ms734773.aspx">WF Activity Validation</a> is very cool, but make sure you put your activities into a separate project from your workflows. It took me a few minutes yesterday to figure this out, but the validators are invoked not only for the activities in workflows, but for the actual activity implementation itself. My validation logic is checking to ensure properties are specified and that given activities are or are not inside a <a href="http://msdn2.microsoft.com/en-us/library/system.workflow.componentmodel.transactionscopeactivity.aspx">transaction scope</a>. Obviously, the activity implementation is invalid according to these rules. Also, you need to remove the Workflow.Targets import from your activity project file, as that is what invokes the activity validation. </li><li>A quick follow-up to yesterday's <a href="http://devhawk.net/2007/01/29/Compiling+Workflows.aspx">compiling workflows post</a>: WF appears to be fairly short on out of the box functionality, but more than makes up for it with an expansive extensibility model. It makes the learning curve longer, but it's well worth it the trip. </li><li>I'm demoing the result of the proof of concept work we've done over the last few months today. It's been a while since I've presented to any kind of audience so we'll see how it goes.</li></ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>868</wp:post_id>
		<wp:post_date>2007-01-30 10:12:56</wp:post_date>
		<wp:post_date_gmt>2007-01-30 10:12:56</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>morning-coffee-20</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="morning-coffee"><![CDATA[Morning Coffee]]></category>
		<category domain="post_tag" nicename="wf"><![CDATA[WF]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/01/30/Morning+Coffee+20]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Morning+Coffee+20]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[6df627ad-c0c0-46ec-8b8c-d75db0b48d99]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Morning Coffee 21</title>
		<link>http://devhawk.net/2007/01/31/morning-coffee-21/</link>
		<pubDate>Wed, 31 Jan 2007 10:51:22 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://74a304ff-a292-4341-b1ca-b7d8221a8207</guid>
		<description></description>
		<content:encoded><![CDATA[<ul><li>With this post, I will have posted 31 times in January. I doubt I will average a post a day for the rest of the year, but I've averaged less than half a post for a day for the past two years. 
</li><li>LINQ to whatever is the new hotness. The ADO.NET team blogged about <a href="http://blogs.msdn.com/adonet/archive/2007/01/26/querying-datasets-introduction-to-linq-to-dataset.aspx">LINQ to DataSet</a> last week. Of course, there's also <a href="http://msdn2.microsoft.com/en-us/library/aa479865.aspx#linqprojec_topic6">LINQ to SQL</a>, <a href="http://msdn2.microsoft.com/en-us/library/aa479865.aspx#linqprojec_topic7">LINQ to XML</a>, <a href="http://blogs.msdn.com/adonet/archive/2006/08/15/701479.aspx">LINQ to Entities</a> and <a href="http://blogs.msdn.com/xmlteam/archive/2006/11/27/typed-xml-programmer-welcome-to-linq.aspx">LINQ to XSD</a>. Am I missing any other LINQ's? (Would that be the missing LINQ? har har har) 
</li><li>Joe McKendrick writes on <a href="http://blogs.zdnet.com/service-oriented/?p=809">"rogue" systems in the enterprise</a>. In typical pundit fashion, he doesn't bother to take a stand on the subject, going so far in this case of having a reader poll rather than offering up his own opinion (wouldn't want to be wrong, would we?). However, I thought it was interesting that the three poll answers were "No rogue services", "Sometimes rogue services are OK" and "Why fight it?". Where's "Yes, let's directly empower the users" in that list? 
</li><li>I finally got around to installing <a href="http://www.microsoft.com/powershell">PowerShell</a> on both my laptop and workstation. I love the concept, but so far I just haven't had the time to dig into it or found a good problem to solve with it. 
</li><li>Windows Live now has it's own <a href="http://msdn2.microsoft.com/en-us/library/bb264574.aspx">SDK</a>. According to the <a href="http://dev.live.com/blogs/devlive/archive/2007/01/27/94.aspx">Windows Live Dev News</a>, the new and updated areas of the unified SDK include <a href="http://msdn2.microsoft.com/en-us/library/bb251794.aspx">Search</a>, <a href="http://msdn2.microsoft.com/en-us/library/bb259752.aspx">Alerts</a> and <a href="http://msdn2.microsoft.com/en-us/library/aa983013.aspx">adCenter</a>. (via <a href="http://www.dotnetkicks.com/webservices/Windows_Live_SDK_released">DotNetKicks</a>) 
</li><li>Speaking of DotNetKicks, is it just me or are a lot of the links submitted by their original authors? <a href="http://www.dotnetkicks.com/users/stevenmcohn">Steven Cohn</a> on <a href="http://www.dotnetkicks.com/webservices/Service_Layer_Transparency">Service Layer Transparency</a>, <a href="http://www.dotnetkicks.com/users/keyvan">Keyvan Nayyeri</a> on <a href="http://www.dotnetkicks.com/wwf/How_to_Write_a_Validator_for_Custom_Workflow_Activity">How to Write Validators for Custom WF Activities</a>, <a href="http://www.dotnetkicks.com/users/madskristensen">Mads Kristensen</a> on <a href="http://www.dotnetkicks.com/csharp/Universal_data_type_checker">Universal Data Type Checker</a> just to name three of the top four articles currently on the DNK home page. Seems fishy to blow your own horn like that, but since SNK <a href="http://www.dotnetkicks.com/docs/earnmoney">shares advertising revenue</a> with story submitters, it sorta makes sense.</li></ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>869</wp:post_id>
		<wp:post_date>2007-01-31 10:51:22</wp:post_date>
		<wp:post_date_gmt>2007-01-31 10:51:22</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>morning-coffee-21</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="blogging"><![CDATA[Blogging]]></category>
		<category domain="post_tag" nicename="community"><![CDATA[Community]]></category>
		<category domain="post_tag" nicename="linq"><![CDATA[LINQ]]></category>
		<category domain="category" nicename="morning-coffee"><![CDATA[Morning Coffee]]></category>
		<category domain="post_tag" nicename="windows-live"><![CDATA[Windows Live]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/01/31/Morning+Coffee+21]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Morning+Coffee+21]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[74a304ff-a292-4341-b1ca-b7d8221a8207]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>2449</wp:comment_id>
			<wp:comment_author><![CDATA[Alex James]]></wp:comment_author>
			<wp:comment_author_email>Alex@base4.net</wp:comment_author_email>
			<wp:comment_author_url>http://www.base4.net/blog.aspx?ID=300</wp:comment_author_url>
			<wp:comment_author_IP>219.89.81.114</wp:comment_author_IP>
			<wp:comment_date>2007-01-31 20:31:49</wp:comment_date>
			<wp:comment_date_gmt>2007-02-01 04:31:49</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I'm with you 100% on LINQ to whatever. In fact I've just started a series of posts on 'whatever'.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>2450</wp:comment_id>
			<wp:comment_author><![CDATA[Joe McKendrick]]></wp:comment_author>
			<wp:comment_author_email>joe@mckendrickresearch.com</wp:comment_author_email>
			<wp:comment_author_url>http://blogs.zdnet.com/service-oriented/</wp:comment_author_url>
			<wp:comment_author_IP>72.78.167.55</wp:comment_author_IP>
			<wp:comment_date>2007-02-01 13:11:56</wp:comment_date>
			<wp:comment_date_gmt>2007-02-01 21:11:56</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thanks for the mention. I actually lean to letting users do their own thing, with technology as the behind-the-scenes enabler. Service-Oriented Anarchy, I know.  :-)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Morning Coffee 22</title>
		<link>http://devhawk.net/2007/02/01/morning-coffee-22/</link>
		<pubDate>Thu, 01 Feb 2007 10:41:18 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://707d978b-88ae-46af-86f2-342b478a32d8</guid>
		<description></description>
		<content:encoded><![CDATA[<ul><li>I figured out something to build with PowerShell. Not ready to spill all the beans yet, but I've started by building a <a href="http://msdn2.microsoft.com/en-us/library/ms714636.aspx">provider</a> for SQL Server. SQL already has the <a href="http://msdn2.microsoft.com/en-us/library/ms162169.aspx">SQL Management Objects (SMO)</a> library, so I can really focus on how PowerShell works rather than getting too bogged down in the logic of the provider. I'm sure someone else is working on something similar, but my primary goal with building this provider is to understand PowerShell. The codebase itself is a distant second in priority. 
</li><li>On the subject of missing LINQ's, Alex James wants <a href="http://www.base4.net/Blog.aspx?ID=300">LINQ to Web</a>. A good potential use for the <a href="http://msdn2.microsoft.com/en-us/library/bb251794.aspx">Windows Live Search API</a>. 
</li><li>I posted three recent blog posts to <a href="http://www.dotnetkicks.com/">DotNetKicks</a> yesterday, but I've only collected one additional kick so far (for my <a href="http://devhawk.net/2007/01/29/Compiling+Workflows.aspx">Compiling Workflows post</a>). Looking at what does gather kicks, I think I would need to write a more dev focused article if I wanted to make the DNK home page. 
</li><li><a href="http://blogs.msdn.com/donsmith/">Don Smith</a> left a <a href="http://devhawk.net/CommentView,guid,a8ceccf6-df2a-4213-9b87-ef1d46e31516.aspx#commentstart">comment</a> on my WSSF post where he talked about the developer and the architect perspective. He seemed surprised that I took the developer perspective. To quote <a href="http://davidjwhite.net/myblog/">David White</a>: "Architect Must Implement". The customization opportunity in guidance automation is huge, but the value is to the developer first. And while it's a good start, it doesn't go very far at automating the development experience. At heart, I guess I'm a developer even though my business card sez Architect (with a capital "A" these days no less). 
</li><li>I moved my laptop over to Vista yesterday. My workstation is still on XP, but that's because I haven't had time to completely rebuild my dev environment. No Aero support with the 
</li><li>I elbowed my way into the TS Gateway pilot at Microsoft and I'm loving it. <a href="http://www.microsoft.com/windowsserver/longhorn/terminal-services/default.mspx">TS Gateway</a> is a new feature of Longhorn Server that "enables authorized remote users to connect to terminal servers and remote desktops on the corporate network from any Internet-connected device running Remote Desktop Connection 6.0." So I can quickly and easily remote into my desktop from anywhere without establishing a VPC session. The only annoyance is my USB smart card reader, which is fine in a pinch but a pain to constantly have dangling off my laptop. However, my boss approved a PCMCIA smart card reader so soon that won't be an issue.</li></ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>870</wp:post_id>
		<wp:post_date>2007-02-01 10:41:18</wp:post_date>
		<wp:post_date_gmt>2007-02-01 10:41:18</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>morning-coffee-22</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="linq"><![CDATA[LINQ]]></category>
		<category domain="category" nicename="morning-coffee"><![CDATA[Morning Coffee]]></category>
		<category domain="post_tag" nicename="powershell"><![CDATA[PowerShell]]></category>
		<category domain="post_tag" nicename="wcf"><![CDATA[WCF]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Morning+Coffee+22]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/02/01/Morning+Coffee+22]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[707d978b-88ae-46af-86f2-342b478a32d8]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Morning Coffee 23</title>
		<link>http://devhawk.net/2007/02/02/morning-coffee-23/</link>
		<pubDate>Fri, 02 Feb 2007 09:56:03 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://03eb522f-f44e-49fd-b6bd-c742b35a8bf7</guid>
		<description></description>
		<content:encoded><![CDATA[<ul><li>My <a href="http://devhawk.net/2007/01/25/Binding+Across+States+In+WF.aspx">Binding Across States</a> post made it to the home page of DotNetKicks, so at last six other people liked it. I wonder if I'll be able to detect and traffic increase from that. 
</li><li>I wrote yesterday that I had ordered a PCMCIA Smart Card reader for my laptop. I ordered it around 11:30pm on Wednesday and it arrived yesterday around 2pm.That's good service! And so much more convenient than the USB smart card reader. 
</li><li>I also mentioned yesterday that I had moved my laptop over to Vista. I'm not sure why, but my battery life has gotten significantly better. Maybe it's because these days I'm primarily using my laptop to remote into my desktop so I'm not exercising the local system much. 
</li><li>I was checking out <a href="http://www.oreilly.com/catalog/windowspowershell/">Windows PowerShell Quick Reference</a> from O'Reilly (on <a href="http://www.oreillynet.com/whatis/safari.csp">Safari</a>) and discovered this PS offers the numeric constants of <tt>gb</tt>, <tt>mb</tt>, and <tt>kb</tt> to represent gigabytes, megabytes, and kilobytes. Example: $downloadTime = (1gb + 250mb) / 120kb. That's pretty cool. 
</li><li>Speaking of PS, I stumbled across <a href="http://pluralsight.com/blogs/dan/archive/2006/11/07/41936.aspx">PowerSMO!</a> from <a href="http://pluralsight.com/blogs/dan/">Dan Sullivan</a>. Instead of building native PS support for SQL administration, PowerSMO! makes it easy to access SMO objects in PS. Instead of having to call "new-object Microsoft.SqlServer.Management.Smo.Wmi.ManagedComputer", you call "Get-SMO_ManagedComputer". Even more interestingly, PowerSMO! uses metaprograming techniques to generate all the Get_SMO* methods. It iterates over all the SMO types - about 1000 types in total - and generates the associated Get-SMO functions into a temp script file. Once the temp file is created, it can be invoked like any other script. Must noodle on this approach further. </li></ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>871</wp:post_id>
		<wp:post_date>2007-02-02 09:56:03</wp:post_date>
		<wp:post_date_gmt>2007-02-02 09:56:03</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>morning-coffee-23</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="morning-coffee"><![CDATA[Morning Coffee]]></category>
		<category domain="post_tag" nicename="powershell"><![CDATA[PowerShell]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/02/02/Morning+Coffee+23]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Morning+Coffee+23]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[03eb522f-f44e-49fd-b6bd-c742b35a8bf7]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Morning Coffee 24</title>
		<link>http://devhawk.net/2007/02/05/morning-coffee-24/</link>
		<pubDate>Mon, 05 Feb 2007 10:18:46 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://1fc80c40-e2aa-461f-8437-559d4dbdedf5</guid>
		<description></description>
		<content:encoded><![CDATA[<ul><li>Congrats to the Colts on <a href="http://sports.espn.go.com/nfl/recap?gameId=270204003">winning the ugliest Super Bowl ever</a>. Pouring rain, eight turnovers, missed PAT and field goal and the opening kickoff TD return. Ugly, but fun to watch.  </li><li>Now that we've had our first poor-weather Super Bowl, I think it's time to start rotating through cities that have never gotten it due to expected weather conditions. Obviously, I'd like to see a Super Bowl at <a href="http://www.qwestfield.com/">Qwest Field</a>. But most of all, I would love to see the Super Bowl played in Green Bay on the "frozen tundra" of <a href="http://www.lambeaufield.com/">Lambeau Field</a>.  </li><li>Was it just me, or did the Super Bowl ads suck this year? </li><li>There's a sweet looking <a href="http://www.pinballfx.com/">pinball game</a> coming to <a href="http://www.xbox.com/games/livearcadexbox360">XBLA</a>. I love pinball, so unless it completely stinks I'll be buying it.  </li><li>I commented on the Windows Live SDK last week, but I missed the <a href="http://winliveid.spaces.live.com/Blog/cns%21AEE1BB0D86E23AAC%21684.entry">Windows Live ID Client SDK</a> alpha release. It looks like you can use this SDK to build desktop applications that use Windows Live ID for authentication. Fairly cool, but does it work with non WL services? (via <a href="http://www.25hoursaday.com/weblog/PermaLink.aspx?guid=36544f84-b1c0-458c-ac17-f7fccffd4a45">Dare Obasanjo</a>) </li><li>I saw <a href="http://vaultofthoughts.net/GettingTheLocationOfAppDataFolder.aspx">this post</a> on the home page of <a href="http://Dotnetkicks.com">DotNetKicks</a> today. It claims that locating the ASP.NET App_Data directory by calling AppDomain.CurrentDomain.GetData("DataDirectory") is a "dirty hack". I left a comment on the original post, but I wonder if the correct information will ever make it's way back to DNK?  </li><li><a href="http://www.skyscrapr.net/blogs/comix/default.aspx">Architecture Comix</a>? Yep, on <a href="http://www.skyscrapr.net/">Skyscrapr</a>, an architect community site run by my old team. Sorta funny, but I'm guessing <a href="http://dilbertblog.typepad.com/">Scott Adams</a> isn't worried about the competition yet.</li></ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>872</wp:post_id>
		<wp:post_date>2007-02-05 10:18:46</wp:post_date>
		<wp:post_date_gmt>2007-02-05 10:18:46</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>morning-coffee-24</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="community"><![CDATA[Community]]></category>
		<category domain="category" nicename="morning-coffee"><![CDATA[Morning Coffee]]></category>
		<category domain="category" nicename="sports"><![CDATA[Sports]]></category>
		<category domain="post_tag" nicename="windows-live"><![CDATA[Windows Live]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/02/05/Morning+Coffee+24]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Morning+Coffee+24]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[1fc80c40-e2aa-461f-8437-559d4dbdedf5]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>How I Learned to Stop Worrying and Love WCF</title>
		<link>http://devhawk.net/2007/02/06/how-i-learned-to-stop-worrying-and-love-wcf/</link>
		<pubDate>Tue, 06 Feb 2007 11:16:06 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://0ad9411e-7bb4-4b0e-887e-5d3b16739479</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Regular readers of DevHawk are likely aware of my <strike>obsession</strike> interest in <a href="http://msdn2.microsoft.com/en-us/library/ms166043.aspx">SQL Service Broker</a> (aka SSB). I've also been doing a lot of <a href="http://msdn2.microsoft.com/en-us/library/aa388579.aspx">WCF</a> work lately. While there are parts of WCF that <a href="http://devhawk.net/2006/10/27/Custom+Authentication+With+WCF+Is+Top+Shelf.aspx">I think rock</a>, overall I've found WCF lacking due to it's <a href="http://devhawk.net/2006/10/29/Is+WCF+QuotStraightforwardquot+For+Long+Running+Tasks.aspx">lack of support for long running services</a>, which SSB excels at.</p><p>So it was with great interest that I read this recent article on <a href="http://msdn2.microsoft.com/en-us/library/bb266709.aspx">Integrating WF and WCF</a>. WF is expressly designed for long running systems, so I wanted to see how the article dealt with the WCF's lack of support for such scenarios. Unfortunately, the article basically sidesteps the issue. While it has lots of great info about hosting WF inside a WCF service, the article <a href="http://msdn2.microsoft.com/en-us/library/bb266709.aspx#intgrwfwcf_topic8">uses duplex channels</a> for communication between the service and its clients. As <a href="http://devhawk.net/2006/10/29/Is+WCF+QuotStraightforwardquot+For+Long+Running+Tasks.aspx">I have pointed out before</a>, this approach is impractical because it requires that both the service and its consumer remain alive in memory until the WF end. </p><p>Remember <a href="http://devhawk.net/2006/11/01/Essential+Windows+Workflow+Foundation.aspx">this quote from Essential WF</a>?</p><blockquote><p>"It is wishful thinking to assume that the operating system process (or CLR application domain) in which the program begins execution will survive for the required duration."</p></blockquote><p>So basically this WCF/WF sample is wishful thinking. Fine for a demo, but given the severe lack of information out there on integrating these two technologies, I'm worried that many people will read this article as best practice guidance, which in my opinion would be a mistake. </p><p>But instead of firing up my blog (that is, like <a href="http://devhawk.net/2006/10/17/WF+Clarifications+And+Corrections.aspx">last time</a>) to write a scathing post about how broken this sample is, I emailed <a href="http://blogs.msdn.com/pandrew/">Paul</a> which led to a concall with <a href="http://blogs.msdn.com/shycohen">Shy</a> to discuss WCF's lack of support for long running services. Imagine my surprise when Shy agreed with me completely, furthermore saying that support for long running services had been "out of scope" for v1 of WCF. I thought that the whole point of <a href="http://msdn2.microsoft.com/en-us/library/ms731064.aspx">duplex channels</a> was for long running services. But apparently I was wrong. </p><p>Shy said to think of the duplex channel in terms of sockets, rather than long running conversations. And just like that, WCF made a ton more sense to me. I had been directly comparing the SSB and WCF communication models, but that's apples and oranges. It would be like comparing SSB to TCP. </p><p>If you think about it, vanilla HTTP works a lot more like UDP, even though it's layered on top of TCP. Both UDP and HTTP support connectionless operations and neither UDP nor HTTP are reliable or provide message ordering. The comparison isn't perfect: for example, UDP isn't limited to a single response for an incoming request. But by and large, HTTP is a very UDP style protocol.</p><p>If HTTP is basically UDP, then WS-* is trying to be TCP. Frankly, I never understood the point of <a href="http://msdn2.microsoft.com/en-us/library/ms951271.aspx">WS-ReliableMessaging</a>. I always thought reliability == durability == SSB or MSMQ. But when you realize that HTTP lacks TCP-like reliability and ordering capabilities, suddenly this WS spec makes sense. In fact, Shy made <a href="http://blogs.msdn.com/shycohen/archive/2006/02/20/535717.aspx">this exact point</a> almost a year ago. At the time, I didn't get it because I didn't understand the duplex channel as sockets analogy. Now, I see the value of adding these capabilities to HTTP.</p><p>What Shy said was clear and to the point but unfortunately completely missing in the official WCF documentation. For example, the <a href="http://msdn2.microsoft.com/en-us/library/ms731064.aspx">docs on Duplex Services</a> say this:</p><blockquote><p>A duplex service contract is a message exchange pattern in which both endpoints can send messages to the other independently. A duplex service, therefore, can send messages back to the client endpoint, providing event-like behavior. Duplex communication occurs when a client connects to a service and provides the service with a channel on which the service can send messages back to the client.</p></blockquote><p>The docs make no mention that the "event-like behavior" of duplex services only works within a session. And I'm not the only one who mistakenly believed that duplex services could be used for long running services (here's <a href="http://ddj.com/dept/webservices/193104809?pgno=6">an article in DDJ</a> that makes the same mistake). Shy used the term "episodic" to describe services that span session boundaries. I'd like to see the docs updated to include that concept. </p><p>Taking the TCP/UDP analogy even further, I think it demonstrates how pointless the REST vs. SOAP debate is. As UDP is a thin layer on top of IP, REST is a thin layer on top of HTTP. But nobody argues much about UDP vs. TCP these days. I was in grade school when UDP and TCP were standardized, so maybe there were big TCP vs UDP flame wars at the time. But twenty five years later, it's pretty clear that TCP vs UDP is not an either-or proposition. Some protocols are better built on UDP while others are better built on TCP. I'm guessing we'll see a similar evolution with SOAP and REST. </p><p>Personally, I would expect that message exchanges between services will become more complex over time. Complex message exchanges would seem to favor stateful SOAP over stateless REST for the same reason complex network protocols favor connection-oriented TCP over connectionless UDP. But SOAP could never displace REST any more than TCP could ever displace UDP. Furthermore, as Larry O'Brien <a href="http://www.knowing.net/PermaLink,guid,3fc3b88d-ff3a-4149-bb6c-e5091d93a6ce.aspx">recently wrote</a> "the onus is on the WS-* advocates to prove the need". TCP standardization only lagged a year behind UDP standardization where WS-* has lagged at least six years behind REST. I wonder if UDP would be more prevalent today if it had gotten a six year head start on TCP.</p><p>Finally, this "SOAP as Sockets" flash of understanding has also helped me understand how SSB / WCF can evolve together in the future. Some folks have suggested an <a href="http://blog.yassers.com/2006/09/25/ssb-transport-anyone.aspx">SSB transport for WCF</a> and I've personally looked into such an approach. But given since SSB is at a higher level of abstraction than WCF, it makes much more sense to layer SSB on top of WCF instead of the other way around. Today, SSB uses <a href="http://msdn2.microsoft.com/en-us/library/ms166061.aspx">two protocol layers</a>: the top level Dialog Protocol, which is built on top of the lower-level Adjacent Broker Protocol (ABP), which in turn is built on TCP. I'd like to see a version of ABP that was built on top of WCF instead of directly on top of TCP. SSB's Dialog Protocol would tie together the WCF duplex sessions into a long-running conversation the same way that it ties together TCP sessions today. </p><p>Eventually, I would love to see something that has the programming semantics of SSB and the interoperability of WCF. That would be like the the Reese's Peanut Butter Cup of service messaging. </p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>873</wp:post_id>
		<wp:post_date>2007-02-06 11:16:06</wp:post_date>
		<wp:post_date_gmt>2007-02-06 11:16:06</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>how-i-learned-to-stop-worrying-and-love-wcf</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="architecture"><![CDATA[Architecture]]></category>
		<category domain="post_tag" nicename="infrastructure"><![CDATA[infrastructure]]></category>
		<category domain="post_tag" nicename="service-broker"><![CDATA[Service Broker]]></category>
		<category domain="post_tag" nicename="wcf"><![CDATA[WCF]]></category>
		<category domain="post_tag" nicename="web-services"><![CDATA[Web Services]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/02/06/How+I+Learned+To+Stop+Worrying+And+Love+WCF]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[How+I+Learned+To+Stop+Worrying+And+Love+WCF]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[0ad9411e-7bb4-4b0e-887e-5d3b16739479]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>2451</wp:comment_id>
			<wp:comment_author><![CDATA[Ramkishore]]></wp:comment_author>
			<wp:comment_author_email>c_ramkishore@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>12.24.60.12</wp:comment_author_IP>
			<wp:comment_date>2007-02-22 16:29:09</wp:comment_date>
			<wp:comment_date_gmt>2007-02-23 00:29:09</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hello Harry

Do you know if the Composite Duplex NetMsmqBinding uses a single socket connection or two one-way socket connections as in DualHttpBinding.

Thanks,
Ramkishore
]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Morning Coffee 25</title>
		<link>http://devhawk.net/2007/02/06/morning-coffee-25/</link>
		<pubDate>Tue, 06 Feb 2007 11:00:15 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://0f7808e6-2f6a-4c5d-b62c-5a6866caa56b</guid>
		<description></description>
		<content:encoded><![CDATA[<ul><li>I'm surprised we haven't seen a laptop with a flash memory hard drive yet. Given the significant power, heat and performance advantage of flash memory over hard drives, I would have expected the laptop companies to have high-end laptops with flash memory hard drives by now. I'm probably getting a new laptop in the next six months, but I'd hold out until the end of the year if it meant being able to get one with a flash memory hard drive.  </li><li>I <a href="http://devhawk.net/2007/01/10/Morning+Coffee+7.aspx">wrote last month</a> that "The next new language I learn will be <a href="http://research.microsoft.com/fsharp/fsharp.aspx">F#</a>". I was wrong. It's <a href="http://www.microsoft.com/windowsserver2003/technologies/management/powershell/default.mspx">PowerShell</a>.  </li><li>I've been listening to <a href="http://www.hanselman.com/blog/">Scott</a> gush about <a href="http://www.devexpress.com/Products/NET/IDETools/CodeRush/">CodeRush</a> for years now. His <a href="http://www.hanselman.com/blog/FreeRefactorForASPNETSoftwareFromTheMakersOfCodeRush.aspx">post yesterday</a> about the new free version of Refactor! for ASP.NET finally kicked me into action. I installed the CodeRush trial and will be commence bugging my boss to buy it.  </li><li>Looks like <a href="http://www.identityblog.com/?p=668">big news brewing</a> in the online identity space.  </li><li>Dale is <a href="http://halfmybrain.spaces.live.com/Blog/cns!DF6CA820250998D2!335.entry">talking about service heartbeats</a>. I'm pretty stoked that Dale is now spending 100% of his work time (when he's not blogging about sports, politics or video games anyway) with me building service oriented infrastructure for MSIT. </li></ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>874</wp:post_id>
		<wp:post_date>2007-02-06 11:00:15</wp:post_date>
		<wp:post_date_gmt>2007-02-06 11:00:15</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>morning-coffee-25</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="architecture"><![CDATA[Architecture]]></category>
		<category domain="category" nicename="morning-coffee"><![CDATA[Morning Coffee]]></category>
		<category domain="post_tag" nicename="soa"><![CDATA[SOA]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/02/06/Morning+Coffee+25]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Morning+Coffee+25]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[0f7808e6-2f6a-4c5d-b62c-5a6866caa56b]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Perusing Powershell Part 1: Get-SQLServer</title>
		<link>http://devhawk.net/2007/02/06/perusing-powershell-part-1-get-sqlserver/</link>
		<pubDate>Tue, 06 Feb 2007 14:19:52 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://a73ea4af-97ef-4574-94f1-8f928e5be84f</guid>
		<description></description>
		<content:encoded><![CDATA[I <a href="http://devhawk.net/2007/02/06/Morning+Coffee+25.aspx">wrote this morning</a> that I've shifted my new language focus from F# to PowerShell. I did this for a variety of reasons, but primarily because PowerShell is the future of Microsoft administration while F# is a research project. The thing that interests&nbsp;me most about F# is its support for hybrid OO/functional programing. Turns out, PS uses a different approach, but accomplishes much of the same goal.

In OO, most of the focus is on objects, naturally. However, administrators (i.e. the target audience of PS) tend to be much more task or action focused than object focused. Most OO languages don't have actions as a first class citizens within the language. C# and Java don't even allow stand alone functions - they always have to be at least static members of a class.

I'm fairly sure there are many reasons why strongly typed OO languages aren't popular among administrators. I'm not going to go down the static/dynamic typing rat hole here, but I would guess the object/action language tradeoff is almost as important as the typing tradeoff. What's nice about PowerShell is that while it has strong object support, it also has strong action support as well. In PS, actions are called Cmdlets. While I'm not a big fan of the name, having first class support for them in PS is one of the things I find most interesting.

PS is designed to be extended. And while there is support for defining functions in PS directly, for the most part PS is designed to be extended in a&nbsp;.NET OO language like C#. I have mixed feeling on this. Languages like F# and Ruby allow for these sorts of extensions to be built within the language itself. On the other hand, having a strong separation between scripting the shell and extending the shell simplifies the scripting experience without sacrificing capability of building extensions.

Here's a simple cmdlet I wrote called Get-SQLServer. SQL Server already comes with a <a href="http://msdn2.microsoft.com/en-us/library/ms162169.aspx">robust object oriented administration library</a>, but no support for PS (no surprise, since PS just shipped). I imagine future versions of SQL will have PS support, but to me this represents a great opportunity to get deep understanding of PS as well as focus on PS cmdlet design without having to do much of the grunt work.

<pre class="brush:csharp">using System;
using System.Management.Automation;
using Microsoft.SqlServer.Management.Smo.Wmi;
using Microsoft.SqlServer.Management.Smo; 

[Cmdlet(VerbsCommon.Get, "SQLServer")]
public class GetSqlServerCommand : Cmdlet
{
  private string _Name;
  [Parameter]
  public string Name
  {
    get { return _Name; }
    set { _Name = value; }
  }

  private string _MachineName;
  [Parameter]
  public string MachineName
  {
    get { return _MachineName; }
    set { _MachineName = value; }
  }

  private SwitchParameter _Default;
  [Parameter]
  public SwitchParameter Default
  {
    get { return _Default; }
    set { _Default = value; }
  }

  protected override void ProcessRecord()
  {
    string machine = string.IsNullOrEmpty(_MachineName) ? "." : _MachineName;

    if (string.IsNullOrEmpty(_Name) &amp;&amp; !_Default.IsPresent)
    {
      //write all server instances on specified machine
      //if _machineName is null or empty, the local machine is used
      ManagedComputer mc =  new ManagedComputer(machine);

      foreach (ServerInstance si in mc.ServerInstances)
      {
        if (si.Name == "MSSQLSERVER")
          WriteObject(new Server(machine));
        else
          WriteObject(new Server(machine + "\" + si.Name));
      }

      return;
    }

    if (!string.IsNullOrEmpty(_Name) &amp;&amp; _Default.IsPresent)
    {
      WriteError(
        new ErrorRecord(
          new ArgumentException("Default and Name parameters can't both be specified"),
          "DefaultAndName",
          ErrorCategory.InvalidArgument,
          null));

      return;
    }

    if (_Default.IsPresent)
      WriteObject(new Server(machine));
    else
      WriteObject(new Server(machine + "\" + _Name));
  }
}</pre>
As you can see, it's fairly simple. The cmdlet takes three parameters - Name, MachineName and Default. MachineName represents the windows server machine the SQL server instance is running on. Name is a common PS parameter, and here is used to specify the SQL instance name you're interested in. However, since the default instance of SQL on a given server doesn't have a name, I had to add a Default flag. Since the cmdlet can return a collection of SMO Server objects, I needed a way to distinguish between "Give me the default instance on a machine" and "Give me all instances on a machine". I couldn't use a null or empty Name parameter to mean both. If neither Name or Default are specified, it means the user wants a collection. If both are specified, it's an error. Otherwise, the cmdlet returns a single Server object - either the default or a named instance as specified.

Using the cmdlet is fairly straight forward.&nbsp;If you simply specify "Get-SQLServer", it gives you a collection of all the SQL Server instances on the local machine. If you specify "Get-SQLServer -Default", it gives you just the default SQL Server instance on the local machine. And if you specify "Get-SQLServer -Name sqlexpress", it gives you just the SQL Express instance on the local machine. Using the -MachineName parameter allows you to connect to a remote SQL server box, but is otherwise the same.

Of course, this is a very simple cmdlet. It doesn't even change the current state of the system. But now that we have a reference to a SQL Server instance, we can call methods on that instance. In the next post (whenever that is), I'll build some cmdlets to let me create and drop databases on that instance.

<em><span style="text-decoration: underline;">Update</span></em>: Removed syntax coloring from code because it looked bad in my news reader.

<em><span style="text-decoration: underline;">Later Update</span></em>: Fixed the syntax coloring]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>875</wp:post_id>
		<wp:post_date>2007-02-06 14:19:52</wp:post_date>
		<wp:post_date_gmt>2007-02-06 14:19:52</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>perusing-powershell-part-1-get-sqlserver</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="powershell"><![CDATA[PowerShell]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/02/06/Perusing+Powershell+Part+1+GetSQLServer]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Perusing+Powershell+Part+1+GetSQLServer]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[a73ea4af-97ef-4574-94f1-8f928e5be84f]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>2452</wp:comment_id>
			<wp:comment_author><![CDATA[Jeffrey Snover]]></wp:comment_author>
			<wp:comment_author_email>jsnover13@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>71.112.42.32</wp:comment_author_IP>
			<wp:comment_date>2007-02-06 19:43:52</wp:comment_date>
			<wp:comment_date_gmt>2007-02-07 03:43:52</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[You get it.  I'm looking forward to seeing what you like and don't like about PowerShell and any ideas you have about how we can make it better and/or more powerful.

Cheers!
Jeffrey Snover [MSFT]
Windows PowerShell/MMC Architect
Visit the Windows PowerShell Team blog at:    http://blogs.msdn.com/PowerShell
Visit the Windows PowerShell ScriptCenter at:  http://www.microsoft.com/technet/scriptcenter/hubs/msh.mspx
]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Morning Coffee 26</title>
		<link>http://devhawk.net/2007/02/07/morning-coffee-26/</link>
		<pubDate>Wed, 07 Feb 2007 11:11:47 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://830064de-25d4-4b83-8bb2-37a1de195857</guid>
		<description></description>
		<content:encoded><![CDATA[<ul><li>I wonder what MSBuild would look like if the team had <strike>cloned</strike> drawn inspiration from <a href="http://martinfowler.com/articles/rake.html">Rake</a> instead of <a href="http://ant.apache.org/">Ant</a>. Seems that PowerShell would have made a great foundation for build scripting. </li><li>Looks like the digital music business is about to undergo a <a href="http://www.apple.com/hotnews/thoughtsonmusic/">dramatic shift</a>. <a href="http://www.roughtype.com/archives/2007/02/jobs_calls_for.php">Nick Carr</a> and <a href="http://www.blogmaverick.com/2007/02/07/what-should-the-music-biz-do-next/">Mark Cuban</a> have more on the possible ramifications. A friend of mine is about to move over to the <a href="http://www.zune.net/">Zune team</a>. Sounds like a good time to making that switch. </li><li>Anne Manes of the Burton Group says the <a href="http://searchwebservices.techtarget.com/qna/0,289202,sid26_gci1242398,00.html">time is right for UDDI</a>, calling it the "foundation for governance". Frankly, I think that gives UDDI a lot more credit than it's due. We're looking at UDDI as part of our SO infrastructure project, and I think it's more appropriately called "one piece of the puzzle". In my experience, the major roadblock getting projects to share technical details is desire, not discoverability. Getting information into the registry is much easier than getting teams to use that data rather than succumbing to <a href="http://en.wikipedia.org/wiki/Not_invented_here">Not Invented Here</a> syndrome. (via <a href="http://blogs.zdnet.com/service-oriented/?p=812">Joe McKendrick</a>) </li><li>Jeff Snover of the <a href="http://blogs.msdn.com/PowerShell">PowerShell team</a> left <a href="http://devhawk.net/CommentView,guid,a73ea4af-97ef-4574-94f1-8f928e5be84f.aspx#commentstart">me a comment</a> the I "get" PowerShell. "Getting" it may be a better description, but it's nice to see how well engaged the PS team is in the community. </li><li>After 13 long weeks, <a href="http://abc.com/lost">Lost</a> is back! </li></ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>876</wp:post_id>
		<wp:post_date>2007-02-07 11:11:47</wp:post_date>
		<wp:post_date_gmt>2007-02-07 11:11:47</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>morning-coffee-26</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="architecture"><![CDATA[Architecture]]></category>
		<category domain="category" nicename="morning-coffee"><![CDATA[Morning Coffee]]></category>
		<category domain="post_tag" nicename="soa"><![CDATA[SOA]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/02/07/Morning+Coffee+26]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Morning+Coffee+26]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[830064de-25d4-4b83-8bb2-37a1de195857]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Perusing Powershell Part 2: Error or No Output?</title>
		<link>http://devhawk.net/2007/02/07/perusing-powershell-part-2-error-or-no-output/</link>
		<pubDate>Wed, 07 Feb 2007 12:00:35 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://99d7e902-9225-48e9-89f9-c390ce84afff</guid>
		<description></description>
		<content:encoded><![CDATA[In <a href="http://devhawk.net/2007/02/06/Perusing+Powershell+Part+1+GetSQLServer.aspx">yesterday's post on PS</a>, I provided the source for my implementation of Get-SQLServer. I realized after I made the post that there was a significant bug in the ProcessRecord method. If you specify a service instance (default or named), the cmdlet makes no effort to actually validate that such a SQL server instance exists. So if you ask for a instance that doesn't exist, Get-SQLServer will happily write an invalid Server object to the pipeline. So I changed it to actually validate that the specified instance exists. I connect to the specified machine (local machine if not specified) using <a href="http://msdn2.microsoft.com/library/microsoft.sqlserver.management.smo.wmi.managedcomputer.aspx">ManagedComputer</a> and look in it's ServerInstances collection for the specified SQL instance.

The question is, what should you do if the specified SQL instance <em>doesn't</em> exist on the specified machine? One the one hand, you could <a href="http://msdn2.microsoft.com/library/system.management.automation.cmdlet.writeerror.aspx">write an error</a> indicating that the SQL instance doesn't exist. Or, you could simply write nothing to the output pipeline, which may cause an error down the line.

Which is the right approach?

At first, I wrote an error when I couldn't find the instance, but decided that wasn't the right approach. It isn't really an error unless you attempt to act on that instance, right? So I thought the more PS friendly approach would be to write nothing and let the down stream cmdlets deal with it. I do <a href="http://msdn2.microsoft.com/library/system.management.automation.cmdlet.writedebug.aspx">write a debug message</a> if the specified instance doesn't exist, so the scripter isn't completely in the dark.

So here's the new and improved ProcessRecord method of my Get-SQLServer cmdlet:

&nbsp;
<pre class="brush:csharp">protected override void ProcessRecord() 
{ 
    //Make sure both -Name and -Default aren’t specified
    if (!string.IsNullOrEmpty(_Name) &amp;&amp; _Default.IsPresent) 
    { 
        WriteError(new ErrorRecord( 
            new ArgumentException( 
                “Default and Name parameters can’t both be specified”),
            “DefaultAndName”, 
            ErrorCategory.InvalidArgument, 
            null));
        return; 
    }

    //If the machine name is not specified, assume the local machine 
    //(via the “.” value)
    string machine = string.IsNullOrEmpty(_MachineName) ? “.” : _MachineName;

    //Connect to the specified machine via the SMO WMI ManagedComputer object
    SmoWmi.ManagedComputer mc = new SmoWmi.ManagedComputer(machine);

    if (string.IsNullOrEmpty(_Name) &amp;&amp; !_Default.IsPresent) 
    { 
        //If neither Name or Default are specified, write all the 
        //server instances on specified machine
        foreach (SmoWmi.ServerInstance si in mc.ServerInstances) 
            WriteServerObject(si);

        return; 
    }

    string instanceName = _Default.IsPresent ? “MSSQLSERVER” : _Name;

    if (mc.ServerInstances.Contains(instanceName)) 
        WriteServerObject(mc.ServerInstances[instanceName]); 
    else
        WriteDebug(“The specified SQL instance does not exist”); 
}

//Helper method to create a SMO Server object from a 
//SMO WMI ServerInstance object and write it to the pipeline
private void WriteServerObject(SmoWmi.ServerInstance si) 
{ 
    if (si.Name == “MSSQLSERVER”) 
        WriteObject(new Smo.Server(si.Parent.Name)); 
    else
        WriteObject(new Smo.Server(si.Parent.Name + “\” + si.Name));
}</pre>
&nbsp;

&nbsp;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>877</wp:post_id>
		<wp:post_date>2007-02-07 12:00:35</wp:post_date>
		<wp:post_date_gmt>2007-02-07 12:00:35</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>perusing-powershell-part-2-error-or-no-output</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="powershell"><![CDATA[PowerShell]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/02/07/Perusing+Powershell+Part+2+Error+Or+No+Output]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Perusing+Powershell+Part+2+Error+Or+No+Output]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[99d7e902-9225-48e9-89f9-c390ce84afff]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Morning Coffee 27</title>
		<link>http://devhawk.net/2007/02/08/morning-coffee-27/</link>
		<pubDate>Thu, 08 Feb 2007 10:59:44 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://5f29bfa4-48e7-4092-a561-0b154973187f</guid>
		<description></description>
		<content:encoded><![CDATA[<ul><li>Is there a good solution to colorize source code that looks good in RSS feeds? I've tried <a href="http://gallery.live.com/liveItemDetail.aspx?li=1f57bd9b-a692-4593-9e9e-e2962d9c0eee&amp;l=8">Insert Code</a> and <a href="http://gallery.live.com/liveItemDetail.aspx?li=d8835a5e-28da-4242-82eb-e1a006b083b9&amp;l=8">Paste from VS</a> for <a href="http://ideas.live.com/programpage.aspx?versionid=4372c8c2-b76f-4d44-aea1-9835b61d8dc1">WL Writer</a> and both look fine in HTML but awful in RSS.  </li><li>My friend <a href="http://www.whatcounts.com/blog?pid=965AABA79286169C">David Geller</a> launched his latest venture <a href="http://www.eyejot.com">Eyejot</a> recently. Eyejot is a Flash-based video messaging system, so you can send and receive video clips without having to install anything but a webcam. According to the <a href="http://blog.eyejot.com/">Eyejot blog</a>, they're getting some good press. See an interview with David about Eyejot <a href="http://www.youtube.com/watch?v=BGMRLMFLdF4">up on YouTube</a>. </li><li>Here's an <a href="http://developer.amazonwebservices.com/connect/entry.jspa?entryID=635&amp;ref=featured">interesting article</a> on using WF with Amazon's Mechanical Turk service. Invoking MTurk isn't that interesting - it's just a web service and WF has a built-in InvokeWebService activity. But since MTurk has no way to asynchronously call out to the WF, you have no choice but to regularly poll MTurk to see if the task is complete. Yuck. (via <a href="http://www.larkware.com/dg7/TheDailyGrind1074.aspx">Larkware</a>) </li><li><a href="http://pipes.yahoo.com/">Yahoo! Pipes</a> looks interesting. At least the screen shots of it on various websites and blogs look cool. Too bad the site is absolutely hammered this morning. (via <a href="http://www.25hoursaday.com/weblog/PermaLink.aspx?guid=258d634c-df5e-4420-a986-3e9d87a8f6da">Dare Obasanjo</a>) </li><li>Like <a href="http://msdn2.microsoft.com/en-us/teamsystem/aa718948.aspx">GAT</a>? Like <a href="http://msdn2.microsoft.com/en-us/vstudio/aa718368.aspx">DSL</a>? Then <a href="http://msdn2.microsoft.com/en-us/architecture/aa905334.aspx">use them together</a>! </li><li>If I can more than <a href="http://www.xbox.com/en-US/community/news/2007/0205-xboxrewards.htm">raise my Gamerscore</a> by 1,500 points by April 12th (i.e. more than double it), I can get a <a href="http://www.xbox.com/games/contraxboxlivearcade/">free $5 game</a>. But why wait to start the contest until next Monday? Doesn't that discourage people from playing until then?</li></ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>878</wp:post_id>
		<wp:post_date>2007-02-08 10:59:44</wp:post_date>
		<wp:post_date_gmt>2007-02-08 10:59:44</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>morning-coffee-27</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="morning-coffee"><![CDATA[Morning Coffee]]></category>
		<category domain="post_tag" nicename="software-factories"><![CDATA[Software Factories]]></category>
		<category domain="post_tag" nicename="web-2-0"><![CDATA[Web 2.0]]></category>
		<category domain="post_tag" nicename="wf"><![CDATA[WF]]></category>
		<category domain="post_tag" nicename="xbox-360"><![CDATA[Xbox 360]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[5f29bfa4-48e7-4092-a561-0b154973187f]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Morning+Coffee+27]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/02/08/Morning+Coffee+27]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>2453</wp:comment_id>
			<wp:comment_author><![CDATA[Shane Courtrille]]></wp:comment_author>
			<wp:comment_author_email>shanecourtrille@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>216.126.25.195</wp:comment_author_IP>
			<wp:comment_date>2007-02-08 11:26:11</wp:comment_date>
			<wp:comment_date_gmt>2007-02-08 19:26:11</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[In regards to the Gamescore thing.  The price you receive is based on your annual Gamescore at time of registration.  So in reality they are giving you till Monday to play as much as possible to bump yourself up into a new category and win bigger prices if you do get that 1,500 points in the specified time period.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>2454</wp:comment_id>
			<wp:comment_author><![CDATA[Tomas Restrepo]]></wp:comment_author>
			<wp:comment_author_email>tomas@winterdom.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.winterdom.com/weblog</wp:comment_author_url>
			<wp:comment_author_IP>200.116.233.120</wp:comment_author_IP>
			<wp:comment_date>2007-02-08 14:28:57</wp:comment_date>
			<wp:comment_date_gmt>2007-02-08 22:28:57</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Regarding the Colorized code in feeds, I'd like to know to. Several people seem to be able to do it without problems, but even though I've repeatedly asked about it (directly and indirectly) I have yet to hear an answer. Must be an important secret to guard it so closely.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>2455</wp:comment_id>
			<wp:comment_author><![CDATA[Davidg Geller]]></wp:comment_author>
			<wp:comment_author_email>davidg@eyejot.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.eyejot.com</wp:comment_author_url>
			<wp:comment_author_IP>216.254.2.162</wp:comment_author_IP>
			<wp:comment_date>2007-02-08 17:14:17</wp:comment_date>
			<wp:comment_date_gmt>2007-02-09 01:14:17</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thanks Harry! I owe you a morning coffee.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Morning Coffee 28</title>
		<link>http://devhawk.net/2007/02/09/morning-coffee-28/</link>
		<pubDate>Fri, 09 Feb 2007 09:46:00 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://e01752a1-cd3b-4d4c-bc14-aa4db6984563</guid>
		<description></description>
		<content:encoded><![CDATA[<ul><li>From the "Ask and ye shall receive" department: A couple weeks ago <a href="http://devhawk.net/2007/01/23/Morning+Coffee+16.aspx">I wondered</a> how good or bad my Gamerscore conversion rate is. <a href="http://www.mygamercard.net/">MyGamerCard.net</a> just launched a <a href="http://www.mygamercard.net/completionlb.php">completion leaderboard</a> where they rank you on your Gamerscore times your completion rate.  </li><li>Shane Courtrille <a href="http://devhawk.net/CommentView,guid,5f29bfa4-48e7-4092-a561-0b154973187f.aspx#commentstart">pointed out</a> that the prize you receive in from the <a href="http://www.xbox.com/en-US/community/news/2007/0205-xboxrewards.htm">Xbox Rewards</a> program gets better if your Gamerscore is higher. With a meager 1090 points, I'm in level 1. But those with 10,000+ or more can get a copy of <a href="http://www.xbox.com/games/fuzionfrenzy2xbox360/">Fuzion Frenzy 2</a> for completing the challenge.  </li><li>Yesterday, I <a href="http://devhawk.net/2007/02/08/Morning+Coffee+27.aspx">complained</a> that code in my RSS feed looks awful. It appears to be a problem with dasBlog. In validating the HTML is actually XHTML, it screws up the white space. Of course, usually that's not a big deal, but inside a &lt;pre&gt; tag, it is. Until I get a chance to submit a patch to dasBlog to fix this, I'm using <a href="http://puzzleware.net/codehtmler/">CodeHTMLer</a>, which has a "convert white space" option that doesn't use the &lt;pre&gt; tag at all. As a bonus, it even support PowerShell! Note, you have to use the <a href="http://puzzleware.net/codehtmler/default.aspx">website</a>, not their <a href="http://puzzleware.net/download.aspx?file=/codehtmler/codehtmler.livewriterplugin.zip">WLWriter plugin</a>, if you want the convert white space option. </li><li>There's a new beta of <a href="http://www.plas.fit.qut.edu.au/Ruby.NET/">Ruby.NET</a> available. Now that I've moved on to PowerShell, I'm only slightly interested in Ruby these days. If I can figure out how to create internal DSLs with PS, what would I need Ruby for? (via <a href="http://www.larkware.com/dg7/TheDailyGrind1075.aspx">Larkware</a>) </li><li><a href="http://msdn2.microsoft.com/architecture">My old team</a> just shipped a single-instance multi-tenancy SaaS sample called <a href="http://msdn2.microsoft.com/en-us/architecture/bb229292">LitwareHR</a>. Details are on <a href="http://blogs.msdn.com/gianpaolo/archive/2007/02/08/saas-sample-application-finally-here.aspx">Gianpaolo's blog</a>, code is up on <a href="http://www.codeplex.com/litwarehr">CodePlex</a>.</li></ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>879</wp:post_id>
		<wp:post_date>2007-02-09 09:46:00</wp:post_date>
		<wp:post_date_gmt>2007-02-09 09:46:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>morning-coffee-28</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="architecture"><![CDATA[Architecture]]></category>
		<category domain="post_tag" nicename="blogging"><![CDATA[Blogging]]></category>
		<category domain="post_tag" nicename="dasblog"><![CDATA[dasBlog]]></category>
		<category domain="category" nicename="morning-coffee"><![CDATA[Morning Coffee]]></category>
		<category domain="post_tag" nicename="ruby"><![CDATA[Ruby]]></category>
		<category domain="post_tag" nicename="xbox-360"><![CDATA[Xbox 360]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[e01752a1-cd3b-4d4c-bc14-aa4db6984563]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Morning+Coffee+28]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/02/09/Morning+Coffee+28]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>2456</wp:comment_id>
			<wp:comment_author><![CDATA[Wes]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://puzzleware.net</wp:comment_author_url>
			<wp:comment_author_IP>76.22.14.31</wp:comment_author_IP>
			<wp:comment_date>2007-02-09 12:44:27</wp:comment_date>
			<wp:comment_date_gmt>2007-02-09 20:44:27</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Actually you can use the convert whitespace option in the WLWriter plugin as well. You just need to configure it that way. On the insert code dialog select "<edit languages>" and it will bring up another dialog where you can look at the language definitions and change the settings on a per language basis. Just set the "UsePreTag" property to false. If you have issues with it let me know.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Morning Coffee 29</title>
		<link>http://devhawk.net/2007/02/12/morning-coffee-29/</link>
		<pubDate>Mon, 12 Feb 2007 10:35:05 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://3db18f7b-3fe0-4e27-a9b4-0d8825f3c3d5</guid>
		<description></description>
		<content:encoded><![CDATA[<ul><li>My friends at Manning sent me a copy of <a href="http://www.manning.com/payette/">Windows PowerShell in Action</a>. If you're at all interested in PS, buy this book as soon as it comes out.</li><li>My colleague in MSIT Nick Malik wants to know the <a href="http://blogs.msdn.com/nickmalik/archive/2007/02/11/what-are-the-top-100-patterns-that-every-developer-must-know.aspx">top 100 patterns every developer must know</a>. I'd start with the ones from Fowler's <a href="http://www.martinfowler.com/books.html#eaa">Patterns of Enterprise Application Architecture</a>.</li><li>Jeff Atwood figures out how to <a href="http://www.codinghorror.com/blog/archives/000790.html">wake up his computer from across the room</a>. Money quote: "why get out of your chair and walk 20 feet when you can spend two hours figuring out how to do it without moving at all?"</li><li>Tomas Restrepo says that WCF is <a href="http://www.winterdom.com/weblog/2007/02/12/WCFConfigurationComplexity.aspx">too configurable</a>. But he doesn't really mean it because later he says that while it's "fantastic" that WCF has so many options to tweak, he wished those options were less "in my face". I've reached a <a href="http://devhawk.net/2007/01/05/Morning+Coffee+4.aspx">similar conclusion</a>, so I'm with you 100% Tomas. </li><li>Scott explains how to <a href="http://www.hanselman.com/blog/HowToRotateAnAVIOrMPEGFileTakenInPortrait.aspx">rotate a video file</a>. I have a whole collection of video clips taken with my wife's digital camera where I shot portrait by mistake, so this is good to know.</li></ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>880</wp:post_id>
		<wp:post_date>2007-02-12 10:35:05</wp:post_date>
		<wp:post_date_gmt>2007-02-12 10:35:05</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>morning-coffee-29</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="morning-coffee"><![CDATA[Morning Coffee]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[3db18f7b-3fe0-4e27-a9b4-0d8825f3c3d5]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Morning+Coffee+29]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/02/12/Morning+Coffee+29]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Morning Coffee 30</title>
		<link>http://devhawk.net/2007/02/13/morning-coffee-30/</link>
		<pubDate>Tue, 13 Feb 2007 11:22:08 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://28a3f8fd-7240-4745-b4a3-482345fc0a32</guid>
		<description></description>
		<content:encoded><![CDATA[<ul><li>Wes <a href="http://devhawk.net/CommentView,guid,e01752a1-cd3b-4d4c-bc14-aa4db6984563.aspx#commentstart">clued me in</a> that the <a href="http://puzzleware.net/download.aspx?file=/codehtmler/codehtmler.livewriterplugin.zip">CodeHTMLer WLWriter plugin</a> does support using the convert whitespace option. The Dialog UI is awful, but if you select "Edit Languages" from the dropdown in the plugin UI, you can set the UsePreTag option to false. While it is an ugly UI (sorry, Wes) it does allow you a lot of control over how the languages render. Not only can you change the settings for an existing language, you can add your own custom language if you want.  </li><li>David Ing has <a href="http://www.from9till2.com/PermaLink.aspx?guid=9e46a959-43bf-4a21-a14d-eb51a3005300">tuned his one man show</a> Taglocity into Terazen Technology Inc. Not sure why Terazen is located in Vancouver, but maybe next time hops the pond for a visit to his new company's headquarters, he might take a detour a few hours south and ramble on about architecture with a few old friends.  </li><li>My excitement about the new season of 24 is waning quickly. Last night's two hours episode had so many "oh, come on!" moments that it overwhelmed my ability to suspend belief. </li><li>If you want to dig in the <a href="http://www.networkmashups.com/">Connected Services Sandbox</a>, start with <a href="http://www.networkmashups.com/Mashup.aspx">this description</a>. I just saw this on <a href="http://www.larkware.com/dg7/TheDailyGrind1077.aspx">Larkware this morning</a>, so I haven't had time to dig personally, but it does appear related to the <a href="http://www.microsoft.com/serviceproviders/solutions/connectedservicesframework.mspx">Connected Services Framework</a>. And apparently there's a contest starting in a few weeks. </li></ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>881</wp:post_id>
		<wp:post_date>2007-02-13 11:22:08</wp:post_date>
		<wp:post_date_gmt>2007-02-13 11:22:08</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>morning-coffee-30</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="morning-coffee"><![CDATA[Morning Coffee]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[28a3f8fd-7240-4745-b4a3-482345fc0a32]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Morning+Coffee+30]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/02/13/Morning+Coffee+30]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>2457</wp:comment_id>
			<wp:comment_author><![CDATA[David Ing]]></wp:comment_author>
			<wp:comment_author_email>david.ing@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.from9till2.com</wp:comment_author_url>
			<wp:comment_author_IP>86.149.169.238</wp:comment_author_IP>
			<wp:comment_date>2007-02-13 14:15:18</wp:comment_date>
			<wp:comment_date_gmt>2007-02-13 22:15:18</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I'll be over all the time Harry, and I'll even buy you a drink too.

The Vancouver thing is because I used to live in BC, that UK snowboarding is about as good as you'd expect and that it's easier to get good people there than here in 'RemoteSheepTown UK' where I live. 

Admittedly, if I get stuck in traffic on the morning commute of 4725 miles then can it can get a little tiring...]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Morning Coffee 31</title>
		<link>http://devhawk.net/2007/02/14/morning-coffee-31/</link>
		<pubDate>Wed, 14 Feb 2007 09:59:21 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://79beb4c8-b455-42bf-a26c-59c839e07ef5</guid>
		<description></description>
		<content:encoded><![CDATA[<ul><li>Architect MVP business news keeps on coming. Today it's Corillian - the company Scott Hansleman works for - <a href="http://www.hanselman.com/blog/TheNextStepCheckFreeToAcquireCorillianFor245m.aspx">getting acquired by CheckFree</a>. </li><li>Los Angeles is looking to provide <a href="http://www.latimes.com/news/local/la-fi-wifi14feb14,0,3502072.story">city-wide low-cost (maybe free) wireless access</a>. My father has often suggested that Internet access be treated like other utilities like water and power. Sounds like LA is heading down that path. I wonder if they're looking at WiMAX?</li><li>The <a href="http://msdn2.microsoft.com/en-us/embedded/bb267253.aspx">.NET Micro Framework</a> - which powers <a href="http://direct.msn.com/">the SPOT watch</a> - now has an SDK. For those keeping track, that makes three embedded solution platforms from Microsoft, the Micro FX, <a href="http://www.microsoft.com/windows/embedded/eval/wince">Windows CE</a> (which also just shipped a <a href="http://www.microsoft.com/presspass/press/2007/feb07/02-11WM6SoftwarePR.mspx">new version</a>) and <a href="http://www.microsoft.com/windows/embedded/eval/xpe">Windows XP Embedded</a>. (via <a href="http://www.larkware.com/dg7/TheDailyGrind1078.aspx">Larkware</a>)</li><li>BEA's Bruce Graham <a href="http://www.cbronline.com/article_news.asp?guid=D330D400-0914-4683-B152-0764854853C6">talks somewhat obtusely</a> on a topic I am particularly passionate about: putting more power in business people's hands to build their own systems. (via <a href="http://blogs.zdnet.com/service-oriented/?p=814">Joe McKendrick</a>)</li><li>Register for the <a href="http://connect.microsoft.com/WindowsHomeServer">Windows Home Server beta</a>. Also check out the <a href="http://forums.microsoft.com/WindowsHomeServer/default.aspx?SiteID=50">forums</a>, <a href="http://blogs.technet.com/homeserver/default.aspx">team blog</a> and <a href="http://www.winsupersite.com/reviews/whs_preview.asp">SuperSite Preview</a>. Looks pretty sweet (via <a href="http://www.hanselman.com/blog/SignUpForWindowsHomeServerBeta2.aspx">Scott Hansleman</a>)</li><li>The final version of <a href="http://mobile.search.live.com/about/">Live Search for Mobile</a> was released a few days ago. This program rocks. I'm using the Windows Mobile version, but there's also J2ME version as well. (via <a href="http://www.25hoursaday.com/weblog/PermaLink.aspx?guid=96d7d686-ede6-4a3e-8345-a96c12c55fa9">Dare Obasanjo</a>)</li><li>Any lingering interest I had in Ruby vanished yesterday as got to chapter 8 of <a href="http://www.manning.com/payette/">Windows Powershell in Action</a>. Chapter 8 is called "ScriptBlocks and Objects" and it is specifically about meta-programming. After reading that chapter, PS seems <em>more</em> flexible in this space than Ruby, which is the current industry darling for metaprogramming. For example, in Ruby you can optionally pass a block of code to any method. In PS, you can define a ScriptBlock like any other parameter. That means you can tell from the method signature that the ScriptBlock is used. Or you can define a function that takes multiple ScriptBlock parameters. Much more thought on this is needed.</li></ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>882</wp:post_id>
		<wp:post_date>2007-02-14 09:59:21</wp:post_date>
		<wp:post_date_gmt>2007-02-14 09:59:21</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>morning-coffee-31</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="development"><![CDATA[Development]]></category>
		<category domain="post_tag" nicename="embedded"><![CDATA[Embedded]]></category>
		<category domain="category" nicename="morning-coffee"><![CDATA[Morning Coffee]]></category>
		<category domain="post_tag" nicename="powershell"><![CDATA[PowerShell]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[79beb4c8-b455-42bf-a26c-59c839e07ef5]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Morning+Coffee+31]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/02/14/Morning+Coffee+31]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>A Secret Mission in Uncharted Space</title>
		<link>http://devhawk.net/2007/02/15/a-secret-mission-in-uncharted-space/</link>
		<pubDate>Thu, 15 Feb 2007 11:39:19 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://9e4fbe51-6f70-47bd-b0d5-6f8152d1c6f8</guid>
		<description></description>
		<content:encoded><![CDATA[<p>I'm taking some time off, starting tomorrow. I'll be out all next week. That means that you'll have to look elsewhere for your daily dose of <a href="http://devhawk.net/CategoryView,category,Morning%2BCoffee.aspx">Morning Coffee</a>. I do have a few posts I've been holding back to auto post next week, so you don't have to go completely DevHawk free. But if something big happens next week, don't expect any immediate reaction from me.</p><p>In addition to various technical blogs, I read a variety of political blogs. Not sure why, but where most of the technical blogs I read are individual voices, political blogs seem to be more group efforts. And even on the individual political blogs, they still have guest posters that come in periodically and when the primary blog owner is on vacation. Since I've gotten into the habit of posting every day, I decided I'd try out a guest poster. So in addition to a few auto posted entries, my teammate Dale Churchward will be holding down the fort here at DevHawk in my absence. I've linked to Dale's blog <a href="http://halfmybrain.spaces.live.com/blog/">Half My Brain</a> on many occasions, so you should have a passing familiarity with him.</p><p>One of the interesting things about having Dale posting here is how different he and I are. I'm a developer at heart but he's an sysadmin at heart. I code, he scripts. I worry about developer productivity, he worries about management and operations. He carried a pager for ten years, I didn't. I'm a Democrat and he's &lt;gasp&gt; <em>a Republican!</em> (At least he's not a Penguins fan.)</p><p>Seriously, one of the things that is great about working with Dale is the vast difference in experience. He's forgotten more about management and operations than I know (though I am a fast learner) so we make a very good team. Have a good week and be nice to Dale while I'm gone. </p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>883</wp:post_id>
		<wp:post_date>2007-02-15 11:39:19</wp:post_date>
		<wp:post_date_gmt>2007-02-15 11:39:19</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>a-secret-mission-in-uncharted-space</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="blogging"><![CDATA[Blogging]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[9e4fbe51-6f70-47bd-b0d5-6f8152d1c6f8]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[A+Secret+Mission+In+Uncharted+Space]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/02/15/A+Secret+Mission+In+Uncharted+Space]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Morning Coffee 32</title>
		<link>http://devhawk.net/2007/02/15/morning-coffee-32/</link>
		<pubDate>Thu, 15 Feb 2007 10:47:09 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://6ee1d6db-5ab9-4695-ab4d-465d1d75db93</guid>
		<description></description>
		<content:encoded><![CDATA[<ul><li>As 24 sputters, <a href="http://abc.com/lost">Lost</a> hits it's stride. Last nights episode rocked. </li><li>My old team keeps churning out great stuff. This time, it's the new <a href="http://msdn2.microsoft.com/en-us/architecture/bb190637.aspx">Composite Applications</a> site. </li><li>In a follow up to a post from a couple of weeks ago, Joe McKendrick declares that "<a href="http://blogs.zdnet.com/service-oriented/?p=816">Rogue IT is Cool</a>". In the spirit of rogueness, maybe we get the <a href="http://www.rogue.com/">Rogue Ale guys</a> to whip up some IT themed beers? Service Oriented Stout? Architecture Ale? Programmer's Porter? (you get the idea) </li><li>Scott Hanselman provides a <a href="http://feeds.feedburner.com/~r/ScottHanselman/~3/91074204/ExitingTheZoneOfPainStaticAnalysisWithNDepend.aspx">detailed look at static analysis</a> in general and NDepend in particular. I hereby coin the acronym YAGTSR, which stands for "Yet Another Great Tool Scott Recommends".  </li><li>Jeff Atwood thinks we should <a href="http://www.codinghorror.com/blog/archives/000791.html">code smaller</a>. He lists some positive aspects of small code (less bugs, less chance of failure, etc) and links to <a href="http://blog.objectmentor.com/articles/2006/12/21/size-matters">Bob Koss</a> talking about the negative aspects of big code (harder to understand, harder to reuse, higher likelihood of duplication, etc). OK, I'm down, but where's the how? I've got fairly radical ideas on this subject: <em>regularly throw out your old code and start over</em>. In movie making, there's this idea that you have to "<a href="http://www.wordplayer.com/columns/wp03.Beachcombing.html">kill your babies</a>". Not literally of course, they're talking about having the willingness to scrap your pet idea, favorite line, coolest shot, etc. for the sake of the bigger picture. I think the same goes for making software.</li></ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>884</wp:post_id>
		<wp:post_date>2007-02-15 10:47:09</wp:post_date>
		<wp:post_date_gmt>2007-02-15 10:47:09</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>morning-coffee-32</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="development"><![CDATA[Development]]></category>
		<category domain="category" nicename="morning-coffee"><![CDATA[Morning Coffee]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[6ee1d6db-5ab9-4695-ab4d-465d1d75db93]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Morning+Coffee+32]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/02/15/Morning+Coffee+32]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Morning Coffee 33</title>
		<link>http://devhawk.net/2007/02/16/morning-coffee-33/</link>
		<pubDate>Fri, 16 Feb 2007 08:59:53 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://f8a003a2-854c-499a-b677-4ea703168a7d</guid>
		<description></description>
		<content:encoded><![CDATA[<p>I realize yesterday I said I was on vacation starting today. In reality, I'm not going to the office today, but I have time to post this before my vacation starts in earnest.</p><ul><li>I hit <a href="http://www.shahine.com/omar/zeroemailbounce.aspx">Zero Email Bounce</a> in advance of my vacation. It's been quite a while since the last time I got here and I hope to hit it much more often in the future.  </li><li>The <a href="http://msdn2.microsoft.com/en-us/vstudio/aa718368.aspx">DSL tools team</a> shipped a <a href="http://www.microsoft.com/downloads/details.aspx?FamilyID=bfba74af-4f28-44cc-8de5-0c3c55d21863&amp;displaylang=en">Designer Integration PowerToy</a> that allows you to integrate models from multiple DSL designers into a single authoring tool. Gareth has <a href="http://blogs.msdn.com/garethj/archive/2007/02/16/announcing-designer-integration-powertoy.aspx">more here</a>. </li><li>Assorted PowerShell links: <a href="http://www.powershellanalyzer.com/">PowerShell Analyzer</a> and <a href="http://www.powershell.com/">PowerShellIDE</a>. Both look interesting. </li><li>Personally, I like <a href="http://www.flos-freeware.ch/notepad2.html">Notepad2</a> but apparently the only way to add a new syntax highlight scheme requires modifying the source code. Ugh. Anyone out there already added PS support to Notepad2? How about a suggestion for a simple text editor that supports extensible syntax highlighting?  </li><li><a href="http://iqueryable.com/2007/02/07/TheReesesPeanutButterCupOfServiceMessaging.aspx">Steve</a>, <a href="http://blogs.msdn.com/drnick/archive/2007/02/08/durable-is-more-than-duplex.aspx">Nick</a> and <a href="http://www.winterdom.com/weblog/2007/02/07/LongRunningServicesAndWSRM.aspx">Tomas</a> all commented on my <a href="http://devhawk.net/2007/02/06/How+I+Learned+To+Stop+Worrying+And+Love+WCF.aspx">long running services WCF post</a>. Tomas mentions Advanced Message Queuing Protocol (AMQP) which looks to be developing an open spec queuing system like MSMQ or MQ series. Interesting, but given the lack of involvement of the major MQ and DB vendors, I'm hard pressed to imagine this gaining any kind of critical mass.</li></ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>885</wp:post_id>
		<wp:post_date>2007-02-16 08:59:53</wp:post_date>
		<wp:post_date_gmt>2007-02-16 08:59:53</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>morning-coffee-33</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="domain-specific-languages"><![CDATA[Domain Specific Languages]]></category>
		<category domain="category" nicename="morning-coffee"><![CDATA[Morning Coffee]]></category>
		<category domain="post_tag" nicename="powershell"><![CDATA[PowerShell]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[f8a003a2-854c-499a-b677-4ea703168a7d]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Morning+Coffee+33]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/02/16/Morning+Coffee+33]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>2458</wp:comment_id>
			<wp:comment_author><![CDATA[Shane Courtrille]]></wp:comment_author>
			<wp:comment_author_email>shanecourtrille@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>216.126.25.195</wp:comment_author_IP>
			<wp:comment_date>2007-02-16 12:38:41</wp:comment_date>
			<wp:comment_date_gmt>2007-02-16 20:38:41</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Have you looked at UltraEdit as a Notepad2 replacement?  I've used it for years now and I love it.  Adding new syntax highlighting to it is fairly easy.  You can usually find a file for whatever you need (Nant for instance).]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Morning Doughnuts 1</title>
		<link>http://devhawk.net/2007/02/16/morning-doughnuts-1/</link>
		<pubDate>Fri, 16 Feb 2007 08:16:18 +0000</pubDate>
		<dc:creator>dale</dc:creator>
		<guid isPermaLink="false">http://2e8cd336-1c93-46eb-9457-21415ba3fbd1</guid>
		<description></description>
		<content:encoded><![CDATA[<p></p><p><strong>Introduction</strong></p><p>While Harry is out of the office on a well deserved vacation with his family I will be acting as a guest blogger for his website.</p><p>My name is Dale Churchward and I have been working at in Microsoft IT as an application architect since June 2006. Prior to coming to MS I worked in operations in both the telecommunications and healthcare industries. As Harry pointed out I tend to be very operations focused. While I love working on new technologies I am keenly interested in how a design will work in production, and try to ensure we have considered support considerations as part of our designs. Each member of our team comes in with a different background. This helps us as we are each strong in different areas. I also write to my own blog which can be found <a href="http://halfmybrain.spaces.live.com/">here</a>. In my own blog I tend to write on a wide array of subjects, depending on my mood at the time. While Harry is away though, I will be posting on technology areas I am interested in, and staying true to his morning coffee vision, albeit with a slightly different take.</p><p><strong>The Doughnuts</strong></p><ul><li><a href="http://www.amazon.com/Build-Master-Microsofts-Configuration-Addison-Wesley/dp/0321332059">The Build Master</a> by <a href="http://blogs.msdn.com/vincem/">Vincent Maraia</a> is an excellent book if you are interested in the build process and how to make it as efficient as possible. 
</li><li>We had a great meeting with the <a href="http://msdn.microsoft.com/practices/">Patterns &amp; Practices</a> team the other day. Since I am still new to Microsoft it is still a bit overwhelming to meet the authors of documents you have read and used over the years. 
</li><li>I recently have been spending some cycles working with <a href="http://www.microsoft.com/systemcenter/opsmgr/default.mspx">System Center Operations Manager 2007</a>. I believe that it provides some excellent tools to monitor and repair a system plus it's designed to be service focused. 
</li><li><a href="http://www.francisstokes.com/">Francis Stokes</a> has produced 6 episodes showing what would happen if heaven was being run like a company named God Inc. There are currently 6 episodes. No matter what your belief or lack thereof in a supreme being the videos are hilarious. 
<ul><li><a href="http://www.youtube.com/watch?v=b2f4heaG288">Episode 1</a></li><li><a href="http://www.youtube.com/watch?v=ySqceK4SUi0">Episode 2</a></li><li><a href="http://www.youtube.com/watch?v=8Gx_EYv8JYI">Episode 3</a></li><li><a href="http://www.youtube.com/watch?v=Taf3KI09WFM">Episode 4</a></li><li><a href="http://www.youtube.com/watch?v=il8XWIi-WPE">Episode 5</a></li><li><a href="http://www.youtube.com/watch?v=Wpfv1APJsz8">Episode 6</a> </li></ul></li><li>I have been spending a lot of time thinking about how heartbeat transactions between multiple services should operate. In the drawing below you can see 3 web services and a monitoring one. In the original design the monitoring service was sending heartbeats out to each of the web services to see if they were available. This seem inefficient to me as we really don't care if the monitoring service can reach the web service. What we need to know is if any dependent web services are able to connect. In the drawing we have a web service residing in the extranet (Web Service 1) that sends data to a web service in the corporate network (Web Service 2). We really don't care if the monitoring service can talk with web service 2, but we definitely want to know that web service 1 can get there. Once web service 1 realizes that is can't connect to 2 we then notify the monitoring system so that the owner of web service 2 can take action. Web service 1 still continues sending heartbeats though so that it is aware of when the second web service becomes available again.</li></ul><p><a href="http://s3.amazonaws.com/devhawk_images/WindowsLiveWriter/MorningDoughnuts1_7442/image{0}[3].png" atomicselection="true"><img style="BORDER-TOP-WIDTH: 0px; BORDER-LEFT-WIDTH: 0px; BORDER-BOTTOM-WIDTH: 0px; BORDER-RIGHT-WIDTH: 0px" height="419" src="http://s3.amazonaws.com/devhawk_images/WindowsLiveWriter/MorningDoughnuts1_7442/image{0}_thumb[1].png" width="640" border="0" /></a></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>886</wp:post_id>
		<wp:post_date>2007-02-16 08:16:18</wp:post_date>
		<wp:post_date_gmt>2007-02-16 08:16:18</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>morning-doughnuts-1</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="humor"><![CDATA[Humor]]></category>
		<category domain="post_tag" nicename="infrastructure"><![CDATA[infrastructure]]></category>
		<category domain="post_tag" nicename="instrumentation"><![CDATA[Instrumentation]]></category>
		<category domain="category" nicename="morning-coffee"><![CDATA[Morning Coffee]]></category>
		<category domain="post_tag" nicename="soa"><![CDATA[SOA]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[2e8cd336-1c93-46eb-9457-21415ba3fbd1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Morning+Doughnuts+1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/02/16/Morning+Doughnuts+1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Morning Doughnuts 2</title>
		<link>http://devhawk.net/2007/02/19/morning-doughnuts-2/</link>
		<pubDate>Mon, 19 Feb 2007 10:04:24 +0000</pubDate>
		<dc:creator>dale</dc:creator>
		<guid isPermaLink="false">http://cf928bdd-0ff0-4b01-977b-067068062b36</guid>
		<description></description>
		<content:encoded><![CDATA[<ul><li><a href="http://www.ldscio.org/about-joel/">Joel Dehlin</a>, the CIO of the <a href="http://www.lds.org/portal/site/LDSOrg">LDS</a> church has an interesting <a href="http://www.ldscio.org/2007/02/16/customization/">blog entry</a> on buy versus build this morning. His main point is that buying is often cheaper, but only if you can move your business processes to match the processes in the off-the-shelf software.</li><li>The search for <a href="http://research.microsoft.com/~Gray/">Jim Gray</a> by his friends and colleagues has been <a href="http://www.siliconvalley.com/mld/siliconvalley/16732358.htm">called off</a>. Even with a massive high-tech <a href="http://www.helpfindjim.com/">effort</a> no new clues have been turned up. For the sake of his family I do hope that the mystery is solved. I would imagine it is very hard to not know what happened to him.</li><li>I am currently running a Build and Deployment Task Force. We are trying to ensure that our team follows best practices when building new applications. The <a href="http://devhawk.net/2006/09/07/SOA+Sample+Scenario.aspx">project</a> that Harry and I are working on seems to be a good test bed for the process.</li><li>For those of you who read my <a href="http://halfmybrain.spaces.live.com/">blog</a> you know I am <a href="http://halfmybrain.spaces.live.com/blog/cns!DF6CA820250998D2!309.entry">passionate</a> about how we implement Service-Oriented Architecture in the real world. I have been reading a book titled <a href="http://www.amazon.com/Service-Oriented-Architecture-SOA-Implementation-Technology/dp/0471768944/sr=8-3/qid=1171907563/ref=pd_bbs_sr_3/002-9835182-0675229?ie=UTF8&amp;s=books">Service-Oriented Architecture: A Planning and Implementation Guide for Business and Technology</a>. I find the description of real business objections, and how to solve them quite refreshing.</li><li>It appears that the <a href="http://www.chargers.com/">San Diego Chargers</a> are <a href="http://sports.espn.go.com/nfl/news/story?id=2771126">going</a> to hire <a href="http://www.pro-football-reference.com/coaches/TurnNo0.htm">Norv Turner</a> to replace <a href="http://www.pro-football-reference.com/coaches/SchoMa0.htm">Marty Schottenheimer</a> as their head coach. I don't see how fans of the Chargers can possibly see this as an improvement.</li></ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>887</wp:post_id>
		<wp:post_date>2007-02-19 10:04:24</wp:post_date>
		<wp:post_date_gmt>2007-02-19 10:04:24</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>morning-doughnuts-2</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="blogging"><![CDATA[Blogging]]></category>
		<category domain="post_tag" nicename="guidance"><![CDATA[Guidance]]></category>
		<category domain="category" nicename="morning-coffee"><![CDATA[Morning Coffee]]></category>
		<category domain="post_tag" nicename="soa"><![CDATA[SOA]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[cf928bdd-0ff0-4b01-977b-067068062b36]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Morning+Doughnuts+2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/02/19/Morning+Doughnuts+2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Morning Doughnuts 3</title>
		<link>http://devhawk.net/2007/02/20/morning-doughnuts-3/</link>
		<pubDate>Tue, 20 Feb 2007 09:02:03 +0000</pubDate>
		<dc:creator>dale</dc:creator>
		<guid isPermaLink="false">http://77255f62-7dd7-4d46-8fcd-9c1b51cfa195</guid>
		<description></description>
		<content:encoded><![CDATA[<ul><li>What does it take to be an <a href="http://www.skyscrapr.net/blogs/architecture_audios_videos_webcasts/archive/2007/02/19/764.aspx">architect</a>? <a href="http://www.skyscrapr.net/">Skyscrapr.net</a> attempts to answer this question by asking a bunch of architects.  </li><li>I have started teaching my children about astronomy. I found an open source product called <a href="http://www.stellarium.org/">Stellarium</a> that is excellent for learning about the celestial objects visible in your area.  </li><li><a href="http://regumindtrail.wordpress.com/2007/01/31/methodology-for-soa-adoption/">A Methodology for SOA adoption</a>? I read an interesting blog on this subject from a couple of weeks ago. It's not a long article, but the author makes some interesting points including an outline for SOA adoption.  </li><li>I finally picked up <a href="http://gearsofwar.com/emergenceday/">Gears of War</a> on Friday. It really isn't a game I can see playing much, although I can see why it's popular. I guess the best and the worst part of the game is having to utilize cover so you don't die right away.  </li><li><a href="http://ideas.live.com/programpage.aspx?versionId=4372c8c2-b76f-4d44-aea1-9835b61d8dc1">Windows Live Writer</a> is a great tool! I use it to author the blogs for my <a href="http://halfmybrain.spaces.live.com/">website</a>, and this week I have been using it on these Morning Doughnuts posts. My favorite feature is that you can preview your post and see exactly how it will appear on your website. This has been particularly useful since <a href="http://www.devhawk.net/">Devhawk</a> and my site look quite different. </li></ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>888</wp:post_id>
		<wp:post_date>2007-02-20 09:02:03</wp:post_date>
		<wp:post_date_gmt>2007-02-20 09:02:03</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>morning-doughnuts-3</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="microsoft"><![CDATA[Microsoft]]></category>
		<category domain="category" nicename="morning-coffee"><![CDATA[Morning Coffee]]></category>
		<category domain="post_tag" nicename="soa"><![CDATA[SOA]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[77255f62-7dd7-4d46-8fcd-9c1b51cfa195]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Morning+Doughnuts+3]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/02/20/Morning+Doughnuts+3]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Reliably Beating a Dead Horse</title>
		<link>http://devhawk.net/2007/02/19/reliably-beating-a-dead-horse/</link>
		<pubDate>Mon, 19 Feb 2007 21:44:33 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://0e49d4c1-a278-4888-9abd-ea0b2dc899ae</guid>
		<description></description>
		<content:encoded><![CDATA[<p></p><p><em>(Harry is on a secret mission in uncharted space this week, so instead of the daily Morning Coffee post, you get a series of autoposted essays. This post builds on Harry's <a href="http://devhawk.net/2007/02/06/How+I+Learned+To+Stop+Worrying+And+Love+WCF.aspx">recent epiphany</a> about WCF and long running services)</em></p><p>Way, way, <em>way </em>back in March of 2003, IBM and Microsoft published an "overview and roadmap" white paper entitled "<a href="http://msdn2.microsoft.com/en-us/library/ms951247.aspx">Reliable Message Delivery in a Web Services World</a>". It contained the following paragraph under the section "Exchanging Messages Reliably":</p><blockquote><p>WS-ReliableMessaging is not bound to underlying transport protocols or sessions. <strong><em>This means that the lifetime of a WS-ReliableMessaging conversation can span long periods of time (days, weeks) even when one or both systems are rebooted. </em></strong>This allows conversations to be suspended mid-stream (for example, to allow system maintenance) and then resumed without needing to retransmit the entire conversation. [emphasis added]</p></blockquote><p>Now I know how I got <a href="http://devhawk.net/2007/02/06/How+I+Learned+To+Stop+Worrying+And+Love+WCF.aspx">confused about WCF and long running services</a> in the first place. <em>Support for long running services was part of the original web services vision!</em></p><p>About three years after that white paper was published, Shy Cohen wrote a post entitled <a href="http://blogs.msdn.com/shycohen/archive/2006/02/20/535717.aspx">Reliable Messaging Demystified</a> on his blog. Shy was at one time the feature owner of WS-RM in WCF (according to his post) and wrote the following:</p><blockquote><p>Reliable sessions [in WCF] are implemented using the WS-ReliableMessaging protocol. This protocol is yet another misnamed WS-* protocol, as it actually only deals with the reliability of the transfer and says nothing about durability, delivery acknowledgments, TTL for a message, long running sessions where a particular message is lost forever, etc. </p></blockquote><p>At some point in the three years between March 2003 and February 2006, WS-RM went from being the enabler of long running services to "yet another misnamed WS-* protocol". And with it, WCF lost (never had?) the ability to support long running services (as I've <a href="http://devhawk.net/2006/10/29/Is+WCF+QuotStraightforwardquot+For+Long+Running+Tasks.aspx">written previously</a>).</p><p>Now all and all, this isn't a big deal. I agree with Shy that WS-RM is under specified as mechanism for durable messaging (Shy calls this "queued messaging"). Attempting to build durable messaging on top of WS-RM sounds like it would have been both difficult and unlike to broadly interoperate. So implementing WS-RM for TCP style reliability and leveraging MSMQ as a transport for people that need durable messaging sounds like a pretty good compromise, especially for a v1 product. Of course, it is not exactly unheard of for a project's end result not to completely live up to the original vision. But I have a specific requirements in this case, so I wanted to know more. </p><p><a href="http://s3.amazonaws.com/devhawk_images/WindowsLiveWriter/ReliablyBeatingaDeadHorse_131B9/image{0}[2].png" atomicselection="true"><img style="BORDER-RIGHT: 0px; BORDER-TOP: 0px; BORDER-LEFT: 0px; BORDER-BOTTOM: 0px" height="180" src="http://s3.amazonaws.com/devhawk_images/WindowsLiveWriter/ReliablyBeatingaDeadHorse_131B9/image{0}_thumb.png" width="240" align="right" border="0" /></a> By calling it "misnamed", it sounds like WS-RM was never really intended to be used for durable messaging. However, the July 2003 <a href="http://msdn2.microsoft.com/en-us/webservices/aa740628.aspx">Reliable Messaging Feedback Workshop</a> indicates that it was. In particular, Rodney Limprecht's <a href="http://download.microsoft.com/download/6/d/4/6d48120a-878e-4f0d-af20-3e900b004c3d/presentations-july2003-ws-wkshp.zip">"Reliable Messaging Scenarios" deck</a> describes WS-RM as supporting scenarios requiring "either volatile or durable endpoint state". His list of scenarios included both an "Intermittent Connectivity" scenario where "messages pending transfer are staged to disk and exchanged when connected" as well as a "Message Queue Integration" scenario that used WS-RM to interop between <a href="http://java.sun.com/products/jms/">JMS</a> and MSMQ. Seems safe to say that WS-RM was originally intended to support durable messaging. So what happened? How did it become "misnamed"?</p><p>Rodney's deck describes WS-RM as having the "flexibility to meet scenario requirements". But flexibility comes at a cost. For example, the flexibility of WCF's configuration comes at the cost of <a href="http://www.winterdom.com/weblog/2007/02/12/WCFConfigurationComplexity.aspx">significant complexity</a>. In the case of WS-RM, it appears that by trying to make it flexible enough to support both volatile and durable reliability, the authors might have made it <em>too </em>flexible. WS-RM implementers have broad latitude in building the capabilities Shy mentions (durability, acknowledgements, TTL, etc) as well as describing said capabilities in policy. By providing that latitude, we lost the ability to broadly interop durable messaging, which I would suspect is why it ended up out of scope for WCF v1.</p><p>As I said before, lack of support for WS-RM based durable messaging isn't that big a deal. As long as you understand <a href="http://devhawk.net/2007/02/06/How+I+Learned+To+Stop+Worrying+And+Love+WCF.aspx">WCF's sweet spot</a> - the current version's sweet spot anyway - and don't try and make it be something it's not, you should be fine. Furthermore, Shy mentions the need for an "interoperable Queued Messaging specification" and wrote that it's something he "expect[s] that we will get to it in the near future". Here's hoping that spec is less flexible than WS-ReliableMessaging.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>889</wp:post_id>
		<wp:post_date>2007-02-19 21:44:33</wp:post_date>
		<wp:post_date_gmt>2007-02-19 21:44:33</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>reliably-beating-a-dead-horse</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<category domain="post_tag" nicename="wcf"><![CDATA[WCF]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[0e49d4c1-a278-4888-9abd-ea0b2dc899ae]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Reliably+Beating+A+Dead+Horse]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/02/20/Reliably+Beating+A+Dead+Horse]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Internal DSLs in PowerShell</title>
		<link>http://devhawk.net/2007/02/20/internal-dsls-in-powershell/</link>
		<pubDate>Tue, 20 Feb 2007 23:08:01 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://79dc7b14-2c09-4cbb-8039-99c299212664</guid>
		<description></description>
		<content:encoded><![CDATA[<em>(Harry is on a secret mission in uncharted space this week, so instead of the daily Morning Coffee post, you get a series of autoposted essays. This post combines both some leftover learnings about Ruby from Harry's Web 2.0 days with his recent obsession with PowerShell.)</em>

My first introduction to the idea of internal DSLs was an <a href="http://martinfowler.com/articles/rake.html">article on Ruby Rake</a> by Martin Fowler. Rake is Ruby's make/build utility. Like most build tools like <a href="http://ant.apache.org/">Ant</a> and <a href="http://msdn2.microsoft.com/en-us/library/ms171452.aspx">MSBuild</a>, Rake is a dependency management system. Unlike Ant and MSBuild, Rake doesn't use an XML based language. It uses Ruby itself, which has huge benefits when you start doing custom tasks. In Ant or MSBuild, building a custom task requires you to use a external environment (batch file, script file or custom compiled task object). In Rake, since it's just a Ruby file, you can start writing imperative Ruby code in place.

Here's the simple Rake sample from Fowler's article:
<pre class="brush:ruby">task :codeGen do  
  # do the code generation 
end 

task :compile =&gt; :codeGen do  
  # do the compilation 
end 

task :dataLoad =&gt; :codeGen do  
  # load the test data 
end 

task :test =&gt; [:compile, :dataLoad] do  
  # run the tests 
end</pre>
The task keyword takes three parameters:&nbsp;the task&nbsp;name, an array containing&nbsp;the task dependencies and a script block containing the code to execute to complete the task. Ruby's flexible syntax allows you to specify task without any dependencies (:codegen), with a single dependency (:compile =&gt; :codegen), and with multiple dependencies (:test =&gt; [:compile,:dataLoad])

So what would this look like if you used Powershell instead of Ruby? How about this:

<pre class="brush:powershell">task codeGen {  
  # do the code generation 
}
task compile codeGen { 
  # do the compilation 
}

task dataLoad codeGen {  
  # load the test data 
}

task test compile,dataLoad { 
  # run the tests 
}</pre>
Not much different. PS uses brackets for script blocks while Ruby uses do / end, but that's just syntax. Since it lacks Ruby's concept of symbols (strings that start with a colon), PS has to use strings instead. Otherwise, it's almost identical. They even both use the # symbol to represent a line comment.

There is one significant difference. For tasks with dependencies, Rake uses a hash table to package the task name and its dependencies. The =&gt; syntax in Ruby creates a hash table. Since the hash table has only a single value, you can leave of the surrounding parenthesis. The key of this single item hash table is the task name while the value is an array of task names this task depends on. Again, Ruby's syntax is flexible, so if you have only a single dependency, you don't need to surround it in square brackets.

In Powershell, the hash table syntax isn't quite so flexible, you have to surround it with @( ). So using Rake's syntax directly would result in something that looked like "task @(test = compile,dataLoad) {...}" which is fairly ugly. You don't need to specify the square brackets on the array, but you having to add the @( is a non-starter, especially since you wouldn't have them on a task with no dependencies.

So instead, I thought a better approach would be to use PS's variable parameter support. Since all tasks have a name, the task function is defined simply as "function task ([string] $name)". This basically says there's a function called task with <em>at least </em>one parameter called $name. (All variables in PS start with a dollar sign.) Any parameters that are passed into the function that aren't specified in the function signature are passed into the function in the $args variable.

This approach does mean having to write logic in the function to validate the $args parameters. Originally, I specified all the parameters, so that it looked like this: "function global:task([string] $name, [string[]] $depends, [scriptblock] $taskDef)". That didn't work for tasks with no dependencies, since it tried to pass the script block in as the $depends parameter.

Here's a sample task function that implements the task function shown above. It validates the $args input and builds a custom object that represents the task. (Note, the various PS* objects are in the System.Management.Automation namespace. I omitted the namespaces to make the code readable.)
<pre class="brush:powershell">function task([string] $name) {
  if (($args.length -gt 2) -or ([string]::isnullorempty($name))) { 
    throw "task syntax: task name [&lt;dependencies&gt;] [&lt;scriptblock&gt;]"
  }               
  if ($args[0] -is [scriptblock]) {         
    $taskDef = $args[0]       
  }       
  elseif ($args[1] -is [scriptblock]) {         
    $depends = [object[]]$args[0]         
    $taskDef = $args[1]       
  }       
  else {         
    $depends = [object[]]$args[0]     
    #if a script block isn't passed in, use an empty one        
    $taskDef = {}    
  }     

  $task = new-object PSObject       
  $nameProp = new-object PSNoteProperty Name,$name       
  $task.psobject.members.add($nameProp)                
  $dependsProp = new-object PSNoteProperty Dependencies,$depends       
  $task.psobject.members.add($dependsProp)                
  $taskMethod = new-object PSScriptMethod ExecuteTask,$taskDef       
  $task.psobject.members.add($taskMethod)                
  $task     
}</pre>
Of course, you would need much more than this if you were going to build a real build system like Rake in PowerShell. For example, you'd need code to collect the tasks, order them in the correct dependency order, execute them, etc. Furthermore, Rake supports other types of operations, like file tasks and utilities that you'd need to build.

However, the point of this post isn't to rebuild Rake in PS, but to show how PS rivals Ruby as a language for building internal DSLs. On that front, I think PowerShell performs beautifully.

I'm looking forward to using PowerShell's metaprogramming capabilities often in the future.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>890</wp:post_id>
		<wp:post_date>2007-02-20 23:08:01</wp:post_date>
		<wp:post_date_gmt>2007-02-20 23:08:01</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>internal-dsls-in-powershell</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="domain-specific-languages"><![CDATA[Domain Specific Languages]]></category>
		<category domain="post_tag" nicename="powershell"><![CDATA[PowerShell]]></category>
		<category domain="post_tag" nicename="ruby"><![CDATA[Ruby]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[79dc7b14-2c09-4cbb-8039-99c299212664]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Internal+DSLs+In+PowerShell]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/02/21/Internal+DSLs+In+PowerShell]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Morning Doughnuts 4</title>
		<link>http://devhawk.net/2007/02/21/morning-doughnuts-4/</link>
		<pubDate>Wed, 21 Feb 2007 09:41:03 +0000</pubDate>
		<dc:creator>dale</dc:creator>
		<guid isPermaLink="false">http://653968ed-2e2c-4961-afb5-48bb12c72e36</guid>
		<description></description>
		<content:encoded><![CDATA[<ul><li>According to <a href="http://www.alertnet.org/thenews/newsdesk/N2J303978.htm">Reuters</a> surgeons who play video games are more skilled. Remind me to ask the doctor if s/he owns an <a href="http://www.xbox.com/en-US/">XBOX 360</a> the next time I am getting operated on.  </li><li>I have reached the <a href="http://www.bcsfootball.org/bcsfootball/">National Championship</a> game in dynasty mode of <a href="http://www.easports.com/ncaa07/">NCAA Football 2007</a>. The opponent of my <a href="http://www.byucougars.com/football/">BYU Cougars</a>...why that would be Harry's alma mater, the <a href="http://usctrojans.cstv.com/sports/m-footbl/usc-m-footbl-body.html">USC Trojans</a>. Funny how that worked out.  </li><li>Nicholas Allen writes in his <a href="http://blogs.msdn.com/drnick/default.aspx">blog</a> about when you should use <a href="http://msdn2.microsoft.com/en-us/netframework/aa663324.aspx">Indigo</a> to write a <a href="http://blogs.msdn.com/drnick/archive/2007/02/20/when-to-write-a-channel.aspx">channel</a>, and more importantly when you should not. As most of you know Harry and I are doing quite a bit of work with <a href="http://msdn2.microsoft.com/en-us/netframework/aa663324.aspx">WCF</a> so we are interested in this type of advice.  </li><li>Our team has been thinking about how to manage a large number of services in an automated fashion. This would include deploying new services, monitoring the services, automatically handling scaling, service discovery, and automated provisioning to name a few possible capabilities. I almost think of it like the next version of <a href="http://www.uddi.org/">UDDI</a>, especially when it comes to provisioning. I think that as systems become more distributed that the ability to automatically manage these systems is going to be key to their success. I know that some thought has already gone on in this area by people far smarter than I, but as I consider how to operate an infrastructure with thousands of services in it it is apparent that the opportunity is there for us to design and implement a system management framework that automates the majority of the tasks. I need to spend some time to consider how the framework would work, and document the capabilities.</li></ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>891</wp:post_id>
		<wp:post_date>2007-02-21 09:41:03</wp:post_date>
		<wp:post_date_gmt>2007-02-21 09:41:03</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>morning-doughnuts-4</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="college-football"><![CDATA[College Football]]></category>
		<category domain="category" nicename="morning-coffee"><![CDATA[Morning Coffee]]></category>
		<category domain="post_tag" nicename="soa"><![CDATA[SOA]]></category>
		<category domain="post_tag" nicename="wcf"><![CDATA[WCF]]></category>
		<category domain="post_tag" nicename="xbox-360"><![CDATA[Xbox 360]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[653968ed-2e2c-4961-afb5-48bb12c72e36]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Morning+Doughnuts+4]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/02/21/Morning+Doughnuts+4]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>2459</wp:comment_id>
			<wp:comment_author><![CDATA[KjellSJ]]></wp:comment_author>
			<wp:comment_author_email>kjellsj@objectware.no</wp:comment_author_email>
			<wp:comment_author_url>http://http://kjellsj.blogspot.com</wp:comment_author_url>
			<wp:comment_author_IP>80.203.99.174</wp:comment_author_IP>
			<wp:comment_date>2007-02-21 10:50:56</wp:comment_date>
			<wp:comment_date_gmt>2007-02-21 18:50:56</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Have a look at AmberPoint for your service governance needs, it should cover the things you mention. In addition, Microsoft will recommend it in their ESB guidelines for BTS 2006 R2.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Morning Doughnuts 5</title>
		<link>http://devhawk.net/2007/02/22/morning-doughnuts-5/</link>
		<pubDate>Thu, 22 Feb 2007 10:15:36 +0000</pubDate>
		<dc:creator>dale</dc:creator>
		<guid isPermaLink="false">http://8ddd0e18-64a1-46ac-b1cd-afab91f96e6e</guid>
		<description></description>
		<content:encoded><![CDATA[<ul><li><a href="http://www.ldscio.org/about-joel/">Joel Dehlin</a>, a former Microsoft employee and the CIO of the LDS church is conducting a series of tech talks. The next one is being planned for the bay area. If you are interested you can respond to his post <a href="http://www.ldscio.org/2007/02/21/tech-talk-in-bay-area/">here</a>. The dates would be between April 22 - 26 with a tentative agenda as follows:</li><ul><ul><li>Keynote</li><li>Infrastructure breakout  </li><li>Development breakout  </li><li>Interaction Design breakout  </li><li>Community breakout  </li><li>Building to building video breakout </li></ul></ul><li>Everything needs a <a href="http://en.wikipedia.org/wiki/12_step_program">12 step program</a> now. CNN has a 12 step program to cure your email addiction <a href="http://www.cnn.com/2007/TECH/internet/02/20/email.addiction.steps.reut/index.html">here</a>. I started thinking about this after Harry's <a href="http://devhawk.net/2007/02/16/Morning+Coffee+33.aspx">post</a> saying he had hit zero email bounce prior to going on his secret mission.</li><li>I read an interesting blog on <a href="http://blogs.spouting-tech.com/thepensivegamer/2007/02/microsofts_xna_.html">XNA</a> and how it fits into Microsoft's strategy in gaming. I am not sure I agree with all of the points, but I found the arguments to be compelling.</li><li>My <a href="http://www.byucougars.com/basketball_m/">BYU Cougars</a> are now up to 21 in the <a href="http://sportsillustrated.cnn.com/basketball/ncaa/men/polls/">AP Poll</a>. I can't think of a year when both the football and basketball teams have both had such successful seasons.</li><li>Between today and tomorrow I will be finalizing my vision document for how I think monitoring should work in the Service-Oriented Infrastructure project I am on. As I was outlining my vision it really hit me how much there is to do.</li></ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>892</wp:post_id>
		<wp:post_date>2007-02-22 10:15:36</wp:post_date>
		<wp:post_date_gmt>2007-02-22 10:15:36</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>morning-doughnuts-5</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="guidance"><![CDATA[Guidance]]></category>
		<category domain="post_tag" nicename="infrastructure"><![CDATA[infrastructure]]></category>
		<category domain="category" nicename="morning-coffee"><![CDATA[Morning Coffee]]></category>
		<category domain="post_tag" nicename="operations"><![CDATA[Operations]]></category>
		<category domain="post_tag" nicename="xbox-360"><![CDATA[Xbox 360]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[8ddd0e18-64a1-46ac-b1cd-afab91f96e6e]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Morning+Doughnuts+5]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/02/22/Morning+Doughnuts+5]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Morning Doughnuts 6</title>
		<link>http://devhawk.net/2007/02/23/morning-doughnuts-6/</link>
		<pubDate>Fri, 23 Feb 2007 09:49:13 +0000</pubDate>
		<dc:creator>dale</dc:creator>
		<guid isPermaLink="false">http://6d32a84d-3454-4c30-b251-c12275c937bc</guid>
		<description></description>
		<content:encoded><![CDATA[<ul><li>The <a href="http://online.wsj.com/home/us"><font color="#669966">Wall Street Journal</font></a> is reporting that Massachusetts lawmakers are considering a <a href="http://online.wsj.com/article/SB117211275783215723.html?mod=todays_us_marketplace"><font color="#669966">bill</font></a> to punish retailers for leaks in personal data. I wonder how long it will take for a law like that to go nationwide? Looks like there may be some good jobs in retail IT data security opening up shortly. 
</li><li>There is an interesting <a href="http://www.ddj.com/dept/webservices/197006946"><font color="#669966">debate</font></a> on the <a href="http://www.microsoft.com/serviceproviders/saas/default.mspx"><font color="#669966">SAAS</font></a> architecture in <a href="http://www.ddj.com/"><font color="#669966">Dr. Dobb's Portal</font></a>. The money quote for me was as follows:</li></ul><blockquote><p>"Ajax and Web 2.0 are great technologies for casual use, but for mission critical you need the capabilities of a desktop app," RightNow CEO Greg Gianforte says.</p></blockquote><blockquote><p>I have to admit I don't agree with that quote at all. It seems pretty shortsighted in minimizing the capabilities of web based applications.</p></blockquote><ul><li>As a follow-up to yesterdays <a href="http://devhawk.net/2007/02/22/Morning+Doughnuts+5.aspx"><font color="#669966">entry</font></a> about the 12 steps to overcome <a href="http://www.cnn.com/2007/TECH/internet/02/20/email.addiction.steps.reut/index.html"><font color="#669966">email addiction</font></a><a href="http://halfmybrain.spaces.live.com/blog/cns!DF6CA820250998D2!300.entry"><font color="#669966">here</font></a> is a 12 step program to help you overcome being a SOAholic. There are also some symptoms you can look for to see if you are a <a href="http://halfmybrain.spaces.live.com/blog/cns!DF6CA820250998D2!271.entry"><font color="#669966">SOAholic</font></a>. 
</li><li><a href="http://www.technorati.com/profile/rravisha"><font color="#669966">Ram Ravishankar</font></a><a href="http://ramstechtalk.blogspot.com/2007/02/true-or-false-soa-cannot-be-implemented.html"><font color="#669966">posts</font></a> on if SOA requires web services. He makes pretty good arguments for an against a SOA requiring web services and ultimately doesn't answer the question. I would say that a SOA doesn't require web services, but it is very likely in the range of 90% plus that a SOA within a company is going to have at least some web services in it. 
</li><li>Harry returns from his secret mission and will be back blogging on Monday. I have really enjoyed stepping in being a replacement blogger this week. While my take on technology is a bit different that Harry's I hope that my entries were interesting and offered a bit of a different perspective on IT.</li></ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>893</wp:post_id>
		<wp:post_date>2007-02-23 09:49:13</wp:post_date>
		<wp:post_date_gmt>2007-02-23 09:49:13</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>morning-doughnuts-6</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="morning-coffee"><![CDATA[Morning Coffee]]></category>
		<category domain="post_tag" nicename="soa"><![CDATA[SOA]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[6d32a84d-3454-4c30-b251-c12275c937bc]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Morning+Doughnuts+6]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/02/23/Morning+Doughnuts+6]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>The Always-On Internet</title>
		<link>http://devhawk.net/2007/02/23/the-always-on-internet/</link>
		<pubDate>Fri, 23 Feb 2007 08:56:30 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://f1f4c251-0aff-468d-ac1e-c2068ec8cbee</guid>
		<description></description>
		<content:encoded><![CDATA[<p></p><p><em>(Harry is on a secret mission in uncharted space this week, so instead of the daily Morning Coffee post, you get a series of autoposted essays. As this post is about Web 2.0, it's obviously from fairly old from his previous role @ Microsoft.</em><em>)</em></p><p>In my <a href="http://devhawk.net/2007/02/23/The+Information+Revolution+Is+Just+Getting+Started.aspx">previous post</a>, I wrote that I thought of Web 2.0 as the latest evolution of our post-industrial society. This latest evolutionary step was enabled by ubiquitous access to the Internet. We’ve come a long way on that front in just the past five years. Take for example, home networking. In 2000, less than 10% of active Internet users in the US had a broadband connection. Today, that number is <a href="http://www.websiteoptimization.com/bw/0604/">just under 70%</a>. At the same time, the consumer wireless router market has exploded. In 2000, there was no such thing as a wireless router for the consumer market. Today, you can buy a wireless router for under $100. In just under five years, consumer Internet access has evolved from being slow, intermittent and isolated to being fast, persistent and available anywhere in the home.  </p><p>In addition to home networking, we’ve seen dramatic rise in mobile computer usage. Today, <a href="http://www.computerworld.com/hardwaretopics/hardware/story/0,10801,104856,00.html">laptops are ahead desktops</a> in terms of dollar sales and are expected to move ahead of desktops in terms of unit sales by 2008. Wireless access isn’t available just in the home, but in offices and at tens of thousands of wireless hotspots worldwide. Beyond WiFi and laptops, there is the availability of third generation wireless phone networks and smart phones with built in Internet and media functionality.  </p><p>These technologies combine to provide a mobile and always-on connection to the rest of the world via the Internet that society is just beginning to leverage.  </p><p>One of the earliest examples of the effect that the always-on Internet can have society was the original <a href="http://en.wikipedia.org/wiki/Napster">Napster</a>. While Napster’s history and impact on the music industry is well documented, their peer-to-peer approach was only possible because of the availability of fast and persistent Internet access. Music files are fairly large, so Napster ran better with a fast connection. Furthermore, the availability of an always-on Internet connection enabled Napster’s peer-to-peer connections to be available even when the user was away from their computer or using it for other things. This allowed individuals to contribute to the overall Napster experience, even when they weren’t using their machine.  </p><p>The dubious legality of Napster’s business eventually led to its shutdown. But the idea of connecting users directly to other users is alive in well in legal online services such as <a href="http://www.skype.com">Skype</a> and <a href="http://www.foldershare.com/">FolderShare</a>.  </p><p>This persistent connection was the final puzzle piece that has caused a fundamental shift in computing. There’s been more processing power and storage on the edge of the network for quite a while, but it was inaccessible. We needed fast, persistent and ubiquitous network connections to make that power available. As that network bandwidth has become available, the balance of computing power has shifted from the center to the edge. Today,  </p><p>And in the Information Age, where the computing power goes, society will follow.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>894</wp:post_id>
		<wp:post_date>2007-02-23 08:56:30</wp:post_date>
		<wp:post_date_gmt>2007-02-23 08:56:30</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>the-always-on-internet</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<category domain="post_tag" nicename="web-2-0"><![CDATA[Web 2.0]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[f1f4c251-0aff-468d-ac1e-c2068ec8cbee]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[The+AlwaysOn+Internet]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/02/23/The+AlwaysOn+Internet]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>The Information Revolution Is Just Getting Started</title>
		<link>http://devhawk.net/2007/02/23/the-information-revolution-is-just-getting-started/</link>
		<pubDate>Fri, 23 Feb 2007 08:53:23 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://0a9dc7db-77a4-4d8c-bf8b-f8dbd48b5686</guid>
		<description></description>
		<content:encoded><![CDATA[<p></p><p><em>(Harry is on a secret mission in uncharted space this week, so instead of the daily Morning Coffee post, you get a series of autoposted essays. As this post is about Web 2.0, it's obviously from fairly old from his previous role @ Microsoft.</em><em>)</em></p><p>A friend of mine is doing some research into Internet topics, including Web 2.0. After reading dozens of articles each with a different definition, she asked me to sum up Web 2.0 in thirty seconds or less.  </p><p><em><strong>Web 2.0 is the latest evolution of our post-industrial society, driven primarily by the ubiquitous access of Internet connected computing devices.</strong></em></p><p>Got it down to just one sentence and it only takes about fifteen seconds to say. The critical thing to notice about that statement is what it doesn’t include:  </p><ul><li>No mention of specific technology outside of “Internet” and “computing devices”. That means no acronym laden techno-babble such as AJAX, REST, SOAP or XML.  </li><li>No mention of a specific platform or vendor. That means no references to Microsoft, Google, IBM, Yahoo, Sun or Apple. Likewise, there’s no mention of open source software projects like Linux, Apache or Ruby on Rails.  </li><li>No mention of <a href="http://www.oreillynet.com/pub/a/oreilly/tim/news/2005/09/30/what-is-web-20.html">Tim O’Reilly’s principles of Web 2.0</a>. That means no web as platform, harnessing collective intelligence or the end of the software release cycle</li></ul><p>This isn’t to say these technologies, platform vendors and principles aren’t important. They are. However, they aren’t what are happening; they are only pieces of the bigger picture. Exploring these individually without understanding the larger context is like the <a href="http://en.wikisource.org/wiki/The_Blindmen_and_the_Elephant">Blindmen and the Elephant</a>.  </p><p>I’ve recently been reading Alvin Toffler’s <a href="http://www.toffler.com/thetofflers/books/books_the_third_wave.shtml">The Third Wave</a>. It’s fascinating to read a book about the future that was written twenty five years ago. His opinion is that the industrial age peaked in the mid 1950’s and that the post-industrial age has been building steam ever since. Not coincidently in my opinion, the late fifties saw the first transistor based computers as well as the earliest work on computer networking. It is because of this intertwined history that this post-industrial age is often called the Information Age.  </p><p>While it’s been building for half a century, the Information Age is only just getting started when it comes to remaking society. Over the course of three centuries, the Industrial Age saw rise to societal concepts such as the nuclear family, the school system and the corporation. It created the role of the bureaucrat. It separated the producers and consumers, giving rise to the idea of the market. It changed our view of the universe by precisely defining units of time and space. It got its energy from non-renewable sources, such as fossil fuels. In short, the Industrial Age completely remade the world. The Information Age will have equally far reaching effects before it’s done. I believe Web 2.0 is the next step in this evolution.  </p><p>Toffler identified six principles of the Industrial Age: Standardization, Specialization, Synchronization, Centralization, Maximization and Concentration. The relevance of each of these principles is dropping rapidly as we shift out the Industrial Age. For example, weblogs represent a massive de-centralization of the news media. Online retailers like Amazon.com replaced the standardized shopping experience with a personalized one. Digital video recorders and online video sharing sites eliminate the synchronization of broadcast TV.  </p><p>For each principle of the Industrial Age, there are examples of Web 2.0 companies working against it.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>895</wp:post_id>
		<wp:post_date>2007-02-23 08:53:23</wp:post_date>
		<wp:post_date_gmt>2007-02-23 08:53:23</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>the-information-revolution-is-just-getting-started</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<category domain="post_tag" nicename="web-2-0"><![CDATA[Web 2.0]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[0a9dc7db-77a4-4d8c-bf8b-f8dbd48b5686]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[The+Information+Revolution+Is+Just+Getting+Started]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/02/23/The+Information+Revolution+Is+Just+Getting+Started]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Vacation Coffee</title>
		<link>http://devhawk.net/2007/02/26/vacation-coffee/</link>
		<pubDate>Mon, 26 Feb 2007 18:38:49 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://b1ff876b-e838-4e90-b0d2-78aa58e78a3d</guid>
		<description></description>
		<content:encoded><![CDATA[<p>After a week's vacation, I'm back in the office. I might have left with an empty inbox and newsreader, but I returned to nearly 300 emails and over 500 news items. Actually, 300 emails for a week is actually really good - most of them are in my "low priority" folder which means they are internal mailing list emails rather than things I actually have to deal with. </p><p>Major thanks to <a href="http://halfmybrain.spaces.live.com/">Dale</a> for keeping the lights on around here while I was gone. With my renewed commitment to blogging this year, I'd rather not see DevHawk "go dark" for a week while I get some R&amp;R. If you liked what Dale had to say, go <a href="http://halfmybrain.spaces.live.com/feed.rss">subscribe to his blog</a>. I hope he keeps up with his daily posts, now that he's no longer on the hook around here. </p><p>Anyway, since I have little idea what's going on in the technical blogosphere, this is a vacation wrapup instead. Normal Morning Coffee returns tomorrow.</p><ul><li>We spent a week in Southern California. Two days with my brother-in-law in Santa Barbara, two days at Disneyland and two days with my uncles in Palm Springs (with travel days between). We had a blast, but that's a lot of driving. Next vacation, we're going somewhere we don't know anybody and staying put the entire time. </li><li>My brother-in-law has three kids, including a son a few months older than Patrick and a daughter a few months younger than Riley. I've long said I would <em>never </em>move back to Cali, but seeing them all play together made me think it might be worth it. I don't have any cousins (my father was an only child and neither of my mother's two siblings had kids) so I didn't realize what a big deal it is. I think Patrick misses his cousin Jack more than he misses Disneyland.  </li><li>When I lived in LA, I used to have a season pass to Disneyland. But seeing it thru my kids' eyes made it brand new again. Our two days in "The Happiest Place on Earth" were a blast, though in retrospect we should have taken a day to rest and hang out at the pool between the two days.  </li><li>Riley's favorite ride was <a href="http://disneyland.disney.go.com/disneyland/en_US/parks/attractions/detail?name=PiratesOfTheCaribbeanAttractionPage">Pirates of the Caribbean</a> (which she calls "Yo ho ho"). My friend Brooke told Jules that little kids "natural reaction" is to hold on tight during the drops, but Riley put her little hands up and shouted "Wee!" They recently added some elements from the movies (Capt. Jack Sparrow and Davy Jones) to the ride. My wife and I were worried they were going to ruin it, but the changes were fairly small and subtle and we liked them.  </li><li>Patrick's favorite ride was <a href="http://disneyland.disney.go.com/disneyland/en_US/parks/attractions/detail?name=BuzzLightyearAttractionPage">Buzz Lightyear Astro Blasters</a> but the <a href="http://disneyland.disney.go.com/disneyland/en_US/parks/entertainment/detail?name=JediTrainingAcademyEntertainmentPage">Jedi Training Academy</a> was a close second. His Jedi training was my favorite moment at Disneyland. He got to <a href="http://soapbox.msn.com/video.aspx?vid=9914b46a-f969-4b5d-81a9-d6734d1018ba">train with a lightsaber</a> and <a href="http://soapbox.msn.com/video.aspx?vid=a029e258-7a76-4e39-a882-b44275397cd2">fight Darth Maul</a>. Here's a video clip of my young Padawan:<br /><div style="margin: 10px" align="center"><embed pluginspage="http://macromedia.com/go/getflashplayer" src="http://images.soapbox.msn.com/flash/soapbox1_1.swf" width="412" height="362" type="application/x-shockwave-flash" quality="high" wmode="transparent" flashvars="c=v&amp;v=a029e258-7a76-4e39-a882-b44275397cd2"></embed></div>The big problem with Jedi Training Academy is that they only pick a limited number of "younglings" every show. Patrick didn't get picked the first time we went, and frankly I pushed him out there the second time without him officially getting picked. You could conceivably waste an entire day at Disneyland attending all six Training Academy shows and never get picked. That sucks. </li><li>Biggest disappointment of Disneyland: Patrick being 1" too short for <a href="http://disneyland.disney.go.com/disneyland/en_US/parks/attractions/detail?name=StarToursAttractionPage">Star Tours</a>. I was bummed. </li><li><a href="http://disneyland.disney.go.com/disneyland/en_US/parks/landing?name=DisneysCaliforniaAdventureLandingPage">Disney's California Adventure</a> is a nice adjunct to Disneyland, but as a stand alone park it pretty much blows, though Jules and I did enjoy the <a href="http://disneyland.disney.go.com/disneyland/en_US/parks/attractions/detail?name=TwilightZoneTowerOfTerrorAttractionPage">Tower of Terror</a>. </li><li>Disneyland seems to becoming Disney-Pixar Land. Pixar movies are the basis for several of the newer rides, including the new <a href="http://disneyland.disney.go.com/disneyland/en_US/parks/attractions/detail?name=FindingNemoSubmarineVoyageAttractionPage">Finding Nemo ride</a> opening this summer. There was <a href="http://www.hemispheresmagazine.com/feb07/entertainthis.html">an article</a> in the Disneyland Pixar Evolution in the airplane magazine so I'm not the only one who's noticed. </li><li>After two days in Disneyland, I expected Palm Springs to be a let down. But instead it was a nice casual cool down after two hectic days in the Magic Kingdom. Plus it was great to see my Uncles, who we hadn't seen since last summer when my brother got married.  </li><li>We flew home Saturday so we could have a casual Sunday before heading back to work and school today. We watched <a href="http://www.imdb.com/title/tt0120915/">Phantom Menace</a> last night, though the kids are still a bit young for it. We decided on Episode I instead of the original <a href="http://www.imdb.com/title/tt0076759/">Star Wars</a> because it has a little boy (i.e. like Patrick) and a fight with Darth Maul (i.e. like Patrick). But it doesn't hold a candle to the original trilogy.</li></ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>896</wp:post_id>
		<wp:post_date>2007-02-26 10:38:49</wp:post_date>
		<wp:post_date_gmt>2007-02-26 18:38:49</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>vacation-coffee</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="entertainment"><![CDATA[Entertainment]]></category>
		<category domain="post_tag" nicename="family"><![CDATA[Family]]></category>
		<category domain="category" nicename="personal"><![CDATA[Personal]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[b1ff876b-e838-4e90-b0d2-78aa58e78a3d]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Vacation+Coffee]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/02/26/Vacation+Coffee]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Morning Coffee 34</title>
		<link>http://devhawk.net/2007/02/27/morning-coffee-34/</link>
		<pubDate>Tue, 27 Feb 2007 10:24:34 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://1d38471e-b2e0-43d1-8049-48a26350d675</guid>
		<description></description>
		<content:encoded><![CDATA[<ul><li>Old news, but <a href="http://www.aisto.com/roeder/dotnet">Reflector 5.0</a> is out. W00t! Not sure when <a href="http://www.hanselman.com/blog/">Scott Hansleman</a> became chief Reflector cheerleader, but he's <a href="http://www.hanselman.com/blog/Reflector5ReleasedWorldDominationAssured.aspx">got the rundown</a> on the new features. </li><li>Politics 2.0 Watch: <a href="http://www.opencongress.org/">OpenCongress</a>. Sort of like Wikipedia for government. If we can disseminate information on <a href="http://www.opencongress.org/bill/all">bills and resolutions</a> via the Internet, couldn't we collect votes on them as well? </li><li>I got my hardcopy of <a href="http://www.manning.com/payette/">Powershell in Action</a> while I was on vacation. Highly recommended.</li><li>Sam Gentle is starting to dig into WF, and <a href="http://codebetter.com/blogs/sam.gentile/archive/2007/02/24/Windows-Workflow-101-or-2-Months-with-WF.aspx">he posts</a> about the difficulty getting data in and out of workflows. He's using the <a href="http://msdn2.microsoft.com/en-us/library/ms735924.aspx">ExternalDataService infrastructure</a> which I don't like very much. I recommend getting friendly with the <a href="http://msdn2.microsoft.com/en-us/library/system.workflow.runtime.workflowqueuingservice.aspx">WorkflowQueuingService</a> which is the low-level communication infrastructure that ExternalDataService builds on top of. The WQS docs are severely lacking, but it's fairly straight forward to figure out.</li><li>Speaking of WF, Tomas Restpro <a href="http://www.winterdom.com/weblog/2007/02/26/ProgrammingWindowsWorkflowFoundation.aspx">reviews</a><a href="http://www.amazon.com/Programming-Windows-Workflow-Foundation-Techniques/dp/1904811213">Programming WF</a>. Sounds fairly introductory. Personally, <a href="http://www.amazon.com/Essential-Workflow-Foundation-Microsoft-Development/dp/0321399838">Essential WF</a> is one of the best tech books I've read in a long time, so I'll be skipping this book.</li><li>My teammate Dale is <a href="http://halfmybrain.spaces.live.com/Blog/cns!DF6CA820250998D2!349.entry">continuing his daily posts</a> on his blog.</li><li>Joe McKendrick wonders if <a href="http://blogs.zdnet.com/service-oriented/?p=821">EDA is the new SOA</a>. Frankly, both terms are so poorly defined that it's hard to determine exactly what each term means, much less how they're related. If you're an IT industry analyst, you probably can make a ton of cash <a href="http://soa-eda.blogspot.com/2006/11/how-eda-extends-soa-and-why-it-is.html">describing the differences between them</a>. Maybe it's me, but I don't see that much value in SOA <em>without </em>EDA. In fact, I'd go so far as to say service orientation without events isn't much a new architecture paradigm at all. It's just the Same Old Architecture with better support for interop. </li></ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>897</wp:post_id>
		<wp:post_date>2007-02-27 10:24:34</wp:post_date>
		<wp:post_date_gmt>2007-02-27 10:24:34</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>morning-coffee-34</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="morning-coffee"><![CDATA[Morning Coffee]]></category>
		<category domain="post_tag" nicename="soa"><![CDATA[SOA]]></category>
		<category domain="post_tag" nicename="wf"><![CDATA[WF]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[1d38471e-b2e0-43d1-8049-48a26350d675]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Morning+Coffee+34]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/02/27/Morning+Coffee+34]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Morning Coffee 35</title>
		<link>http://devhawk.net/2007/02/28/morning-coffee-35/</link>
		<pubDate>Wed, 28 Feb 2007 10:57:57 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://ff384a96-07af-4a7c-9d41-145cfd87aef9</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Not sure why, but it's a very slow day in the blogoshpere</p><ul><li>Quote of the Day: "I get paid for people to tell me I'm full of shit" - <a href="http://blogs.msdn.com/nickmalik">Nick Malik</a></li><li>The Architecture Journal has a new <a href="http://msdn2.microsoft.com/arcjournal">website</a>. Looks very cool. I might have blogged this before, but <a href="http://msdn2.microsoft.com/arcjournal/bb232818.aspx">Journal 10</a> is about composite applications.  </li><li>Latest <a href="http://www.microsoft.com/downloads/details.aspx?familyid=cf76fcba-07af-47ac-8822-4ad346210670">CTP drop of Orcas</a> is out (downloadable VPC is <a href="http://www.microsoft.com/downloads/details.aspx?familyid=b533619a-0008-4dd6-9ed1-47d482683c78">here</a>). I'm glad DevDiv is providing this level of transparency, but I'm waiting for Beta 1. (via <a href="http://codebetter.com/blogs/sam.gentile/archive/2007/02/28/It_2700_s-Out_21002100_-Code-Name-_2200_Orcas_2200_-_2D00_-March-Community-Technology-Preview-_2800_CTP_2900_.aspx">Sam Gentile</a>)  </li><li>Here's a chance to try out <a href="http://www.opencongress.org">OpenCongress</a>: HR 1201, the "Freedom and Innovation Revitalizing U.S. Entrepreneurship" (or FAIR USE) Act <a href="http://blog.washingtonpost.com/posttech/2007/02/digital_fair_use_bill_introduc.html">which will dials back DCMA</a> though Ars Technica is <a href="http://arstechnica.com/news.ars/post/20070227-8934.html">not impressed</a>. It's not on OpenCongress yet, but you should eventually be able to track FAIR USE <a href="http://www.opencongress.org/bill/110-h1201/show">here</a>.  </li><li>Two months into 2007 and I seem to be keeping with my average of one post a day. 28 days in February has resulted in 29 posts (and the day ain't over yet!). Of course, this month some of the credit goes to <a href="http://halfmybrain.spaces.live.com/">Dale</a> for keeping things going while I vacationed.</li></ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>898</wp:post_id>
		<wp:post_date>2007-02-28 10:57:57</wp:post_date>
		<wp:post_date_gmt>2007-02-28 10:57:57</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>morning-coffee-35</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="morning-coffee"><![CDATA[Morning Coffee]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[ff384a96-07af-4a7c-9d41-145cfd87aef9]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Morning+Coffee+35]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/02/28/Morning+Coffee+35]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>(Late) Morning Coffee 36</title>
		<link>http://devhawk.net/2007/03/01/late-morning-coffee-36/</link>
		<pubDate>Thu, 01 Mar 2007 12:06:47 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://b92f96e2-0232-4854-8aa8-6b14679e9670</guid>
		<description></description>
		<content:encoded><![CDATA[<ul><li>It snowed <em>again</em> yesterday. Last year we had one snowstorm, the year before that none. We've now had I think five this year plus the massive windstorm that knocked out power for days.</li><li>Technorati told me that "social news aggregator" Megite is <a href="http://www.megite.com/technology/1170964019/41">linking to me</a>. For some reason, <a href="http://devhawk.net/2007/02/07/Perusing+Powershell+Part+2+Error+Or+No+Output.aspx">this post of mine</a> on Powershell is considered related to "<a href="http://www.strumpette.com/archives/300-Is-PR-Too-Stupid-for-Conversational-Marketing.html">Is PR Too Stupid for Conversational Marketing?</a>" from <a href="http://www.strumpette.com/">Amanda Chapel</a>. Seems like Megite has some bugs to work out.</li><li>Paul Andrew <a href="http://blogs.msdn.com/pandrew/archive/2007/02/25/Microsoft-provides-BPEL-2.0-in-WF-_2D00_-BPEL-for-Windows-Workflow-Foundation-March-CTP.aspx">announces</a> BPEL support for WF but David Chappel <a href="http://www.davidchappell.com/blog/2007/02/windows-workflow-foundation-and-bpel.html">writes</a> "no one should interpret the announcement as an embrace of BPEL-based development by Microsoft". Personally, I think BPEL is just the latest attempt at "write once, run anywhere" and will meet with the same limited success of previous attempts. The last thing I think MSFT should do is embrace BPEL based development.</li><li>BPEL actually has two flavors, Executable and Abstract. Abstract BPEL is potentially fairly useful. You could use to exchange of the publicly viewable parts of a process with a partner in order to make two processes work together. That's fairly exciting. I would welcome Abstract BPEL support for WF and/or BTS. But as far as I can tell, most of the BPEL focus has been around Executable BPEL, which as I wrote above is attempting to be a platform independent language for implementing business process. That's fairly unexciting since we've been down this road before many times (UNIX, CORBA, J2EE) and it has never worked out. </li><li>Soma <a href="http://blogs.msdn.com/somasegar/archive/2007/03/01/beginner-developer-learning-center-launched.aspx">announces</a> the launch of the <a href="http://msdn.microsoft.com/vstudio/express/beginner/">Beginner Developer Learning Center</a>. It includes <a href="http://msdn.microsoft.com/vstudio/express/beginner/kids/">Kid's Corner</a> with the cutely named <a href="http://msdn.microsoft.com/vstudio/express/beginner/kids/csharp">C# for Sharp Kids</a> and <a href="http://msdn.microsoft.com/vstudio/express/beginner/kids/vb">VB for Very Bright Kids</a> e-books. Very cool, I can't wait to share this with my kids in a few years. Only complaint: where's the <a href="http://msdn2.microsoft.com/xna/">XNA</a> love?</li></ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>899</wp:post_id>
		<wp:post_date>2007-03-01 12:06:47</wp:post_date>
		<wp:post_date_gmt>2007-03-01 12:06:47</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>late-morning-coffee-36</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="education"><![CDATA[Education]]></category>
		<category domain="category" nicename="morning-coffee"><![CDATA[Morning Coffee]]></category>
		<category domain="post_tag" nicename="wf"><![CDATA[WF]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[b92f96e2-0232-4854-8aa8-6b14679e9670]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Late+Morning+Coffee+36]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/03/01/Late+Morning+Coffee+36]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Morning Coffee 37</title>
		<link>http://devhawk.net/2007/03/02/morning-coffee-37/</link>
		<pubDate>Fri, 02 Mar 2007 11:01:35 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://56fd0702-52dd-4050-a8eb-fc0f520a9380</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Has it been a slow week for everyone, or just me my first week back from vacation?</p><ul><li>I got email last night from Pat Helland - he's re-taking the red pill. He starts in the developer division on Monday. He asked for my help getting is <a href="http://www.pathelland.com/">website</a> up to date, so look for that in the near future. In the meantime, revisit some of Pat's hits: <a href="http://www.pathelland.com/presentations/2004/powerpoint/040528-Helland-05-28-2004-02a.ppt">Metropolis</a>, <a href="http://msdn2.microsoft.com/en-us/library/ms954587.aspx">Data on the Inside vs. Data on the Outside</a>, <a href="javascript:ShowWindow('http://msdn.microsoft.com/seminar/shared/asp/view.asp?url=/architecture/media/en/nerdsuitfortune/manifest.xml ');">The Nerd, the Suit, and the Fortune Teller</a> and his greatest hit <a href="http://channel9.msdn.com/ShowPost.aspx?PostID=11950">Mr. CIO Guy</a>.</li><li>The new <a href="http://www.microsoft.com/downloads/details.aspx?FamilyID=51a5c65b-c020-4e08-8ac0-3eb9c06996f4&amp;DisplayLang=en">4.0 version</a> of the Visual Studio 2005 SDK is out. Details on <a href="http://blogs.msdn.com/jameslau/archive/2007/03/01/vs-2005-sdk-4-0-rtm-is-here.aspx">James' vs.Eco blog</a>.</li><li>Next week is the <a href="http://www.gdconf.com/">Game Developers Conference</a>. About a month ago, Dave Weller wrote that he had "<a href="http://letskilldave.com/archive/2007/02/05/Amazing-XNA-game-video_2E002E002E00_.aspx">been busy</a>" and the XNA <a href="http://blogs.msdn.com/xna/">team blog</a> has also been fairly silent. I have no inside information on this, but given that last years GDC was the first time we showed managed code running on an Xbox 360, the time is nigh for XNA announcements.</li></ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>900</wp:post_id>
		<wp:post_date>2007-03-02 11:01:35</wp:post_date>
		<wp:post_date_gmt>2007-03-02 11:01:35</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>morning-coffee-37</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="morning-coffee"><![CDATA[Morning Coffee]]></category>
		<category domain="post_tag" nicename="working-at-msft"><![CDATA[Working at MSFT]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[56fd0702-52dd-4050-a8eb-fc0f520a9380]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Morning+Coffee+37]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/03/02/Morning+Coffee+37]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Breaking News: TechFest 2007 Keynote</title>
		<link>http://devhawk.net/2007/03/05/breaking-news-techfest-2007-keynote/</link>
		<pubDate>Mon, 05 Mar 2007 11:24:50 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://0b95bedc-09ef-4db9-a468-a95f85a4fc20</guid>
		<description></description>
		<content:encoded><![CDATA[<p>I was going to wait until tomorrow's Morning Coffee to post about <a href="http://research.microsoft.com/news/featurestories/publish/TechFest_2007.aspx">TechFest 2007</a>, but I just realized that <a href="http://research.microsoft.com/aboutmsr/presskit/rashid/">Rick Rashid's</a> keynote will be <a href="http://research.microsoft.com/techfest/">webcast publicly tomorrow</a> at 9:30 am Pacific time. I don't ever get my Morning Coffee post out that early, so I figured I'd give my readers the heads up now.</p><p>From the <a href="http://research.microsoft.com/techfest/">TechFest</a> website:</p><blockquote><p>Microsoft Research TechFest provides a strategic forum for Microsoft researchers to connect with the broader group of Microsoft employees and product managers. Hundreds of researchers from Microsoft’s worldwide labs in China, England, India and the US gather for the annual event at the company’s corporate headquarters in Redmond, Washington. They come together to exchange ideas with colleagues, show off their latest innovations, and shine a light into the future of computing. In many cases, the partnerships formed at TechFest between researchers and product teams allow innovations to begin making their way into game-changing products for Microsoft customers.</p></blockquote><p>I've been to every TechFest so far, even the first one when I lived in L.A. (got special permission my my manager to come up for it) and the one where I was on paternity leave after Patrick was born (got special permission from my wife to be leave her alone with a three week old). This one is no different. In fact, I think my whole team is going up on Wednesday. </p><p>Last week was been slow, but with GDC and TechFest I'm thinking this week will be much more lively.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>901</wp:post_id>
		<wp:post_date>2007-03-05 11:24:50</wp:post_date>
		<wp:post_date_gmt>2007-03-05 11:24:50</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>breaking-news-techfest-2007-keynote</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="microsoft"><![CDATA[Microsoft]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[0b95bedc-09ef-4db9-a468-a95f85a4fc20]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Breaking+News+TechFest+2007+Keynote]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/03/05/Breaking+News+TechFest+2007+Keynote]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Morning Coffee 38</title>
		<link>http://devhawk.net/2007/03/05/morning-coffee-38/</link>
		<pubDate>Mon, 05 Mar 2007 10:22:34 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://975aefc3-e2df-45f9-9dc5-5258ea7e9351</guid>
		<description></description>
		<content:encoded><![CDATA[<ul><li>As predicted, the XNA guys had a <a href="http://blogs.msdn.com/xna/archive/2007/03/04/it-s-time-once-more-for-the-game-developer-conference-gdc-and-we-ve-got-a-lot-of-exciting-news-to-share.aspx">bunch of news to announce</a> at GDC. They launched the <a href="http://creators.xna.com/">XNA Creators Club Online</a> with <a href="http://creators.xna.com/education/samples.aspx">samples</a>, <a href="http://creators.xna.com/forums/default.aspx">forums</a> and a new <a href="http://creators.xna.com/Education/StarterKits.aspx">starter kit</a>. Also they announced some cool <a href="http://creators.xna.com/Resources/Partners.aspx">partnerships</a> for Creators Club Premium members (aka the folks who paid $99 a year to be able to run code on their Xbox 360) including access to the highly anticipated <a href="http://www.garagegames.com/products/torque/x/">Torque X Engine</a>.</li><li>From Don Syme, we here that the new 1.9 version of F# is <a href="http://blogs.msdn.com/dsyme/archive/2007/03/04/f-1-9-almost-ready.aspx">almost ready</a>. When I <a href="http://devhawk.net/2007/02/06/Morning+Coffee+25.aspx">shifted</a> from learning F# to learning PowerShell, it wasn't because of a sudden lack of interest in F#, so I'm glad to see them still chugging along. And by the time they release 2.0 later this year, I hope to have learned enough PowerShell that I can spend some time focusing on learning F#.</li><li>Apparently <a href="http://channel9.msdn.com/Showpost.aspx?postid=161254">Jenny Lam</a> at Microsoft reviewed more than <a href="http://weblogs.asp.net/lduveau/archive/2007/02/26/amazing-vista-wallpapers.aspx">10,000 images</a> to pick the new Vista Wallpapers. Not sure if I would love or hate that job. But some that didn't make the cut are <a href="http://www.flickr.com/photos/darwishh/sets/72157594510047657/">available online</a>. (via <a href="http://www.dotnetkicks.com/vista/Amazing_Vista_Wallpapers">DotNetKicks</a>)</li><li>Tomas Restrepo <a href="http://www.winterdom.com/weblog/2007/03/05/TextEditors.aspx">reviews</a> a number of lightweight, syntax-highlighting text editors. Personally, I like <a href="http://www.flos-freeware.ch/notepad2.html">Notepad2</a>, but as Tomas mentions there's no way to save your settings. Also, there's no way to add new syntax highlighting without recompiling it. For example, Wesner Moise compiled a version that added Ruby syntax. I really want a version that that supports PowerShell. Maybe it's time to give <a href="http://notepad-plus.sourceforge.net/">Notepad++</a> a closer look</li><li>Dale has some new <a href="http://halfmybrain.spaces.live.com/Blog/cns!DF6CA820250998D2!360.entry">SOAhlocis Anonymous shirts</a> available.</li><li>Jeff Atwood <a href="http://www.codinghorror.com/blog/archives/000801.html">discovers</a> that the French acronym for object oriented programming is POO. </li></ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>902</wp:post_id>
		<wp:post_date>2007-03-05 10:22:34</wp:post_date>
		<wp:post_date_gmt>2007-03-05 10:22:34</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>morning-coffee-38</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="development"><![CDATA[Development]]></category>
		<category domain="post_tag" nicename="lanugages"><![CDATA[Lanugages]]></category>
		<category domain="category" nicename="morning-coffee"><![CDATA[Morning Coffee]]></category>
		<category domain="post_tag" nicename="xbox-360"><![CDATA[Xbox 360]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[975aefc3-e2df-45f9-9dc5-5258ea7e9351]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Morning+Coffee+38]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/03/05/Morning+Coffee+38]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Morning Coffee 39</title>
		<link>http://devhawk.net/2007/03/06/morning-coffee-39/</link>
		<pubDate>Tue, 06 Mar 2007 09:55:19 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://4c623b50-6a5d-494b-8673-fe4d00b908ea</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Short one today as I'm prepping for a presentation I'm delivering later this morning.</p><ul><li>The US Patent &amp; Trademark is going to pilot <a href="http://www.washingtonpost.com/wp-dyn/content/article/2007/03/04/AR2007030401263.html">posting patent applications online</a>. Microsoft is one of the pilot companies. Given how broken the patent process is these days (note, my opinion - not my employers) nice to see at least small steps to solving the problem. (via <a href="http://www.washingtonmonthly.com/archives/individual/2007_03/010859.php">Political Animal</a>)  </li><li>Joe McKendrick <a href="http://blogs.zdnet.com/service-oriented/?p=825">coins the term</a> "intrapreneurial" talking about SOA and SaaS. I like it.  </li><li>Xbox Live <a href="http://gamerscoreblog.com/team/archive/2007/03/06/542176.aspx">reaches six million members</a> four months earlier than expected. Congrats!</li></ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>903</wp:post_id>
		<wp:post_date>2007-03-06 09:55:19</wp:post_date>
		<wp:post_date_gmt>2007-03-06 09:55:19</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>morning-coffee-39</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="morning-coffee"><![CDATA[Morning Coffee]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[4c623b50-6a5d-494b-8673-fe4d00b908ea]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Morning+Coffee+39]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/03/06/Morning+Coffee+39]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>The Virtuous Cycle of Virtual Platforms</title>
		<link>http://devhawk.net/2007/03/06/the-virtuous-cycle-of-virtual-platforms/</link>
		<pubDate>Tue, 06 Mar 2007 15:07:22 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://352dbd9d-91a6-4f61-875e-7b38538742ee</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Dare is <a href="http://www.25hoursaday.com/weblog/PermaLink.aspx?guid=11c471d6-ea65-4ed2-b387-c9ec966d8418">thinking about</a> what comes after AJAX, building on Ted Leung's post "<a href="http://www.sauria.com/blog/2007/03/01/adobe-wants-to-be-the-microsoft-of-the-web/">Adobe wants to be Microsoft of the Web</a>". He mentions three things that any Rich Internet Application (aka RIA) platform needs to have: ubiquity, a consistent debugging experience and a continuum of dev tools. I agree 100% with the need for a good debugging experience and dev tools. But RIA platforms like Flash and WPF/E aren't traditional platforms, they're virtual platforms. (or should I say Platforms 2.0?) It turns out ubiquity and market penetration of virtual platforms is a lot less important than you might think.</p><p>At first glance, Flash Player's <a href="http://www.adobe.com/products/player_census/flashplayer/">98% market penetration</a> appears to be demonstrating the typical virtuous circle of platforms. The more people that have the platform, the more software written for it; the more software written for a platform, the more people get it. But the traditional view of virtuous circles assumes that switching platforms requires significant investment of time and money. The vast majority of non-geek users commit to a platform at the time of purchase. </p><p>However, Virtual platforms such as CLR, JVM, Flash not to mention the browser itself (aka AJAX) don’t conform to the traditional virtuous circle of platforms. Installing a virtual platform isn’t a “buy a new machine” proposition or even a “pave and rebuild”. At worst, in the case of CLR, it’s fifteen minutes to download and install followed by a reboot. At best, in the case of Flash, it’s two minutes to download and install with no reboot. That means the end user has made little to no commitment to virtual platform itself, either in terms of time or money. Furthermore, the user isn’t forced to choose between different virtual platforms. You can install CLR, JVM, Flash as well as multiple browsers on your machine side by side without conflict.</p><p>Think about the install process for a new version of Flash, especially from the perspective of a non-geek. They visit a site, it pops up a dialog saying “you need the latest version of Flash, go here to get it”. Even if the average user doesn’t understand what Flash is or does, they can click on the link. They are redirected to the Adobe site, Flash installs very quickly, and the user goes back to what they were doing and most likely forgets the entire install experience. Because no money changes hands and it takes almost no time, installing the Flash virtual platform requires zero commitment from the user.</p><p>Existing user install base is much less important when adding new users requires zero commitment. You can see this is happening with Flash by looking at its <a href="http://www.adobe.com/products/player_census/flashplayer/version_penetration.html">version specific market penetration</a>. Flash Player 9 has reached around 55% market penetration in just over six months since it was released. Flash is not seeing the “compete with the previous version” effect that is prevalent with traditional platforms like Windows. I believe this is because users don't need to make any real commitment to Flash. When a new version of Flash is released, the user is presented with the same install process which they just go thru again without even realizing they've done it before. </p><p>If the end user isn’t committed to a virtual platform like Flash, then who is? The developers who build software for that virtual platform. This is Virtuous Cycle of Virtual Platforms between the platform and developers instead of the platform and users. In the old model, developers go where the users are. In the new model, users go to where developers are. And developers go where they can be most effective. </p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>904</wp:post_id>
		<wp:post_date>2007-03-06 15:07:22</wp:post_date>
		<wp:post_date_gmt>2007-03-06 15:07:22</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>the-virtuous-cycle-of-virtual-platforms</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<category domain="post_tag" nicename="web-2-0"><![CDATA[Web 2.0]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[352dbd9d-91a6-4f61-875e-7b38538742ee]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[The+Virtuous+Cycle+Of+Virtual+Platforms]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/03/06/The+Virtuous+Cycle+Of+Virtual+Platforms]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Morning Coffee 40</title>
		<link>http://devhawk.net/2007/03/07/morning-coffee-40/</link>
		<pubDate>Wed, 07 Mar 2007 11:28:11 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://f9d5aa9d-fd16-49dc-8802-ef8007cc2977</guid>
		<description></description>
		<content:encoded><![CDATA[<ul><li>My boss let me borrow a Tecra M4 that he scavenged from his boss. The display is fairly twitchy, I think it's a motherboard issue. But it's very intermittent and I'll get help desk to take a look. In the meantime, it sure is nice to driving a Tablet PC again. And it's Vista ready to boot.  </li><li>Speaking of Vista, Visual Studio 2005 Service Pack 1 Update for Windows Vista. It's a mouthful but it's <a href="http://www.microsoft.com/downloads/details.aspx?familyid=90E2942D-3AD1-4873-A2EE-4ACC0AACE5B6&amp;displaylang=en">now available</a>. Soma <a href="http://www.microsoft.com/presspass/features/2007/mar07/03-06VisualStudio.mspx">answers questions</a> about the new release on MS PressPass. </li><li>The DSL tools team keeps on rolling with the power toys. First it was the <a href="http://www.microsoft.com/downloads/details.aspx?FamilyID=bfba74af-4f28-44cc-8de5-0c3c55d21863&amp;displaylang=en">Designer Integration PowerToy</a>, now it's the <a href="http://www.codeplex.com/dsltreegrideditor">DSL Tree Grid Editor PowerToy</a>. Jeff Santos <a href="http://blogs.msdn.com/jezzsa/archive/2007/03/01/dsl-user-experience-powertoy.aspx">has the details</a>. </li><li>I missed the TechFest keynote yesterday, but it's <a href="http://research.microsoft.com/techfest/">available on demand</a>. They also have <a href="http://research.microsoft.com/techfest/demos.aspx">descriptions</a> and <a href="http://research.microsoft.com/techfest/videos/default.aspx">videos</a> of some of the technologies on display. (well, only one video so far, but I assume since the page is labeled "TechFest 2007 Videos" that more are on the way.)  </li><li>There's new support for integrating WCF and WF coming in VS "Orcas". Moustafa Khalil Ahmed <a href="http://blogs.msdn.com/moustafa/archive/2007/03/04/visual-studio-orcasand-wf-wcf-rules-changes.aspx">has the details</a> on what's new for WF &amp; WCF in the latest CTP drop. For me personally, the WCF/WF integration is some of the most important stuff coming in Orcas, second only to LINQ.</li></ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>905</wp:post_id>
		<wp:post_date>2007-03-07 11:28:11</wp:post_date>
		<wp:post_date_gmt>2007-03-07 11:28:11</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>morning-coffee-40</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="domain-specific-languages"><![CDATA[Domain Specific Languages]]></category>
		<category domain="post_tag" nicename="microsoft"><![CDATA[Microsoft]]></category>
		<category domain="category" nicename="morning-coffee"><![CDATA[Morning Coffee]]></category>
		<category domain="post_tag" nicename="wcf"><![CDATA[WCF]]></category>
		<category domain="post_tag" nicename="wf"><![CDATA[WF]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[f9d5aa9d-fd16-49dc-8802-ef8007cc2977]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Morning+Coffee+40]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/03/07/Morning+Coffee+40]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Morning Coffee 41 - TechFest Edition</title>
		<link>http://devhawk.net/2007/03/08/morning-coffee-41-techfest-edition/</link>
		<pubDate>Thu, 08 Mar 2007 10:53:39 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://15853ee1-5809-4898-89b5-68083fc17554</guid>
		<description></description>
		<content:encoded><![CDATA[<p>As promised, I spent about half of yesterday at TechFest. Ran into some folks I knew, met some new folks, the usual social networking stew of these sorts of events. Here's some of the stuff I saw. Much of the stuff I saw wasn't public, but everything below has either a public MSR page or a brief description on the <a href="http://research.microsoft.com/techfest/demos.aspx">TechFest demo page</a>.</p><ul><li><a href="http://research.microsoft.com/projects/SecPAL/">SecPAL</a> - easily the most work-applicable demo I saw. SecPAL stands for "Security Policy Assertion Language". It's a language for expressing distributed authorization policies. We're looking at authorization policies in the next phase of my MSIT project, so this was very timely.</li><li><a href="http://research.microsoft.com/vision/cambridge/3dvideo/">3D Video</a> - Take a garden variety video shot with a camcorder and add computer generated 3D objects into the scene automatically. I actually saw this last year, but this year they've added automatic occlusion. In other words, it automatically calculates when a real-world object passes in front of the computer generated object and renders accordingly. Check out <a href="http://research.microsoft.com/vision/cambridge/3dvideo/TechFest_Shadow_InDepth.wmv">this video</a>. This would be great for creating synthetic characters Jar-Jar Binks style (though hopefully less annoying)</li><li>Boku: Lightweight Programming for Kids - Sort of like LOGO, except beautifully rendered 3D, running on the Xbox 360 and programmed using an Xbox 360 game controller. Patrick's not quite ready for this - Riley even less so - but I'll be keeping an eye on this. </li><li><a href="http://research.microsoft.com/fsharp">F#</a> - nothing really new here, but I got to meet Don Syme in person.</li><li>Telescopic Pixel - Sort of like an LED screen but using significantly less energy efficient and faster.</li><li>Podcast Authoring using Speech Recognition - Instead of the standard waveform view of recorded audio, this app feeds the spoken words thru the Microsoft speech recognition engine and allows the user to crop the audio simply by selecting words. Not mind blowing technology like some of the other stuff I saw, but certainly an interesting combination of technologies.</li><li><a href="http://research.microsoft.com/research/pubs/view.aspx?type=Technical%20Report&amp;id=1160">Smart Workflow Foundation</a> - Adding constraint solving capabilities to WF. Must noodle on this.</li></ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>906</wp:post_id>
		<wp:post_date>2007-03-08 10:53:39</wp:post_date>
		<wp:post_date_gmt>2007-03-08 10:53:39</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>morning-coffee-41-techfest-edition</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="microsoft"><![CDATA[Microsoft]]></category>
		<category domain="category" nicename="morning-coffee"><![CDATA[Morning Coffee]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[15853ee1-5809-4898-89b5-68083fc17554]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Morning+Coffee+41+TechFest+Edition]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/03/08/Morning+Coffee+41+TechFest+Edition]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Morning Coffee 42</title>
		<link>http://devhawk.net/2007/03/09/morning-coffee-42/</link>
		<pubDate>Fri, 09 Mar 2007 11:05:41 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://4d56eb7f-e896-4c6b-ae2e-4fbe89ce500c</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Ever since I got back from vacation, it's been all about the Morning Coffee. I'm happy to be getting a daily post out, but I haven't written anything deep in several weeks now. My one non-MC post in the past two weeks was <a href="http://devhawk.net/2007/03/06/The+Virtuous+Cycle+Of+Virtual+Platforms.aspx">The Virtuous Cycle of Virtual Platforms</a> which frankly I wrote over a year ago for internal usage and adapted for my blog after reading <a href="http://www.25hoursaday.com/weblog/PermaLink.aspx?guid=11c471d6-ea65-4ed2-b387-c9ec966d8418">Dare's post</a>. </p><p>One of the reasons for my lack of "deep" posting recently is post vacation re-engagement. Also, things at work that I can't blog about (yet) have been taking my attention. But I worry that this daily MC post is causing me to focus on "shallow" blog topics. Since I'm trying to average a post per day, that means at least two non-MC posts every week. Of course, more than two non-MC posts a week would be just fine.</p><ul><li>On the XNA Team Blog, Michael Klucher announces the <a href="http://blogs.msdn.com/xna/archive/2007/03/08/announcing-the-xna-game-studio-express-update.aspx">XNA Game Studio Express Update</a> is coming in April. Among the new features are Vista compatibility, 3D audio, bitmap fonts, game icons and most interesting the sharing of compiled XNA games. Currently, the only way to share something you build with XNA with the community is by sharing the source code, which is less than optimal. For more, check out the <a href="http://download.microsoft.com/download/3/0/7/307dd868-9faa-4f6f-8521-0fd5dd7f3902/xna%20game%20studio%20express.zip">XNA GSE Overview presentation</a> by <a href="http://blogs.msdn.com/mitchw/default.aspx">Mitch Walker</a> from GDC. </li><li>Speaking of gaming consoles, Sony's <a href="http://kotaku.com/gaming/gdc07/gdc07-sony-unveils-home-242332.php">"big" announcement</a> is a Second Life clone? Kotaku thinks "this is going to be one of those features that people didn't realize that wanted until they get it." Personally, I doubt that very much, but what do I know about game consoles? I just play, man.  </li><li>Jafar Husain suggests a way to do <a href="http://themechanicalbride.blogspot.com/2007/03/symbols-on-steroids-in-c.html">Ruby symbols in C# 3.0</a>. Sort of. He defines an extension method that returns the name of the property defined in a lambda function. On the plus side, it's strongly typed. On the minus side, "this.GetPropertySymbol(o =&gt; o.Name)" isn't as easy to type as ":Name". (via <a href="http://www.dotnetkicks.com/csharp/Symbols_in_C_3">DotNetKicks</a>) </li><li>While pseudo-symbol support is fairly verbose, Scott Guthrie <a href="http://weblogs.asp.net/scottgu/archive/2007/03/08/new-c-orcas-language-features-automatic-properties-object-initializers-and-collection-initializers.aspx">goes thru</a> some of the new language features for terser syntax: automatic properties, object initializes and collection initializes. While I like object and collection initializes, I'm not really sold on automatic properties. Personally, I like the VS prop snippet approach, where you automate the creation of the property once time when it's authored rather than leaving the shortcut syntax in the code in perpetuity. </li></ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>907</wp:post_id>
		<wp:post_date>2007-03-09 11:05:41</wp:post_date>
		<wp:post_date_gmt>2007-03-09 11:05:41</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>morning-coffee-42</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="c-sharp"><![CDATA[C#]]></category>
		<category domain="category" nicename="morning-coffee"><![CDATA[Morning Coffee]]></category>
		<category domain="post_tag" nicename="xbox-360"><![CDATA[Xbox 360]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[4d56eb7f-e896-4c6b-ae2e-4fbe89ce500c]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Morning+Coffee+42]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/03/09/Morning+Coffee+42]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>2461</wp:comment_id>
			<wp:comment_author><![CDATA[MadTechie]]></wp:comment_author>
			<wp:comment_author_email>JasonBeaudreau@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.madtechie.com/</wp:comment_author_url>
			<wp:comment_author_IP>71.123.208.136</wp:comment_author_IP>
			<wp:comment_date>2007-03-14 21:31:40</wp:comment_date>
			<wp:comment_date_gmt>2007-03-15 04:31:40</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Harry:

Regarding shallow posting...sometimes that is exactly what readers are looking for in a blog.  I like to take a break from heads down work and look around at what's happening in the community.  That's one of the reasons I like your morning coffee: light, airy, and somewhat unpredictable.

I caught your keynote in L.A. for Architect Connections and enjoyed it.

Take it easy. ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>2460</wp:comment_id>
			<wp:comment_author><![CDATA[Rob Relyea]]></wp:comment_author>
			<wp:comment_author_email>Rob.Relyea@microsoft.com</wp:comment_author_email>
			<wp:comment_author_url>http://rrelyea.spaces.live.com</wp:comment_author_url>
			<wp:comment_author_IP>24.18.206.178</wp:comment_author_IP>
			<wp:comment_date>2007-03-10 06:48:51</wp:comment_date>
			<wp:comment_date_gmt>2007-03-10 14:48:51</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Let's chat sometime again...i like the snippet approach too, but I have another idea.  Would love your feedback.
-Rob]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Morning Coffee 43</title>
		<link>http://devhawk.net/2007/03/12/morning-coffee-43/</link>
		<pubDate>Mon, 12 Mar 2007 10:38:54 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://ec6db974-891d-4479-84f4-683057f1f0f9</guid>
		<description></description>
		<content:encoded><![CDATA[<ul><li>This week is the MVP summit. Hopefully, I'll make it over there and see the Architect MVPs. Otherwise, things seem sort of quiet in the Microsoft wing of the blogoshphere.</li><li>Saw 300 yesterday on a relatively rare day out with just Jules. Really enjoyed it. </li><li>Nick Malik <a href="http://blogs.msdn.com/nickmalik/archive/2007/03/12/so-what-s-in-a-roadmap-anyway.aspx">describes</a> what goes into an enterprise platform roadmap.</li><li>Joe McKendrick <a href="http://blogs.zdnet.com/service-oriented/?p=829">recaps</a> a vendor SOA suites podcast. With SOA, you can revisit your platform decision on a project by project basis which allows you to avoid the dreaded "vendor lock-in". But supporting lots of platforms is an operational nightmare, so maybe lock-in isn't as bad as it sounds.</li></ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>908</wp:post_id>
		<wp:post_date>2007-03-12 10:38:54</wp:post_date>
		<wp:post_date_gmt>2007-03-12 10:38:54</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>morning-coffee-43</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="morning-coffee"><![CDATA[Morning Coffee]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[ec6db974-891d-4479-84f4-683057f1f0f9]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Morning+Coffee+43]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/03/12/Morning+Coffee+43]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Morning Coffee 44</title>
		<link>http://devhawk.net/2007/03/13/morning-coffee-44/</link>
		<pubDate>Tue, 13 Mar 2007 10:29:02 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://4e6e1e01-5f82-4ff7-ab52-4200afcc86f7</guid>
		<description></description>
		<content:encoded><![CDATA[<ul><li>I got my Tecra M4 back sans flaky motherboard. That's my full time laptop now - it's nice to have a laptop that supports Vista. I'm still running XP on my desktop out of a combination of lack of video driver + laziness. I run dual monitor with my primary monitor rotated to be portrait instead of landscape. Easier to read websites and documents that way. Unfortunately, while there's a generic WDDM driver for my video card's chipset, it doesn't support the rotate function. But according to the Dell support site, they released a new driver for my card a few weeks ago so maybe it's time to try the upgrade again. </li><li>I sat down to watch <a href="http://www.nbc.com/Heroes/">Heroes</a> last night, forgetting that it's not on again until April. Watched <a href="http://fox.com/24/">24</a> instead, but it has really <a href="http://www.jumptheshark.com">jumped the shark</a>. </li><li>Scott Guthrie continues his series on new Orcas language features, this time covering <a href="http://weblogs.asp.net/scottgu/archive/2007/03/13/new-orcas-language-feature-extension-methods.aspx">extension methods</a>. On the one hand, it's pure syntactic sugar. On the other, how sweet it is. It's kinda surprising that no other mainstream language has done this before.  </li><li>Scott Hansleman is a self-described <a href="http://www.hanselman.com/blog/ManagedSnobism.aspx">managed code snob</a>. What do you call the opposite of a managed code snob? An unmanaged code snob or a managed code bigot? </li></ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>909</wp:post_id>
		<wp:post_date>2007-03-13 10:29:02</wp:post_date>
		<wp:post_date_gmt>2007-03-13 10:29:02</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>morning-coffee-44</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="morning-coffee"><![CDATA[Morning Coffee]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[4e6e1e01-5f82-4ff7-ab52-4200afcc86f7]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Morning+Coffee+44]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/03/13/Morning+Coffee+44]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>2462</wp:comment_id>
			<wp:comment_author><![CDATA[Brad Wilson]]></wp:comment_author>
			<wp:comment_author_email>dotnetguy@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.agileprogrammer.com/dotnetguy</wp:comment_author_url>
			<wp:comment_author_IP>71.231.180.146</wp:comment_author_IP>
			<wp:comment_date>2007-03-13 18:36:31</wp:comment_date>
			<wp:comment_date_gmt>2007-03-14 01:36:31</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[How mainstream is Ruby on Rails for you? Ruby is a full fledged dynamic language. No hacks for "extension methods".]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>2463</wp:comment_id>
			<wp:comment_author><![CDATA[Scott Hanselman]]></wp:comment_author>
			<wp:comment_author_email>scott@hanselman.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.hanselman.com/blog/</wp:comment_author_url>
			<wp:comment_author_IP>216.163.74.146</wp:comment_author_IP>
			<wp:comment_date>2007-03-14 01:11:53</wp:comment_date>
			<wp:comment_date_gmt>2007-03-14 08:11:53</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Ya, I kind of blanched at that statement too...method_missing is pretty mainstream...

Scott HanSELman.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>2464</wp:comment_id>
			<wp:comment_author><![CDATA[Jay R. Wren]]></wp:comment_author>
			<wp:comment_author_email>jrwren@xmtp.net</wp:comment_author_email>
			<wp:comment_author_url>http://little.xmtp.net/blog/</wp:comment_author_url>
			<wp:comment_author_IP>69.241.235.176</wp:comment_author_IP>
			<wp:comment_date>2007-03-15 09:39:27</wp:comment_date>
			<wp:comment_date_gmt>2007-03-15 16:39:27</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I'd just like to point out that extension methods are more than just syntactic sugar.

Sure, if you have the source to a class and can add a method, then an extension method is just sugar.  But if you are adding a method to a class to which you do not have the source, or cannot touch the assembly, then it is much more than syntactic sugar.

Well, ok, it is still just sugar, but it is REALLY GOOD sugar.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>2465</wp:comment_id>
			<wp:comment_author><![CDATA[Mike Parsons]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>208.114.168.138</wp:comment_author_IP>
			<wp:comment_date>2007-03-16 05:31:01</wp:comment_date>
			<wp:comment_date_gmt>2007-03-16 12:31:01</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[What about JavaScript?

String.prototype.trim = function() {
    return(this.replace(/^s+/,'').replace(/s+$/,''));
}]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Answering Dr. Nick&#039;s Questions on SSB &amp; WCF</title>
		<link>http://devhawk.net/2007/03/15/answering-dr-nicks-questions-on-ssb-wcf/</link>
		<pubDate>Thu, 15 Mar 2007 11:44:30 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://1f926b66-cbeb-457a-83bb-568ee05448fb</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Nick Allen <a href="http://blogs.msdn.com/drnick/archive/2007/03/15/looking-for-sql-service-broker-users.aspx">asked on his blog</a> about how people would like to see SSB and WCF work together. He's already heard these from me, but I figured I'd put them out there for everyone to see and debate. Plus, I had several beers last night at the MVP dinner, so this is likely to be more coherent than I was yesterday! :)</p><p>1. Are you interested in SSB because you'd like to have your service closer to the database? How close is close enough to the database?</p><blockquote><p>I've first blogged about the <a href="http://devhawk.net/2004/04/22/The+Endangered+MiddleTier+Part+2.aspx">endangered middle tier</a> almost three years ago. My point at the time was that as you break your monolithic system up into services, the vast majority of those services won't need to scale out. You performance gets better the closer you are to the data. If you don't need to scale out, why not get the maximum boost by running in the database process itself?</p><p>Furthermore, in large IT shops, the database files are stored out on the SAN rather than on hard drives attached to the database server itself. That means the database server is effectively stateless. Why add a second stateless tier if you don't need scale out? If you need more performance in a given service, you can detach the database file from it's current SQL server box and attach it on another more beefy SQL server box without physically moving the database files at all. This enables what I call the "Star Trek Effect", where you can shift computing power where it is needed most (more power to the payroll system!). </p><p>Of course, if you're going to move the service, you do need to bring it down for a short time. That implies a need for durable messaging so that service consumers aren't affected by the brief service interruption. Which brings us to...</p></blockquote><p>2. Are you interested in SSB because you need durable, duplex messaging between two services? Do you need exactly-once-in-order message delivery?</p><blockquote><p>Yes. SSB has a bunch of other nice features, but durable duplex messaging is what I need the most. Exactly-once-in-order is also fairly critical, though there may be scenarios where it's not really necessary. Those are the exception, not the rule however. </p><p>Doesn't WS-RM already do EOIO already?</p></blockquote><p>3. Are you interested in using SSB from WCF because you want a better asynchronous messaging experience than MSMQ? What makes you prefer SSB to other queuing products?</p><blockquote><p>My primary problem with MSMQ for the problems I'm tasked with solving is that MSMQ is one way while SSB supports duplex messaging. You could do duplex messaging with MSMQ if you didn't mind managing multiple queues (one for each side of the conversation) but SSB does this for you for free. I'm sure there are scenarios where pure one-way messaging are useful, but they are few and far between in my day job.</p><p>Furthermore, SSB has the explicit idea of a service instance (they call it a conversation group) which MSMQ lacks. SSB's implementation is conceptually similar to the new WCF/WF integration work in the latest Orcas CTP.</p><p>Finally, SSB uses logical naming. You have conversations between services, but services get mapped to physical addresses at the routing layer. This allows services to move around more easily (see the "Star Trek Effect" in #1 above). Both MSMQ and WCF use physical addresses, which makes them much more difficult to move.</p></blockquote><p>4. Are you interested in having your data contracts defined in WCF, SQL, or both?</p><blockquote><p>I like WCF's data contract infrastructure. We did a early prototype long-running service with both WCF and SSB. the messaging stack code was obviously different, but we used the exact same data contract code. I even wrote some code to automatically deserialize the SSB message by mapping the SSB message type to a data contract.</p><p>I want my services to run inside the database, but that doesn't mean I want to write them in T-SQL. Personally, I'm much more productive in C# and/or WF. So WCF data contracts are fine by me.</p></blockquote>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>910</wp:post_id>
		<wp:post_date>2007-03-15 11:44:30</wp:post_date>
		<wp:post_date_gmt>2007-03-15 11:44:30</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>answering-dr-nicks-questions-on-ssb-wcf</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="service-broker"><![CDATA[Service Broker]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<category domain="post_tag" nicename="wcf"><![CDATA[WCF]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[1f926b66-cbeb-457a-83bb-568ee05448fb]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Answering+Dr+Nicks+Questions+On+SSB+Amp+WCF]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/03/15/Answering+Dr+Nicks+Questions+On+SSB+Amp+WCF]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>2466</wp:comment_id>
			<wp:comment_author><![CDATA[Arnon Rotem-Gal-Oz]]></wp:comment_author>
			<wp:comment_author_email>arnon@rgoarchitects.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.rgoarchitects.com/blog</wp:comment_author_url>
			<wp:comment_author_IP>89.139.26.160</wp:comment_author_IP>
			<wp:comment_date>2007-03-16 23:32:19</wp:comment_date>
			<wp:comment_date_gmt>2007-03-17 06:32:19</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Regarding your point #1
It does look that SQL 2005 has almost everything to become an application server (I wrote about it Jul 2005: 
http://www.rgoarchitects.com/blog/PermaLink,guid,4dcc5298-e9ff-4a9a-880a-aa886d143f9e.aspx)
But it seems that Microsoft got cold feet somewhere along the way and never really promoted this as an option. 

Also in regard to SSB. It offers some great features but having only an SQL API (I know you can createa C# facade - been there, done that, got the t-shirt) and a proprietary transport directs it into a niche instead of main-stream

]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>I&#039;m Wrong Because Ruby and Powershell Are Mainstream</title>
		<link>http://devhawk.net/2007/03/15/im-wrong-because-ruby-and-powershell-are-mainstream/</link>
		<pubDate>Thu, 15 Mar 2007 13:53:13 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://c3e358d5-10b7-413a-8f65-d8e30e8176ae</guid>
		<description></description>
		<content:encoded><![CDATA[<a href="http://www.agileprogrammer.com/dotnetguy">Brad Wilson</a> and <a title="Scott Hanselman" href="http://www.hanselman.com/blog/">Scott Hanselman</a> took me to task for my <a href="http://devhawk.net/2007/03/13/Morning+Coffee+44.aspx">comment</a> the other day that no "mainstream" language had implemented <a href="http://weblogs.asp.net/scottgu/archive/2007/03/13/new-orcas-language-feature-extension-methods.aspx">extension methods</a>:
<blockquote>How mainstream is Ruby on Rails for you? Ruby is a full fledged dynamic language. No hacks for "extension methods" (Brad)

Ya, I kind of blanched at that statement too...method_missing is pretty mainstream... (Scott)</blockquote>
They're right, Ruby does support the addition (and redefinition I think) of methods on a class at any time. There's a sample of this in the <a href="http://www.ruby-doc.org/docs/ProgrammingRuby/html/classes.html">Classes and Objects</a> chapter of <a href="http://www.ruby-doc.org/docs/ProgrammingRuby/">Programming Ruby</a> (aka the pick-axe book) where they add a basic documentation facility "available to any module or class" in Ruby by adding a doc instance method to the Module class.

&nbsp;
<pre class="brush:ruby">class Module 
  @@docs = Hash.new(nil) 
  def doc(str) 
    @@docs[self.name] = str 
  end
  def Module::doc(aClass) 
    # If we’re passed a class or module, convert to string
    # (‘&lt;=’ for classes checks for same class or subtype)
    aClass = aClass.name if aClass.type &lt;= Module 
    @@docs[aClass] || “No documentation for #{aClass}”
  end
end</pre>
Given how Ruby classes are defined, I think the newly added methods have access to the private data of the class. Extension methods in C#3/VB9 only have access the public interface of the object. But that's a fairly minor difference.

&nbsp;

FYI, Powershell can do this as well, though not as succinctly as Ruby. Scott has <a href="http://www.hanselman.com/blog/AccessingEXIFPhotoDataFromJPEGsWithPowerShell.aspx">an example</a> how you can add a DatePhotoTaken property to System.IO.FileInfo using <a href="http://www.shahine.com/omar">Omar Shahine's</a><a href="http://wiki.shahine.com/default.aspx/MyWiki.PhotoLibrary">PhotoLibrary</a> project.

Chalk this up to my continuing ignorance of dynamic languages. I'm working on it, albeit slowly.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>911</wp:post_id>
		<wp:post_date>2007-03-15 13:53:13</wp:post_date>
		<wp:post_date_gmt>2007-03-15 13:53:13</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>im-wrong-because-ruby-and-powershell-are-mainstream</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="development"><![CDATA[Development]]></category>
		<category domain="post_tag" nicename="lanugages"><![CDATA[Lanugages]]></category>
		<category domain="post_tag" nicename="powershell"><![CDATA[PowerShell]]></category>
		<category domain="post_tag" nicename="ruby"><![CDATA[Ruby]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[c3e358d5-10b7-413a-8f65-d8e30e8176ae]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Im+Wrong+Because+Ruby+And+Powershell+Are+Mainstream]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/03/15/Im+Wrong+Because+Ruby+And+Powershell+Are+Mainstream]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>2470</wp:comment_id>
			<wp:comment_author><![CDATA[DevHawk]]></wp:comment_author>
			<wp:comment_author_email>harry@devhawk.net</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>24.16.94.200</wp:comment_author_IP>
			<wp:comment_date>2007-03-15 22:44:55</wp:comment_date>
			<wp:comment_date_gmt>2007-03-16 05:44:55</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[orchmid, Ruby not only allows you to inject methods into objects, but into classes as well. Extension Methods in C#3/VB9 act at the class level. Javascript doesn't really have classes and I don't know Python well enough to comment.

As for why to invent another language, I certainly don't think a single lanugage feature is enough to argue for or against the existence of the PowerShell language. I fraking love PowerShell, and it has nothing to do with the ability to add new methods to classes. 


]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>2469</wp:comment_id>
			<wp:comment_author><![CDATA[Jeffrey Snover]]></wp:comment_author>
			<wp:comment_author_email>jsnover13@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>71.112.37.212</wp:comment_author_IP>
			<wp:comment_date>2007-03-15 21:42:29</wp:comment_date>
			<wp:comment_date_gmt>2007-03-16 04:42:29</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[> The biggest questions is - why invent another language for PowerShell if > there are so many great popular languages already in existance?

Try it and you'll see.   I'm not aware of a language that has as wide a dynamic range as PowerShell (Please point one out if you know of one).  Bruce Payette's book, PowerShell in Action provides both a great language reference as well as the reasoning behind the decisions we made in producing PowerShell (Bruce is the dev lead for the language).

Jeffrey Snover [MSFT]
Windows PowerShell/MMC Architect
Visit the Windows PowerShell Team blog at:    http://blogs.msdn.com/PowerShell
Visit the Windows PowerShell ScriptCenter at:  http://www.microsoft.com/technet/scriptcenter/hubs/msh.mspx
]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>2467</wp:comment_id>
			<wp:comment_author><![CDATA[Anonymous]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>84.130.154.204</wp:comment_author_IP>
			<wp:comment_date>2007-03-15 16:19:56</wp:comment_date>
			<wp:comment_date_gmt>2007-03-15 23:19:56</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[The biggest questions is - why invent another language for PowerShell if there are so many great popular languages already in existance?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>2468</wp:comment_id>
			<wp:comment_author><![CDATA[orcmid]]></wp:comment_author>
			<wp:comment_author_email>dennis.hamilton@acm.org</wp:comment_author_email>
			<wp:comment_author_url>http://orcmid.com/BlunderDome/clueless</wp:comment_author_url>
			<wp:comment_author_IP>67.40.29.219</wp:comment_author_IP>
			<wp:comment_date>2007-03-15 19:29:18</wp:comment_date>
			<wp:comment_date_gmt>2007-03-16 02:29:18</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Well then, don't both Python and Javascript count too?  You can inject new methods into any of their ordinary objects.  ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Morning Coffee 45</title>
		<link>http://devhawk.net/2007/03/15/morning-coffee-45/</link>
		<pubDate>Thu, 15 Mar 2007 10:04:35 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://e3d4aee0-98ab-4b95-8c72-652a4e051515</guid>
		<description></description>
		<content:encoded><![CDATA[<ul><li>Yesterday's morning coffee was canceled on account of going to main campus and hanging out with the Architect MVPs. I spent all morning + dinner with them yesterday. Some of these guys I hadn't seen in nearly two years, so it was a ton of fun.</li><li>Nicolas Allen (aka Dr. Nick) is <a href="http://blogs.msdn.com/drnick/archive/2007/03/15/looking-for-sql-service-broker-users.aspx">looking for SQL Service Broker users</a>. I cornered him at the MVP dinner last night and gave him my thoughts on WCF + SSB. You can head over to his blog and do the same. (I'll post my answers to his questions later today, hopefully)</li><li>The new Vista x64 driver for my workstation's video card does support monior rotation, so I'm mostly XP free at this point. I'm dual-booting my workstation at this point, while I finish configuring stuff in the Vista partition. With both my workstation and work <strike>laptop</strike> tablet, I'm XP free at work. Next, I start getting home machines moved over.  </li><li>Tom Hollander reports on a new drop of the <a href="http://blogs.msdn.com/tomholl/archive/2007/03/13/just-released-gat-and-gax-february-2007-ctp.aspx">Guidance Automation Toolkit</a>. Mostly bug fixes like Vista support, but the <a href="http://blogs.msdn.com/tomholl/pages/guidance-automation-extensions-and-guidance-automation-toolkit-february-2007-community-technology-preview.aspx">full list is here</a>. It's an ugly upgrade process. You have to uninstall all existing guidance packages. I can't wait until this technology is "integrate[d] ... more deeply into Visual Studio and Team System".  </li><li>I <a href="http://devhawk.net/2007/03/08/Morning+Coffee+41+TechFest+Edition.aspx">mentioned</a> the Podcast Authoring tool that I saw at TechFest last week. <a href="http://www.engadget.com/photos/microsofts-techfest-2007-randd-blowout/176053/">Here</a><a href="http://www.engadget.com/gallery/microsofts-techfest-2007-randd-blowout/176030/">are</a><a href="http://www.engadget.com/gallery/microsofts-techfest-2007-randd-blowout/176074/">some</a> pictures of it from engadget (via <a href="http://blogs.msdn.com/lokeuei">Loke Uei Tan</a>) </li><li>I've been thinking of getting a Wii, and the fact I can <a href="http://blogs.msdn.com/drnick/archive/2007/03/15/looking-for-sql-service-broker-users.aspx">hack code for it</a> - managed code for managed snobs no less - is just another good reason to do it. (via <a href="http://blogs.msdn.com/drnick/archive/2007/03/15/looking-for-sql-service-broker-users.aspx">DotNetKicks</a>)</li></ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>912</wp:post_id>
		<wp:post_date>2007-03-15 10:04:35</wp:post_date>
		<wp:post_date_gmt>2007-03-15 10:04:35</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>morning-coffee-45</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="morning-coffee"><![CDATA[Morning Coffee]]></category>
		<category domain="post_tag" nicename="service-broker"><![CDATA[Service Broker]]></category>
		<category domain="post_tag" nicename="wcf"><![CDATA[WCF]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[e3d4aee0-98ab-4b95-8c72-652a4e051515]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Morning+Coffee+45]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/03/15/Morning+Coffee+45]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Morning Coffee 46</title>
		<link>http://devhawk.net/2007/03/16/morning-coffee-46/</link>
		<pubDate>Fri, 16 Mar 2007 11:32:32 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://777c4c38-52bc-4e98-90e0-e292c345942a</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Sort of late this morning due to back to back meetings...</p><ul><li>I seem to have stirred up a bit of a hornet's nest with my "kinda surprising that no other mainstream language has done this before" <a href="http://devhawk.net/2007/03/13/Morning+Coffee+44.aspx">comment</a>. <a href="http://orcmid.com/BlunderDome/clueless/">Dennis Hamilton</a> and Mike Parsons both asked about other dynamic languages like Javascript and Python in my comments. To be clear, the ability to add a new method to a specific object instance is fairly common in dynamic languages. Extension methods in C#3/VB9 is a different capability - it only supports adding new methods to a class, not to specific object instances. I'm not sure what dynamic languages other than Ruby supports adding new methods to both object instances and classes, but I'm sure they're out there. </li><li>Some anonymous commenter asked "why invent another language for PowerShell if there are so many great popular languages already in existance [sic]?" I can't speak for the PowerShell team, but I think they were better off inventing a new language specificly designed for their scenario than they would have been shoe-horning in existing lanugage. To their credit, it looks like the PS team took great care to make the PS lanugage accessable by leveraging common syntax and idioms from other shell programming environments. I'm not a shell programming expert, but isn't PS more a variant of shell languages that have come before than a brand new language?  </li><li>I want a "<a href="http://www.codinghorror.com/blog/archives/000818.html">Works on My Machine</a>" T-Shirt. </li></ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>913</wp:post_id>
		<wp:post_date>2007-03-16 11:32:32</wp:post_date>
		<wp:post_date_gmt>2007-03-16 11:32:32</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>morning-coffee-46</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="morning-coffee"><![CDATA[Morning Coffee]]></category>
		<category domain="post_tag" nicename="powershell"><![CDATA[PowerShell]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[777c4c38-52bc-4e98-90e0-e292c345942a]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Morning+Coffee+46]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/03/16/Morning+Coffee+46]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>2471</wp:comment_id>
			<wp:comment_author><![CDATA[orcmid]]></wp:comment_author>
			<wp:comment_author_email>dennis.hamilton@acm.org</wp:comment_author_email>
			<wp:comment_author_url>http://orcmid.com/BlunderDome/clueless</wp:comment_author_url>
			<wp:comment_author_IP>67.40.29.219</wp:comment_author_IP>
			<wp:comment_date>2007-03-16 17:02:26</wp:comment_date>
			<wp:comment_date_gmt>2007-03-17 00:02:26</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[My fear is that if I wear that T-shirt, people will believe it.

Hey, I was wearing my "The Architect is In" T-shirt in Building 20 yesterday.  Doug Mahugh said there were a lot of other job titles that should have that T-shirt.  I was crushed of course.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Morning Coffee 47</title>
		<link>http://devhawk.net/2007/03/19/morning-coffee-47/</link>
		<pubDate>Mon, 19 Mar 2007 11:23:30 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://16ca6d83-4789-4567-bbda-87d904fb6a56</guid>
		<description></description>
		<content:encoded><![CDATA[<ul><li>USC is in the Sweet 16. Not sure when that's ever happened before.</li><li>Politics 2.0 Watch: The rise of political blogs in main stream media reporting. Check out what the LA Times <a href="http://www.latimes.com/news/nationworld/nation/la-na-blogs17mar17,0,2952916.story?coll=la-home-nation">has to say</a> about <a href="http://www.talkingpointsmemo.com/">Talking Points Memo</a>. 2008 is going to be interesting and ugly.</li><li>Jeffrey Palermo <a href="http://codebetter.com/blogs/jeffrey.palermo/archive/2007/03/16/Big-News-_2D00_-MVC-framework-for-ASP.NET-in-the-works-_2D00_-level-300.aspx">wrote</a> that <a href="http://weblogs.asp.net/scottgu/">Scott Guthrie</a> showed him a prototype web MVC framework for ASP.NET. Looking forward to seeing that. I thought it was interesting that Jeff described web MVC as "like Rails and MonoRail". Didn't Web MVC initially gain popularity on Java with toolkits like Struts and Spring? (via <a href="http://www.larkware.com/dg8/TheDailyGrind1101.aspx">Larkware News</a>)</li><li>For reasons that can't be explained, I haven't read <a href="http://software.ericsink.com/">Eric.Weblog()</a> in quite a while. My loss. His post on <a href="http://software.ericsink.com/articles/Boundaries.html">Boundaries</a> was both thought provoking and hilarious, a hard combo to achieve in practice.</li><li>New versions of Expression Design (<a href="http://www.microsoft.com/downloads/details.aspx?familyid=c7ae29d9-09fb-4046-8977-ecc007251524&amp;displaylang=en&amp;tm">Beta 2</a>) and Expression Blend (<a href="http://www.microsoft.com/downloads/details.aspx?familyid=57E09AE4-61AC-4E4A-AEFE-93389925B1DA&amp;displaylang=en">Release Candidate</a>) are available.</li><li>Martin Fowler writes about being <a href="http://martinfowler.com/bliki/Transactionless.html">Transactionless</a>. I like to see people thinking this way, because I don't believe transactions across services is feasible or loosely coupled. However, I still think you should use transactions inside the service. Also, I gotta wonder how much time all that error checking logic you have to write takes if you're not using transactions. What's the tradeoff?</li></ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>914</wp:post_id>
		<wp:post_date>2007-03-19 11:23:30</wp:post_date>
		<wp:post_date_gmt>2007-03-19 11:23:30</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>morning-coffee-47</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="morning-coffee"><![CDATA[Morning Coffee]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[16ca6d83-4789-4567-bbda-87d904fb6a56]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Morning+Coffee+47]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/03/19/Morning+Coffee+47]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Morning Coffee 48</title>
		<link>http://devhawk.net/2007/03/20/morning-coffee-48/</link>
		<pubDate>Tue, 20 Mar 2007 10:14:11 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://71e613d3-edc7-42e0-a3e0-5e49f1971342</guid>
		<description></description>
		<content:encoded><![CDATA[<ul><li><a href="http://en.wikipedia.org/wiki/John_Backus">John Backus</a>, leader of the team that developed the first high-level programming language, <a href="http://www.nytimes.com/2007/03/19/obituaries/20cnd-backus.html?ex=1332043200&amp;en=adde3ee5a1875330&amp;ei=5124&amp;partner=permalink&amp;exprod=permalink">died yesterday</a>. It's been a hard year so far for IT industry luminaries. (via <a href="http://scienceblogs.com/goodmath/2007/03/sad_news_john_backus_has_died.php">Good Math, Bad Math</a>)</li><li>Yesterday, I followed on Martin Fowler's post on going transactionless. As I said yesterday, I didn't agree with the idea of no transactions inside a service, but I agree 100% with no transactions between services. Via Paul Brown, <a href="http://mult.ifario.us/articles/2007/03/20/not-quite-no-transactions">we learn</a> that EBay does allow forbids the use of <u><em>client-side or distributed transactions</em></u>, but doesn't outlaw the use of transactions in general. That makes much more sense to me since transactions between services would have to be are distributed.</li><li>Wired just launched a new blog called <a href="http://blog.wired.com/geekdad/">GeekDad</a> with the mission statement "Cool toys and fun projects you and your kids do together". Subscribed (via <a href="http://www.longtail.com/the_long_tail/2007/03/introducing_gee.html">The Long Tail</a>)</li><li>DevHawk made Todd Bishop's Microsoft Blog Directory. It's in the "Software Development and Design" section. Not sure why I'm listed <em>above </em><a href="http://blogs.msdn.com/oldnewthing/">Raymond Chen</a>, <a href="http://blogs.msdn.com/johnmont">John Montgomery</a>, <a href="http://www.sellsbrothers.com/">Chris Sells</a> and <a href="http://pluralsight.com/blogs/dbox/">Don Box</a> in that section, but that's nice company to be included with.</li></ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>915</wp:post_id>
		<wp:post_date>2007-03-20 10:14:11</wp:post_date>
		<wp:post_date_gmt>2007-03-20 10:14:11</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>morning-coffee-48</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="blogging"><![CDATA[Blogging]]></category>
		<category domain="category" nicename="morning-coffee"><![CDATA[Morning Coffee]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[71e613d3-edc7-42e0-a3e0-5e49f1971342]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Morning+Coffee+48]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/03/20/Morning+Coffee+48]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>VSTDB, Where Have You Been All My Life?</title>
		<link>http://devhawk.net/2007/03/19/vstdb-where-have-you-been-all-my-life/</link>
		<pubDate>Mon, 19 Mar 2007 17:15:53 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://33e11ccb-85bb-406f-b5b8-9bae474c56ac</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Honestly, this post started off as a rant entitled "Is it Me, or is DB Development a Pain in the Ass?" about the sorry state of database development tools in Visual Studio. But in searching around on MSDN for information about the built-in "Database Project" type (which could more accurately be called "just a bunch of SQL scripts"), I stumbled across information about the <a href="http://msdn2.microsoft.com/en-us/teamsystem/aa718764.aspx">Database Professionals edition of Visual Studio Team System</a>. That's right, I had forgotten that we shipped this <a href="http://blogs.msdn.com/mattnunn/archive/2006/12/04/we-have-rtm-d-visual-studio-2005-team-edition-for-database-professionals-releases-to-manufacturing.aspx">late last year</a>. </p><p>I short, VSTDB (or whatever the "official" acronym is) is 90% of what I was looking for in a DB dev tool. Sure, it's not perfect, but it's a massive improvement over the previous state of the art.</p><p>The primary feature of VSTDB is the ability to "build" your database the same way you build your code. You use lots of small scripts that get compiled together into a model (for lack of a better term) of the database as you've defined it. That model can be deployed to a new database instance or used to update an existing instance. You can also compare that model against an existing database in order to determine what's changed and automatically build update SQL scripts for the DBA's to run in the production environment (since you don't want your developers doing that). </p><p>It takes a little getting used to, but the "lots of small scripts" approach has a lot of upside. If you have a table with a primary key, you're supposed to define the primary key, indexes, constraints, triggers, etc. in separate scripts from table creation script. This makes things much easier when you're trying to figure out what's changed in your source control system.</p><p>VSTDB has a variety of other cool looking features like data generation and unit testing, but I haven't really dug into them much yet. One thing that VSTDB supports that I wasn't expecting was Service Broker! SQL Management Studio has limited SSB support - if you want to create new SSB objects you have to write the DDL directly. VSTDB requires you to write the SSB DDL also (it makes you write DDL for everything, see below) but it at least has templates for all the SSB object types. Very Cool!</p><p>Of course, there are always things that could be improved. The T-SQL editor does syntax highlighting but not IntelliSense. It doesn't support the existing visual database tools like the <a href="http://msdn2.microsoft.com/en-us/library/0daykhky(VS.80).aspx">Table Designer</a>. And while you can build T-SQL stored procs, functions, types, etc, VSTDB doesn't support the development of managed SQLCLR stored procs, et.al. Things to work on for v2, I suppose. </p><p>If you're using VS Team Suite, you can <a href="http://www.microsoft.com/downloads/details.aspx?familyid=7de00386-893d-4142-a778-992b69d482ad&amp;displaylang=en">download an add-on</a> that adds VSTDB functionality to your existing VSTS installation. It's only 8MB, so it's definitely the way to go for Team Suite users. </p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>916</wp:post_id>
		<wp:post_date>2007-03-19 17:15:53</wp:post_date>
		<wp:post_date_gmt>2007-03-19 17:15:53</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>vstdb-where-have-you-been-all-my-life</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="database"><![CDATA[Database]]></category>
		<category domain="category" nicename="development"><![CDATA[Development]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[33e11ccb-85bb-406f-b5b8-9bae474c56ac]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[VSTDB+Where+Have+You+Been+All+My+Life]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/03/20/VSTDB+Where+Have+You+Been+All+My+Life]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Morning Coffee 49</title>
		<link>http://devhawk.net/2007/03/21/morning-coffee-49/</link>
		<pubDate>Wed, 21 Mar 2007 11:25:48 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://1df84f92-a6c3-4dee-9aaf-4026db8e2bd9</guid>
		<description></description>
		<content:encoded><![CDATA[<ul><li>The eBay Architecture SD Forum presentation that spawned the whole Transactionless meme is available <a href="http://www.addsimplicity.com.nyud.net:8080/downloads/eBaySDForum2006-11-29.pdf">here</a>. As I reported yesterday, it doesn't call for going completely transactionless as Martin suggested. It calls for going without distributed transactions, which I agree with 100%. </li><li>More interesting than the transactional aspects, I found the data tier functional segmentation information facinating. Too bad those guys aren't using our platform, SSB was expressly designed for exactly this sort of segmentation. I also liked that step 1 for "massively scaling J2EE" is to "throw out most of J2EE".</li><li>After going mostly dark since last august, the manager of my old team <a href="http://blogs.msdn.com/jdevados/">John deVadoss</a> has been blogging up a storm since the beginning of March. So has my old boss <a href="http://michaelplatt.net/blogs/architecture/default.aspx">Mike Platt</a>. I wonder what happened at the begining of March? Here's hoping this blogging fever spreads on my old team.</li><li><a href="http://blogs.zdnet.com/service-oriented/?p=835">Joe McKendrick</a>: "The bottom line is that ROI on SOA is an enterprise challenge, not an IT challenge." Truer words are rarely spoken.</li><li>The rumor mill on the <a href="http://www.xbox360fanboy.com/2007/03/20/zephyr-xbox-360-rumors-correct-coming-late-april/">Black Xbox 360 "Elite"</a> are coming fast and furious. I don't care about the HDMI port (my HDTV is five years old and doesn't have one) but I would like a bigger hard drive...</li></ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>917</wp:post_id>
		<wp:post_date>2007-03-21 11:25:48</wp:post_date>
		<wp:post_date_gmt>2007-03-21 11:25:48</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>morning-coffee-49</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="blogging"><![CDATA[Blogging]]></category>
		<category domain="post_tag" nicename="database"><![CDATA[Database]]></category>
		<category domain="category" nicename="morning-coffee"><![CDATA[Morning Coffee]]></category>
		<category domain="post_tag" nicename="xbox-360"><![CDATA[Xbox 360]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[1df84f92-a6c3-4dee-9aaf-4026db8e2bd9]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Morning+Coffee+49]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/03/21/Morning+Coffee+49]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>When is a Service Not a Service?</title>
		<link>http://devhawk.net/2007/03/21/when-is-a-service-not-a-service/</link>
		<pubDate>Wed, 21 Mar 2007 13:19:43 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://e177e591-1ee6-417e-a4b9-b83df97e4a57</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Conceptually, I like both Service Oriented Architecture (aka SOA) and Software as a Service (aka SaaS). However, I think we've done the industry a disservice by overloading the term "service". </p><p>John deVadoss <a href="http://blogs.msdn.com/jdevados/archive/2007/03/04/what-is-software-as-a-service.aspx">likes</a> the following definition of SaaS from <a href="http://en.wikipedia.org/wiki/Software_as_a_Service">Wikipedia</a>. So do I.</p><blockquote><p><b>Software as a service</b> (<b>SaaS</b>) is a model of software delivery where the software company provides maintenance, daily technical operation, and support for the software provided to their client. SaaS is a model of software delivery rather than a market segment; it assumes the software is delivered over the Internet. Software can be delivered using this method to any market segment including home consumers, small business, medium and large business.</p></blockquote><p>To paraphrase, SaaS is software that traditionally you might have bought, installed and run yourself but instead now can access over the network where someone else is responsible for installing and running it. For example, instead of buying, setting up and managing my own mail server to handle a <a href="mailto:harry@devhawk.net">single @devhawk.net email address</a>, I use the <a href="http://domains.live.com/">WL Custom Domains</a> service. </p><p>SOA on the other hand isn't a model of software delivery, it's a model of software segmentation. Again, here's the <a href="http://en.wikipedia.org/wiki/Service-oriented_architecture">Wikipedia definition</a>, this time for SOA:</p><blockquote><p>There is no widely-agreed upon definition of <b>Service-oriented architecture</b> other than its literal translation that it is an architecture that relies on service-orientation as its fundamental design principle.</p></blockquote><p>Err, that's not very helpful. Let's check out the <a href="http://www.oasis-open.org/">OASIS</a> definition (cribbed from Wikipedia).</p><blockquote><p>[SOA is] A paradigm for organizing and utilizing distributed capabilities that may be under the control of different ownership domains. It provides a uniform means to offer, discover, interact with and use capabilities to produce desired effects consistent with measurable preconditions and expectations.</p></blockquote><p>Well, at least it's not a self-referential recursive definition. But it is littered with committee-speak. (Who talks like that in real life?) Frak it, here's my definition:</p><blockquote><p>SOA is a way of implementing IT systems as a web of interconnected yet independent loosely coupled subsystems (typically called services) instead of as big honking systems we have traditionally built that tend to be unwieldy, in-agile, difficult to change and probably obsolete by the time they were deployed.</p></blockquote><p>We could argue about the language, but you get the point. There would be a ton of argument about the <em>size</em> of the subsystems (i.e. the service granularity), but I think most people can agree that SOA encourages building multiple smaller interconnected subsystems instead of one big (honking) system.</p><p>Which brings me back to my original point: Service, in the SOA sense, describes the approach to factoring parts of an software solution. Service, in the SaaS sense, describes a software delivery mechanism. Certainly, you can use both together and take an SOA approach to building a SaaS product. But you don't have to. So having the same term "service" used in both is very confusing.</p><p>How many SaaS products use SOA today? I would guess "not many" since there hasn't been much demand for it. When you're selling to the long tail of the LOB market, support for service-oriented integration isn't a critical selling feature. As SaaS becomes more attractive to larger companies (i.e. ones with dedicated IT staffs), using a SOA approach will be more important to SaaS product vendors. So they will converge in a way, but not in the way their naming suggests.</p><p>Of the two uses, SaaS seems closer to the <a href="http://dictionary.reference.com/browse/service">dictionary definition</a> of service. Maybe the S in SOA should stand for "Subsystem"? Nah, I like the term "<a href="http://msdn2.microsoft.com/en-us/architecture/aa699418.aspx">connected systems</a>" better than "service oriented" anyway. </p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>918</wp:post_id>
		<wp:post_date>2007-03-21 13:19:43</wp:post_date>
		<wp:post_date_gmt>2007-03-21 13:19:43</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>when-is-a-service-not-a-service</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="architecture"><![CDATA[Architecture]]></category>
		<category domain="post_tag" nicename="soa"><![CDATA[SOA]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[e177e591-1ee6-417e-a4b9-b83df97e4a57]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[When+Is+A+Service+Not+A+Service]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/03/21/When+Is+A+Service+Not+A+Service]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>2472</wp:comment_id>
			<wp:comment_author><![CDATA[Jack van Hoof]]></wp:comment_author>
			<wp:comment_author_email>jack.vanhoof.soa.eda@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://soa-eda.blogspot.com</wp:comment_author_url>
			<wp:comment_author_IP>83.128.64.27</wp:comment_author_IP>
			<wp:comment_date>2007-03-24 15:24:19</wp:comment_date>
			<wp:comment_date_gmt>2007-03-24 22:24:19</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi Harry,

Great article! I think service in SOA (as SOA is currently understood) is a software component, but a component with a strong business function constraint. In my view SOA is an instance of a component based architecture as I concluded here: http://soa-eda.blogspot.com/2007/01/what-is-service-in-soa.html

This idea makes an SOA a composition of hierarchically encapsulated layers of callable business services that map to one or more processes.

I notice a misconception spreading around at a large sale between SOA-bloggers and article-writers, even by the great gurus. They are mixing up services which are functional components, and "Web Services" which is an interface implementation technology. To me it makes more sense to discuss at which levels of granularity the use of web services technology is appropriate. And that depends on system implementation characteristics such as degree of distribution and heterogeneity and desired openness.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Morning Coffee 50</title>
		<link>http://devhawk.net/2007/03/22/morning-coffee-50/</link>
		<pubDate>Thu, 22 Mar 2007 11:41:51 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://c4c5989f-b9c3-4f2e-aecc-d1f29a687c59</guid>
		<description></description>
		<content:encoded><![CDATA[<ul><li>Nick Carr on <a href="http://www.roughtype.com/archives/2007/03/is_a_neutral_ne.php">net neutrality</a>: "Protocol is neutral. Infrastructure isn't." This is a more complicated issue than it appears on the surface.  </li><li>Nick Malik on <a href="http://blogs.msdn.com/nickmalik/archive/2007/03/22/understanding-enterprise-architecture.aspx">enterprise architecture</a>: "Enterprise Architecture is not about 'building solutions right'. Enterprise Architecture is about 'building the right solutions'.  </li><li>If there had been a good quote on <a href="http://blogs.msdn.com/drnick">Nicholas Allen's blog</a> today, then I could declare it "Quote a Nick" day. Alas, his posting on how to <a href="http://blogs.msdn.com/drnick/archive/2007/03/22/responding-to-getproperty.aspx">respond to GetProperty</a> isn't very quotable. </li><li>Hot on the heels of the new GAT CTP is the new <a href="http://softwarefactoriestoolkit.net/Download_Feb07CTP.aspx">Software Factories Toolkit CTP</a> from Clarius. Among other new features is a Recipe Designer. Having mucked around in the Recipe XML, this is A Good Thing<sup>TM</sup> (via <a href="http://www.larkware.com/dg8/TheDailyGrind1104.aspx">Larkware</a>) </li><li>Politics 2.0 Watch: Phil de Vellis - the guy that made "<a href="http://www.youtube.com/watch?v=6h3G-lMZxjo">Vote Different</a>", the Hillary Clinton/Apple 1984 video mashup - <a href="http://www.huffingtonpost.com/phil-de-vellis-aka-parkridge/i-made-the-vote-differen_b_43989.html">said he made said video</a> in part because he "wanted to show that an individual citizen can affect the process". Furthermore, "This shows that the future of American politics rests in the hands of ordinary citizens." Personally, Bush as Big Brother would have been more appropriate, but I think the video got more attention becuase it cast Hillary in that role. </li></ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>919</wp:post_id>
		<wp:post_date>2007-03-22 11:41:51</wp:post_date>
		<wp:post_date_gmt>2007-03-22 11:41:51</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>morning-coffee-50</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="domain-specific-languages"><![CDATA[Domain Specific Languages]]></category>
		<category domain="category" nicename="morning-coffee"><![CDATA[Morning Coffee]]></category>
		<category domain="category" nicename="politics"><![CDATA[Politics]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[c4c5989f-b9c3-4f2e-aecc-d1f29a687c59]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Morning+Coffee+50]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/03/22/Morning+Coffee+50]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>2475</wp:comment_id>
			<wp:comment_author><![CDATA[DevHawk]]></wp:comment_author>
			<wp:comment_author_email>harry@devhawk.net</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>131.107.0.102</wp:comment_author_IP>
			<wp:comment_date>2007-03-23 08:15:23</wp:comment_date>
			<wp:comment_date_gmt>2007-03-23 15:15:23</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Mike, everyone's entitled to their own opinions. Nice to know people can enjoy my blog while disagreeing with my political opinions.

However, I wanted to correct one thing in your comment: Phil de Villis - the guy that made the video - wasn't fired by his employer, he resigned by choice. From the blog post I linked to above (that he wrote): "The company had no idea that I'd created the ad, and neither did any of our clients. But I've decided to resign anyway so as not to harm them, even by implication."]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>2473</wp:comment_id>
			<wp:comment_author><![CDATA[Sam Gentile]]></wp:comment_author>
			<wp:comment_author_email>sgentile@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://codebetter.com/blogs/sam.gentile/</wp:comment_author_url>
			<wp:comment_author_IP>63.250.134.163</wp:comment_author_IP>
			<wp:comment_date>2007-03-22 14:05:35</wp:comment_date>
			<wp:comment_date_gmt>2007-03-22 21:05:35</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[No New and Notable 150 Link??? -)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>2474</wp:comment_id>
			<wp:comment_author><![CDATA[Mike Clark]]></wp:comment_author>
			<wp:comment_author_email>mike@clarkmichael.com</wp:comment_author_email>
			<wp:comment_author_url>http://blog.clarkmichael.com</wp:comment_author_url>
			<wp:comment_author_IP>71.32.89.129</wp:comment_author_IP>
			<wp:comment_date>2007-03-22 20:47:04</wp:comment_date>
			<wp:comment_date_gmt>2007-03-23 03:47:04</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[W would have been better cast in the role?  Republican politicians are no worse at the kind of dissent-stifling than Democratic politicians.  One good example is the "Fairness Doctrine."  The R's aren't particularly interested in the concept (because it's the *conservative* talk shows that are the target of such legislation, natch), but the D's would dearly love to stifle that kind of dissent, and so the FD is a perennial topic among them.  Just like those fine folks who appear to want to make dissent on Global Warming into some kind of crime.

Harry, they are mostly all of them demogogues and afraid to death of dissent.  Some of them are just better at hiding it.

Oh, and by the way, the guy who got fired for this was fired by his employer, who is definitely D.  Of course, considering that they have an economic stake in the D's, it is completely understandable.  An R-related firm would have done the same.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Morning Coffee 51</title>
		<link>http://devhawk.net/2007/03/23/morning-coffee-51/</link>
		<pubDate>Fri, 23 Mar 2007 11:40:06 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://bc8ee4bb-98d4-413d-a41c-3a22df80ea36</guid>
		<description></description>
		<content:encoded><![CDATA[<ul><li>Visual Studio for DB Professionals - my <a href="http://feeds.feedburner.com/~r/Devhawk/~3/102926655/VSTDB+Where+Have+You+Been+All+My+Life.aspx">favorite new part</a> of the Visual Studio - won a <a href="http://www.knowing.net/PermaLink,guid,497576ed-8387-43aa-8f76-342484865b36.aspx">JOLT award</a>. Congrats to the Data Dudes! (via <a href="http://www.knowing.net/PermaLink,guid,497576ed-8387-43aa-8f76-342484865b36.aspx">Knowing.NET</a>) </li><li>When they're older, I'd like to send my kids to <a href="http://www.tinkeringschool.com/blog/">Tinkering School</a>. Come to think of it, I'd like to go with them to Tinkering School. According to <a href="http://blog.wired.com/geekdad/2007/03/tinkering_camp.html">Geekdad</a>, they're looking helping others set up their own Tinkering Schools. I wonder if <a href="http://techiewife.spaces.live.com/">Jules</a> would be down to help me run one? </li><li><a href="http://www.sandboxie.com/">Sandboxie</a> is a sandbox environment for your windows based PC. Basically, it traps writes to the filesystem and registry and stores them in a seperate file that is easily tossed away. Sort of like virtual machine differencing drives, but for your host machine. I'll have to check it out. I wonder how it <a href="http://www.softricity.com/products/virtualization.asp">compares</a> to Microsoft's recent aqusition <a href="http://www.softricity.com/">Softricity</a>? (via <a href="http://www.larkware.com/dg8/TheDailyGrind1105.aspx">Larkware News</a>) </li><li>I didn't realize <a href="http://www.bugbash.net">Bug Bash</a> had an external website. As per the <a href="http://www.bugbash.net/about/">about page</a>, Bug Bash started "a comic strip in the company newsletter of a large northwest software company...[who's] name rhymes with 'Microsoft'." It is a hilarious Dev/IT focused comic strip from the same guy who writes <a href="http://www.mrcranky.com/">Mr. Cranky</a>. <a href="http://feeds.feedburner.com/BugBash">Subscribed</a>. (via <a href="http://www.codinghorror.com/blog/archives/000821.html">Coding Horror</a>)</li></ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>920</wp:post_id>
		<wp:post_date>2007-03-23 11:40:06</wp:post_date>
		<wp:post_date_gmt>2007-03-23 11:40:06</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>morning-coffee-51</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="morning-coffee"><![CDATA[Morning Coffee]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[bc8ee4bb-98d4-413d-a41c-3a22df80ea36]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Morning+Coffee+51]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/03/23/Morning+Coffee+51]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Morning Coffee 52</title>
		<link>http://devhawk.net/2007/03/26/morning-coffee-52/</link>
		<pubDate>Mon, 26 Mar 2007 10:33:33 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://a22d39a4-4ce8-45c6-bcff-20aea4627b78</guid>
		<description></description>
		<content:encoded><![CDATA[<ul><li>I finally found a use for the <a href="http://devhawk.net/2006/09/27/Thoughts+On+The+SOA+Workshop.aspx">free SOA book I got</a> from attending that Thomas Erl workshop. I'm using it to prop up one end of my daughter's mattress while she's sick so she can sleep better. 
</li><li>Jeff Tash states axiomatically that <a href="http://www.flashmapsystems.com/resources/articles/articles17.htm">CASE has evolved into Enterprise Architecture</a>. I agree with his points about why software construction isn't like manufacturing, but he seems to be describing <a href="http://en.wikipedia.org/wiki/BDUF">BDUF</a> rather than EA. I'm anti-BDUF too, but why blame EA? (via <a href="http://blogs.msdn.com/jdevados/archive/2007/03/24/case-and-enterprise-architecture.aspx">John deVadoss</a>) 
</li><li>Joe McKendrick <a href="http://blogs.zdnet.com/service-oriented/?p=839">comments</a> on my <a href="http://devhawk.net/2007/03/21/When+Is+A+Service+Not+A+Service.aspx">SaaS/SOA post</a> and wonders if SOA should stand for "SOA Oriented Architecture". He also <a href="http://blogs.zdnet.com/service-oriented/?p=840">writes</a> that most organizations these days don't have an SOA, they have an AOS, "Agglomeration Of Services". So true, so true. 
</li><li>JD Meier <a href="http://blogs.msdn.com/jmeier/archive/2007/03/26/vsts-guidance-project-update.aspx">talks up</a> the new <a href="http://www.codeplex.com/VSTSGuidance">VSTS guidance</a> available on CodePlex. Looks like some good stuff in there. I like how the p&amp;p guys are moving from documents to wikis to deliver their guidance. 
</li><li>I've held off on getting the HD-DVD drive for my Xbox, but I think I'm going to cave soon, where soon == about two months. That's when <a href="http://www.engadgethd.com/2007/03/21/matrix-trilogy-to-hit-hd-dvd-may-22nd-blu-ray-later-this-year/">The Matrix Trilogy</a> is released on HD-DVD. Right around my birthday too, how convienent. </li></ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>921</wp:post_id>
		<wp:post_date>2007-03-26 10:33:33</wp:post_date>
		<wp:post_date_gmt>2007-03-26 10:33:33</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>morning-coffee-52</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="morning-coffee"><![CDATA[Morning Coffee]]></category>
		<category domain="post_tag" nicename="soa"><![CDATA[SOA]]></category>
		<category domain="post_tag" nicename="visual-studio"><![CDATA[Visual Studio]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[a22d39a4-4ce8-45c6-bcff-20aea4627b78]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Morning+Coffee+52]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/03/26/Morning+Coffee+52]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>2476</wp:comment_id>
			<wp:comment_author><![CDATA[Graham Shevlin]]></wp:comment_author>
			<wp:comment_author_email>graham@grahamshevlin.com</wp:comment_author_email>
			<wp:comment_author_url>http://grahamshevlin.com</wp:comment_author_url>
			<wp:comment_author_IP>192.85.47.2</wp:comment_author_IP>
			<wp:comment_date>2007-04-03 10:15:51</wp:comment_date>
			<wp:comment_date_gmt>2007-04-03 17:15:51</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I looked at the article about CASE morphing into EA, and I have to say I think it is well wide of the mark. He is right that CASE was top-down, and that software creation analogies to manufacturing are of limited value. However, EA is fundamentally different to CASE. CASE was about using higher-order modeling to generate solutions. EA does not cover that area. I would argue that CASE has morphed into Software Factories/DSLs. The DSL wave is an attempt to re-introduce higher-order models as a source for code generation in a more limited way, with less of the top-down "stone tablets" approach. 
The explanation that CASE failed because of "too many promises made by too many vendors" is deficient. That reason is a contributory factor to the failure of just about any recent I.T. technology failures; all vendors tend to over-sell new offerings (expansive hype gets you noticed in a crowded marketplace; modesty doesn't). There are a collection of inter-related reasons why CASE failed, ranging from under-investment, through the impact of disruptive technologies in the 1990's (client-server and the emergence of UML)...the list goes on. Over-selling by vendors is a very small part of the root causes. (I know...I was a CASE consultant for 8 years). ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Morning Coffee 53</title>
		<link>http://devhawk.net/2007/03/27/morning-coffee-53/</link>
		<pubDate>Tue, 27 Mar 2007 10:18:18 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://e56be855-d06b-4c35-81d5-934d27bc7b98</guid>
		<description></description>
		<content:encoded><![CDATA[<ul><li>The Virtual PC 2007 virtual video card seems to max out @ 1600 x 1200 resolution. Given that the two screens on my main dev workstation are 1200x1600 (i.e. portait mode) and 1680x1050, it means I can't run VPC in full screen on my dev box. I can get close on the widescreen monitor, but I like writing code on the portain monitor better. Luckily, I can use remote desktop instead the built in VPC display window in order to get full screen on either monitor.  </li><li>Soma <a href="http://blogs.msdn.com/somasegar/archive/2007/03/26/visual-studio-turns-10.aspx">announces</a> the aquisition and immediate (i.e. free) availability of Teamplain web client for VSTS as part of Visual Studio's 10th birthday. We're also "publishing the Orcas Wave (Orcas + Rosario) <a href="http://msdn2.microsoft.com/teamsystem/bb407307.aspx">roadmap for VSTS</a>." I'll be interested to see the reaction to that. Mike's reacti<a href="http://www.larkware.com/dg8/TheDailyGrind1107.aspx">on to the schedule</a> was: "That's insane". </li><li>THe XNA tools just keep coming. Allegorithmic's MaPZone texture creation tool <a href="http://www.mapzoneeditor.com/?PAGE=COMMUNITY.XNA">is free to XNA developers</a>. Actually, it looks like it's <a href="http://www.mapzoneeditor.com/">free for everyone</a>, as a carrot to upgrade to their procedural texture tool <a href="http://www.mapzoneeditor.com/?PAGE=PROFX">ProFX</a>. Still, free tools are still free. (via <a href="http://klucher.com/archive/2007/03/27/download-mapzone-texture-authoring-tool-for-free.aspx">Michael Klucher</a>) </li><li>Can I get 1200U of rackspace, to go? <a href="http://www.rackable.com/solutions/concentro.htm">Apparently, yes</a>. (via <a href="http://halfmybrain.spaces.live.com/Blog/cns!DF6CA820250998D2!380.entry">Half My Brain</a>) </li><li>Watched the season finale of Battlestar Galactica last night. Wow, is there a better show on TV right now? (yes, one: Lost. But that's it) When it ended, my wife said "We have to wait until 2008 for a new episode? That sucks". I couldn't agree more.</li></ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>922</wp:post_id>
		<wp:post_date>2007-03-27 10:18:18</wp:post_date>
		<wp:post_date_gmt>2007-03-27 10:18:18</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>morning-coffee-53</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="battlestar-galactica"><![CDATA[Battlestar Galactica]]></category>
		<category domain="category" nicename="morning-coffee"><![CDATA[Morning Coffee]]></category>
		<category domain="post_tag" nicename="visual-studio"><![CDATA[Visual Studio]]></category>
		<category domain="post_tag" nicename="xbox-360"><![CDATA[Xbox 360]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[e56be855-d06b-4c35-81d5-934d27bc7b98]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Morning+Coffee+53]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/03/27/Morning+Coffee+53]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Morning Coffee 54</title>
		<link>http://devhawk.net/2007/03/28/morning-coffee-54/</link>
		<pubDate>Wed, 28 Mar 2007 10:58:18 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://39265b7d-0ac3-4984-9967-7130b72a431f</guid>
		<description></description>
		<content:encoded><![CDATA[<ul><li>The black <a href="http://www.xbox.com/hardware/xbox360elite">Xbox 360 Elite</a> is official. Details on <a href="http://gamerscoreblog.com/team/archive/2007/03/27/543284.aspx">Gamerscore</a> and <a href="http://www.majornelson.com/archive/2007/03/27/the-one-about-the-xbox-360-elite.aspx">Major Nelson</a>.  </li><li>Jamie Fristrom of <a href="http://www.torpexgames.com">Torpex Games</a> <a href="http://www.gamedevblog.com/2007/03/some_answers.html">writes</a> about XNA and the approval process for making an Xbox Live Arcade game. At the end of his post, he confirms that his team is using a "pre-pre-alpha" version of XNA Game Studio <u><em>Professional</em></u>. I wonder how long before that's widely available?  </li><li>Politics 2.0 Advice: When building your MySpace page, don't use images hosted on other peoples servers. John McCain found out the <a href="http://www.techcrunch.com/2007/03/27/john-mccains-myspace-page-hacked/">hard way</a>. (via <a href="http://www.balloon-juice.com/?p=8007">Balloon Juice</a>)  </li><li>Speaking of Politics 2.0, you can check out the <a href="http://www.staterootsproject.org/">Roots Project</a>, <a href="http://www.firedoglake.com/2007/03/27/re-introducing-the-roots-project/">described</a> as "a social networking site for people with progressive values, allowing them to form their own groups, sharing information and best practices nationally while acting together locally." (via <a href="http://www.firedoglake.com/2007/03/27/re-introducing-the-roots-project/">firedoglake</a>)</li></ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>923</wp:post_id>
		<wp:post_date>2007-03-28 10:58:18</wp:post_date>
		<wp:post_date_gmt>2007-03-28 10:58:18</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>morning-coffee-54</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="morning-coffee"><![CDATA[Morning Coffee]]></category>
		<category domain="category" nicename="politics"><![CDATA[Politics]]></category>
		<category domain="post_tag" nicename="xbox-360"><![CDATA[Xbox 360]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[39265b7d-0ac3-4984-9967-7130b72a431f]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Morning+Coffee+54]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/03/28/Morning+Coffee+54]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Morning Coffee 55</title>
		<link>http://devhawk.net/2007/03/29/morning-coffee-55/</link>
		<pubDate>Thu, 29 Mar 2007 10:12:26 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://4435e2c6-4567-4942-8c83-d9a82f151ee6</guid>
		<description></description>
		<content:encoded><![CDATA[<ul><li>Many years ago, I picked .net instead of .com as DevHawk's TLD. My old pal Chris picked up devhawk.com and redirected it to the site because he got tired of typing "devhawk ctl-enter" into the browser address bar and getting nothing. He must have let it lapse because now devhawk.com points to what looks like a splog in development. Part of me is annoyed, but a bigger part of me just doesn't give a shit. You - dear reader - have found this site, and that is all I care about.</li><li>A couple of weekends ago, I re-wired my living room to enable surround sound. It meant adding a receiver to the mix, and that pushed us into three remote territory, which is too many. So I picked up a <a href="http://www.logitech.com/index.cfm/products/features/harmony/US/EN,CRID=2078">Logitech Harmony Universal Remote</a>, since they have one <a href="http://www.logitech.com/index.cfm/products/detailsharmony/US/EN,CRID=2084,CONTENTID=11250">specifically for the Xbox 360</a>. So far so good, but I'm not sure my wife likes it much yet. However, their remote config application doesn't run on Vista yet, so I had to bust out the old laptop to get it working.</li><li>I've <a href="http://devhawk.net/2006/08/02/LangNET+Is+Helping+Game+Developers.aspx">written about</a><a href="http://research.microsoft.com/specsharp/">Spec#</a> before, but I've never experimented with it. MS Research just released a <a href="http://research.microsoft.com/research/downloads/Details/f96c1618-b332-4106-b0fc-911346d5f537/Details.aspx">new version</a> that support VS05, so here's my chance. (via <a href="http://www.larkware.com/dg8/TheDailyGrind1109.aspx">Larkware</a>)</li><li>Speaking of MS Research, the <a href="http://labs.live.com/Deepfish/default.aspx">Deepfish project</a> has released a new <a href="http://labs.live.com/deepfish/dfblogs/Take+Deepfish+For+A+Swim.aspx">tech preview</a>. However, Loke Uei is reporting they've <a href="http://blogs.msdn.com/lokeuei/archive/2007/03/29/deepfish-technology-preview-available-now.aspx">already maxed out</a> on test accounts. (via <a href="http://www.majornelson.com/archive/2007/03/28/deepfish.aspx">Major Nelson</a>)</li><li>Jeff Atwood says there's <a href="http://www.codinghorror.com/blog/archives/000827.html">no substitute for learning on the battlefield</a>. I always say that the only way to get good at something is to suck at it for a while. Different words, same concept.</li><li><a href="http://blogs.msdn.com/nnaderi/archive/2007/03/27/unit-testing-trickling-into-pro.aspx">According to Naysawn Naderi</a>, the "majority" of unit test features are being added to the Orcas Pro version. This is obviously good news, though personally I <a href="http://www.agileprogrammer.com/dotnetguy/archive/2007/03/28/22529.aspx">agree with Brad</a> that they should available separately VS. Not sure it needs to be in the framework itself, inclusion in the .NET Framework SDK is probably sufficient. I also think there should be unit test support in the VS express editions as well. (via <a href="http://www.knowing.net/PermaLink,guid,e3a8925c-97ac-469b-ad87-f22658f04735.aspx">Knowing.NET</a>)</li><li>I've been digging <a href="http://blog.wired.com/geekdad/">Geekdad</a>, but most of the stuff is for older kids. I mean, I'd love to take <a href="http://blog.wired.com/geekdad/2007/03/karting_with_da.html">my daughter karting</a>, but she's only two and can't reach the pedals! However, I'm itching to try out today's post on <a href="http://blog.wired.com/geekdad/2007/03/fun_with_image_.html">image searching with younger kids</a>. The kids love to draw on my new tablet, so I'm thinking of not only searching but snipping these images into OneNote for them to doodle on. </li></ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>924</wp:post_id>
		<wp:post_date>2007-03-29 10:12:26</wp:post_date>
		<wp:post_date_gmt>2007-03-29 10:12:26</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>morning-coffee-55</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="blogging"><![CDATA[Blogging]]></category>
		<category domain="post_tag" nicename="family"><![CDATA[Family]]></category>
		<category domain="category" nicename="morning-coffee"><![CDATA[Morning Coffee]]></category>
		<category domain="post_tag" nicename="visual-studio"><![CDATA[Visual Studio]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[4435e2c6-4567-4942-8c83-d9a82f151ee6]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Morning+Coffee+55]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/03/29/Morning+Coffee+55]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>2477</wp:comment_id>
			<wp:comment_author><![CDATA[SelectSplat]]></wp:comment_author>
			<wp:comment_author_email>selectsplat@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.devhawk.com</wp:comment_author_url>
			<wp:comment_author_IP>71.206.160.123</wp:comment_author_IP>
			<wp:comment_date>2007-04-05 16:35:43</wp:comment_date>
			<wp:comment_date_gmt>2007-04-05 23:35:43</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Greetings,

Interestingly enough, I found this post while checking to see what backlinks has propogated to my new <a title="Web Development Programming" href="http://www.devhawk.com" rel="nofollow">Web Development Programming</a> blog, DevHawk.com. 

I'm sorry to hear that you were annoyed that I picked up the domain. As soon as I saw it listed I thought it was a great name. I see we have similar taste in that regard. 

In any event, I'm a long time programmer (10 years plus). You can see a bunch of sties I've worked on over the years on my portfolio site at www.adhocdevelopment.com. While I admit that most of the content at devhawk.com will be syndicated, there are about a dozen original articles I wrote myself, and I plan to write a new article about one per week. Most of the articles are about ecommerce software, or search engine optimization. 

Anyways, I thought I'd stop by and say , "Hi".]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Coffee Break</title>
		<link>http://devhawk.net/2007/03/30/coffee-break/</link>
		<pubDate>Fri, 30 Mar 2007 11:53:09 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://6f087360-ed84-4d57-9755-b237620d1708</guid>
		<description></description>
		<content:encoded><![CDATA[<p>I've had a solid morning of meetings. I'm a little sick. My wife leaving town for a few days. Last but not least, things seem afwul quiet out in the blogoshpere. Thus, no Morning Coffee post today or Monday. See you Tuesday.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>925</wp:post_id>
		<wp:post_date>2007-03-30 11:53:09</wp:post_date>
		<wp:post_date_gmt>2007-03-30 11:53:09</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>coffee-break</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="morning-coffee"><![CDATA[Morning Coffee]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[6f087360-ed84-4d57-9755-b237620d1708]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Coffee+Break]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/03/30/Coffee+Break]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Morning Coffee 56</title>
		<link>http://devhawk.net/2007/04/03/morning-coffee-56/</link>
		<pubDate>Tue, 03 Apr 2007 11:07:04 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://dcf31a8e-f2ea-450c-8d29-43541524190d</guid>
		<description></description>
		<content:encoded><![CDATA[<ul><li>I survived the weekend no problem. My wife has <a href="http://techiewife.spaces.live.com/Blog/cns!3DAECC033B88329C!691.entry">the details</a> of what <em>she</em> did for the weekend while I played Mr. Mom. The kids were great, we even went to see the Easter Bunny on Sunday. Wish the weather had been better, but we did get to go on a little walk around the neighborhood between hailstorms Sunday after naps. </li><li>Between taking the kids all morning until Jules got home from the airport and going to <a href="http://sportsillustrated.cnn.com/baseball/mlb/recaps/2007/04/02/17528_recap.html">opening day</a> for a team morale event, I worked about 30 minutes yesterday. In case you're wondering, that's way below average. I typically work at least twice that every day. :)</li><li>After maintaining a post a day average for January and February, I slipped a bit in March. Twenty seven posts in thirty one days. So that puts me five posts behind for the year as of this one. </li><li><a href="http://halfmybrain.spaces.live.com/">Dale</a> let me borrow Madden 07 for the weekend so I could <a href="http://live.xbox.com/en-US/profile/Achievements/ViewAchievementDetails.aspx?tid=%09%5D:dh)k0%02p&amp;compareTo=RayTracer">pump my gamerscore</a> (a practice called <a href="http://gaming.hexus.net/content/item.php?item=4798">gamerscore whoring</a>). I still need 255 points by April 22nd to complete the <a href="http://xboxrewards.msgamestudios.com/challengesandrewards/ChallengeDetail.aspx?id=4">Old Spice Experience Challenge</a>. I'm not proud of it, but it's not like I have much time to play these days.</li><li>Mads Kristensen has a new .NET blog engine intuitively called <a href="http://blog.madskristensen.dk/post/Getting-started-with-BlogEngineNET.aspx">BlogEngine.NET</a>. I wonder how it compares to <a href="http://www.dasblog.info/">dasBlog</a>, which powers DevHawk. (via <a href="http://www.dotnetkicks.com/aspnet/The_launch_of_BlogEngine_NET">DotNetKicks</a>)</li><li>I wrote a <a href="http://devhawk.net/2007/03/29/Morning+Coffee+55.aspx">last week</a> that unit test support should be in the Express editions of VS. Thanks to Jamie Cansdale, <a href="http://weblogs.asp.net/nunitaddin/archive/2007/04/02/express-sku-support.aspx">it is</a>. (via <a href="http://www.larkware.com/dg8/TheDailyGrind1112.aspx">Larkware</a>)</li><li>Scott Hanselman saved his C# <a href="http://www.hanselman.com/blog/RescuingTheTinyOSInC.aspx">Tiny OS project</a> from the impending shutdown of GDN and reposted it to his blog. I first met Scott at TechEd Malaysia 2002, so I remember seeing him present this "back in the day".</li><li>EMI is going to <a href="http://www.emigroup.com/Press/2007/press18.htm">start offering songs</a> sans DRM @ $1.29 a pop. Assuming other labels follow suit, this is gonna be huge. (via <a href="http://blogs.msdn.com/lokeuei/archive/2007/04/02/death-of-drm.aspx">Loke Uei</a>) </li><li>Jomo Fisher <a href="http://blogs.msdn.com/jomo_fisher/archive/2007/03/28/fast-switching-with-linq.aspx">writes</a> about using LINQ as a string switch compiler that's about 900% faster than using a hash table. Money quote: "Any time I see a data structure with a capability I’m not using it makes me wonder whether I can trade that capability for something I <i>do</i> need—in this case a speed boost." LINQ is turning out to be much more interesting than just a (much) better way to query databases. (via <a href="http://www.dotnetkicks.com/csharp/Fast_Switching_with_LINQ">DotNetKicks</a>)</li></ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>926</wp:post_id>
		<wp:post_date>2007-04-03 11:07:04</wp:post_date>
		<wp:post_date_gmt>2007-04-03 11:07:04</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>morning-coffee-56</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="blogging"><![CDATA[Blogging]]></category>
		<category domain="category" nicename="development"><![CDATA[Development]]></category>
		<category domain="post_tag" nicename="lanugages"><![CDATA[Lanugages]]></category>
		<category domain="category" nicename="morning-coffee"><![CDATA[Morning Coffee]]></category>
		<category domain="post_tag" nicename="xbox-360"><![CDATA[Xbox 360]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[dcf31a8e-f2ea-450c-8d29-43541524190d]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Morning+Coffee+56]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/04/03/Morning+Coffee+56]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>This Is Not A Technical Blog</title>
		<link>http://devhawk.net/2007/04/03/this-is-not-a-technical-blog/</link>
		<pubDate>Tue, 03 Apr 2007 11:23:14 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://8e4bec1f-a5d3-4dd5-b0e3-f9938d290427</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Sam Gentile decided to spawn a <a href="http://web.mac.com/fusionclr/iWeb/Sam%20Gentile%20Personal%20Site/Blog/Blog.html">new blog</a> because <a href="http://codebetter.com/blogs/sam.gentile/archive/2007/04/01/New-Personal_2C00_-Family-and-MAC-Site-and-Blog.aspx">he doesn't feel his CodeBetter blog</a> is the place to write about "politics, music, family or life in general". I understand Sam's feelings 100%. I maintained <a title="http://blogs.msdn.com/devhawk/" href="http://blogs.msdn.com/devhawk/">blogs.msdn.com/devhawk</a> for these exactly these reasons. But since I'm no longer an evangelist (or MVP, natch) and my blog no longer graces the pages of the <a href="http://msdn2.microsoft.com/architecture">MSDN Architecture Center</a>, I don't bother to provide a dev-centric, politically sanitized and work safe version of this blog. As I <a href="http://devhawk.net/2004/10/14/Waking+Up.aspx">wrote several years ago</a> that DevHawk is not a technical blog, it's my personal blog. Like Sam, I don't get paid to write it and if you don't want to put up with <a href="http://devhawk.net/CategoryView,category,Politics.aspx">my politics</a> to get <a href="http://devhawk.net/CategoryView,category,Architecture.aspx">my architecture insights</a>, you're free to unsubscribe. </p><p>Sam, if you're reading this, I suggest that you have one "master" blog and one "sanitized" blog, rather than two independent ones. I've tried having two separate blogs, but one always suffered. My rationale was always that there is only one "me" and I wanted once place that reflects the things I am passionate about. If I felt a specific post needed to be sanitized for whatever reason (too personal, too vulgar, not technical, etc.) I would simply choose to not cross post it to my MSDN blog. </p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>927</wp:post_id>
		<wp:post_date>2007-04-03 11:23:14</wp:post_date>
		<wp:post_date_gmt>2007-04-03 11:23:14</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>this-is-not-a-technical-blog</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="blogging"><![CDATA[Blogging]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[8e4bec1f-a5d3-4dd5-b0e3-f9938d290427]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[This+Is+Not+A+Technical+Blog]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/04/03/This+Is+Not+A+Technical+Blog]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>2480</wp:comment_id>
			<wp:comment_author><![CDATA[Libertarian]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>209.234.182.100</wp:comment_author_IP>
			<wp:comment_date>2007-04-03 13:09:10</wp:comment_date>
			<wp:comment_date_gmt>2007-04-03 20:09:10</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[No way would I unsubscribe from this blog. I think you're a pretty smart guy (albeit a bit misguided at times). Your technical content is very interesting and insightful. Your inane political rants are entertaining and amusing. I feel the same way about Charles Petzold. Unsubscribing from either source would be as silly as boycotting good movies due to the politics of the actors. Don't throw the baby out with the bath water. :-)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>2478</wp:comment_id>
			<wp:comment_author><![CDATA[Jason Bock]]></wp:comment_author>
			<wp:comment_author_email>jason@jasonbock.net</wp:comment_author_email>
			<wp:comment_author_url>http://www.jasonbock.net</wp:comment_author_url>
			<wp:comment_author_IP>163.231.6.88</wp:comment_author_IP>
			<wp:comment_date>2007-04-03 11:56:21</wp:comment_date>
			<wp:comment_date_gmt>2007-04-03 18:56:21</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[To each his/her own, but I completely agree with you on this. Just have one blog. I actually like blogs that reflect the person for who they are, not just for the code they write.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>2479</wp:comment_id>
			<wp:comment_author><![CDATA[Don Demsak]]></wp:comment_author>
			<wp:comment_author_email>don@donxml.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.donxml.com</wp:comment_author_url>
			<wp:comment_author_IP>68.196.74.10</wp:comment_author_IP>
			<wp:comment_date>2007-04-03 13:04:29</wp:comment_date>
			<wp:comment_date_gmt>2007-04-03 20:04:29</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I agree, but I take it one step further.  I use a multiblog app (Community Server) so readers can easily pick a full feed, one of the specific feeds, or even filter it by tag.  It isn't optimal, but it works for me.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Morning Coffee 57</title>
		<link>http://devhawk.net/2007/04/04/morning-coffee-57/</link>
		<pubDate>Wed, 04 Apr 2007 10:57:07 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://67e186cb-20bb-435a-bdf5-1911dc5fb004</guid>
		<description></description>
		<content:encoded><![CDATA[<ul><li>Scott Hanselman's post on <a href="http://www.hanselman.com/blog/ProgrammersKeepYourWitsAboutYouAndCodeMindfully.aspx">Mindful Coding</a> reminded me of the practice of <a href="http://c2.com/cgi/wiki?RubberDucking">rubberducking</a>. The basic idea is that when you're stuck on a problem, you explain it <u>out loud</u> to an inanimate object - aka the rubber duck. (though when I originally heard about this practice, it was a teddy bear.) Maybe instgead of Coding Mindfully, we should be Coding Out Loud?  </li><li>Quick side note to the previous bullet: I have often worked thru a problem by explaining it to <a href="http://techiewife.spaces.life.com">my wife</a> who, like Scott's wife, nods in all the right places, but cares not about such things. But calling your wife a rubber duck is bad for your health, so I'd rather call it Coding Out Loud.  </li><li>I'm a couple weeks behind on this, but Microsoft along with BEA, BMC, Cisco, Dell, EMC, HP, IBM, Intel, and Sun <a href="http://www.w3.org/Submission/2007/01/">submitted</a> the <a href="http://www.microsoft.com/business/dsi/serviceml.mspx">Service Modeling Language</a> to the W3C. For those not plauing along at home, SML is the new name for the <a href="http://www.microsoft.com/business/dsi/sdmwp.mspx">System Definition Model</a> and is a core deliverable of the <a href="http://www.microsoft.com/business/dsi/">Dynamic System Initiative</a>. Good to see it's gotten such broad support for this. </li><li>Jezz Santos and Edward Baker wrote a series of posts entitled "<a href="http://blogs.msdn.com/jezzsa/archive/2007/01/25/factories-201.aspx">Factories 201</a>". The entire series is good, but I particularly liked Jezz' post <a href="http://blogs.msdn.com/jezzsa/archive/2007/02/02/factories-201-how-long-will-it-take.aspx">How Long Will It Take?</a> His rough estimate is that it takes at least five products built with a software factory before you recoup your investment in building the factory itself. Sounds like a fair assumption. </li></ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>928</wp:post_id>
		<wp:post_date>2007-04-04 10:57:07</wp:post_date>
		<wp:post_date_gmt>2007-04-04 10:57:07</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>morning-coffee-57</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="modelling"><![CDATA[Modelling]]></category>
		<category domain="category" nicename="morning-coffee"><![CDATA[Morning Coffee]]></category>
		<category domain="post_tag" nicename="operations"><![CDATA[Operations]]></category>
		<category domain="post_tag" nicename="software-factories"><![CDATA[Software Factories]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[67e186cb-20bb-435a-bdf5-1911dc5fb004]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Morning+Coffee+57]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/04/04/Morning+Coffee+57]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Morning Coffee 58</title>
		<link>http://devhawk.net/2007/04/05/morning-coffee-58/</link>
		<pubDate>Thu, 05 Apr 2007 10:41:20 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://16a9326e-9bb8-49e3-8424-b6d5f676dced</guid>
		<description></description>
		<content:encoded><![CDATA[<ul><li>Nicholas Allen points out that <a href="http://blogs.msdn.com/drnick/archive/2007/04/05/messaging-is-not-a-transaction.aspx">Messaging is not a Transaction</a>. Of course, what he <em>really</em> means is that Messaging <em>with WCF</em> is not a Transaction. Messaging with SSB is in fact a transaction (well, more accurately, it's transactional but you get the idea). Nick's right that you may not need anything more than simple retry semantics that you can implement yourself in your application protocol. But SSB has spoiled me. Why should <em>I</em> have to write the retry semantics? Why can't my messaging stack provide that for me? Or put another way, if I need a "precicely defined failure model", wouldn't I be better of choosing a messaging stack that provides that out of the box?</li><li>Steve Hartman <a href="http://stevenharman.net/blog/archive/2007/04/03/Using-Virtual-PC-with-Multiple-Monitors-Sort-Of.aspx">explains</a> how to use span Remote Desktop Connection across multiple monitors for use with VPC. I wonder if this will work on my machine, since my multi-monitor setup is an L shape, not a rectangle. I'm offsite today, so I'll try it tomorrow (via <a href="http://www.dotnetkicks.com/tipsandtricks/Using_Virtual_PC_with_Multiple_Monitors_Sort_Of">DotNetKicks</a>)</li><li>According to <a href="http://seattletimes.nwsource.com/html/businesstechnology/2003652014_zune05.html">news reports</a>, Microsoft is negotiating to provide DRM free music too. I wonder how well this will work for Microsoft given that both Zune and PlaysForSure provide subscription services. I would assume the $15 all-you-can-listen style subscription services wouldn't be DRM free. Given that program is one of the (few) selling points they have over Apple, will the availablity of DRM Free music undercut the interest in subscription? (via <a href="http://halfmybrain.spaces.live.com/Blog/cns!DF6CA820250998D2!388.entry">Dale</a>)</li></ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>929</wp:post_id>
		<wp:post_date>2007-04-05 10:41:20</wp:post_date>
		<wp:post_date_gmt>2007-04-05 10:41:20</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>morning-coffee-58</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="morning-coffee"><![CDATA[Morning Coffee]]></category>
		<category domain="post_tag" nicename="service-broker"><![CDATA[Service Broker]]></category>
		<category domain="post_tag" nicename="wcf"><![CDATA[WCF]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[16a9326e-9bb8-49e3-8424-b6d5f676dced]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Morning+Coffee+58]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/04/05/Morning+Coffee+58]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Afternoon Coffee 59</title>
		<link>http://devhawk.net/2007/04/09/afternoon-coffee-59/</link>
		<pubDate>Mon, 09 Apr 2007 14:45:20 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://a67e7b71-f6c7-4616-b80d-54793fdc997a</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Friday's Morning Coffee didn't happen because I fraked up the DNS settings when I moved devhawk.net to a new registrar. Today's morning coffee was drastically delayed on account of car troubles. Tuesday, I have an 8am meeting so tomorrow's not looking good either.</p><ul><li>The big news for Xbox 360 is details on the <a href="http://www.xbox.com/en-US/community/news/2007/0408-im.htm">Spring Update</a>. Big news is WLMessenger integration + a <a href="http://www.flickr.com/photos/gamerscore/451798354/">QWERTY thumb pad</a> that snaps right into the controller. (via <a href="http://gamerscoreblog.com/team/archive/2007/04/08/543788.aspx">Gamerscoreblog</a> and <a href="http://www.majornelson.com/archive/2007/04/08/details-of-the-may-07-dash-update.aspx">Major Nelson</a>) </li><li>Speaking of Xbox, I completed the <a href="http://xboxrewards.msgamestudios.com/challengesandrewards/ChallengeDetail.aspx?id=4">Old Spice Experience Challenge</a> today on my lunch break (couldn't go to the office due to the car troubles). My reward is an upgrade to level 2, a gamerpic I'll never use and a free copy of <a href="http://www.xbox.com/games/contraxboxlivearcade/">Contra</a>. (Estimated total value: $5) </li><li>Scott Guthrie continues his series on new language features in C#3/VB9. This time it's <a href="http://weblogs.asp.net/scottgu/archive/2007/04/08/new-orcas-language-feature-lambda-expressions.aspx">lambda expressions</a>. This is the "killer" feature in the new language version IMHO, since you can use lambda expressions either as code or data. Furthermore, it's up to the class/method handling the lambda expression to decide if it should be treated as code or data. That decision is made and design time, but the upside is that as a developer, I write my queries exactly the same way regardless if they are to be executed directly (aka code) or analyzed (aka data). Scott also metions a few new LINQ to * projects: <a href="http://linqinaction.net/blogs/main/archive/2006/09/07/Linq_to_Amazon_source_code.aspx">LINQ to Amazon</a>, <a href="http://blogs.magiconsoftware.com/blogs/bdiaz/archive/2007/04/03/implementing-linq-for-nhibernate-part-3-aggregate-and-element-operators.aspx">LINQ to NHibernate</a> and <a href="http://community.bartdesmet.net/blogs/bart/archive/2007/04/07/the-iqueryable-tales-linq-to-ldap-part-3-why-do-we-need-entities.aspx">LINQ to LDAP</a>. </li><li>Speaking of LINQ to *, here's <a href="http://blogs.msdn.com/lukeh/archive/2007/04/03/a-ray-tracer-in-c-3-0.aspx">LINQ to 3D Objects</a> in a C# ray tracer. I think it's safe to say that LINQ to *whatever* is the new hotness. (via <a href="http://www.dotnetkicks.com/csharp/Ray_Tracing_in_C_3_0">DotNetKicks</a>) </li><li>The <a href="http://blogs.msdn.com/dsyme/archive/2007/04/06/f-1-9-1-released.aspx">new version of F#</a> is out. Looks like the big new feature is Active Patterns which is described in this <a href="http://blogs.msdn.com/dsyme/archive/2007/04/07/draft-paper-on-f-active-patterns.aspx">draft paper</a>. If I only had more time to investigate this. (via <a href="http://blogs.msdn.com/dsyme">Don Syme</a>) </li><li>For the third time in the past six months, my laptop power supply has died. I've never had a problem like this before, much less three times. It's not even the same laptop as I recently moved over to a Tecra M4 Tablet. I just don't get it.  </li><li>P&amp;P has shipped the 3.0 release of <a href="http://codeplex.com/entlib">Enterprise Library</a>. Tom Hollander <a href="http://blogs.msdn.com/tomholl/archive/2007/04/05/just-released-enterprise-library-3-0-april-2007.aspx">has the details</a>. Personally, I am most interested in the new <a href="http://blogs.msdn.com/tomholl/archive/2007/02/23/announcing-the-policy-injection-application-block.aspx">Policy Injection Block</a>.  </li><li>Having worked with self-signed certificates and understanding what a PITA they are, it's nice to see that IIS 7 has <a href="http://weblogs.asp.net/scottgu/archive/2007/04/06/tip-trick-enabling-ssl-on-iis7-using-self-signed-certificates.aspx">explicit support for them</a>.  </li><li>I saw a reference to "<a href="http://www.amazon.com/Halo-Effect-Business-Delusions-Managers/dp/0743291255">The Halo Effect</a>" on one of the <a href="http://angrybear.blogspot.com/2007/04/halo-effect-and-efficiency-in-business.html">political blogs I read</a>. Needless to say, as an Xbox gamer, my first reaction was that this had something related to Master Chief. It doesn't. </li><li>Joe McKendrick compares <a href="http://blogs.zdnet.com/service-oriented/?p=850">SOA governance to national governance</a>. Given our polarized political climate, this analogy may hurt more than it helps. Also, the next enterprise architectural board that has equal "branch" footing with IT and executive management will be the first.</li></ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>930</wp:post_id>
		<wp:post_date>2007-04-09 14:45:20</wp:post_date>
		<wp:post_date_gmt>2007-04-09 14:45:20</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>afternoon-coffee-59</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="linq"><![CDATA[LINQ]]></category>
		<category domain="category" nicename="morning-coffee"><![CDATA[Morning Coffee]]></category>
		<category domain="post_tag" nicename="soa"><![CDATA[SOA]]></category>
		<category domain="post_tag" nicename="xbox-360"><![CDATA[Xbox 360]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[a67e7b71-f6c7-4616-b80d-54793fdc997a]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Afternoon+Coffee+59]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/04/09/Afternoon+Coffee+59]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Morning Coffee 60</title>
		<link>http://devhawk.net/2007/04/10/morning-coffee-60/</link>
		<pubDate>Tue, 10 Apr 2007 10:15:09 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://5e528319-2cac-498d-978e-bb5f999ef5b8</guid>
		<description></description>
		<content:encoded><![CDATA[<p>My car has a new battery so I am back in the office with my nose on the grindstone. I've spent most of the morning talking about SOA and my MSIT project, so I only have a few items today.</p><ul><li>Nicholas Carr <a href="http://www.roughtype.com/archives/2007/04/google_vs_sales.php">illustrates the coming competiton</a> between SalesForce.com and Google. Very interesting. Of course, that doesn't damp "their mutual disdain for the Horrible Monster of Redmond" as Carr puts it.</li><li>I decre that Peter Schneider officially has too much time on his hands. I mean, if he's got time to <a href="http://weblogs.asp.net/pschneider/archive/2007/04/08/brainf-compiler-and-interpreter-in-powershell.aspx">implement a compiler and interpreter</a> for <a href="http://en.wikipedia.org/wiki/Brainfuck">Brainfuck</a> in Powershell, what else has he got time for? On the other hand, it's short and shows how internal DSL friendly PS can be. (via <a href="http://www.larkware.com/dg8/TheDailyGrind1117.aspx">Larkware</a>) </li><li>Jeff Atwood <a href="http://www.codinghorror.com/blog/archives/000828.html">wonders</a> if MTurk is a failure. I <a href="http://devhawk.net/2006/03/08/Felipe+Cabrera+On+Amazons+Mechanical+Turk.aspx">wrote a year ago</a> that MTurk is a successful feature, but would be a failure as a stand-alone service. As I wrote then, "I’m guessing it would be worth it to Amazon to run the service even if they were the only ones using it."</li></ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>931</wp:post_id>
		<wp:post_date>2007-04-10 10:15:09</wp:post_date>
		<wp:post_date_gmt>2007-04-10 10:15:09</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>morning-coffee-60</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="morning-coffee"><![CDATA[Morning Coffee]]></category>
		<category domain="post_tag" nicename="powershell"><![CDATA[PowerShell]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[5e528319-2cac-498d-978e-bb5f999ef5b8]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Morning+Coffee+60]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/04/10/Morning+Coffee+60]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Is Guidance Automation Too Complex?</title>
		<link>http://devhawk.net/2007/04/11/is-guidance-automation-too-complex/</link>
		<pubDate>Wed, 11 Apr 2007 11:07:34 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://4fbb71b8-cf62-4e64-ac2c-eac81d8b6c41</guid>
		<description></description>
		<content:encoded><![CDATA[<p></p><p>Over the past couple of weeks, I've gotten a chance to spend time investigating the <a href="http://msdn2.microsoft.com/en-us/teamsystem/aa718948.aspx">Guidance Automation Toolkit</a>. For those who aren't familiar with GAT, it is the underlying enabling technology that powers <a href="http://msdn2.microsoft.com/en-us/practices/bb190387.aspx">p&amp;p's Software Factories</a>. Several of p&amp;p's factories include data access guidance, but that works against an actual database rather than a <a href="http://msdn2.microsoft.com/en-us/teamsystem/aa718807.aspx">VSTDB</a> project. Given my <a href="http://devhawk.net/2007/03/20/VSTDB+Where+Have+You+Been+All+My+Life.aspx">newfound love</a> for VSTDB + my interest in GAT, I thought I would whip up some simple automated guidance. </p><p>The key word in that last sentence is "thought". Turns out that authoring guidance in GAT is extremely unfriendly. GAT's unit of automation is called a recipe, which consists of arguments, wizards and actions. Arguments are GAT's equivalent of variables, wizards gather argument data from the user and actions execute changes to the solution based on the values of the arguments. There's more granularity to the GAT authoring model - for example, GAT arguments have optionally have value providers and converters (which should be called validators) - but you get the basic idea. </p><p>What makes GAT so hard is that all these recipe elements are wholly independent. This makes individual recipe elements easy to write and recipes fairly modular, but at the cost of making recipe very difficult to write. Your recipe has to define both the list of these elements that it uses as well as their interconnections. For example, arguments optionally contain value providers and converters. They are exposed to the user in wizards as either custom pages or arguments. They are fed into actions as input parameters. Action input parameters can also come from the output parameters of other actions. All these interconnections have to be hand coded in XML with fully specified type names like "Microsoft.Practices.RecipeFramework.VisualStudio.Library.Templates.TextTemplateAction, Microsoft.Practices.RecipeFramework.VisualStudio.Library". Ugh. </p><p>The good news for GAT is that help is on the way. Clarius' <a href="http://softwarefactoriestoolkit.net/">Software Factories Toolkit</a> includes a <a href="http://softwarefactoriestoolkit.net/RecipeDesigner_final.html">graphical domain specific language</a> for authoring recipes. With that tool, you can pick the various recipe elements from a list and connect them graphically instead of hand coding all of that in XML. But why do we have this problem in the first place? How much are we gaining by using this XML format in the first place? Frankly, I don't think very much. I think it would make more sense to define recipes in code than XML. </p><p>I was talking to <a href="http://blogs.msdn.com/mglehman/">Michael Lehman</a> about <a href="http://projectglidepath.net/">Project Glidepath</a>, which is built on GAT. However, Glidepath only uses GAT for integration with Visual Studio's menu system (which seems <a href="http://msdn2.microsoft.com/en-us/library/bb164639(VS.80).aspx">much more difficult</a> than it needs to be, but that's a separate post). Instead of GAT's recipe system, Glidepath plugins simply expose an Execute() method. Within that method, the plugin can do whatever it wants. Michael showed me the code behind the <a href="http://projectglidepath.net/blog/blogs/glidepath/archive/2007/04/04/166.aspx">Vista Bridge package</a>, and it is MUCH simpler than the GAT equivalent. I could see having a little more structure than just Execute(), but GAT seems like overkill in comparison. </p><p>Sometimes <a href="http://devhawk.net/2005/11/23/As+Simple+As+Possible+But+No+Simpler.aspx">complexity is necessary</a>. But I can't help but think that GAT's complexity wasn't really necessary. Wouldn't it have been simpler and just as modular to define a recipe in code instead? </p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>932</wp:post_id>
		<wp:post_date>2007-04-11 11:07:34</wp:post_date>
		<wp:post_date_gmt>2007-04-11 11:07:34</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>is-guidance-automation-too-complex</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="architecture"><![CDATA[Architecture]]></category>
		<category domain="post_tag" nicename="guidance"><![CDATA[Guidance]]></category>
		<category domain="post_tag" nicename="software-factories"><![CDATA[Software Factories]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[4fbb71b8-cf62-4e64-ac2c-eac81d8b6c41]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Is+Guidance+Automation+Too+Complex]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/04/11/Is+Guidance+Automation+Too+Complex]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>2481</wp:comment_id>
			<wp:comment_author><![CDATA[KR]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>68.18.70.123</wp:comment_author_IP>
			<wp:comment_date>2007-04-17 19:11:04</wp:comment_date>
			<wp:comment_date_gmt>2007-04-18 02:11:04</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[It absolutely is too complex! Microsoft is trying to tread so many new paths and so fast that one or more of them are bound to turn this way! Nothing against the Guidance Automation team but they should stop.. step back.. and start over. I have not seen even one architect or developer that is comfortable with the Guidance Automation concepts or tools. Infact they are more willing to write VS extensions and add-ins for custom functions than use GA tools and concepts. In all fairness, that team might still have a 'vision' to make everything simple.. that they are working towards.. If that is true, they should start laying out that vision and CTPs really fast in front of the developer community. If not.. think of this as a learning exercise and start over! :-)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Morning Coffee 61</title>
		<link>http://devhawk.net/2007/04/11/morning-coffee-61/</link>
		<pubDate>Wed, 11 Apr 2007 10:42:11 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://f21a181a-873d-4af2-a71f-4a6766bccb9f</guid>
		<description></description>
		<content:encoded><![CDATA[<ul><li>Nick Malik <a href="http://blogs.msdn.com/nickmalik/archive/2007/04/11/architecture-is-it-code-or-is-it-data.aspx">wonders</a> if architecture is code or if it's data? Frankly, I have nothing to add to this, but thought I should link to something Nick wrote since he's letting me share his office for the next few months while I'm engaged with one of the teams he mentions, though he begged me not to disclose which one. :) </li><li>Ted Neward's <a href="http://blogs.tedneward.com/PermaLink,guid,9bb6f310-ad61-4893-b1a2-0bd538ea5988.aspx">Five Minute Management Lessons for Developers</a> made me snicker. </li><li>Xbox.com is running a new contest called "<a href="http://www.xbox.com/en-US/community/events/mymomsagamer/default.htm">My Mom's a Gamer</a>". Mine is. These days, it's mostly casual games on <a href="http://zone.msn.com/">MSN Games</a>, but back in the day she played both the Atari 2600 and <a href="http://en.wikipedia.org/wiki/ColecoVision">Colecovision</a>. She would play <a href="http://en.wikipedia.org/wiki/Space_Invaders#Later_releases">Space Invaders</a> for hours. And curse. A lot. Most kids learned to curse on the playground, I learned from my mother.  </li><li>Mark Cuban claims the <a href="http://www.blogmaverick.com/2007/04/11/the-maturity-of-web-2-0-and-the-hdtv-is-the-pc/">HDTV is the new PC</a>. TV and PC technologies are certainly evolving as they merge, but will that platform be as open as the desktop PC or the browser? It better be. </li><li>According to Nick Carr, Citigroup is <a href="http://www.roughtype.com/archives/2007/04/citi_whacks_it.php">looking to cut</a> $4.6<em> billion</em> in spending over the next three years and that IT will be one of the "cornerstones" (i.e. hardest hit) of that effort. I had a chat with an Meta analyst in Australia a few years ago who suggested that IT spending was going to go thru an innovator's dilemma phase. Huge companies (like Citi) with huge IT budgets are facing significant competition from small companies that can't afford huge IT budgets. These smaller companies get used to running a tighter ship and tend to be more competitive as they grow and are able to directly face off against the big fish. </li></ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>933</wp:post_id>
		<wp:post_date>2007-04-11 10:42:11</wp:post_date>
		<wp:post_date_gmt>2007-04-11 10:42:11</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>morning-coffee-61</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="morning-coffee"><![CDATA[Morning Coffee]]></category>
		<category domain="post_tag" nicename="xbox-360"><![CDATA[Xbox 360]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[f21a181a-873d-4af2-a71f-4a6766bccb9f]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Morning+Coffee+61]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/04/11/Morning+Coffee+61]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Morning Coffee 62</title>
		<link>http://devhawk.net/2007/04/12/morning-coffee-62/</link>
		<pubDate>Thu, 12 Apr 2007 11:24:57 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://ff08d5e1-8c34-455a-9376-e05a0e01f093</guid>
		<description></description>
		<content:encoded><![CDATA[<p>It's a slow Thursday. </p><ul><li>BPEL 2.0 <a href="http://www.oasis-open.org/news/oasis-news-2007-04-12.php">has been approved</a> as an OASIS standard. John Evdemon from my old team <a href="http://blogs.msdn.com/jevdemon/archive/2007/04/12/ws-bpel-2-0-approved-as-an-oasis-standard.aspx">has the details</a>. As I've <a href="http://devhawk.net/2007/03/01/Late+Morning+Coffee+36.aspx">written before</a>, I think the spec is too heavily focused on executable process and not enough on abstract process. But I guess congrats are in order none the less.</li><li><a href="http://www.flos-freeware.ch/notepad2.html">Notepad2 v2</a> is out. Unfortunately, it still doesn't support user defined syntax schemes. I wonder if the switch from GPL to BSD license might encourage someone to add that support? (via <a href="http://www.larkware.com/dg8/TheDailyGrind1119.aspx">Larkware</a>)</li></ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>934</wp:post_id>
		<wp:post_date>2007-04-12 11:24:57</wp:post_date>
		<wp:post_date_gmt>2007-04-12 11:24:57</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>morning-coffee-62</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="morning-coffee"><![CDATA[Morning Coffee]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[ff08d5e1-8c34-455a-9376-e05a0e01f093]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Morning+Coffee+62]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/04/12/Morning+Coffee+62]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Morning Coffee 63</title>
		<link>http://devhawk.net/2007/04/13/morning-coffee-63/</link>
		<pubDate>Fri, 13 Apr 2007 11:15:16 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://a92f9001-e812-45eb-93f5-f22e948d0a26</guid>
		<description></description>
		<content:encoded><![CDATA[<ul><li>My friend Christoph Schittko (who used to blog <a href="http://weblogs.asp.net/cschittko/">here</a>, but hasn't written anything in almost two years) recently wrote on an internal email thread that he "wonder[s] how many more attempts for “enterprise wide” thingies we need for people to figure out that there’s too much complexity involved to coordinate anything enterprise wide." I couldn't agree more, though I think it's more than just complexity at work here. There are significant forces driving decentralization in society in general and IT in particular, and anything enterprise wide is by definition centralized. </li><li>I'm way behind on this, but Ray Ozzie did an <a href="http://knowledge.wharton.upenn.edu/article.cfm?articleid=1698">fascinating interview</a> with Knowledge@Wharton. I was especially interested in his separation of "big-I" and "small-i" innovation. Sounds like disruptive and sustaining innovation from <a href="http://www.amazon.com/Innovators-Dilemma-Technologies-Management-Innovation/dp/0875845851">The Innovator's Dilemma</a> to me. </li><li>According to <a href="http://blogs.zdnet.com/microsoft/?p=385">Mary Jo Foley</a>, my ex-teammate <a href="http://blogs.msdn.com/mikewalker/">Mike Walker</a> is "da man" on <a href="http://blogs.msdn.com/mikewalker/archive/2007/03/29/what-are-obas.aspx">Office Business Applications</a>, or OBA's. </li><li>I think I have an old PocketPC hanging around in a drawer somewhere. Apparently, I can use it as a <a href="http://www.binaryrefinery.com/main/PermaLink,guid,d8f9b0a3-f884-4a81-87e5-448d2beda19c.aspx">caller ID server</a> instead of gathering dust. That's sorta freaky. (via <a href="http://blogs.msdn.com/lokeuei/archive/2007/04/12/dust-off-those-old-ipaqs.aspx">Backstage @ MED</a>)</li><li>Quote of the Day: "If you have a live show on a TV network, Its not good to have a brain fart during a slow news week." - <a href="http://www.blogmaverick.com/2007/04/12/imus-fcc-cable-limits-and-corporately-owned-media/">Mark Cuban</a>. Personally, I don't care one way or the other about Don Imus, but Mark's points about the conservatism of media corporations are spot on. </li></ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>935</wp:post_id>
		<wp:post_date>2007-04-13 11:15:16</wp:post_date>
		<wp:post_date_gmt>2007-04-13 11:15:16</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>morning-coffee-63</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="morning-coffee"><![CDATA[Morning Coffee]]></category>
		<category domain="post_tag" nicename="quote-of-the-day"><![CDATA[Quote of the Day]]></category>
		<category domain="post_tag" nicename="soa"><![CDATA[SOA]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[a92f9001-e812-45eb-93f5-f22e948d0a26]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Morning+Coffee+63]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/04/13/Morning+Coffee+63]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>2482</wp:comment_id>
			<wp:comment_author><![CDATA[Dale Churchward]]></wp:comment_author>
			<wp:comment_author_email>Dale.Churchward@microsoft.com</wp:comment_author_email>
			<wp:comment_author_url>http://halfmybrain.spaces.live.com/</wp:comment_author_url>
			<wp:comment_author_IP>131.107.0.102</wp:comment_author_IP>
			<wp:comment_date>2007-04-13 12:28:57</wp:comment_date>
			<wp:comment_date_gmt>2007-04-13 19:28:57</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[It seemed to me that Mark Cuban's point was more that media corporations are extremely publicity sensitive. In truth aren't most media companies more interested in not upsetting any major group as that reduces ratings. It has nothing to do with being conservative, it has much more to do with maximizing the customer base.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Morning Coffee 64</title>
		<link>http://devhawk.net/2007/04/16/morning-coffee-64/</link>
		<pubDate>Mon, 16 Apr 2007 10:38:50 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://2a257b8a-3b0c-4747-ba8e-c20764ed5967</guid>
		<description></description>
		<content:encoded><![CDATA[<ul><li>I took my son to the <a href="http://pacsci.org/">Pacific Science Center</a> this past weekend to see the <a href="http://www.pacsci.org/grossology/">Grossology exibit</a>. His favorite was the barfing machine, but we also got to play Urine: The Videogame, stand inside a giant nose, work the burping machine, climb the scab wall and slide down the throat into the stomach and come out thru the colon. We also checked out the dinosaur exibit (Patrick's favorite part: petrified dino poop), Kids Works and the Peter and the Wolf laser show. It was awesome.</li><li>This week's Big News<sup>tm</sup> is the rebranding of WPF/E as <a href="http://www.microsoft.com/silverlight">Silverlight</a>. Tim Sneath has the <a href="http://blogs.msdn.com/tims/archive/2007/04/15/introducing-microsoft-silverlight.aspx">rundown</a>, including the news that more news about Silverlight is coming at <a href="http://www.visitmix.com/">MIX</a>. Personally, I think Silverlight is a great name. I was worried it was going to be another W*F name. (I'm waiting for the day that MSFT marketing tries to rebrand Win32 as the Windows Technical Foundation). </li><li>Gianpaolo Carraro writes about what happens when a SaaS company <a href="http://blogs.msdn.com/gianpaolo/archive/2007/04/15/saas-company-biting-the-dust-and-idea-for-a-new-startup-i-think.aspx">bites the dust</a> - i.e. "what happens to my data?" I expect that this is one of the aspects of SaaS that you have to weigh, though I doubt most companies will explicitly think about what happens if their SaaS provider goes belly up. As the SaaS market expands and more companies will go belly up (I agree w/ GP 100% that this isn't SaaS specific, rather a natural force of any market) how much will that drag on SaaS adoption? I'm thinking it'll be a fairly significant drag, but the SaaS market will eventually rebound.</li><li>Nick Malik picks up the decentralization meme is <a href="http://devhawk.net/2007/04/13/Morning+Coffee+63.aspx">started last Friday</a> and <a href="http://blogs.msdn.com/nickmalik/archive/2007/04/14/is-central-planning-impossible.aspx">compares</a> enterprise architecture to city zoning boards. In general, I agree with Nick's "not in a vacuum and not with a heavy hand" comment, but even more with his point that "we haven't figured all it out yet." Most EA efforts I've seen have been heavy handed and fairly divorced from reality (aka in a vacuum). More on this topic in the future.</li><li>Kirk Evans <a href="http://blogs.msdn.com/kaevans/archive/2007/04/16/solution-architect-vs-enterprise-architect-central-planning.aspx">closes the loop</a> on city planning with a reference to Pat Helland's <a href="http://msdn2.microsoft.com/en-us/library/aa480026.aspx">Metropolis</a> work. Pat's work has been a huge influence on me. I often repeat Pat's point about cities being "interconnected yet independent". Services need to be interconnected yet independent also.</li><li>Roger Wolter has a new <a href="http://msdn2.microsoft.com/en-us/architecture/bb410798.aspx">Master Data Management whitepaper</a> out, this one MDM hubs. I was literally talking about MDM on a conf call this morning, so Roger's timing is impeccable.</li><li>I haven't read <a href="http://pragdave.pragprog.com/pragdave/2007/03/the_radar_archi.html">RADAR Architecture</a> yet, but the fact that DAR in the acronym stands for "Dumb-Ass Recipient" made me laugh. (via <a href="http://feeds.feedburner.com/~r/SamGentile/~3/109318225/New-and-Notable-157.aspx">Sam Gentile</a>)</li><li>MIT Media Lab has cointed the latest 2.0-ism: <a href="http://h20.media.mit.edu/">Human 2.0</a>. I love Nick Carr's <a href="http://www.roughtype.com/archives/2007/04/mit_announces_h.php">take on it</a>: "We're definitely overdue for an upgrade - it seems like we've been stuck in Version 1.x for a few hundred thousand years, and that was after a beta that went on for freaking ever. Still, I think I'll probably hold off until 2.01 or 2.02. I don't want to be on the bleeding edge for this one."</li></ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>936</wp:post_id>
		<wp:post_date>2007-04-16 10:38:50</wp:post_date>
		<wp:post_date_gmt>2007-04-16 10:38:50</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>morning-coffee-64</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="family"><![CDATA[Family]]></category>
		<category domain="category" nicename="morning-coffee"><![CDATA[Morning Coffee]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[2a257b8a-3b0c-4747-ba8e-c20764ed5967]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Morning+Coffee+64]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/04/16/Morning+Coffee+64]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>2483</wp:comment_id>
			<wp:comment_author><![CDATA[Tom Vande Stouwe]]></wp:comment_author>
			<wp:comment_author_email>TomV@ConPro.Net</wp:comment_author_email>
			<wp:comment_author_url>http://www.LearnToday.net</wp:comment_author_url>
			<wp:comment_author_IP>24.148.176.174</wp:comment_author_IP>
			<wp:comment_date>2007-04-16 10:59:02</wp:comment_date>
			<wp:comment_date_gmt>2007-04-16 17:59:02</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[How do you expect us to upgrade to Human 2.0 when we keep electing Early-Alpha males to office ;)

Tom]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Morning Coffee 65</title>
		<link>http://devhawk.net/2007/04/17/morning-coffee-65/</link>
		<pubDate>Tue, 17 Apr 2007 09:53:41 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://644a379c-e01b-4bc5-a1ab-1e049fd6903b</guid>
		<description></description>
		<content:encoded><![CDATA[<ul><li>My brother is a VaTech alumni, so the shock of the <a href="http://www.msnbc.msn.com/id/18134671/">deadly shootings there yesterday</a> hits very close to home. My heavy heart is with the grieving Hokie nation today.  </li><li>Jeff Atwood has a couple of <a href="http://www.codinghorror.com/blog/archives/000838.html">great</a><a href="http://www.codinghorror.com/blog/archives/000839.html">posts</a> on Language vs. Platform. Earlier in my MSFT career, I spent a significant amount of time explaining .NET, often to companies that had made a significant investment in Java. Picking the Java platform is fine (it's almost the best platform around!), but it seemed many people I spoke to didn't understand the fact that "[w]hen you choose a language, like it or not, you've chosen a <i>platform</i>".  </li><li>Ian Thomas <a href="http://itblagger.wordpress.com/2007/04/10/soa-as-internal-saas/">riffs</a> on my <a href="http://devhawk.net/2007/03/21/When+Is+A+Service+Not+A+Service.aspx">When is a Service Not a Service</a> post. I like Ian's thinking about SaaS as an analogy for SOA adoption - if for no other reason that SaaS is easier to "get". But trying to realize SOA via SaaS inside the enterprise is a mistake in my opinion (and I think Ian would agree with that). SaaS is a business model, and I don't think you want to turn your enterprise into an internal service marketplace. Instead, this ties back with Nick Malik's points about <a href="http://blogs.msdn.com/nickmalik/archive/2007/04/14/is-central-planning-impossible.aspx">central planning</a>. Regardless if I'm right or wrong, I <a href="http://feeds.feedburner.com/itblagger">subscribed</a> to Ian's blog (and not just because he linked to me - check out his <a title="Read Elements of the Future Business Ecosystem (Part I)" href="http://itblagger.wordpress.com/2007/04/07/elements-of-the-future-business-ecosystem-part-i/">Elements of the Future Business Ecosystem</a>) </li><li>TLA Watch: Oracle coins Application Integration Architecture (aka AIA). Joe McKendrick <a href="http://blogs.zdnet.com/service-oriented/?p=857">calls it</a> "Big SOA". Isn't this the market segment that BizTalk has been in for seven years?</li></ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>937</wp:post_id>
		<wp:post_date>2007-04-17 09:53:41</wp:post_date>
		<wp:post_date_gmt>2007-04-17 09:53:41</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>morning-coffee-65</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="lanugages"><![CDATA[Lanugages]]></category>
		<category domain="category" nicename="morning-coffee"><![CDATA[Morning Coffee]]></category>
		<category domain="post_tag" nicename="soa"><![CDATA[SOA]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[644a379c-e01b-4bc5-a1ab-1e049fd6903b]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Morning+Coffee+65]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/04/17/Morning+Coffee+65]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>2484</wp:comment_id>
			<wp:comment_author><![CDATA[Erik Johnson]]></wp:comment_author>
			<wp:comment_author_email>ejohnson@epicor.com</wp:comment_author_email>
			<wp:comment_author_url>http://appside.blogspot.com</wp:comment_author_url>
			<wp:comment_author_IP>65.248.23.250</wp:comment_author_IP>
			<wp:comment_date>2007-04-17 14:13:56</wp:comment_date>
			<wp:comment_date_gmt>2007-04-17 21:13:56</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hmmm.  Sounds familiar.  

http://blogs.msdn.com/jdevados/archive/2006/08/02/687269.aspx

]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>2485</wp:comment_id>
			<wp:comment_author><![CDATA[DevHawk]]></wp:comment_author>
			<wp:comment_author_email>harry@devhawk.net</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>131.107.0.102</wp:comment_author_IP>
			<wp:comment_date>2007-04-17 15:45:51</wp:comment_date>
			<wp:comment_date_gmt>2007-04-17 22:45:51</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Great minds think alike!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>The Ramblings of a Mourning Hokie</title>
		<link>http://devhawk.net/2007/04/17/the-ramblings-of-a-mourning-hokie/</link>
		<pubDate>Tue, 17 Apr 2007 23:10:58 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://f2533d2c-345b-445c-ab3b-5c0dcde9fb32</guid>
		<description></description>
		<content:encoded><![CDATA[<p>As I <a href="http://devhawk.net/2007/04/17/Morning+Coffee+65.aspx">mentioned this morning</a>, my brother went to Virginia Tech. In trying to come to grips with what happened in Blacksburg yesterday, he wrote the following and asked me to post it here. </p><hr /><p>My name is Ted Pierson and I am a Virginia Tech Alumni, member of the class of ’95. As I heard and watched the events that unfolded on Monday April 16<sup>th</sup>, my heart broke for the families, students and faculty at Virginia Tech. While I lost no one that I knew personally, I feel that I lost 32 of my fellow brethren. The community of Virginia Tech reaches well beyond the confines of the campus, and we all feel a deep sense of pride to wear our Hokie Colors to show support for our beloved home. We also now feel a deep sense of loss. In the coming months, there will be many political debates as to how this could have been prevented, gun control and proper security measures. Please remember, this is more then a political issue to be debated, it is a humanitarian issue. There can be, and never will be a rational explanation to the horrible tragedy the felled the VA Tech campus yesterday. We as a society need to learn a love of our fellow man/woman. We need to look as a people, beyond the surface level issues that we deal with on a daily basis, and ask ourselves, is this the world we want to leave to our children, one that views the death of our fellow humans as trivial or platforms for political gain. The only lesson that we can learn from this is that we are all one race, one gender, one person, and that we need each other, regardless of race, creed, or other distinctions. I urge all readers of this to wear orange and maroon in a showing of support to the Hokie Nation. We are all Hokies today.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>938</wp:post_id>
		<wp:post_date>2007-04-17 23:10:58</wp:post_date>
		<wp:post_date_gmt>2007-04-17 23:10:58</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>the-ramblings-of-a-mourning-hokie</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="family"><![CDATA[Family]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[f2533d2c-345b-445c-ab3b-5c0dcde9fb32]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[The+Ramblings+Of+A+Mourning+Hokie]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/04/18/The+Ramblings+Of+A+Mourning+Hokie]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Morning Coffee 66</title>
		<link>http://devhawk.net/2007/04/19/morning-coffee-66/</link>
		<pubDate>Thu, 19 Apr 2007 10:42:04 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://f3188159-5310-4a9b-a092-8e477aa67831</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Yesterday's Morning Coffee was canceled on account of rain. In my living room. It's fixed now.</p><ul><li>Andre Vrignaud <a href="http://ozymandias.com/archive/2007/04/19/Fun-with-High-Capacity-Barcodes.aspx">writes</a> about MS Research's new <a href="http://research.microsoft.com/research/hccb/">High Capacity Color Barcodes</a> technology. As he points out, there's some fascinating gaming potential for these barcodes because they have such high capacity (something like 2kb per square inch) and can be read without special equipment (a camera phone should work). </li><li>According to a <a href="http://people-press.org/reports/display.php3?ReportID=319">Pew Research Center report</a>, Daily Show/Colbert Report viewers are significantly better informed than Fox News viewers. On the other hand, they're only slightly more informed than O'Reilly Factor viewers or Rush Limbaugh listeners so it seems like a wash.  </li><li>Speaking of The Daily Show and The Colbert Report, you <a href="http://www.majornelson.com/archive/2007/04/17/the-daily-show-and-the-colbert-report-now-on-vmp.aspx">can now download them</a> from Xbox LIVE Video Marketplace. But at <strike>$2</strike> 160 points an episode, it's cheaper to set my DVR.  </li><li>I recently re-discovered <a href="http://blogs.msdn.com/remusrusanu/default.aspx">Remus Rusanu's SSB blog</a>. He went dark for a few months there, but he's recently posted a new version of his <a href="http://www.codeplex.com/slm">Service Listing Manager utility</a>, <a href="http://blogs.msdn.com/remusrusanu/archive/2007/04/03/orlando-slides-and-code.aspx">presented</a> SSB at DevConnections and showed how to <a href="http://blogs.msdn.com/remusrusanu/archive/2007/04/11/consuming-event-notifications-from-clr.aspx">implement a managed stored proc</a> to receive SQL DDL <a href="http://msdn2.microsoft.com/en-us/library/ms190427.aspx">event notifications</a>. Event notifications is one of those features I didn't even realize was in SQL.  </li><li>Dottie Shaw, one of the program managers on my project, <a href="http://blogs.msdn.com/dotties">has started blogging</a>. That leaves two team mates and one project member still not blogging.  </li><li>Yesterday, I stumbled into some other teams morale event. They were bogarting the cafeteria, so it wasn't like I was crashing it or anything. Normally, I wouldn't hang around some other teams party, but they had a projector, an Xbox 360 and two copies of <a href="http://www.xbox.com/games/guitarhero2">Guitar Hero</a> so I had to hang out and watch them play head-to-head for a while. That looks like a <em>fun</em> game. </li><li>Chris Anderson <a href="http://www.longtail.com/the_long_tail/2007/04/long_tail_enemy.html">writes at length</a> about the primary enemy of Long Tail economics: "the absurdly complicated and expensive process of rights clearance". His case in point is the coming DVD release of WKRP in Cincinnati, which has replaced the dozens of songs used as background music with "Muzak-style songs that could be licensed in perpetuity for a small flat fee" that <a href="http://blog.wired.com/music/2007/04/wkrp_in_cincinn.html">apparently</a> "sucked ass". </li></ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>939</wp:post_id>
		<wp:post_date>2007-04-19 10:42:04</wp:post_date>
		<wp:post_date_gmt>2007-04-19 10:42:04</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>morning-coffee-66</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="blogging"><![CDATA[Blogging]]></category>
		<category domain="post_tag" nicename="games"><![CDATA[Games]]></category>
		<category domain="category" nicename="morning-coffee"><![CDATA[Morning Coffee]]></category>
		<category domain="post_tag" nicename="service-broker"><![CDATA[Service Broker]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[f3188159-5310-4a9b-a092-8e477aa67831]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Morning+Coffee+66]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/04/19/Morning+Coffee+66]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Morning Coffee 67</title>
		<link>http://devhawk.net/2007/04/20/morning-coffee-67/</link>
		<pubDate>Fri, 20 Apr 2007 09:35:11 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://1a50af3f-c9a4-4675-bfeb-c61a6c862897</guid>
		<description></description>
		<content:encoded><![CDATA[<ul><li>Beta 1 of VS "Orcas" and .NET Framework 3.5 <a href="http://blogs.msdn.com/somasegar/archive/2007/04/19/visual-studio-orcas-and-net-fx-3-5-beta1-shipped.aspx">has shipped</a>. Get it <a href="http://msdn2.microsoft.com/en-us/vstudio/aa700831.aspx">here</a>. Besides LINQ, I'm most looking forward to experimenting with some of the new <a href="http://blogs.msdn.com/moustafa/archive/2007/03/04/visual-studio-orcasand-wf-wcf-rules-changes.aspx">WF/WCF integration work</a>. However, I don't think this beta includes <a href="http://msdn2.microsoft.com/en-us/teamsystem/aa718807.aspx">DBPro functionality</a>. Not surprising, given that DBPro only shipped a few months ago, but disappointing since I've moved all my database dev work over to that model. 
</li><li>Korby Parnell <a href="http://blogs.msdn.com/korbyp/archive/2007/04/19/tagspace-meet-claimspace.aspx">introduces</a> Claimspace, part of the <a href="http://beta.communities.microsoft.com/">Microsoft.Community</a> family. While the other family members are retreads - <a href="http://www.microsoft.com/communities/beta/blogsoverview.mspx">blogs</a>, <a href="http://www.microsoft.com/communities/beta/forumsoverview.mspx">forums</a> and <a href="http://www.microsoft.com/communities/beta/tagspaceoverview.mspx">tagging</a> - but this seems like something fundamentally new - or at least new to me - and therefore interesting. (via <a href="http://www.larkware.com/dg8/TheDailyGrind1125.aspx">Larkware</a>) 
</li><li>Scott Hanselman <a href="http://www.hanselman.com/blog/NewReleaseOfNotepad2UpdatedAgainWithRubySupport.aspx">updates</a> the <a href="http://www.flos-freeware.ch/notepad2.html">new version of Notepad2</a> to re-enable Ruby support <a href="http://wesnerm.blogs.com/net_undocumented/2005/07/notepad2_with_r.html">originally built</a> by Wesner Moise. Ruby is nice, but where's the <a href="http://www.microsoft.com/PowerShell">PowerShell</a> love? 
</li><li>After <a href="http://www.msnbc.msn.com/id/18227600/">his performance</a> in front the Judiciary Committee, Attorney General Gonzales is grossly incompetent, lying or both. What does it say about President Bush that he was "<a href="http://www.talkingpointsmemo.com/archives/013745.php">pleased with the Attorney General’s testimony</a>"? It says Bush values loyalty over competence, is hiding something or both. Given that his approval ratings can't get much worse, I guess standing by Gonzales even in the midst of bi-partisan calls for his resignation isn't going to affect Bush much politically. On the other hand, confirming a new AG with a Democratic congress and low 30% approval rating might be devastating, depending on the bodies buried over there.</li></ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>940</wp:post_id>
		<wp:post_date>2007-04-20 09:35:11</wp:post_date>
		<wp:post_date_gmt>2007-04-20 09:35:11</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>morning-coffee-67</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="morning-coffee"><![CDATA[Morning Coffee]]></category>
		<category domain="category" nicename="politics"><![CDATA[Politics]]></category>
		<category domain="post_tag" nicename="powershell"><![CDATA[PowerShell]]></category>
		<category domain="post_tag" nicename="web-2-0"><![CDATA[Web 2.0]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[1a50af3f-c9a4-4675-bfeb-c61a6c862897]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Morning+Coffee+67]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/04/20/Morning+Coffee+67]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Morning Coffee 68</title>
		<link>http://devhawk.net/2007/04/23/morning-coffee-68/</link>
		<pubDate>Mon, 23 Apr 2007 10:25:56 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://41860c11-08bb-43bf-b050-4839ec5ef3f4</guid>
		<description></description>
		<content:encoded><![CDATA[<ul><li><a href="http://techiewife.spaces.live.com">My wife</a> and I celebrated our seven year anniversary over the weekend. She rocks. 'Nuff said. </li><li>Over the weekend, Gov.Gregoire signed a bill that protecting the rights of same-sex couples. It's not the same as full marriage rights (which long time readers know I <a href="http://devhawk.net/2004/02/27/In+Support+Of+Gay+Marriage.aspx">fully support</a>) but it's a step in the right direction.  </li><li>I picked up the Xbox 360 <a href="http://www.xbox.com/hardware/xbox360hddvdplayer">HD DVD player</a> over the weekend. Rented <a href="http://hddvd.highdefdigest.com/batmanbegins.html">Batman Begins</a> and it looks awesome. However, it wasn't the stunning difference between standard and high def TV programming. I wonder if my five year old HDTV is showing it's age.  </li><li>Scott Guthrie continues his LINQ series with a post on the new <a href="http://weblogs.asp.net/scottgu/archive/2007/04/21/new-orcas-language-feature-query-syntax.aspx">Query Syntax</a> in C#3/VB9. While this is feature is great for those who are using LINQ to SQL, it does force pretty much all LINQ to whatever providers to support the from-where-orderby-select pattern. But not all query sources want to be limited to that model. For example, if you wanted to do a LINQ to Data Warehouse, wouldn't you want more flexibility in your query syntax? </li><li>I didn't realize <a href="http://service-architecture.blogspot.com/index.html">Steve Jones</a> had a blog. At least, I think this Steve Jones is the Steve Jones that I know. But I'm not sure. Either way, it looks good so I subscribed... (via <a href="http://codebetter.com/blogs/sam.gentile/archive/2007/04/23/new-and-notable-158.aspx">Sam Gentile</a>)</li></ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>941</wp:post_id>
		<wp:post_date>2007-04-23 10:25:56</wp:post_date>
		<wp:post_date_gmt>2007-04-23 10:25:56</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>morning-coffee-68</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="family"><![CDATA[Family]]></category>
		<category domain="post_tag" nicename="linq"><![CDATA[LINQ]]></category>
		<category domain="category" nicename="morning-coffee"><![CDATA[Morning Coffee]]></category>
		<category domain="post_tag" nicename="xbox-360"><![CDATA[Xbox 360]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[41860c11-08bb-43bf-b050-4839ec5ef3f4]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Morning+Coffee+68]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/04/23/Morning+Coffee+68]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>2486</wp:comment_id>
			<wp:comment_author><![CDATA[Sam Gentile]]></wp:comment_author>
			<wp:comment_author_email>managedcode44@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://codebetter.com/blogs/sam.gentile</wp:comment_author_url>
			<wp:comment_author_IP>76.98.50.241</wp:comment_author_IP>
			<wp:comment_date>2007-04-23 12:02:23</wp:comment_date>
			<wp:comment_date_gmt>2007-04-23 19:02:23</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Congrats to both of you!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Morning Coffee 69</title>
		<link>http://devhawk.net/2007/04/24/morning-coffee-69/</link>
		<pubDate>Tue, 24 Apr 2007 10:48:04 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://ec744e26-b688-4f63-90c7-f5846127f0b2</guid>
		<description></description>
		<content:encoded><![CDATA[<ul><li>John Shewchuk <a href="http://connectedsystems.spaces.live.com/blog/cns!10E0A1CD60CAE1A9!248.entry">introduces</a> the new <a href="http://labs.biztalk.net/">BizTalk Services</a>. Well, "new" is a bit of a misnomer: STS and Relay (now called <a href="https://identity.biztalk.net/">Identity</a> and <a href="http://connect.biztalk.net/">Connectivity</a>) were previously available under the <a href="http://labs.live.com/">Live Labs</a> umbrella and the other new services they announced aren't available yet. Bt these new services they announced are compelling: <a href="http://servicebus.biztalk.net/">ServiceBus</a> is an pub/sub event delivery mechanism that scales to the internet and <a href="http://workflow.biztalk.net/">Workflow</a> is a WF hosting solution. I'm looking forward to experimenting with these new services (when they become available). </li><li>Nick Malik <a href="http://blogs.msdn.com/nickmalik/archive/2007/04/22/redefining-soa-governance.aspx">continues his series</a> of posts on governance. Money quote: "Tools manage, People govern". I feel a little bad because I punted on the governance presentation that's he's preping, so maybe I'll get that on a <a href="http://www.zazzle.com/product/128254336003627152">bumper sticker</a> for him or something. </li><li>Chris Anderson has a <a href="http://www.longtail.com/the_long_tail/2007/04/im_in_halo_3.html">few voice-over lines</a> in Halo 3. While that's cool for him, he mentions a new feature I was unaware of: "the one thing that completely blew me away (aside from the graphics, animation, level design and new vehicles and weapons) was the ability to record a game and play it back on Xbox Live, freezing the action at any point and flying around the scene, Matrix style. It may sound just like a standard replay function, but take my word for it, it's not. I think it's revolutionary, and I predict that Halo 3 will take <a href="http://en.wikipedia.org/wiki/Machinima">machinima</a> to a whole new level." Cool! </li><li><a href="http://blogs.msdn.com/xna/archive/2007/04/24/xna-game-studio-express-1-0-refresh-released.aspx">According</a> to the XNA Team Blog, the new XNA GSE Refresh is <a href="http://msdn2.microsoft.com/en-us/xna/aa937795.aspx">now available</a>. And as a thanks for our patience, they <a href="http://blogs.msdn.com/xna/archive/2007/04/23/that-s-not-a-billing-system-error-enjoy-an-additional-4-months-in-the-xna-creators-club-on-us.aspx">added four free months</a> to all creator club members subscriptions. Thanks guys!</li></ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>942</wp:post_id>
		<wp:post_date>2007-04-24 10:48:04</wp:post_date>
		<wp:post_date_gmt>2007-04-24 10:48:04</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>morning-coffee-69</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="biztalk"><![CDATA[BizTalk]]></category>
		<category domain="category" nicename="morning-coffee"><![CDATA[Morning Coffee]]></category>
		<category domain="post_tag" nicename="xbox-360"><![CDATA[Xbox 360]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[ec744e26-b688-4f63-90c7-f5846127f0b2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Morning+Coffee+69]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/04/24/Morning+Coffee+69]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>2487</wp:comment_id>
			<wp:comment_author><![CDATA[Bill]]></wp:comment_author>
			<wp:comment_author_email>bill@yahoo.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.volny.cz/winstrol</wp:comment_author_url>
			<wp:comment_author_IP>80.60.51.148</wp:comment_author_IP>
			<wp:comment_date>2007-06-03 05:23:00</wp:comment_date>
			<wp:comment_date_gmt>2007-06-03 12:23:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Nice site. Thanks:
 <a href="http://www.volny.cz/winstrol" rel="nofollow">winstrol</a> <a href="http://www.volny.cz/clenbuterol" rel="nofollow">clenbuterol</a>  ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Enterprise Service Bus? Give Me an Extra Special Bitter Instead</title>
		<link>http://devhawk.net/2007/04/25/enterprise-service-bus-give-me-an-extra-special-bitter-instead/</link>
		<pubDate>Wed, 25 Apr 2007 16:19:33 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://a2e5c112-fcfc-40d0-8e6e-9923d5a9a6e0</guid>
		<description></description>
		<content:encoded><![CDATA[<p>I went to a talk on BizTalk and ESB at lunch today that was sponsored by the <a href="http://www.nwconnectedsystems.org/">local connected systems user group</a>. Like many terms in this space (SOA and governance to name two others), ESB doesn't seem to have a consistent definition. The industry seems to be inventing terms at a fair clip as vendors attempt to differentiate themselves on what to me seem like fairly minor solution aspects. </p><p>Today's speaker talked at length about a "large health care company in California" that he had personally worked with, building an ESB for them with BizTalk. He spoke in glowing terms of the size of the BizTalk environment and the number of messages passing through the bus every day. Then someone asked how many systems this unnamed company had hooked up to the bus. He paused, then admitted: "Six". </p><p>Six? Not six <em>whole </em>systems! That's gotta be a record! </p><p>Of course, I realize that there are deployed ESB's out there that are integrating more than six systems. My group - the Integration Center of Excellence (ICoE for short) - runs a comparably sized BizTalk environment and we're connecting around 50 internal systems and hundreds of external partners. But 50 is still a fairly small number. I can't help but wonder how well will this ESB approach is going scale as the number of systems goes up a couple orders of magnitude. Frankly, I think the answer is "not well". </p><p>The problem I have with ESB is that it's a centralized approach. Given that one of the overriding trends of society in general and IT in particular is decentralization, the ESB approach feels like it's swimming against the current instead of with it. </p><p>As an analogy, consider how well would the Internet work if every connection went thru a central hub? See what I mean? Centralized systems don't scale like decentralized ones do. </p><p>I admit that there are scenarios where ESB-esque technology solves a practical problem. Transport adaptation and content based routing leap to mind. Services that need those capabilities should leverage ESB-esque technology. But whenever I listen to ESB proponents, I feel that the need for these capabilities is exaggerated to the point that every message exchanged between every service inside your enterprise travels on a central bus, which doesn't seem realistic to me.</p><p>Am I wrong about this characterization? Do ESB proponents think that all messages must travel on the bus? How about <em>you</em>? What do you think? Inquiring minds (aka me) want to know...</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>943</wp:post_id>
		<wp:post_date>2007-04-25 16:19:33</wp:post_date>
		<wp:post_date_gmt>2007-04-25 16:19:33</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>enterprise-service-bus-give-me-an-extra-special-bitter-instead</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="architecture"><![CDATA[Architecture]]></category>
		<category domain="post_tag" nicename="soa"><![CDATA[SOA]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[a2e5c112-fcfc-40d0-8e6e-9923d5a9a6e0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Enterprise+Service+Bus+Give+Me+An+Extra+Special+Bitter+Instead]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/04/25/Enterprise+Service+Bus+Give+Me+An+Extra+Special+Bitter+Instead]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>2490</wp:comment_id>
			<wp:comment_author><![CDATA[Hans Valcke]]></wp:comment_author>
			<wp:comment_author_email>hans.valcke@unilin.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.linkedin.com/myprofile?trk=tab_pro</wp:comment_author_url>
			<wp:comment_author_IP>84.195.232.190</wp:comment_author_IP>
			<wp:comment_date>2007-04-29 05:41:38</wp:comment_date>
			<wp:comment_date_gmt>2007-04-29 12:41:38</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi,Harry

We had a fairly large Biztalk env. in our company and we already implemented 2 hub's one in EU, one in US in 2004. Then we added the ESB concepts so we can deploy federated biztalk servers around the globe with central routing tables and central console. We can use messaging and services in the ESB design and can scale as large as you want, just add more hubs to the ESB.

We also wrote ESB-switches which can also route the messages thoughout the ESB and we to dynamic routing so we can re-route if a hub is down -All hubs use services to check for new routing and give hartbeats to our main hub's. We also implemeted enterprise dymensionnal routing so we can monitor and simulate the impact of changes in routing.

Currently we're implementing 15 federeted hub across the globe.

Hans.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>2488</wp:comment_id>
			<wp:comment_author><![CDATA[Udi Dahan - The Software Simplis]]></wp:comment_author>
			<wp:comment_author_email>blog@UdiDahan.com</wp:comment_author_email>
			<wp:comment_author_url>http://udidahan.weblogs.us</wp:comment_author_url>
			<wp:comment_author_IP>84.228.172.24</wp:comment_author_IP>
			<wp:comment_date>2007-04-25 21:47:39</wp:comment_date>
			<wp:comment_date_gmt>2007-04-26 04:47:39</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Harry,

The problems that you are attributing to ESB's are really those of the Broker style that BizTalk supports. That central hub you talk about is not a part of message exchanges in the Bus style, although many ESB's do have some sort of central location to jumpstart interactions.

This is the main problem I have with Microsoft's ESB message. BizTalk is a broker and will not be a bus until it is redesigned from the ground up. At least, that's what I think :)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>2489</wp:comment_id>
			<wp:comment_author><![CDATA[Curt Peterson]]></wp:comment_author>
			<wp:comment_author_email>curt.peterson@neudesic.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.neudesic.com/esb</wp:comment_author_url>
			<wp:comment_author_IP>76.80.169.55</wp:comment_author_IP>
			<wp:comment_date>2007-04-26 13:28:07</wp:comment_date>
			<wp:comment_date_gmt>2007-04-26 20:28:07</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Harry,

I couldn't agree more that a centralized approach to messaging has some less than desired side effects, as you mentioned.  However, consider an alternative, point to point.  If you go down this path, for example using WCF just like it is (any channel you choose), how do you deal with all of the management issues you guys are dealing with in ICOE, or deployment, or service reuse, or mediation, or versioning, etc.?  I'm confident you would agree there are a certain set of common capabilities required to have a decent messaging solution, as well as some nice to have's you could throw in there.  If we did that, why not consider that a definition of an ESB?  What that collection of specific features is called isn't as important, I'll offer, as the fact that were abstracting common elements of an enterprise communications system into a reusable pattern, and delivering that as a real solution, reusable, and available today.  This saves, time, money, etc.

We've crafted a solution, using all MSFT technologies that achieves exactly this http://www.neudesic.com/esb, is available now, is super easy to use, dramatically reduces the cost of wiring together services, and provides features that enable many of the promises of distributed, loosely coupled architectures to be realized.  Our solution is not physically centralized, it is logically centralized, but physically decentralized.  This gives you the best of both worlds; the maintenance ease of a centralized system, with the flexibility, performance, etc. of a decentralized solution.  Check it out, I have implemented these kinds of solutions for nearly 20 years, and it's great to finally have a complete MSFT solution, now we can introduce a product that is very easy to use, into an existing environment, with no impact on the current communications, and bring all of the power of CBR, CEP, BPM, BAM, QoS, security, mediation, reconfigurability, BRE, workflow, and many other fantastic tools, in a matter of minutes.  Shoot me an email, if you want to know more, I'm always happy to prove it, not just say it!!!  The correct communications tools (read good ESB) can and does do wonders for small, medium, and large projects.  Cheers!!!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Morning Coffee 70</title>
		<link>http://devhawk.net/2007/04/25/morning-coffee-70/</link>
		<pubDate>Wed, 25 Apr 2007 11:26:04 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://1df64df1-f119-4d8a-b1e3-3ee464e94a55</guid>
		<description></description>
		<content:encoded><![CDATA[<ul><li>Scott Hanselman <a href="http://www.hanselman.com/blog/RemovingSecurityFromDownloadedPowerShellScriptsWithAlternativeDataStreams.aspx">details</a> how the "unblock" feature in Windows works. Basically, when you download a file with IE, it adds an <a href="http://msdn2.microsoft.com/en-us/library/aa364404.aspx">alternate data stream</a> that specifies the zone the file came from (Internet, Intranet, Trusted, etc.). Even <a href="http://community.bartdesmet.net/blogs/bart/archive/2005/08/19/3485.aspx">more details</a> on Bart de Smet's blog.  </li><li>Nick Carr <a href="http://www.roughtype.com/archives/2007/04/sanger.php">gets off on a rant</a> on Wikipedia, Citizedium and "the truth" that's pretty funny.  </li><li>Remus Rusanu <a href="http://blogs.msdn.com/remusrusanu/archive/2007/04/24/reusing-conversations.aspx">shows how</a> to to reuse SSB conversations in a data syndication scenario. A while back, he wrote about a <a href="http://blogs.msdn.com/remusrusanu/archive/2005/12/12/502942.aspx">lightweight pub/sub SSB implementation</a> - barely 200 lines of T-SQL code - that would also be very useful in data syndication scenarios. I've got data syndication on the brain right now, so this stuff is very timely. </li></ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>944</wp:post_id>
		<wp:post_date>2007-04-25 11:26:04</wp:post_date>
		<wp:post_date_gmt>2007-04-25 11:26:04</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>morning-coffee-70</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="morning-coffee"><![CDATA[Morning Coffee]]></category>
		<category domain="post_tag" nicename="service-broker"><![CDATA[Service Broker]]></category>
		<category domain="post_tag" nicename="web-2-0"><![CDATA[Web 2.0]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[1df64df1-f119-4d8a-b1e3-3ee464e94a55]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Morning+Coffee+70]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/04/25/Morning+Coffee+70]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Morning Coffee 71</title>
		<link>http://devhawk.net/2007/04/26/morning-coffee-71/</link>
		<pubDate>Thu, 26 Apr 2007 10:07:13 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://cfb8dbe2-714e-40b8-8401-3e4499c268b7</guid>
		<description></description>
		<content:encoded><![CDATA[<ul><li>It's been almost four months <a href="http://devhawk.net/2007/01/02/Morning+Coffee+1.aspx">since I started</a> these morning coffee posts. I like the regularity - there's been 84 weekdays so far this year, so 84 - (71 + 6 days missed from vacation) = only seven missed morning coffees. On the other hand, I think my daily blogging fix is keeping me from digging deeper into some issues. So I'm going to start cutting back to only three morning coffee posts per week, with the hope of three deeper technical posts and one wildcard post per week.</li><li>Speaking of cutting back, my parents are in town this weekend so I doubt I'll get a post out tomorrow or Monday. Have a good weekend anyway.</li><li>Windows Server "Longhorn" <a href="http://www.microsoft.com/windowsserver/longhorn/default.mspx">Beta 3</a> is out. Now is time to start getting serious with it.</li><li>Joe McKendrick is <a href="http://blogs.zdnet.com/service-oriented/?p=863">reporting</a> that Gartner has given the green light to spending more on SOA. Maybe it's because I work for a technology savvy company, but I've never understood outsourcing critical business decisions about technology adoption to a consulting company.</li><li>It's a Joe McKendrick twofer: He <a href="http://blogs.zdnet.com/service-oriented/?p=864">also reports</a> that IBM <a href="http://www.itweek.co.uk/vnunet/news/2188598/ibm-calls-soa-discovery">is calling for</a> a new SOA directory / discovery / registry standard to replace UDDI. I totally get the need a "new UDDI", though I'd wager that my issues with UDDI are very different than Big Blue's. </li><li>Yesterday, I <a href="http://devhawk.net/2007/04/25/Enterprise+Service+Bus+Give+Me+An+Extra+Special+Bitter+Instead.aspx">made a crack</a> about how un-scalable the Internet would be if every cFonnection went thru a central hub. Two days ago, Clemens has <a href="http://blogs.msdn.com/clemensv/archive/2007/04/25/internet-service-bus.aspx">a long post</a> about the implications of an Internet Service Bus. First, I can't wait to see how <a href="http://servicebus.biztalk.net/">that thing</a> works. Second, it's fairly obvious that not all traffic will go thru this bus (since the bus ain't out yet and yet you're still reading this via the Internets), so maybe that answers <a href="http://devhawk.net/2007/04/25/Enterprise+Service+Bus+Give+Me+An+Extra+Special+Bitter+Instead.aspx">my question</a> about ESB's and centralization? That is to day, use the bus where you it's useful, otherwise don't bother?</li></ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>945</wp:post_id>
		<wp:post_date>2007-04-26 10:07:13</wp:post_date>
		<wp:post_date_gmt>2007-04-26 10:07:13</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>morning-coffee-71</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="blogging"><![CDATA[Blogging]]></category>
		<category domain="category" nicename="morning-coffee"><![CDATA[Morning Coffee]]></category>
		<category domain="post_tag" nicename="soa"><![CDATA[SOA]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[cfb8dbe2-714e-40b8-8401-3e4499c268b7]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Morning+Coffee+71]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/04/26/Morning+Coffee+71]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>2492</wp:comment_id>
			<wp:comment_author><![CDATA[Kate]]></wp:comment_author>
			<wp:comment_author_email>tyfield@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>69.160.18.180</wp:comment_author_IP>
			<wp:comment_date>2007-04-26 21:27:00</wp:comment_date>
			<wp:comment_date_gmt>2007-04-27 04:27:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Please give my well wishes to both your parents and your family.  Gods do I miss you all...I wish my exile in the far North would come to an end soon.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>2491</wp:comment_id>
			<wp:comment_author><![CDATA[orcmid]]></wp:comment_author>
			<wp:comment_author_email>dennis.hamilton@acm.org</wp:comment_author_email>
			<wp:comment_author_url>http://orcmid.com/BlunderDome/clueless</wp:comment_author_url>
			<wp:comment_author_IP>67.42.98.88</wp:comment_author_IP>
			<wp:comment_date>2007-04-26 12:38:17</wp:comment_date>
			<wp:comment_date_gmt>2007-04-26 19:38:17</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[So when is Hal9000 going to get back into blogging?  I love his material but there is simply not enough of it.  

I know, you could have a father-son face-off on "code is the model" (unless, by some quirk, he agrees with you, and that would be interesting too).]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Parent&#039;s Visit Coffee</title>
		<link>http://devhawk.net/2007/05/01/parents-visit-coffee/</link>
		<pubDate>Tue, 01 May 2007 09:35:21 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://0ac386ec-3be3-4b2e-8841-7e36988d3b02</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Obviously, there's some fairly big news coming out of Las Vegas this week. I'll get to that either later today or tomorrow. In the meantime, here's what I did with my parents this past weekend.</p><ul><li>My parents arrived Thursday at the same time Patrick has to be dropped off for school. My office is fairly close to his school, so Julie dropped him off with me on her way to the airport. He and I ate lunch together and then I took him to school. Always fun to spend extra time with the kids.</li><li>Friday was Take Your Dad to Work day - at least it was for me. We had a team lunch out and he sat in on a couple of meetings. He's spent quite a bit of time on IPv6 recently, so infrastructure discussions like my group's are right up his alley. According to <a href="http://blogs.msdn.com/dotties/">one of my team's PMs</a>, my meeting behavior is "much better" when he's around.</li><li>Saturday, we went to the <a href="http://www.museumofflight.org/">Museum of Flight</a>. I don't know who was more excited, my son or my father. Dad's favorite plane is the <a href="http://www.museumofflight.org/Collection/Aircraft.asp?RecordKey=28077E43-0F70-40AB-B4B3-AA2AF8E6BB00">Blackbird</a>, so he really enjoyed sitting in the <a href="http://www.museumofflight.org/Display.asp?Page=ExCockpits">SR-71 cockpit</a>. It was raining the last time we went to the museum, so this was the first time I had seen <a href="http://www.museumofflight.org/Collection/Aircraft.asp?RecordKey=8835E3E8-2D58-4DFE-87C9-1087DA0DD65B">Air Force One</a> and the <a href="http://www.museumofflight.org/Display.asp?Page=Concorde">Concorde</a>.</li><li>Sunday, we watched the <a href="http://sports.espn.go.com/mlb/boxscore?gameId=270429112">Mariners beat the Royals</a>. It's been three long years in the basement for M's fans, but they have been slowly getting better year over year. Not sure they can make the playoffs this year, but maybe they can at least finish over .500.</li><li>Yesterday, we went to the <a href="http://www.zoo.org/">Woodland Park Zoo</a>. My parents are members of <a href="http://fonz.org/">FONZ</a> and my kids love the Zoo. We had fun, though after three and a half days of "go go go" with my parents the kids were a bit worn down. The gorillas were very active, banging on the glass and running away - sort of the gorilla version of <a href="http://en.wikipedia.org/wiki/Ding_Dong_Ditch">ding dong ditch</a>. Another highlight was getting to see the <a href="http://www.zoo.org/spotlight/ss.htm">tiger cub</a>.</li><li>My parents flew home last night on the red eye, and everyone is very sad to see them go. It had been about eight months since we had seen them. Here's hoping it won't be that long before the next visit. </li></ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>946</wp:post_id>
		<wp:post_date>2007-05-01 09:35:21</wp:post_date>
		<wp:post_date_gmt>2007-05-01 09:35:21</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>parents-visit-coffee</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="family"><![CDATA[Family]]></category>
		<category domain="category" nicename="morning-coffee"><![CDATA[Morning Coffee]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[0ac386ec-3be3-4b2e-8841-7e36988d3b02]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Parents+Visit+Coffee]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/05/01/Parents+Visit+Coffee]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Hawkeye on Silverlight</title>
		<link>http://devhawk.net/2007/05/02/hawkeye-on-silverlight/</link>
		<pubDate>Wed, 02 May 2007 10:54:35 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://ce7ca111-8da3-4d4d-89a2-5e20d7d9a359</guid>
		<description></description>
		<content:encoded><![CDATA[<p>While I was crusing the zoo with the family on Monday, everyone else was focused on the big announcement coming out of <a href="http://www.visitmix.com/">MIX</a>. Short version of the <a href="http://www.microsoft.com/presspass/press/2007/apr07/04-30MIX07PR.mspx">press release</a>: the next version of <a href="http://www.microsoft.com/silverlight/default01.aspx">Silverlight</a> contains a small, cross platform CLR. As you might imagine, this is somewhat significant. Check out reaction from <a href="http://www.techcrunch.com/2007/04/30/silverlight-the-web-just-got-richer/">TechCrunch</a>, <a href="http://codebetter.com/blogs/sam.gentile/archive/2007/04/30/cross-platform-clr.aspx">Sam Gentile</a> and <a href="http://www.hanselman.com/blog/PuttingMixSilverlightTheCoreCLRAndTheDLRIntoContext.aspx">Scott Hanselman</a>. </p><p>A year ago, I <a href="http://devhawk.net/2006/03/22/CLR+Everywhere.aspx">wrote</a> "Where else should the CLR live?" At the time, I was talking about <a href="http://www.xna.com/">XNA</a> (which had just been announced) though I was aware of the plans around what I think is now officially called CoreCLR (got the name from Scott's post). The first time I heard about this, it literally floored me. Part of me is surprised that in the year since then the news didn't leak and no one figured it out. I mean, doesn't it seem sorta obvious, in retrospect, that a Silverlight should run on CLR? I mean, if we can <a href="http://msdn2.microsoft.com/en-us/embedded/bb267253.aspx">shrink the CLR down</a> to fit on a <a href="http://direct.msn.com/">watch</a>, getting it into the browser seems like a no-brainer. On the other hand, it's such a huge departure from "<a href="http://news.com.com/1200-1070-959413.html">Windows, Windows, Windows</a>" that I wonder if most people had (have?) a hard time wrapping their mind around it.</p><p>(Actually, in <a href="http://search.live.com/results.aspx?q=coreclr">searching for CoreCLR</a>, I discovered <a href="http://technosloth.blogspot.com/2006/07/coreclr-at-wwdc.html">this post</a> from last summer basically confirming "the CoreCLR team working on the Macintosh version of the MiniCLR that's going into WPF/E". So it did leak, but it seems to have been met with <a href="http://blogs.zdnet.com/Stewart/?p=67">significant skepticism</a> and didn't make much news. ) </p><p>Now that you know all about Silverlight and CoreCLR, go back and re-read my <a href="http://devhawk.net/2007/03/06/The+Virtuous+Cycle+Of+Virtual+Platforms.aspx">Virtuous Cycle of Virtual Platforms</a> post. Especially the last paragraph (complete with the bad grammar):</p><blockquote><p>If the end user isn’t committed to a virtual platform like Flash, then who is? The developers who build software for that virtual platform. This is Virtuous Cycle of Virtual Platforms between the platform and developers instead of the platform and users. In the old model, developers go where the users are. In the new model, users go to where developers are. And developers go where they can be most effective.</p></blockquote><p>Silverlight vs Flash looks to me like the next big platform <strike>war</strike> competition. It's just getting started, so you can't say with any certainty which platform will be "most effective". But early Silverlight reviews are pretty impressive. TechCrunch's Michael Arrington <a href="http://www.techcrunch.com/2007/05/01/take-time-to-understand-silverlight-its-important/">wrote</a> that Silverlight "makes Flash/Flex look like an absolute toy". That doesn't erase Flash Player's head start in the <a href="http://en.wikipedia.org/wiki/Rich_Internet_application">RIA space</a>, but it certainly makes catching and surpassing Flash sound feasible. I suspect most people didn't think that sounded at all feasible last week. </p><p>Of course, while catching Flash may sound feasible, Microsoft is a long way from achieving that goal. While the point of my earlier post is that that market penetration doesn't provide much advantage in the virtual platform market, Adobe does derive significant advantage from shipping <em>nine</em> versions of Flash while we haven't quite shipped the first version of Silverlight yet. Also, while I'm fairly sure the number of .NET developers far exceeds the number of Flash developers (anyone have hard numbers?), I would also expect that the number designers using Flash far exceeds the number of designers using <a href="http://www.microsoft.com/expression/">Expression</a> (given that MSFT only <a href="http://www.microsoft.com/presspass/press/2007/apr07/04-30MIX07PR.mspx">just shipped Expression on this week</a>). I believe an important facet to the Silverlight / Flash platform competition will be a race to woo the competitor's core constituency. Can Microsoft woo more designers with <a href="http://www.microsoft.com/expression/">Expression</a> than Adobe can woo developers with Flex? We'll see.</p><p>I'm also curious to see how people's perspective of <a href="http://labs.adobe.com/technologies/apollo/">Adobe's Apollo project</a> changes in the wake of the Silverlight/CoreCLR announcement. From my perspective, both Microsoft and Adobe are trying to unify web and desktop development. Not surprisingly, each is trying to unify around the model where they're stronger: Apollo takes the web development paradigm (Flash, HTML, AJAX and JavaScript) to the desktop while Silverlight takes desktop development paradigm (WPF, CLR) to the web. I'm sure you can guess which paradigm I think will be more successful, but how will the market react? Again, we'll see.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>947</wp:post_id>
		<wp:post_date>2007-05-02 10:54:35</wp:post_date>
		<wp:post_date_gmt>2007-05-02 10:54:35</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>hawkeye-on-silverlight</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="development"><![CDATA[Development]]></category>
		<category domain="post_tag" nicename="hawkeye"><![CDATA[HawkEye]]></category>
		<category domain="post_tag" nicename="silverlight"><![CDATA[Silverlight]]></category>
		<category domain="post_tag" nicename="web-2-0"><![CDATA[Web 2.0]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[ce7ca111-8da3-4d4d-89a2-5e20d7d9a359]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Hawkeye+On+Silverlight]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/05/02/Hawkeye+On+Silverlight]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Dare on Copyright</title>
		<link>http://devhawk.net/2007/05/03/dare-on-copyright/</link>
		<pubDate>Thu, 03 May 2007 16:38:48 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://3a1290f1-807f-4f1c-a197-72a5e75ea32e</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Dare Obasanjo had an <a href="http://www.25hoursaday.com/weblog/PermaLink.aspx?guid=5b77c81e-f25e-4b26-9040-a414cdd137c8">insightful post</a> on copyright and how it works a few days ago. Typically, I would simply dump this into my <a href="http://del.icio.us/harrypierson">del.icio.us favorites</a> and FeedBurner would dutifully insert it into my RSS feed. However, I'm calling it out on my blog proper because I loved this analogy: </p><blockquote><p>Pointing out that copyright infringement doesn't meet some 17th century definition of the verb "steal" because the original property isn't changing hands is like arguing that calling your ex-girlfriend a slut isn't libel because you only said it to people over IM.</p></blockquote>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>948</wp:post_id>
		<wp:post_date>2007-05-03 16:38:48</wp:post_date>
		<wp:post_date_gmt>2007-05-03 16:38:48</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>dare-on-copyright</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[3a1290f1-807f-4f1c-a197-72a5e75ea32e]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Dare+On+Copyright]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/05/03/Dare+On+Copyright]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Morning Coffee 72 - Catchup Edition</title>
		<link>http://devhawk.net/2007/05/03/morning-coffee-72-catchup-edition/</link>
		<pubDate>Thu, 03 May 2007 17:42:52 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://1ee971d4-cce6-403c-bf3e-8bfd28e82bbe</guid>
		<description></description>
		<content:encoded><![CDATA[<p>The cross platform CLR isn't the only big news out of MIX this week. Other big news includes:</p><ul><li>The <a href="http://blogs.msdn.com/hugunin/archive/2007/04/30/a-dynamic-language-runtime-dlr.aspx">Dynamic Language Runtime</a>, an extension to the CLR that implements typical dynamic language features. According to Jim Hugunin, this will make it "dramatically easier to build high-quality dynamic language implementations on .NET." Also, it works with Silverlight's CLR. And we'll be releasing the source, like we do with IronPython.  </li><li>We're building four dynamic languages on top of the DLR: IronPython v2, JavaScript, Visual Basic "10" (aka <a href="http://www.panopticoncentral.net/archive/2007/05/01/20383.aspx">VBx</a>) and IronRuby. <a href="http://www.knowing.net/PermaLink,guid,a3baaf7a-1af3-460a-8486-6b459dab51ed.aspx">He-man Programmer</a><a href="http://www.iunknown.com/">John Lam</a> has a <a href="http://silverlight.net/Learn/learnvideo.aspx?video=74">screencast</a> demonstrating these the languages interoping on Silverlight. You can get an <a href="http://www.codeplex.com/IronPython/Release/ProjectReleases.aspx?ReleaseId=438">alpha of the new IPy</a> which includes the DLR bits.  </li><li><a href="http://www.microsoft.com/expression">Expression Studio</a> is available, as is the first preview of <a href="http://www.microsoft.com/Expression/products/download.aspx?key=blend2maypreview">Blend v2</a>, which allows you to target Silverlight. There's also a Silverlight targeting <a href="http://www.microsoft.com/Expression/products/download.aspx?key=encoder">Media Encoder preview</a> available.  </li><li>Projects <a href="http://blogs.msdn.com/adonet/archive/2007/04/30/project-codename-astoria-announced-at-mix-07.aspx">Astoria</a> and <a href="http://blogs.msdn.com/adonet/archive/2007/04/30/project-codename-jasper-announced-at-mix-07.aspx">Jasper</a> are two new <a href="http://msdn2.microsoft.com/en-us/data/bb419139.aspx">data access incubation projects</a>. Astoria is for exposing your data as data services for consumption by other clients (think mashups) while Jasper is for quickly writing code that access databases. Both appear to build on the new <a href="http://msdn2.microsoft.com/en-us/data/bb419139.aspx">ADO.NET Entity Framework</a> that's shipping <strike>in VS Orcas</strike><a href="http://blogs.msdn.com/adonet/archive/2007/04/28/ado-net-entity-framework-update.aspx">sometime after VS Orcas</a>.  </li><li>Windows Live has a new <a href="http://msdn2.microsoft.com/en-us/library/bb463989.aspx">Contacts API</a>, <a href="http://msdn2.microsoft.com/en-us/library/bb447732.aspx">Spaces API and Feeds</a>, a <a href="http://silverlight.live.com/">media hosting/streaming service for Silverlight</a> and <a href="http://dev.live.com/blogs/devlive/archive/2007/04/30/108.aspx">simpler terms of use and pricing model</a> based on the number unique users. "Sites or Web applications with fewer than one million UUs pay no fees."  </li><li>All the MIX sessions are <a href="http://sessions.visitmix.com/">getting posted</a> in very quickly - about a day after the session. The sessions are available for download a WMV or to view using a Silverlight based viewer. Nice.</li></ul><p>A few quick thoughts on these announcements:</p><ul><li>On the subject of dynamic languages, IronRuby is probably the biggest news since we already have various implementations of the other languages. I wonder how well it will support <a href="http://www.rubyonrails.com/">Rails</a>? ASP.NET already has a <a href="http://quickstarts.asp.net/Futures/dlr/doc/intro.aspx">model for dynamic language support</a> that I would assume IronRuby will plug into eventually. Between that, rumblings of <a href="http://codebetter.com/blogs/jeffrey.palermo/archive/2007/03/16/Big-News-_2D00_-MVC-framework-for-ASP.NET-in-the-works-_2D00_-level-300.aspx">MVC support for ASP.NET</a> and Project Jasper, you've covered most of the surface area Rails covers. But I would assume many folks would like to see RoR proper running under IronRuby on ASP.NET.  </li><li>I wonder what the hosting model for the <a href="http://blogs.msdn.com/jasonz/archive/2007/05/01/origin-of-the-silverlight-clr-and-net-framework.aspx">Silverlight CLR</a> looks like? According to the "<a href="http://msdn2.microsoft.com/en-us/library/bb404713.aspx">essential architecture</a>", Silverlight includes the .NET Framework, the Core Presentation Framework and the Browser Host. But can you host somewhere <em>other </em>than the browser?  </li><li>Astoria sounds like web service based ODBC. While there are scenarios where that makes sense, I'm not sure I like the idea of delegating control of my data outside the service like that. Udi Dahan is <a href="http://udidahan.weblogs.us/2007/05/01/astoria-sdo-and-irrelevance/">also skeptical</a> of this approach.</li></ul><p><strong>Update</strong>: The ADO.NET team <a href="http://blogs.msdn.com/adonet/archive/2007/04/28/ado-net-entity-framework-update.aspx">recently announced</a> that Entity Framework will ship "during the first half of 2008 as an update to the Orcas release of the .NET Framework and Visual Studio". (<a href="http://devhawk.net/CommentView,guid,1EE971D4-CCE6-403C-BF3E-8BFD28E82BBE.aspx#3fc5b2c6-9353-444e-a4d4-1da98a8e0bbd">h/t Tomas Restrpro</a>)</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>949</wp:post_id>
		<wp:post_date>2007-05-03 10:42:52</wp:post_date>
		<wp:post_date_gmt>2007-05-03 17:42:52</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>morning-coffee-72-catchup-edition</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="morning-coffee"><![CDATA[Morning Coffee]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[1ee971d4-cce6-403c-bf3e-8bfd28e82bbe]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Morning+Coffee+72+Catchup+Edition]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/05/03/Morning+Coffee+72+Catchup+Edition]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>2494</wp:comment_id>
			<wp:comment_author><![CDATA[Jamie Cansdale]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://weblogs.asp.net/nunitaddin</wp:comment_author_url>
			<wp:comment_author_IP>87.194.32.5</wp:comment_author_IP>
			<wp:comment_date>2007-05-03 19:23:06</wp:comment_date>
			<wp:comment_date_gmt>2007-05-04 02:23:06</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Re: Silverlight hosting model

This is as far as I've got. Nothing useful yet...

Add a reference to:
Program FilesMicrosoft Silverlightnpctrl.dll

using XcpControlLib;

XcpControl control = new XcpControl();
control.Source = "Page.xaml";
IXcpObject ob = (IXcpObject)control.Content;

// Now I'm stuck. What can we do with 'ob'?

I'd be very interested to hear if any of your friends at Microsoft can flesh this out at all. I'd love a add a 'Test With... Sliverlight' option to TestDriven.NET. ;)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>2493</wp:comment_id>
			<wp:comment_author><![CDATA[Tomas Restrepo]]></wp:comment_author>
			<wp:comment_author_email>tomas@winterdom.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.winterdom.com/weblog/</wp:comment_author_url>
			<wp:comment_author_IP>71.111.254.67</wp:comment_author_IP>
			<wp:comment_date>2007-05-03 13:43:01</wp:comment_date>
			<wp:comment_date_gmt>2007-05-03 20:43:01</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Don't you mean "...both build on the new ADO.NET Entity Framework that is _not_ shipping in VS Orcas"? :) http://blogs.msdn.com/adonet/archive/2007/04/28/ado-net-entity-framework-update.aspx]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Morning Coffee 73</title>
		<link>http://devhawk.net/2007/05/04/morning-coffee-73/</link>
		<pubDate>Fri, 04 May 2007 12:19:03 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://4620ce34-4a02-44a1-aee9-6202f0a451ff</guid>
		<description></description>
		<content:encoded><![CDATA[<ul><li>The MSDN folks have a utility for <a href="http://www.codeplex.com/packagethis">creating custom help files</a> from the online MSDN library. I didn't realize MSDN even <em>had</em> a <a href="http://services.msdn.microsoft.com/ContentServices/ContentService.asmx">content service</a>. This is tres useful.  </li><li>Jeff Atwood <a href="http://www.codinghorror.com/blog/archives/000848.html">explains</a> how error-filled the web is and how error-tolerant modern web browsers are. I've often argued that one of the keys to the rise of Visual Basic was because it was tolerant of sloppiness. It's hard to argue with Jeff's conclusion that "forgiveness by default is what works".  </li><li><a href="http://labs.biztalk.net/">BizTalk Labs</a> shipped an update to the <a href="http://connect.biztalk.net/">Connectivity Service</a>. It "now supports simple publish and subscribe eventing. This allows <b><i>multiple clients</i></b> to subscribe to a service and receive notifications." Steve Maine has <a href="http://hyperthink.net/blog/PermaLink,guid,163e2844-bc01-4f6c-b721-d432666ec966.aspx">some details</a> and a <a href="http://sessions.visitmix.com/default.asp?event=1011&amp;session=2012&amp;pid=DEV03&amp;disc=&amp;id=1512&amp;year=2007&amp;search=DEV03">link</a> to the MIX session he did with Don.  </li><li>Larry O'Brein <a href="http://www.knowing.net/PermaLink,guid,a3baaf7a-1af3-460a-8486-6b459dab51ed.aspx">is happy</a> about IronRuby, but was hoping to see a new Ruby/C# hybrid language. Even though it's his "#1 administrative programming language", he specifically hopes for a new language so would "have the flexibility to evolve the language." But Larry, MSFT already had an dynamic administrative language that it can evolve! It's called PowerShell...  </li><li>The XNA folks have shipped a <a href="http://blogs.msdn.com/xna/archive/2007/04/26/content-update-for-creators-xna-com.aspx">bunch of new content</a>, including the <a href="http://www.xnaracinggame.com/">Racing Game Starter Kit</a>.  </li><li><a href="http://www.machinima.com/">Machinima</a> is growing up fast. I just discovered <a href="http://www.reallusion.com/iclone/">iClone</a>, a real-time 3D animation filmmaking tool. You know, my birthday is coming up later this month...</li></ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>950</wp:post_id>
		<wp:post_date>2007-05-04 12:19:03</wp:post_date>
		<wp:post_date_gmt>2007-05-04 12:19:03</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>morning-coffee-73</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="morning-coffee"><![CDATA[Morning Coffee]]></category>
		<category domain="post_tag" nicename="movies"><![CDATA[Movies]]></category>
		<category domain="post_tag" nicename="powershell"><![CDATA[PowerShell]]></category>
		<category domain="post_tag" nicename="ruby"><![CDATA[Ruby]]></category>
		<category domain="post_tag" nicename="xbox-360"><![CDATA[Xbox 360]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[4620ce34-4a02-44a1-aee9-6202f0a451ff]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Morning+Coffee+73]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/05/04/Morning+Coffee+73]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Morning Coffee 74</title>
		<link>http://devhawk.net/2007/05/07/morning-coffee-74/</link>
		<pubDate>Mon, 07 May 2007 10:30:32 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://0e72b6c3-98fd-45cb-af3b-2ab5f80d56c2</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Light on the geek factor this morning:</p><ul><li>My <a href="http://devhawk.spaces.live.com/Blog/cns!1pd96NFMdcR3fPB4MoLEMQcA!236.entry">daughter Rileyanne</a> turned two Saturday so we had a little pool party. One of the major selling points when we bought the house was the double sized hot tub in the back deck. So even though it was only in the mid 60s, we could still get in and swim.  </li><li>Saw <a href="http://www.imdb.com/title/tt0413300/">Spiderman 3</a> yesterday. I liked the first two very much, but this one is iffy at best. The problem with these blockbuster movie series is the perceived need to be "bigger" than the previous installments. So we get more effects, more action, more villains. But that usually means less drama and less story. Spiderman 3 is no exception. Here's hoping that Christopher Nolan's <a href="http://www.imdb.com/title/tt0413300/">Batman</a> series doesn't suffer the same fate. </li><li>Lost <a href="http://www.usatoday.com/life/television/news/2007-05-06-lost_N.htm">announces</a> an end date. There will be three more shortened seasons for a grand total of 48 episodes (plus the three remaining this season). While I love Lost, I'm glad they're going this route.  </li><li>Politics 2.0 Watch: according to their blog, <a href="http://qubetv.tv/">QubeTV.tv</a> is "the conservatives’ answer to YouTube". Two thoughts on this: First, Having a site of conservative videos for conservatives seems like preaching to the choir. Second, to quote <a href="http://andrewsullivan.theatlantic.com/the_daily_dish/2007/05/youtube_biased.html">Andrew Sullivan</a>: "It's not a good sign when a movement cannot engage the mainstream." </li><li>John Shewchuk as <a href="http://connectedsystems.spaces.live.com/Blog/cns!10E0A1CD60CAE1A9!258.entry">more details</a> of the BizTalk.net <a href="http://connect.biztalk.net/">connectivity service</a>. Hybrid mode and Direct connect are nice optimizations, but don't change the messaging semantics at all. But pub/sub eventing does, so I'm primarily interested in that capability. </li></ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>951</wp:post_id>
		<wp:post_date>2007-05-07 10:30:32</wp:post_date>
		<wp:post_date_gmt>2007-05-07 10:30:32</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>morning-coffee-74</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="biztalk"><![CDATA[BizTalk]]></category>
		<category domain="post_tag" nicename="family"><![CDATA[Family]]></category>
		<category domain="category" nicename="morning-coffee"><![CDATA[Morning Coffee]]></category>
		<category domain="post_tag" nicename="movies"><![CDATA[Movies]]></category>
		<category domain="post_tag" nicename="television"><![CDATA[Television]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[0e72b6c3-98fd-45cb-af3b-2ab5f80d56c2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Morning+Coffee+74]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/05/07/Morning+Coffee+74]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>2496</wp:comment_id>
			<wp:comment_author><![CDATA[DevHawk]]></wp:comment_author>
			<wp:comment_author_email>harry@devhawk.net</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>24.16.94.200</wp:comment_author_IP>
			<wp:comment_date>2007-05-07 23:26:01</wp:comment_date>
			<wp:comment_date_gmt>2007-05-08 06:26:01</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I wasn't complaining about QubeTV.tv (name created by the Dept. of Redunancy Dept.) I was just making a couple of observations about it. Frankly, I don't think the site founders really get the concept of social networking and user created content, but that's not a cause for me to complain. 

I'm not particularly familiar with MoveOn, but AFAIK they don't describe themselves as "YouTube for Liberals". A quick glance around their site and I found their VideoVets project (http://pol.moveon.org/videovets/). All those videos are hosted on YouTube and embedded in MoveOn's site. So not sure it's much of a comparison.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>2495</wp:comment_id>
			<wp:comment_author><![CDATA[Marc Brooks]]></wp:comment_author>
			<wp:comment_author_email>IDisposable@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://musingmarc.blogspot.com</wp:comment_author_url>
			<wp:comment_author_IP>69.53.203.123</wp:comment_author_IP>
			<wp:comment_date>2007-05-07 19:09:06</wp:comment_date>
			<wp:comment_date_gmt>2007-05-08 02:09:06</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[RE: QubeTV.TV (seem a bit redundant, eh?)

Do you level the same complaint against MoveOn.org ?
]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Morning Coffee 75</title>
		<link>http://devhawk.net/2007/05/08/morning-coffee-75/</link>
		<pubDate>Tue, 08 May 2007 10:16:49 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://287d77d0-63e0-424a-8a75-9b22c536df99</guid>
		<description></description>
		<content:encoded><![CDATA[<ul><li>3D Printing is going to be huge. <a href="http://www.nytimes.com/2007/05/07/technology/07copy.html?_r=1&amp;oref=slogin">According to the NYT</a>, we'll be looking at around $1,000 for one within four years. For the impatient, check out <a href="mailto:Fab@Home">Fab@Home</a> and build one <em>right now</em>.  </li><li>It's <a href="http://devhawk.net/2003/12/18/P2P+Revisited.aspx">been a while</a> since I experimented with the P2P stack in Windows, but it looks like it's getting <a href="http://blogs.msdn.com/p2p/archive/2007/03/12/writing-peer-to-peer-applications-using-net-part-1-pnrp.aspx">the managed treatment</a> in VS "Orcas". </li><li>The managed Ruby hits keep on coming. Last week was DLR and IronRuby. This week it's a <a href="http://plas.fit.qut.edu.au/Ruby.NET/">new drop of Ruby.NET</a> which includes VS integration. </li><li>Looks like Sun is trying to get back into the Ajax/Flash/Silverlight fray with <a href="http://www.sun.com/aboutsun/pr/2007-05/sunflash.20070508.2.xml">JavaFX Script</a>. I wrote over a year ago that "<a href="http://devhawk.net/2006/02/04/Flash+The+Other+White+Meat.aspx">In platform portability, Flash has succeeded where Java failed</a>." I can't help but believe JavaFX is too little too late. Also, it's yet another Java technology name that sounds like it's been blatantly copied from MSFT. <a href="http://en.wikipedia.org/wiki/JDBC">JDBC</a>, <a href="http://en.wikipedia.org/wiki/JavaServer_Pages">JSP</a>, <a href="http://en.wikipedia.org/wiki/Java_Data_Objects">JDO</a> ... What's next? JINQ? (via <a href="http://www.techmeme.com/070508/p27">TechMeme</a>) </li><li>Steve Maine has a <a href="http://hyperthink.net/blog/PermaLink,guid,163e2844-bc01-4f6c-b721-d432666ec966.aspx">great</a><a href="http://hyperthink.net/blog/PermaLink,guid,6a82e302-d81a-4494-91dc-f6d60b2d4190.aspx">series</a> of <a href="http://hyperthink.net/blog/PermaLink,guid,40c0cf83-27b1-49e7-8086-c57d1b5007cd.aspx">posts</a> on the new Web Programming Model that's coming in .NET 3.5 and is currently being previewed as part of the <a href="http://labs.biztalk.net/">BizTalk Services SDK</a>. But it was his <a href="http://hyperthink.net/blog/PermaLink,guid,1d8eb9d5-2cac-4b6d-ba93-a6c40fab35e2.aspx">Balancing reach and rich</a> post that I found most illuminating. The first version of WCF feels hopelessly bound to the WS-* view of the world, which makes it difficult to incorporate alternative messaging models into the same programming model. I've run into this trying to use SSB with WCF. In the next version, that WCF / WS-* marriage looks like it's getting a little more open. In my current role, I'm not so interested in the web programming model, but I am very interested in how they are integrating these alternative models.</li></ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>952</wp:post_id>
		<wp:post_date>2007-05-08 10:16:49</wp:post_date>
		<wp:post_date_gmt>2007-05-08 10:16:49</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>morning-coffee-75</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="development"><![CDATA[Development]]></category>
		<category domain="category" nicename="morning-coffee"><![CDATA[Morning Coffee]]></category>
		<category domain="post_tag" nicename="p2p"><![CDATA[P2P]]></category>
		<category domain="post_tag" nicename="ruby"><![CDATA[Ruby]]></category>
		<category domain="post_tag" nicename="wcf"><![CDATA[WCF]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[287d77d0-63e0-424a-8a75-9b22c536df99]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Morning+Coffee+75]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/05/08/Morning+Coffee+75]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>That Deaf Dumb and Blind Kid Sure Plays a Mean Pinball</title>
		<link>http://devhawk.net/2007/05/09/that-deaf-dumb-and-blind-kid-sure-plays-a-mean-pinball/</link>
		<pubDate>Wed, 09 May 2007 14:08:50 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://74b11c6e-0ebd-4238-9fba-71b7da01c961</guid>
		<description></description>
		<content:encoded><![CDATA[<div style="padding-right: 5px; padding-left: 5px; float: right; padding-bottom: 5px"><div style="text-align: center"><a href="http://www.villagetheatre.org/mainstage_tommy07.shtml" atomicselection="true"><img style="border-top-width: 0px; border-left-width: 0px; border-bottom-width: 0px; border-right-width: 0px" height="240" alt="Michael K. Lee as Tommy" src="http://s3.amazonaws.com/devhawk_images/WindowsLiveWriter/Capt.WalkerDidntComeHome_B646/TOMMY_pre-press_3.jpg" width="161" border="0" /></a></div><div style="font-size: smaller; text-align: center"><span style="font-weight: bold">Michael K. Lee (Tommy)</span><br />Photo by Jay Koh<br />Property of Village Theatre</div></div><p>Last night, I got to see the final dress rehearsal of <a href="http://www.villagetheatre.org/mainstage_tommy07.shtml">The Who's TOMMY</a> at the <a href="http://www.villagetheatre.org">Village Theater</a> in Issaquah. My mother-in-law got a couple of free passes because she's working with the director on a separate project. There was no way to get a babysitter on such short notice, so that meant either <a href="http://techiewife.spaces.msn.com/">Jules</a> or I got to go. She's not as big a Who fan as I am plus the theater is five minutes from my office, so I got to go.  </p><p>Most people who know the show have either heard the <a href="http://www.rhapsody.com/thewho/tommy">album</a>, seen the <a href="http://www.imdb.com/title/tt0073812/">movie</a> or both. Pete Townsend <a href="http://en.wikipedia.org/wiki/Tommy_%28rock_opera%29#1993_stage_version">adapted it for Broadway</a> in the early 90's and I got to see it as it came through Washington DC on it's way to New York. Suffice to say that the movie is <em>very</em> different from the stage show. It's so different that the Village Theater <a href="http://www.villagetheatre.org/Downloads/mainstage/prod-guides/tommy-pg.doc">specifically</a> "does not recommend the film for previewing to gain an understanding of the stage version."  </p><p>If I had to pick, I like movie version more than the stage version. The <a href="http://www.rhapsody.com/petetownshend/thewhostommy">stage arrangement of the music</a> is orchestral, which I feels waters down the power of the music. This is most obvious on <a href="http://play.rhapsody.com/thewho/tommy/eyesighttotheblindthehawker">Eyesight to the Blind</a> which was performed in the movie by Eric Clapton. The <a href="http://play.rhapsody.com/petetownshend/thewhostommy/eyesighttotheblindreprise">orchestral arrangement</a> is barely recognizable as the same song in my opinion. The stage version also adds a new song - <a href="http://play.rhapsody.com/petetownshend/thewhostommy/ibelievemyowneyes">I Believe My Own Eyes</a> - which I don't very much.  </p><p>However, if you look at it on it's own, The Who's TOMMY is a good show. It's over the top, but for this show that works. Tommy's journey from "<a href="http://www.thewho.net/discography/songs/PinballWizard.html">deaf, dumb and blind kid</a>" to "<a href="http://www.thewho.net/discography/songs/SallySimpson.html">new Messiah</a>" is even more appropriate today than it was in 1993 when the Broadway version premiered. At the time, Townsend got a lot of flak for the changes the show, but as <a href="http://www.thewho.net/articles/townshen/pt_96.htm">he said</a> "what's actually changed is the times".</p><p>While the show itself is over the top, this production is even more so. To quote from the flyer (which I can't find online) everything is in nearly constant motion. Actors, set pieces and a huge video screen that dominates the stage. Again, given the show, it works. The cast was good - Michael Lee (pictured above) as Tommy was a particular stand out. There were a few rough spots in the large chorus numbers, but that's to be expected in a dress rehearsal, right?</p><p>Bottom line, it's a good show so if you live within driving distance of Issaquah, you should check it out. If you're already Who fan, just be aware that it's not supposed to be just like the movie...</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>953</wp:post_id>
		<wp:post_date>2007-05-09 14:08:50</wp:post_date>
		<wp:post_date_gmt>2007-05-09 14:08:50</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>that-deaf-dumb-and-blind-kid-sure-plays-a-mean-pinball</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="entertainment"><![CDATA[Entertainment]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[74b11c6e-0ebd-4238-9fba-71b7da01c961]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[That+Deaf+Dumb+And+Blind+Kid+Sure+Plays+A+Mean+Pinball]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/05/09/That+Deaf+Dumb+And+Blind+Kid+Sure+Plays+A+Mean+Pinball]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Morning Coffee 76</title>
		<link>http://devhawk.net/2007/05/10/morning-coffee-76/</link>
		<pubDate>Thu, 10 May 2007 10:30:19 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://4f0a9a85-87c3-4df0-a8f8-88ded97d277a</guid>
		<description></description>
		<content:encoded><![CDATA[<ul><li>Dare Obasanjo sez <a href="http://www.25hoursaday.com/weblog/PermaLink.aspx?guid=25e5009e-0889-4883-8d03-58e7775882ac">Cool URIs Don't Change</a>. He's got other versioning advice, but that's the main takeaway. Good advice that dovetails nicely with "<a href="http://hyperthink.net/blog/PermaLink,guid,40c0cf83-27b1-49e7-8086-c57d1b5007cd.aspx">It's the URI, Stupid</a>".  </li><li>I usually agree with <a href="http://soa-eda.blogspot.com/">Jack van Hoof's</a> stuff, but I don't agree with <a href="http://soa-eda.blogspot.com/2007/05/how-to-implement-loosely-coupled.html">his thoughts</a> on loosely coupled transaction processing. It's much better than suggesting the use of 2PC system like <a href="http://specs.xmlsoap.org/ws/2004/10/wsat/wsat.pdf">WS-AT</a>, but when he writes that "by design every action has a compensating action to undo the original action" I am reminded of Pat's old post <a href="http://blogs.msdn.com/pathelland/archive/2004/08/12/213552.aspx">Why I hate the phrase "Long Running Transactions"</a>. Personally, I'm a fan of using the Tentative Operation or Reservation pattern, <a href="http://msdn2.microsoft.com/en-us/library/ms954638.aspx#soade_topic3">described</a> by <a href="http://blogs.msdn.com/jevdemon/">John Evdemon</a>. Note the lack of a transaction coordinator in that pattern.  </li><li>Speaking of service anti-patterns, I wonder how we rationalize the following two statements, both from Microsoft, in documents published by my old team:  <ul><li>"CRUD operations are the wrong level of factoring for a Web service. CRUD operations may be implemented within or across services, but should not be exposed to consumers in such a fashion. This is an example of a service that allowed internal (private) capabilities to bleed into the service's public interface." <a href="http://blogs.msdn.com/jevdemon/">John Evdemon</a>, <a href="http://msdn2.microsoft.com/en-us/library/ms954638.aspx">Principles of Service Design: Service Patterns and Anti-Patterns</a>, <a href="http://msdn2.microsoft.com/en-us/architecture/aa479349.aspx">Readings in Service Orientation</a></li><li>"It is very common for Entity Services to support a create, read, update and delete (CRUD) interface at the entity level, and add additional domain-speciic operations needed to address the problem-domain and support the application’s features and use cases." <a href="http://blogs.msdn.com/shycohen/">Shy Cohen</a>, Ontology and Taxonomy of Services in a Service-Oriented Architecture, <a href="http://download.microsoft.com/download/e/8/b/e8b39fdb-0a4c-4f52-a5bc-9af66b9fa7df/AJ11_EN.zip">Journal 11</a></li></ul></li><li>Ian Thomas wonders <a href="http://itblagger.wordpress.com/2007/05/04/does-erp-suck/">Does ERP suck</a>? In a word: Yes! :) Seriously, I'm a strong believer in what Ian alternatively calls "unbundling" and "disaggregation" of monolithic enterprise systems - ERP is the most glaring example of such systems.  </li><li>Jamie Cansdale is <a href="http://weblogs.asp.net/nunitaddin/archive/2007/05/10/silverlight-console-applications.aspx">figuring out</a> how to host Silverlight's CLR outside of the browser. He's already got a console runner up and running. He's working of adding "Test With Silverlight" option to <a href="http://www.testdriven.net/">TestDriven.NET</a>. You go Jamie.</li></ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>954</wp:post_id>
		<wp:post_date>2007-05-10 10:30:19</wp:post_date>
		<wp:post_date_gmt>2007-05-10 10:30:19</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>morning-coffee-76</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="morning-coffee"><![CDATA[Morning Coffee]]></category>
		<category domain="post_tag" nicename="silverlight"><![CDATA[Silverlight]]></category>
		<category domain="post_tag" nicename="soa"><![CDATA[SOA]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[4f0a9a85-87c3-4df0-a8f8-88ded97d277a]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Morning+Coffee+76]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/05/10/Morning+Coffee+76]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Afternoon Coffee 77</title>
		<link>http://devhawk.net/2007/05/15/afternoon-coffee-77/</link>
		<pubDate>Tue, 15 May 2007 21:08:01 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://d08c1b25-844f-4b3b-8318-2bb91a4190da</guid>
		<description></description>
		<content:encoded><![CDATA[<ul><li>Pat Helland is finally <a href="http://blogs.msdn.com/pathelland/archive/2007/05/14/i-m-glad-to-be-back.aspx">blogging again</a>. His first post back is basically "what I've been up to for the past two years", which is to say no cool tech stuff...yet. David Ing <a href="http://www.from9till2.com/PermaLink.aspx?guid=c2b59304-0681-4bda-8697-03f993d8c0f6">calls Pat's time @ Amazon</a> "an extended training sabbatical" and that we're lucky to have him back. Agree 100%. BTW, since Pat didn't include a link to his recent <a href="http://www-db.cs.wisc.edu/cidr/cidr2007/papers/cidr07p15.pdf">paper</a> and <a href="http://www-db.cs.wisc.edu/cidr/cidr2007/slides/p15-helland.ppt">presentation</a>, I will.  </li><li>Speaking of blogging luminaries, James Clark is also <a href="http://blog.jclark.com/">blogging</a>. Don Box <a href="http://pluralsight.com/blogs/dbox/archive/2007/05/10/47285.aspx">calls him</a> the "brightest guy in XML-land". <a href="http://blog.jclark.com/2007/04/do-we-need-new-kind-of-schema-language.html">Money Quote</a>: "any damn fool could produce a better data format than XML."  </li><li>Rick Barnes - aka my boss - <a href="http://rickbarn.spaces.live.com/Blog/cns!F8796F31B57620E9!242.entry">likes</a> Roger Session's white paper <a href="http://www.objectwatch.com/whitepapers/ABetterPath-Final.pdf">A Better Path to Enterprise Architectures</a> and comes up with a number of variants of Roger's Observe/Orient/Plan/Act model. Then he asks the $64,000 question: "Why then, do we insist on spending months analyzing software the business, interviewing subject matter experts and end users, writing hundred or thousand page "requirements" documents, and meeting to agree on dozens or hundreds of features before we write the first line of code?" Rick is one of the reasons I took this job instead of the other awesome opportunities I had when I was switching jobs. I'm sure you see why.  </li><li>Speaking of requirements, Eric Sink has a <a href="http://software.ericsink.com/articles/Requirements.html">phenomenal post</a> on requirements. Go read it. Can we officially grant "Walking Spec" <a href="http://c2.com/cgi/wiki?AntiPattern">anti-pattern</a> status without the customary waiting period?  </li><li>Scott Guthrie posted on <a href="http://weblogs.asp.net/scottgu/archive/2007/05/15/new-orcas-language-feature-anonymous-types.aspx">Anonymous Types</a>, the latest in his series on the new language features coming with LINQ. Anon types in and of themselves are a fairly simple construct - you pass the properties and values into the new <a href="http://weblogs.asp.net/scottgu/archive/2007/03/08/new-c-orcas-language-features-automatic-properties-object-initializers-and-collection-initializers.aspx">object init syntax</a> and the compiler munges up a class to match. Simple, but critical for SQL-style data shaping queries. Of course, the limitation is that you can't pass the anonymous type object around in any type-safe way.  </li><li>LINQ to * Watch: <a href="http://www.codeplex.com/LINQtoSharePoint">LINQ to SharePoint</a>. <a href="http://community.bartdesmet.net/blogs/bart/archive/2007/05/10/about-katmai-astoria-jasper-acropolis-pex-and-an-update-on-linq-to-sharepoint.aspx">Details</a> on Bart de Smet's blog.  </li><li>Jeff Atwood writes a long post to ask for background compilation in C#. +1 on that request. But I disagree with his point about "giving up on the idea that .NET is a multiple language runtime". Even though the runtime supports multiple languages, most programmers are only fluent in one.  </li><li>I'm a bit behind on this, but my old team has moved <a href="http://www.skyscrapr.net/">SkyScrapr</a> to <a href="http://msdn2.microsoft.com/skyscrapr/">MSDN</a>. For the uninitiated, SkyScrapr is a site for aspiring architects to learn about software architects and architecture.  </li><li><strike>p&amp;p</strike><a href="http://www.clariusconsulting.net">Clarius</a> has shipped a new software factory: the <a href="http://www.codeplex.com/vsipfactory">VSIPFactory</a>, a software factory for Visual Studio Extensibility. Pablo Galiano <a href="http://www.clariusconsulting.net/blogs/pga/archive/2007/04/03/23974.aspx">has more</a>.</li></ul><p>Update: I mistakenly attributed the VSIPFactory to p&amp;p. It's from Clarius. Sorry guys.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>955</wp:post_id>
		<wp:post_date>2007-05-15 14:08:01</wp:post_date>
		<wp:post_date_gmt>2007-05-15 21:08:01</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>afternoon-coffee-77</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="morning-coffee"><![CDATA[Morning Coffee]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[d08c1b25-844f-4b3b-8318-2bb91a4190da]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Afternoon+Coffee+77]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/05/15/Afternoon+Coffee+77]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>2497</wp:comment_id>
			<wp:comment_author><![CDATA[Andres Aguiar]]></wp:comment_author>
			<wp:comment_author_email>andres.aguiar@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://weblogs.asp.net/aaguiar</wp:comment_author_url>
			<wp:comment_author_IP>190.64.197.22</wp:comment_author_IP>
			<wp:comment_date>2007-05-16 05:09:45</wp:comment_date>
			<wp:comment_date_gmt>2007-05-16 12:09:45</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Actually, VSIPFactory is not built by the p&p team, but by Pablo Galiano from Clarius (http://www.clariusconsulting.net/blogs/pga/)

Regards,

Andres]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Making My Mark at TechEd</title>
		<link>http://devhawk.net/2007/05/15/making-my-mark-at-teched/</link>
		<pubDate>Tue, 15 May 2007 11:21:54 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://87c32066-b8ce-4fae-a233-597ad2a967df</guid>
		<description></description>
		<content:encoded><![CDATA[<p><img style="MARGIN: 0px 5px 0px 0px" src="http://s3.amazonaws.com/devhawk_images/teched07_120X90_v2w.jpg" align="left" /> One of the things that's different about being in MSIT is that it's cut my travel dramatically. Basically, the only travel I've done since taking this job was <a href="http://devhawk.net/2006/09/27/Thoughts+On+The+SOA+Workshop.aspx">Thomas Erl's SOA Workshop</a> last September. So it came as a bit of a surprise when I got tapped to present at TechEd (at fairly close to the last minute). </p><p>The last year I ran the <a href="https://www.msteched.com/public/tracks.aspx#ARC">architecture track</a>, all track owners were asked to include either a globalization or MSIT session in our track. Since then, MSIT has expanded it's role at TechEd dramatically, with 14 breakouts, 20 chalk talks and our own Technical Learning Center. </p><p>I'm doing a two chalk talks on my MSIT project, Rome. I <a href="http://devhawk.net/2006/06/15/Moving+On.aspx">mentioned</a> the project back when I switched jobs, but we've never talked about the project by name before. We haven't accomplished quite as much as I'd hoped since then, but we've progressed to the point that we can talk publicly about what we're doing. Now that we've begun to open the kimono a bit, you should see more on Rome, Not only from me but also my teammates who blog: <a href="http://halfmybrain.spaces.live.com/">Dale</a>, <a href="http://rickbarn.spaces.live.com/">Rick</a> and <a href="http://blogs.msdn.com/dotties/">Dottie</a>.</p><p>So if you're going to TechEd, make sure you stop by the MSIT Technical Learning Center and say hi. Unlike my last two trips to TechEd, I have very limited responsibilities this time - basically just show up on time and talk about what I do all day, twice - so that leaves plenty of time to attend sessions, chat up attendees and <a href="http://www.microsoft.com/events/teched2007/attendeeparty.mspx">ride roller coasters</a>. Hope to see you there.</p><blockquote><p><strong><u>ROME: Service Oriented Infrastructure for the Enterprise<br /></u></strong>Like most enterprises, Microsoft IT is adopting a service oriented approach for the development of their internal systems. However, in order to avoid projects building similar service infrastructures on a per application basis, MSIT realizes the need for a common service oriented infrastructure to build these systems upon. Inside MSIT, the Rome project is tasked with designing, building and maintaining the infrastructure for these services. Come chat with Harry Pierson, lead architect of the Rome project, and discuss the challenges of building a large-scale service infrastructure inside a large enterprise like Microsoft.</p><ul><li>MST02-TLC Monday (June 4th) 1:15-2:30pm 
</li><li>MST14-TLC Thursday (June 7th) 1-2:15pm</li></ul></blockquote>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>956</wp:post_id>
		<wp:post_date>2007-05-15 11:21:54</wp:post_date>
		<wp:post_date_gmt>2007-05-15 11:21:54</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>making-my-mark-at-teched</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="architecture"><![CDATA[Architecture]]></category>
		<category domain="post_tag" nicename="rome"><![CDATA[Rome]]></category>
		<category domain="post_tag" nicename="soa"><![CDATA[SOA]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[87c32066-b8ce-4fae-a233-597ad2a967df]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Making+My+Mark+At+TechEd]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/05/15/Making+My+Mark+At+TechEd]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Morning Coffee 78</title>
		<link>http://devhawk.net/2007/05/16/morning-coffee-78/</link>
		<pubDate>Wed, 16 May 2007 12:01:36 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://81028fac-5cb1-4ce3-8e71-9d29ec3ce882</guid>
		<description></description>
		<content:encoded><![CDATA[<ul><li>Ian Griffiths <a href="http://www.interact-sw.co.uk/iangblog/2007/05/15/language-choice">posts</a> a much longer version of "<a href="http://devhawk.net/2007/05/15/Afternoon+Coffee+77.aspx">Even though the runtime supports multiple languages, most programmers are only fluent in one</a>." (via <a href="http://www.larkware.com/dg8/TheDailyGrind1143.aspx">Larkware</a>) </li><li>I wrote yesterday that Pat Helland's first post back was light on the tech talk. Luckily (for us) he takes the bus to work so he has plenty of time to write blog entries. <a href="http://blogs.msdn.com/pathelland/archive/2007/05/15/memories-guesses-and-apologies.aspx">Today's post</a> is his "personal opinion about how computers suck". Money Quote: "We try too hard as an industry.  Frequently, we build big and expensive datacenters and deploy big and expensive computers. In many cases, comparable behavior can be achieved with a lot of crappy machines which cost less than the big expensive one." </li><li>Steve Jones wrote that <a href="http://service-architecture.blogspot.com/2007/05/crud-is-crap.html">CRUD is CRAP</a>. I agree 100%, but for additional reasons. Not only is it boooooring to write, it also delegates control <em>outside </em>of the service which I think is a mistake. Check out <a href="http://blogs.msdn.com/maarten_mullender/archive/2004/07/23/193524.aspx">this post</a> from Maarten Mullender who advised to do CRUD only when you can afford it. </li><li>MIT Media Lab has created <a href="http://scratch.mit.edu">Scratch</a> "a new programming language that makes it easy to create your own interactive stories, animations, games, music, and art -- and share your creations on the web" targeted at kids 8 and up. It's a dynamic visual programming language that looks like Lego. Between Scratch, <a href="http://on10.net/Blogs/laura/techfest-07-boku/">Boku</a> and <a href="http://phrogram.com">Phrogram</a> I think my kids will have lots of fun learning to program like daddy does. (via <a href="http://blog.wired.com/geekdad/2007/05/kids_programmin.html">GeekDad</a>) </li><li>Halo 3 is coming <a href="http://gamerscoreblog.com/team/archive/2007/05/15/AreYouReadyforHalo.aspx">September 25th</a>! I foresee lots of people calling in sick that day. And the next. And the rest of the week, etc. etc. etc.</li></ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>957</wp:post_id>
		<wp:post_date>2007-05-16 12:01:36</wp:post_date>
		<wp:post_date_gmt>2007-05-16 12:01:36</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>morning-coffee-78</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="clr"><![CDATA[CLR]]></category>
		<category domain="category" nicename="morning-coffee"><![CDATA[Morning Coffee]]></category>
		<category domain="post_tag" nicename="soa"><![CDATA[SOA]]></category>
		<category domain="post_tag" nicename="xbox-360"><![CDATA[Xbox 360]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[81028fac-5cb1-4ce3-8e71-9d29ec3ce882]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Morning+Coffee+78]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/05/16/Morning+Coffee+78]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>2498</wp:comment_id>
			<wp:comment_author><![CDATA[Craig Randall]]></wp:comment_author>
			<wp:comment_author_email>craig.randall@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://craigrandall.net/</wp:comment_author_url>
			<wp:comment_author_IP>137.69.117.22</wp:comment_author_IP>
			<wp:comment_date>2007-05-16 15:25:25</wp:comment_date>
			<wp:comment_date_gmt>2007-05-16 22:25:25</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[...speaking of Mr. Razorbills, what is Maarten up to these days? I wish he would more regularly blog (or otherwise publish). When he writes, he's a worthy read...]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>2499</wp:comment_id>
			<wp:comment_author><![CDATA[David Ing]]></wp:comment_author>
			<wp:comment_author_email>david.ing@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.from9till2.com</wp:comment_author_url>
			<wp:comment_author_IP>64.46.4.105</wp:comment_author_IP>
			<wp:comment_date>2007-05-16 21:26:17</wp:comment_date>
			<wp:comment_date_gmt>2007-05-17 04:26:17</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Harry, how do you reconcile something like REST (astoria etc) with being CRUD-adverse? Is there a happy place where the two can go for coffee? (PS It's not a leading question, honestly, just was wondering...)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Morning Coffee 79</title>
		<link>http://devhawk.net/2007/05/18/morning-coffee-79/</link>
		<pubDate>Fri, 18 May 2007 12:03:47 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://d4e48cde-4cef-438f-b509-c636fd07adcc</guid>
		<description></description>
		<content:encoded><![CDATA[<ul><li>Soma <a href="http://blogs.msdn.com/somasegar/archive/2007/05/18/popfly.aspx">announces</a><a href="http://www.popfly.ms">PopFly</a>, the "fun, easy way to build and share mashups, gadgets, Web pages, and applications" from the <a href="http://www.popfly.ms/Overview/About.aspx">Non-Professional tools team</a>. The PopFly <a href="http://popflyteam.spaces.live.com">team blog</a> has <a href="http://popflyteam.spaces.live.com/Blog/cns!51018025071FD37F!131.entry">some videos</a>. Sounds vaguely like <a href="http://pipes.yahoo.com">Yahoo! Pipes</a>, but cooler. While most of the focus is on their <a href="http://www.popfly.ms/Overview/Default.aspx">browser-based mashup creator</a>, they also have <a href="http://www.popfly.ms/Overview/Explorer.aspx">VS support</a> for the non-non-professionals among us. </li><li>Eric Nelson <a href="http://blogs.msdn.com/ericnel/archive/2007/05/16/microsoft-crm-microsoft-business-application-platform.aspx">suggests</a> that the new Dynamics CRM systems is actually a LOB application platform in it's own right. More details in <a href="http://sessions.visitmix.com/default.asp?event=1011&amp;session=2012&amp;pid=DEV09&amp;disc=&amp;id=1518&amp;year=2007&amp;search=DEV09">Ben Riga's MIX session</a>. (via <a href="http://blogs.msdn.com/gianpaolo/archive/2007/05/16/microsoft-rpfbalobnaialltactiyjfuvsasfs.aspx">Gianpaolo</a>)</li><li>Sam Gentile is <a href="http://codebetter.com/blogs/sam.gentile/archive/2007/05/18/new-and-notable-167.aspx">worried</a> that C# is becoming to complex, especially when you also consider how fast the platform is moving underneath. When you get your head out of the debugger for a second and look at the Big Picture, it certainly seems overwhelming. Is it just a question of getting used to it? The first time I fired up the VS.net 2002 alpha and looked at all the classes in the BCL, I had the same overwhelmed feeling, but eventually I got over it. Or have things just gotten too big and move to fast now? If so, it's time for some new layers of abstraction...</li><li>Udi Dahan <a href="http://udidahan.weblogs.us/2007/05/17/testing-services-the-hard-way-with-wcf/">writes</a> about building testable services. Testability has to be a core consideration when building anything, but especially a reusable framework. I've had similar thoughts about language design. How do you unit test a DSL? </li><li>Roberto Medrano of SOA Software <a href="http://www.infoworld.com/article/07/05/14/20FEsoabottle-1_1.html">thinks</a> "maybe 20 percent of IT folks understand SOA and half of the rest think they do". Personally, I think most IT folks don't agree on what SOA is or should be. Furthermore, we don't even have a common lexicon to discuss it, so we end up talking past each other and arguing about topics we agree on. I think Roberto is really saying is "most people are wrong because they don't agree with what I think SOA is". (via <a href="http://soa-eda.blogspot.com/2007/05/do-we-understand-soa.html">Jack van Hoof</a>)</li><li>Jeffrey Snover <a href="http://blogs.msdn.com/powershell/archive/2007/05/18/the-virtuous-cycle-net-developers-using-to-powershell.aspx">talks</a> about the virtuous cycle of .NET language support. His point is that time spent learning .NET pays off as you transition between system programming (C#, VB.NET), shell programming (PowerShell) and script programming (IronPython, DLR). I'm not sure I would break them down that way, but his point spot on. </li><li>Clemens Vasters experiments with the new <a href="http://labs.biztalk.net/">BizTalk Services</a> with a sample called <a href="http://blogs.msdn.com/clemensv/archive/2007/05/16/tweetiebot-a-biztalk-services-experiment.aspx">TweetieBot</a>. I agree 100% with his point about the assumption of centralization will be challenged by the federation of personal services. </li></ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>958</wp:post_id>
		<wp:post_date>2007-05-18 12:03:47</wp:post_date>
		<wp:post_date_gmt>2007-05-18 12:03:47</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>morning-coffee-79</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="lanugages"><![CDATA[Lanugages]]></category>
		<category domain="category" nicename="morning-coffee"><![CDATA[Morning Coffee]]></category>
		<category domain="post_tag" nicename="soa"><![CDATA[SOA]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[d4e48cde-4cef-438f-b509-c636fd07adcc]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Morning+Coffee+79]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/05/18/Morning+Coffee+79]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>2500</wp:comment_id>
			<wp:comment_author><![CDATA[Sam Gentile]]></wp:comment_author>
			<wp:comment_author_email>managedcode44@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://codebetter.com/blogs/sam.gentile</wp:comment_author_url>
			<wp:comment_author_IP>75.198.131.206</wp:comment_author_IP>
			<wp:comment_date>2007-05-18 16:29:13</wp:comment_date>
			<wp:comment_date_gmt>2007-05-18 23:29:13</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[>Sam Gentile is worried that C# is becoming to complex, especially 

I didn't say that or at least I didn't mean it that way

One thing for certain is that C# is becoming a more complex language, not so simple and ****whether thats a good or bad thing is up for debate.***** ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Birthday Coffee 80</title>
		<link>http://devhawk.net/2007/05/21/birthday-coffee-80/</link>
		<pubDate>Mon, 21 May 2007 13:07:46 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://ebea4d22-e58b-44f8-af65-6d908dc1b31d</guid>
		<description></description>
		<content:encoded><![CDATA[<ul><li>Saw Shrek the Third over the weekend with the kids. It's gotten <a href="http://www.metacritic.com/film/titles/shrekthethird">mixed reviews</a>, but I liked it even though it wasn't as good as the first two. Is it just me, or has sequel-itis reached an all time high? This month alone we've had <a href="http://www.imdb.com/title/tt0413300/">Spiderman 3</a>, <a href="http://www.imdb.com/title/tt0463854/">28 Weeks Later</a>, <a href="http://www.imdb.com/title/tt0413267/">Shrek the Third</a> and the <a href="http://www.imdb.com/title/tt0449088/">new Pirates movie</a> opens this week.  </li><li>Hot on the heels of his post on <a href="http://weblogs.asp.net/scottgu/archive/2007/05/15/new-orcas-language-feature-anonymous-types.aspx">anonymous types</a>, Scott Guthrie starts to explain <a href="http://weblogs.asp.net/scottgu/archive/2007/05/19/using-linq-to-sql-part-1.aspx">LINQ to SQL</a>, which is where all these C#3/VB9 features have been headed. Lots of digital ink have been spilled on this topic since we announced LINQ @ PDC 05, so I'll just point out that I think this is the first OR/M solution that really works well across the board.  </li><li>David Ing <a href="http://www.from9till2.com/PermaLink.aspx?guid=d75637fe-a7cc-4f18-b0bd-aecddafb9542">sucks the fun out of PopFly</a> by suggesting it might be a "nice data aggregation / reformatting service for technically-challenged managers [and] their business data". Sounds like the next step of <a href="http://devhawk.net/2005/11/23/Browser+Based+Applications+In+The+Enterprise.aspx">enterprise mashups</a>.  </li><li>Speaking of PopFly, Larry O'Brein <a href="http://www.knowing.net/PermaLink,guid,652d0d73-23c3-409d-b3f0-3f8879e37bcb.aspx">thinks</a> PopFly is helping restore " the bridge between power users and programmers". From the <a href="http://www.popfly.com/Overview/faq.aspx">PopFly FAQ</a>: "We’re going back to our roots in 1975 when Microsoft originally launched BASIC for the Altair 8080. Tools like BASIC and Visual Basic 1.0 democratized development by enabling users to easily build applications on DOS and Windows. We believe we can make Popfly a great tool for building and sharing applications on the Web."  </li><li>Scott Hanselman <a href="http://feeds.feedburner.com/~r/ScottHanselman/~3/118288319/IsMicrosoftLosingTheAlphaGeeks.aspx">wonders</a> if Microsoft is losing the Alpha Geeks. In a related vein, I wonder if MS should be learning more aggressively from the community. MS has been the source of many developer innovations, but certainly not all. For ideas pioneered elsewhere, we tend to eventually get it, but I think we could be better about it. </li><li>Apparently, I'm just a little younger than video games. Pong <a href="http://www.1up.com/do/feature?cId=3159462">was born</a> May of 1967, only three years to the month before me. (via <a href="http://ozymandias.com/archive/2007/05/21/Video-Games-Turn-40.aspx">Ozymandias</a>)</li></ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>959</wp:post_id>
		<wp:post_date>2007-05-21 13:07:46</wp:post_date>
		<wp:post_date_gmt>2007-05-21 13:07:46</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>birthday-coffee-80</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="linq"><![CDATA[LINQ]]></category>
		<category domain="post_tag" nicename="microsoft"><![CDATA[Microsoft]]></category>
		<category domain="category" nicename="morning-coffee"><![CDATA[Morning Coffee]]></category>
		<category domain="post_tag" nicename="movies"><![CDATA[Movies]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[ebea4d22-e58b-44f8-af65-6d908dc1b31d]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Birthday+Coffee+80]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/05/21/Birthday+Coffee+80]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>2501</wp:comment_id>
			<wp:comment_author><![CDATA[John]]></wp:comment_author>
			<wp:comment_author_email>John@aol.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>59.93.87.163</wp:comment_author_IP>
			<wp:comment_date>2007-05-21 23:11:54</wp:comment_date>
			<wp:comment_date_gmt>2007-05-22 06:11:54</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thats a great day indeed.<a href="http://www.coffeebreakusa.com/" rel="nofollow">Gourmet coffee</a> do celebrate its successful Coffee online.
]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>I&#039;m 37!?!?!?!</title>
		<link>http://devhawk.net/2007/05/21/im-37/</link>
		<pubDate>Mon, 21 May 2007 17:11:16 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://51ebc83a-dae9-49d1-a35b-c939f682afc6</guid>
		<description></description>
		<content:encoded><![CDATA[<p>No, I'm not referring to <a href="http://viewaskew.com/sounds/clerks/37.wav">this hilarious line</a> from Clerks. It's my birthday today - can you guess which one?</p><p>(note, there's no real point to this post, except to have "I'm 37!?!" in the title. Let's just say I'm a big Kevin Smith fan. In case you haven't see Clerks, <a href="http://viewaskew.com/clerks/sounds.html">most lines</a> from that movie are NSFW. )</p><p><strong>Update </strong>- David Ing's son <a href="http://www.from9till2.com/PermaLink.aspx?guid=01e087e8-0a58-4003-96cb-ed36bae3338d">broke his arm</a> over the weekend. That led David to write "If you are away from your family a lot then my advice would be to fix that as quickly as you can." +1 on that sentiment. I went from field architect evangelist (travel requirement ~50%) to HQ architect evangelist (travel requirement ~10%) when Patrick was born. Of course in MSIT, I almost never travel, something my whole family appreciates. Something to be thankful for as I turn a year older.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>960</wp:post_id>
		<wp:post_date>2007-05-21 10:11:16</wp:post_date>
		<wp:post_date_gmt>2007-05-21 17:11:16</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>im-37</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="personal"><![CDATA[Personal]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[51ebc83a-dae9-49d1-a35b-c939f682afc6]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Im+37]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/05/21/Im+37]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>enclosure</wp:meta_key>
			<wp:meta_value><![CDATA[http://viewaskew.com/sounds/clerks/37.wav
145192
audio/wav
]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>2503</wp:comment_id>
			<wp:comment_author><![CDATA[David Ing]]></wp:comment_author>
			<wp:comment_author_email>david.ing@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.from9till2.com</wp:comment_author_url>
			<wp:comment_author_IP>81.151.187.54</wp:comment_author_IP>
			<wp:comment_date>2007-05-21 13:01:34</wp:comment_date>
			<wp:comment_date_gmt>2007-05-21 20:01:34</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I'm only 25. In hex. Happy birthday Harry.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>2504</wp:comment_id>
			<wp:comment_author><![CDATA[Tomas Restrepo]]></wp:comment_author>
			<wp:comment_author_email>tomas@winterdom.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.winterdom.com/weblog/</wp:comment_author_url>
			<wp:comment_author_IP>200.116.249.83</wp:comment_author_IP>
			<wp:comment_date>2007-05-21 13:23:54</wp:comment_date>
			<wp:comment_date_gmt>2007-05-21 20:23:54</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Happy birthday Harry! Have fun :)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>2502</wp:comment_id>
			<wp:comment_author><![CDATA[Don Demsak]]></wp:comment_author>
			<wp:comment_author_email>don@donxml.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.donxml.com</wp:comment_author_url>
			<wp:comment_author_IP>96.224.29.127</wp:comment_author_IP>
			<wp:comment_date>2007-05-21 10:20:46</wp:comment_date>
			<wp:comment_date_gmt>2007-05-21 17:20:46</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Congrats on turning 37.  Kevin Smith is throwing a 37th birthday bash near his home town, in Red Bank, NJ at the Count Basie theater: http://www.newsaskew.com/includes/feature.shtml?id=EEZlEyFVyuMsBboAed&style=single.  I'll be there, and there are still tickets available if you can get to NJ for the Aug. 2nd show.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Early Afternoon Coffee 81</title>
		<link>http://devhawk.net/2007/05/22/early-afternoon-coffee-81/</link>
		<pubDate>Tue, 22 May 2007 12:37:16 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://fce86a26-0481-4a0e-ad8a-bfb61a7ae75a</guid>
		<description></description>
		<content:encoded><![CDATA[<p>These morning meetings are really cramping the "morning" style of these posts. But better late than never, I guess.</p><ul><li>Politics 2.0 Watch: <a href="http://www.washingtonpost.com/wp-dyn/content/article/2007/05/20/AR2007052001408.html">Democrats pwn Republicans online</a>. (via <a href="http://www.balloon-juice.com/?p=8202">Balloon Juice</a>) </li><li>Roger Wolter <a href="http://blogs.msdn.com/rogerwolterblog/archive/2007/05/21/windows-wf-on-sql-service-broker.aspx">writes</a> about integrating SSB with WF, something I've experimented with myself. I didn't find the integration quite as natural as Roger did - transactions are a real PITA, and Roger apparently he hasn't looked into that yet - but I agree 100% with the idea that "most SSB programs end up looking a lot like a workflow." Looking forward to seeing your code, Roger. </li><li>Pat <a href="http://blogs.msdn.com/pathelland/archive/2007/05/20/soa-and-newton-s-universe.aspx">explains</a> his Newton vs. Einstein view of distributed systems and then rants about Consistency, Availability and Partition-tolerance. In particular, he discusses the evolution of what consistency (and to less extent availability) means in the face of loose coupling. Do yourself a favor and give up on distributed transactions <em>now</em>. Also, Pat points to <a href="http://www-db.cs.wisc.edu/cidr/cidr2007/papers/cidr07p36.pdf">another paper from CIDR</a> dealing with isolation in services. Haven't read it yet, but I've added it to "the pile".   </li><li>David Chappell <a href="http://www.davidchappell.com/blog/2007/05/sca-vs-soa.html">writes</a> about Service Component Architecture vs. Service Oriented Architecture. Since I don't "do" evangelism anymore, I don't spend much time watching what our competitors are doing. According to the <a href="http://www.osoa.org/display/Main/Service+Component+Architecture+Home">SCA website</a>, SCA is supposedly a "a model for building applications and systems using a Service-Oriented Architecture." But according to David, SCA 1.0 focuses on "portability, not interoperability, and so they don’t fully define the interactions between components necessary to create composites that cross vendor boundaries." I realize that we don't industry agreement on all the details of what SOA means, but I think we all agree that it's cross platform and cross vendor. Or maybe we can't even agree on that much.</li></ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>961</wp:post_id>
		<wp:post_date>2007-05-22 12:37:16</wp:post_date>
		<wp:post_date_gmt>2007-05-22 12:37:16</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>early-afternoon-coffee-81</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="morning-coffee"><![CDATA[Morning Coffee]]></category>
		<category domain="post_tag" nicename="service-broker"><![CDATA[Service Broker]]></category>
		<category domain="post_tag" nicename="soa"><![CDATA[SOA]]></category>
		<category domain="post_tag" nicename="wf"><![CDATA[WF]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[fce86a26-0481-4a0e-ad8a-bfb61a7ae75a]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Early+Afternoon+Coffee+81]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/05/22/Early+Afternoon+Coffee+81]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Morning Coffee 82</title>
		<link>http://devhawk.net/2007/05/23/morning-coffee-82/</link>
		<pubDate>Wed, 23 May 2007 11:01:38 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://452d2d00-cc05-47f8-acea-0f7c38bb4569</guid>
		<description></description>
		<content:encoded><![CDATA[<ul><li>Dare <a href="http://www.25hoursaday.com/weblog/PermaLink.aspx?guid=b78cfe57-3616-43a8-b551-7a4bf59016bd">reached</a> a similar conclusion about Silverlight and Apollo <a href="http://devhawk.net/2007/05/02/Hawkeye+On+Silverlight.aspx">that I did</a>. But <a href="http://blog.digitalbackcountry.com/?p=816">newly minted</a> Adobe RIA evangelist Ryan Stewart <a href="http://blog.digitalbackcountry.com/?p=823">writes</a> that calling Silverlight vs. Apollo the next platform competition is overblown. However, he then reiterates my point that MSFT is moving in on Adobe's traditional stronghold (aka the web) while Adobe is moving in on MSFT's traditional stronghold (aka the desktop). The upshot is that both companies are trying to deliver a unified "client" platform that spans desktop, devices and browser. That sounds like "platform competition" to me.  </li><li>Apparently I'm missing the this years compiler dev lab. :( John Lam <a href="http://www.iunknown.com/2007/05/compiler_dev_la.html">is there</a>, with <a href="http://www.iunknown.com/files/dlr_experiences.pdf">slides from his talk</a> on the DLR. Miguel de Icaza is <a href="http://tirania.org/blog/archive/2007/May-17.html">there</a>, with <a href="http://tirania.org/blog/archive/2007/May-17.html">fairly</a><a href="http://tirania.org/blog/archive/2007/May-23.html">extensive</a> notes. Hopefully they will post talks like they did <a href="http://www.langnetsymposium.com/speakers.asp">last year</a>. </li><li>Speaking of languages, Scott Hanselman <a href="http://feeds.feedburner.com/~r/ScottHanselman/~3/118922284/ProgrammerIntentOrWhatYoureNotGettingAboutRubyAndWhyItsTheTits.aspx">explains</a> why he thinks Ruby is "the tits". Personally, on the scale between "I can't see where Ruby is such hot shit" and "Ruby is the tits", I'm somewhere near the middle, leaning towards tits. I love the expressiveness of Ruby's syntax, but I miss the static typing. Call me <a href="http://devhawk.net/2007/05/21/Im+37.aspx">over the hill</a>, but I like the compiler catching mistakes at compile time. I realize it's not for everyone, but I like what I like. </li><li>This talk about Ruby's expressiveness reminds me of something Larry O'Brien <a href="http://www.knowing.net/PermaLink,guid,a3baaf7a-1af3-460a-8486-6b459dab51ed.aspx">said</a> in the wake of the IronRuby announcement: "I <em>am</em> surprised by the IronRuby announcement. I really thought we were going to see some form of Ruby#:Ruby::C#:Java. Although I'm happy, I was actually hoping to see a new language." The expressiveness of Ruby that Scott describes (which is to say, not all of Ruby's expressiveness) would be completely achievable in a statically typed language. Personally, I'd like to see that language... </li><li>My birthday is past, but I want a <a href="http://shop.lego.com/Product/?p=EL502">Lego Ice Cube Tray</a>. (via <a href="http://blog.wired.com/geekdad/2007/05/lego_my_martini.html">Geekdad</a>)</li></ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>962</wp:post_id>
		<wp:post_date>2007-05-23 11:01:38</wp:post_date>
		<wp:post_date_gmt>2007-05-23 11:01:38</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>morning-coffee-82</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="development"><![CDATA[Development]]></category>
		<category domain="post_tag" nicename="lanugages"><![CDATA[Lanugages]]></category>
		<category domain="category" nicename="morning-coffee"><![CDATA[Morning Coffee]]></category>
		<category domain="post_tag" nicename="ruby"><![CDATA[Ruby]]></category>
		<category domain="post_tag" nicename="silverlight"><![CDATA[Silverlight]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[452d2d00-cc05-47f8-acea-0f7c38bb4569]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Morning+Coffee+82]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/05/23/Morning+Coffee+82]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Happy Birthday Dad!</title>
		<link>http://devhawk.net/2007/05/24/happy-birthday-dad/</link>
		<pubDate>Thu, 24 May 2007 18:47:38 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://74044a28-8efd-4522-9f60-a8dddea3d29e</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Today is my father's birthday. Yes, I realize <a href="http://devhawk.net/2007/05/21/Im+37.aspx">mine was Monday</a>. To make it even weirder, my brother Ted's birthday was yesterday. Let's just say this week was hard on my mother when Ted and I were kids. </p><p>Happy Birthday Dad! He's on the road today, so he won't see it until after his birthday is officially over, but it's the thought that counts, right?</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>963</wp:post_id>
		<wp:post_date>2007-05-24 11:47:38</wp:post_date>
		<wp:post_date_gmt>2007-05-24 18:47:38</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>happy-birthday-dad</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="family"><![CDATA[Family]]></category>
		<category domain="category" nicename="personal"><![CDATA[Personal]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[74044a28-8efd-4522-9f60-a8dddea3d29e]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Happy+Birthday+Dad]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/05/24/Happy+Birthday+Dad]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>2505</wp:comment_id>
			<wp:comment_author><![CDATA[Tomas Restrepo]]></wp:comment_author>
			<wp:comment_author_email>tomas@winterdom.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.winterdom.com/weblog/</wp:comment_author_url>
			<wp:comment_author_IP>200.116.246.118</wp:comment_author_IP>
			<wp:comment_date>2007-05-24 13:03:30</wp:comment_date>
			<wp:comment_date_gmt>2007-05-24 20:03:30</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hey that's funky. My family is similar. My mother and I share the same birthday, while at my aunt's house they all have birthdays in funky days (december 24 and 31, and october 12).]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>2506</wp:comment_id>
			<wp:comment_author><![CDATA[stacey]]></wp:comment_author>
			<wp:comment_author_email>stacey_fors@hotmail.co.uk</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>212.219.240.212</wp:comment_author_IP>
			<wp:comment_date>2007-06-08 05:41:03</wp:comment_date>
			<wp:comment_date_gmt>2007-06-08 12:41:03</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[i dont like this poem]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>REST is neither CRUD nor CRAP</title>
		<link>http://devhawk.net/2007/05/24/rest-is-neither-crud-nor-crap/</link>
		<pubDate>Thu, 24 May 2007 11:09:32 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://8db9fdf7-636d-4bf0-bac0-c47cbe10664c</guid>
		<description></description>
		<content:encoded><![CDATA[<p>In the wake of <a href="http://devhawk.net/2007/05/16/Morning+Coffee+78.aspx">my praise for CRUD is CRAP</a>, <a href="http://www.from9till2.com/">David Ing</a><a href="http://devhawk.net/CommentView,guid,81028fac-5cb1-4ce3-8e71-9d29ec3ce882.aspx#commentstart">asked</a> “how do you reconcile something like REST (astoria etc) with being CRUD-adverse? Is there a happy place where the two can go for coffee?” Sure there is: I hear <a href="http://pluralsight.com/blogs/tewald/">Tim Ewald’s XML Nation</a> serves great coffee and the scones are pretty good. (*) 
</p><p>Seriously, the key observation that Tim <a href="http://pluralsight.com/blogs/tewald/archive/2007/04/26/46984.aspx">recently made</a> is that REST != CRUD. Sure, it can be <a href="http://en.wikipedia.org/wiki/Atom_Publishing_Protocol">used that way</a> and for simple scenarios it works fine. (I’ll define “simple scenarios” in a second.) But I don’t believe CRUD style REST works in the large. Tim said you can’t build with just CRUD because it’s “to simplistic to be useful”. I’ll go even more fundamental, using REST for CRUD means having giving up transactions entirely. I've already accepted that building loosely coupled services means giving up <em>distributed </em>transactions. But the idea of giving up transactions entirely is just crazy talk. 
</p><p>So when I said "simple scenarios" above, I meant "scenarios that don't need transactions". (I take it as a given that RESTifarians aren't hot for WS-AtomicTransaction.) ATOM Publishing is a simple scenario because the web resource authoring scenario doesn’t need transactions to protect updates to multiple resources at a time. If it did, I don't believe the REST as CRUD approach they use would work. 
</p><p>As you might guess then, I’m not a fan of <a href="http://astoria.mslivelabs.com/">Astoria</a>. I believe the sweet spot for so called “data services” will be read only (because they don't need transactions, natch). I'm sure there are some read/write scenarios Astoria will be useful for, but I think they will be limited - at least within the enterprise. 
</p><p>If REST != CRUD, then what is it? Let's go back to <a href="http://pluralsight.com/blogs/tewald/archive/2007/04/26/46984.aspx">Tim's post</a>: 
</p><blockquote><p>Every communication protocol has a state machine. For some protocols they are very simple, for others they are more complex. When you implement a protocol via RPC, you build methods that modify the state of the communication. That state is maintained as a black box at the endpoint. Because the protocol state is hidden, it is easy to get things wrong. For instance, you might call Process before calling Init. People have been looking for ways to avoid these problems by annotating interface type information for a long time, but I'm not aware of any mainstream solutions. The fact that the state of the protocol is encapsulated behind method invocations that modify that state in non-obvious ways also makes versioning interesting. 
</p><p>The essence of REST is to make the states of the protocol explicit and addressable by URIs. The current state of the protocol state machine is represented by the URI you just operated on and the state representation you retrieved. You change state by operating on the URI of the state you're moving to, making that your new state. A state's representation includes the links (arcs in the graph) to the other states that you can move to from the current state. This is exactly how browser based apps work, and there is no reason that your app's protocol can't work that way too. (The <a href="http://www.ietf.org/internet-drafts/draft-ietf-atompub-protocol-14.txt">ATOM Publishing protocol</a> is the canonical example, though its easy to think that its about entities, not a state machine.)</p></blockquote><p>While I disagree with Tim's disagreement of ATOM (i.e. I believe APP <em>is</em> about entities, but it works because it doesn't need transactions), I agree 100% that REST is about <u>protocol state</u>. Tim lays this very clear in his <a href="http://pluralsight.com/blogs/tewald/archive/2007/04/27/47031.aspx">airline reservation sample</a>. Thus, I can spurn CRUD and still embrace REST if I want to. 
</p><p>Further, Tim's points on the opaque nature of RPC style interactions (which web services appear to have fallen into despite the best of intentions) are spot on. If you're doing simple request/response services, the protocol state is trivial, so that works fine. However, in the scenarios I face, long running services are the norm and managing the protocol state is critical. I've got some ideas on how to do that, but that's a future blog post. 
</p><hr /><p>(*) Actually, I have no idea if Tim even likes coffee or scones. FYI, DevHawk Nation would not feature great coffee or pretty good scones. We would, however, have <a href="http://www.arrogantbastard.com/index2.html">Arrogant Bastard Ale</a> on tap. </p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>964</wp:post_id>
		<wp:post_date>2007-05-24 11:09:32</wp:post_date>
		<wp:post_date_gmt>2007-05-24 11:09:32</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>rest-is-neither-crud-nor-crap</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="architecture"><![CDATA[Architecture]]></category>
		<category domain="post_tag" nicename="rest"><![CDATA[REST]]></category>
		<category domain="post_tag" nicename="soa"><![CDATA[SOA]]></category>
		<category domain="post_tag" nicename="web-services"><![CDATA[Web Services]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[8db9fdf7-636d-4bf0-bac0-c47cbe10664c]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[REST+Is+Neither+CRUD+Nor+CRAP]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/05/24/REST+Is+Neither+CRUD+Nor+CRAP]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>2509</wp:comment_id>
			<wp:comment_author><![CDATA[DevHawk]]></wp:comment_author>
			<wp:comment_author_email>harry@devhawk.net</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>131.107.0.102</wp:comment_author_IP>
			<wp:comment_date>2007-05-25 14:53:19</wp:comment_date>
			<wp:comment_date_gmt>2007-05-25 21:53:19</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Anders, I never said REST can't support transactions, I said REST as CRUD can't support transactions. I would say that your scenario of submitting a collection of changes to be applied transactionally moves you out of REST as CRUD and into REST as Protocol. ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>2510</wp:comment_id>
			<wp:comment_author><![CDATA[Alex James]]></wp:comment_author>
			<wp:comment_author_email>Alex@base4.net</wp:comment_author_email>
			<wp:comment_author_url>http://www.base4.net/blog.aspx?ID=436</wp:comment_author_url>
			<wp:comment_author_IP>219.89.81.114</wp:comment_author_IP>
			<wp:comment_date>2007-05-30 22:16:32</wp:comment_date>
			<wp:comment_date_gmt>2007-05-31 05:16:32</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[...To my way of thinking programming RESTfully is all about intent.

A common catch cry of the anti-REST crowd or the grudging REST adopters is that it is not appropriate for Update. Essentially according to their arguments transactions are a nightmare...]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>2508</wp:comment_id>
			<wp:comment_author><![CDATA[David Ing]]></wp:comment_author>
			<wp:comment_author_email>david.ing@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.from9till2.com</wp:comment_author_url>
			<wp:comment_author_IP>81.151.38.153</wp:comment_author_IP>
			<wp:comment_date>2007-05-25 05:30:26</wp:comment_date>
			<wp:comment_date_gmt>2007-05-25 12:30:26</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi Harry, I didn't really respond here: http://www.from9till2.com/PermaLink.aspx?guid=2dbee669-07fd-435e-a5f9-51f709ef183f

- David]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>2507</wp:comment_id>
			<wp:comment_author><![CDATA[Andres Aguiar]]></wp:comment_author>
			<wp:comment_author_email>andres.aguiar@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://weblogs.asp.net/aaguiar</wp:comment_author_url>
			<wp:comment_author_IP>190.64.218.26</wp:comment_author_IP>
			<wp:comment_date>2007-05-24 18:58:05</wp:comment_date>
			<wp:comment_date_gmt>2007-05-25 01:58:05</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[There are simple scenarios with transactions that can be supported with REST.

For example, Astoria has a client side component that track changes in entities and sends them to the server. Those can be applied in a transaction (even if today implementation does not). So you could retrieve an order, delete a line, add another, change the header and invoke the service.



]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Follow My Breadcrumbs</title>
		<link>http://devhawk.net/2007/05/25/follow-my-breadcrumbs/</link>
		<pubDate>Fri, 25 May 2007 14:17:19 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://739ca0d5-fea4-49ee-8150-5bb432d7e34b</guid>
		<description></description>
		<content:encoded><![CDATA[<p>I hope to post my thoughts on protocol state next week. In the meantime, you can check out <a href="http://www-db.cs.wisc.edu/cidr/cidr2007/papers/cidr07p36.pdf">Isolation Support for Service-based Applications</a> as well as <a href="http://www.vldb2005.org/program/paper/thu/p1199-greenfield.pdf">Consistency for Web Services Applications</a>. The papers (from the same authors) deal with the C and I of ACID, but in service scenarios where ACID transactions aren't feasible. Both papers have dramatically impacted my thinking in this space.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>965</wp:post_id>
		<wp:post_date>2007-05-25 14:17:19</wp:post_date>
		<wp:post_date_gmt>2007-05-25 14:17:19</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>follow-my-breadcrumbs</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="architecture"><![CDATA[Architecture]]></category>
		<category domain="post_tag" nicename="soa"><![CDATA[SOA]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[739ca0d5-fea4-49ee-8150-5bb432d7e34b]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Follow+My+Breadcrumbs]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/05/25/Follow+My+Breadcrumbs]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>2511</wp:comment_id>
			<wp:comment_author><![CDATA[Pat Helland]]></wp:comment_author>
			<wp:comment_author_email>phelland@microsoft.com</wp:comment_author_email>
			<wp:comment_author_url>http://blogs.msdn.com/pathelland</wp:comment_author_url>
			<wp:comment_author_IP>71.231.137.138</wp:comment_author_IP>
			<wp:comment_date>2007-05-27 09:04:54</wp:comment_date>
			<wp:comment_date_gmt>2007-05-27 16:04:54</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Both of these papers are wonderful!  They (and their authors) have also influenced my thinking quite a bit.  In addition, the authors are fine gentlemen and quite interesting, too.

Give them a read!

-- Pat

]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Morning Coffee 83</title>
		<link>http://devhawk.net/2007/05/25/morning-coffee-83/</link>
		<pubDate>Fri, 25 May 2007 11:11:03 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://01733a9c-2029-4392-a210-dfbbb5108e01</guid>
		<description></description>
		<content:encoded><![CDATA[<ul><li>Dottie Shaw - PM on Rome - has a post on <a href="http://blogs.msdn.com/dotties/archive/2007/05/23/durable-messaging-why-should-i-care.aspx">Durable Messaging and why she cares</a>. Needless to say, I care about durable messaging too, for all the same reasons...  </li><li>PDC07 has been "<a href="http://msdn2.microsoft.com/en-us/events/bb288534.aspx">rescheduled</a>". Feel free to theorize amongst yourselves the reasons why. </li><li>Friend and ex-boss John deVadoss speaks on <a href="http://www.ftponline.com/channels/arch/reports/eas/2007/jdevadoss/">Software+Services</a> @ the Enterprise Architect Summit. He finds time to present, but <a href="http://blogs.msdn.com/jdevados">his blog</a> remains quiet... </li><li>JD Meier announces a p&amp;p twofer: beta 1 of both their <a href="http://blogs.msdn.com/jmeier/archive/2007/05/23/team-dev-with-tfs-guide-beta-1-release.aspx">TFS Guide</a> and their <a href="http://blogs.msdn.com/jmeier/archive/2007/05/25/performance-testing-guide-beta-1-is-available.aspx">Perf Testing Guide</a>. The TFS guide looks like a packaged doc version of their <a href="http://www.codeplex.com/VSTSGuidance">VSTS Guidance Project</a> wiki.  </li><li>Facebook announces their <a href="http://developers.facebook.com/">Facebook Platform</a> and Microsoft <a href="http://blogs.msdn.com/somasegar/archive/2007/05/24/popfly-and-facebook.aspx">is supporting it</a> with PopFly and Silverlight. TechMeme has <a href="http://www.techmeme.com/070525/p35">much more</a>. </li><li><a href="http://www.pandora.com/on-the-go">Pandora on the Go</a> delivers their service to Sprint cell phones for $3 a month. Raging deal, but where's the support for Windows Mobile phones? (via <a href="http://www.knowing.net/PermaLink,guid,b866269a-e1ce-4d6f-9ac5-b86afa7a7023.aspx">Knowing.NET</a>) </li></ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>966</wp:post_id>
		<wp:post_date>2007-05-25 11:11:03</wp:post_date>
		<wp:post_date_gmt>2007-05-25 11:11:03</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>morning-coffee-83</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="morning-coffee"><![CDATA[Morning Coffee]]></category>
		<category domain="post_tag" nicename="music"><![CDATA[Music]]></category>
		<category domain="post_tag" nicename="soa"><![CDATA[SOA]]></category>
		<category domain="post_tag" nicename="web-2-0"><![CDATA[Web 2.0]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[01733a9c-2029-4392-a210-dfbbb5108e01]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Morning+Coffee+83]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/05/25/Morning+Coffee+83]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>This Isn&#039;t The Droid I&#039;m Looking For</title>
		<link>http://devhawk.net/2007/05/25/this-isnt-the-droid-im-looking-for/</link>
		<pubDate>Fri, 25 May 2007 13:59:52 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://077a65c2-6dbc-42e5-b927-4be2d6e1ff98</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Since David Ing responded to my <a href="http://devhawk.net/2007/05/24/REST+Is+Neither+CRUD+Nor+CRAP.aspx">REST/CRUD/CRAP</a> entry <a href="http://www.from9till2.com/PermaLink.aspx?guid=2dbee669-07fd-435e-a5f9-51f709ef183f">on his blog</a>, I guess that means I respond to his response here, right?</p><p>Actually, this is going to be very short(*) because I mostly agree with what David wrote. For example:</p><blockquote><p style="MARGIN-RIGHT: 0px">If we say stuff like 'REST shall/must replace all foolish WS-* SOAP systems (insert Nelson-style HaHa here)' then we are just repeating the same lessons as before - One size won't fit all and there is no One Ring to Bind Them illusion in REST as well. If you have something complex that fits the WS-* style then maybe REST isn't the droid you are looking for.</p></blockquote><p>Of course, this begs the question "what is complex?" David described complex as "long running transaction updating multiple distributed stores". Personally, I'd replace "stores" with "systems" and I hate term "long running transaction" so I would have written "long running operation" or "business process", but grammatical nitpicking aside that certainly seems like a fair description. Certainly, most of the scenarios I'm looking at in my day job could be described as being long running and updating multiple systems. David says later that he thinks "a lot of apps don’t need to be modeled that way", but I'm not aware of the alternatives so I'll let him expand on this on his own blog. I'll try to get to writing about my thoughts around protocol state next week. </p><p>I did disagree with this one point:</p><blockquote><p>We may <em>say</em> REST is really about a protocol state and not CRUD, but unless the rest of the world gravitates to that view then I'm afraid it just won't be. If, say, through some ongoing groundswell of common usage, people start modelling entities as dereferenceable URI's and using POST to do Create and Updates, then REST <em>will</em> be about CRUD by default. This is all very unacademic and unjust, but thems the breaks peachy. The lesson from SOAP is not to fight it by trying to re-educate the masses after they get a perception in their head.</p></blockquote><p>I think it doesn't really matter how the rest of the world gravitates, it only matters how you as the the service provider choose to expose your service. If you're doing something simple like ATOM publishing, you can probably get away with REST as CRUD. (Would that be hi or lo REST?) If you're doing something more complex, either in terms of being long running or needing multiple updates in one atomic operation like <a href="http://pluralsight.com/blogs/tewald/archive/2007/04/27/47031.aspx">Tim's airline example</a>, you'll probably need to gravitate towards REST as protocol state. But can't the two models can co-exist nicely, even in the same app? No re-education required.</p><p>UPDATE - From <a href="http://www.ics.uci.edu/~fielding/pubs/dissertation/rest_arch_style.htm">Fielding's Dissertation</a>: "REST relies instead on the author choosing a resource identifier that best fits the nature of the concept being identified". My point exactly.</p><hr /><p>(*) Wow, this post wasn't that short at all. Can you imagine how long this would have been if I had mostly disagreed with David?</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>967</wp:post_id>
		<wp:post_date>2007-05-25 13:59:52</wp:post_date>
		<wp:post_date_gmt>2007-05-25 13:59:52</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>this-isnt-the-droid-im-looking-for</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="architecture"><![CDATA[Architecture]]></category>
		<category domain="post_tag" nicename="rest"><![CDATA[REST]]></category>
		<category domain="post_tag" nicename="soa"><![CDATA[SOA]]></category>
		<category domain="post_tag" nicename="web-services"><![CDATA[Web Services]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[077a65c2-6dbc-42e5-b927-4be2d6e1ff98]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[This+Isnt+The+Droid+Im+Looking+For]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/05/25/This+Isnt+The+Droid+Im+Looking+For]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>2515</wp:comment_id>
			<wp:comment_author><![CDATA[David Ing]]></wp:comment_author>
			<wp:comment_author_email>david.ing@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.from9till2.com</wp:comment_author_url>
			<wp:comment_author_IP>81.151.38.153</wp:comment_author_IP>
			<wp:comment_date>2007-05-27 10:40:17</wp:comment_date>
			<wp:comment_date_gmt>2007-05-27 17:40:17</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Ug. Couldn't resist. Updated the blog here:
http://www.from9till2.com/PermaLink.aspx?guid=5f9ac25b-6e8d-412f-9a16-f9f0c0dbf9be
Sorry.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>2516</wp:comment_id>
			<wp:comment_author><![CDATA[Erik Johnson]]></wp:comment_author>
			<wp:comment_author_email>ejohnson@epicor.com</wp:comment_author_email>
			<wp:comment_author_url>http://appside.blogspot.com</wp:comment_author_url>
			<wp:comment_author_IP>65.248.23.250</wp:comment_author_IP>
			<wp:comment_date>2007-05-29 10:35:50</wp:comment_date>
			<wp:comment_date_gmt>2007-05-29 17:35:50</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Me too.

http://appside.blogspot.com/2007/05/harry-david.html

]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>2514</wp:comment_id>
			<wp:comment_author><![CDATA[David Ing]]></wp:comment_author>
			<wp:comment_author_email>david.ing@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.from9till2.com</wp:comment_author_url>
			<wp:comment_author_IP>81.151.38.153</wp:comment_author_IP>
			<wp:comment_date>2007-05-27 09:51:49</wp:comment_date>
			<wp:comment_date_gmt>2007-05-27 16:51:49</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Trying hard to disagree with you here Harry, but in the interests of the discussion then how about?:

- If I had a wonderful Doughnut Atom Publishing Protocol (APP) based resource on the web that you wanted to use as part of your DeliciousThingsToEat composite app, then don't you have to now treat me as a special case, i.e. I'm not expecting to return a getDetails URI in *my* response - are you going to have to write a special adaptor to make me fit in as an in-between state for your 'controller' of your state machine? The world gravitating to the PUT will make a little awkward for you to add to your application with the resources in systems that you didn't write? If you don't intend to 'promiscuously mashup' from outside resource-based services (maybe for an internal system that could be Service rather than Resource orientated?) then this point is moot.

- I think the butterflies in my tummy about this issue may be related in that it smells a bit like the days of SOAP Doc/Lit vs RPC/Enc chaos, (Cough - Hey, I know how about Basic Profile 1.0 for REST usage!? Shudder!). The 'you say POST and I say PUT' chaos is probably a way of life, and maybe if it took us 4 years to figure out not to tunnel the GET through a POST it might take a similar amount of time not tunnel the PUT through POST either. :-)

- Unless Roy is going to come around my house and fix the code for me when I get the wrong interpretation of REST, they I don't care/mind what he wrote on the resource-intpretation issue. :-) I could also make an argument that the Real Web isn't really REST based in practice either - and no-one took *their* REST license away...

(we should blog this, it's far too interesting a topic to live in comments)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>2513</wp:comment_id>
			<wp:comment_author><![CDATA[DevHawk]]></wp:comment_author>
			<wp:comment_author_email>harry@devhawk.net</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>24.16.94.200</wp:comment_author_IP>
			<wp:comment_date>2007-05-26 22:38:34</wp:comment_date>
			<wp:comment_date_gmt>2007-05-27 05:38:34</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Two responses to point #1 above:

First, as I pointed out in my update, Fielding specifically allows the author to choose resource identifiers as they see fit. So I might argue (if it came to down to an argument) that maybe you're not "doing REST" if you can't interop with a REST as Protocol system.

Second, in theory people may find it harder to grok, but in reality are we really worried about that? Is Tim's airline example really that much harder to understand than Atom Publishing? I don't think so.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>2512</wp:comment_id>
			<wp:comment_author><![CDATA[David Ing]]></wp:comment_author>
			<wp:comment_author_email>david.ing@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.from9till2.com</wp:comment_author_url>
			<wp:comment_author_IP>81.151.38.153</wp:comment_author_IP>
			<wp:comment_date>2007-05-26 09:40:04</wp:comment_date>
			<wp:comment_date_gmt>2007-05-26 16:40:04</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[To save valuable internet space, I'll just comment here - no one wants the tubes blocked any more than they are:

1. 'I think it doesn't really matter how the rest of the world gravitates'. Ooo. Three words Harry, in, ter and op. The nearest thing I had to a point was that if your interpretation of REST is so very different to mine (it isn't, but lets go along with this), then aren't we making harder to 'walk up and use?'? The world is full of cutting-edge inspired ideas that no-one now has a clue on how to maintain (or even talk too).

Imagine if people rush to REST and make it an overnight/14 year success with PUTs/DELETE's on some Entity driven crusade to emulate WebDAV with everything they can find (or APP gData styling it all), then they may find your entityless system harder to interop with (or even to grok) - especially where it's so early in have some formal description of what your valid 'interface' (states) are?

2. Agreed about transaction/bizprocess thing - that was a 11 keystroke spelling error that I must stop doing - the keys are right next to each other though.

3. We need something like Godwins law, i.e. when anyone ever pulls out a Fielding Disseration link then all bets are off... ;-)

One important point that I forgot before is related to what Dare said about Mike Champions WS-* vibe, are you really *sure* you want to use a Web protocol for something that might not be actually used on the Web? Anyway, typing too much, I should blog at home...]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Morning Coffee 84</title>
		<link>http://devhawk.net/2007/05/29/morning-coffee-84/</link>
		<pubDate>Tue, 29 May 2007 11:42:02 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://2c25a1e8-0e18-4a55-abaf-1cd060379a06</guid>
		<description></description>
		<content:encoded><![CDATA[<p>There appear to be several posts from several blogs that have spawned from my discussion about REST with David. I'll catch up on them and respond here in the next day or so. In the meantime...</p><ul><li>Saw <a href="http://www.imdb.com/title/tt0449088/">PotC: At World's End</a> over the weekend, due to a fluke last minute babysitter availability. It's gotten <a href="http://www.metacritic.com/film/titles/piratesofthecaribbeanatworldsend">mediocre reviews</a>, but I liked it. Not as much as the first two, but certainly better than Spiderman 3. June looks fairly bleak @ the box office. We'll <strike>probably</strike> take the kids to see <a href="http://www.imdb.com/title/tt0423294/">Surf's Up</a> And <a href="http://www.imdb.com/title/tt0382932/">Ratatouille</a>. (Remember back when there was only one kids movie per summer?) <a href="http://www.imdb.com/title/tt0413099/">Evan Almighty</a> might be funny and I remember reading <a href="http://www.imdb.com/title/tt0450385/">1408</a>, but I think they're both rentals. The only thing I'm otherwise remotely interested in is <a href="http://www.imdb.com/title/tt0448134/">Sunshine</a>.</li><li>Speaking of storytelling, <a href="http://abc.go.com/primetime/lost/lostandfound/index">Lost</a> and <a href="http://www.nbc.com/Heroes/">Heroes</a> wrapped their seasons last week. While early on, it looked like Heroes was going to be the new Lost, Lost's season finally was awesome. If you don't watch Lost, you're really missing out on the best show on TV right now. You have eight months to catch up before season four. Heroes may not be lost, but they're keeping the interest up with their <a href="http://www.nbc.com/Heroes/novels/">online comic book</a> plus while Lost <a href="http://news.yahoo.com/s/nm/20070507/en_nm/lost_dc">scales back</a> to 16 episodes for each of three more seasons, Heroes is <a href="http://www.zap2it.com/tv/news/zap-nbcupfronts-heroesorigins,0,5536579.story">bulking up</a>, adding six "Heroes: Origins" and bringing the total to 30 for next season.</li><li>Larry O'Brien <a href="http://www.knowing.net/PermaLink,guid,c3dd478d-6129-487d-aebb-26c37e0e8f35.aspx">fantasizes</a> about his dream PDC. Aren't there lots of conferences about learning how to "create great applications" on and for the Microsoft/Windows Platform? What about TechEd? (which is where I'll be next week)</li><li>Sam Gentle <a href="http://codebetter.com/blogs/sam.gentile/archive/2007/05/26/windows-workflow-104-or-wf-part-4.aspx">continues to dig</a> into WF, examining the various ways you can extend the WF runtime by replacing the persistence, loader and scheduler services. He's also taking <a href="http://devhawk.net/2007/02/27/Morning+Coffee+34.aspx">my advice</a> to scrap ExternalDataService and work directly with the WorkflowQueuingService. </li><li>Steve Jones <a href="http://service-architecture.blogspot.com/2007/05/soa-and-swiss-railways-or-another.html">compares</a> SOA to trains and I don't get it. I mean, his advice on the value of batch processes makes sense, but his train/car analogy seems a bit strained, esp. when he calls the railway system "event based". Can't a car be "event based" too? There's just a much smaller number of people who care about a given car's events...</li><li>Ted Neward <a href="http://www.dotnetrocks.com/default.aspx?showNum=240">debated OR/M</a> with Ayende on .NET Rocks. Based on <a href="http://blogs.tedneward.com/2007/05/28/The+ORM+Smackdown.aspx">Ted's post</a>, the show must have been a doozy. Sounds like Ted took some controversial positions, including advocating OO databases. Of course, "shies away from <a href="http://blogs.tedneward.com/2006/06/26/The+Vietnam+Of+Computer+Science.aspx">controversy</a>" <u><em>isn't</em></u> how I would describe Ted.</li></ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>968</wp:post_id>
		<wp:post_date>2007-05-29 11:42:02</wp:post_date>
		<wp:post_date_gmt>2007-05-29 11:42:02</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>morning-coffee-84</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="entertainment"><![CDATA[Entertainment]]></category>
		<category domain="category" nicename="morning-coffee"><![CDATA[Morning Coffee]]></category>
		<category domain="post_tag" nicename="movies"><![CDATA[Movies]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[2c25a1e8-0e18-4a55-abaf-1cd060379a06]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Morning+Coffee+84]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/05/29/Morning+Coffee+84]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Responses on REST</title>
		<link>http://devhawk.net/2007/05/29/responses-on-rest/</link>
		<pubDate>Tue, 29 May 2007 12:54:33 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://3b335291-38c0-492b-b7cd-4463f2ced585</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Here is a roundup of some responses to my <a href="http://devhawk.net/2007/05/24/REST+Is+Neither+CRUD+Nor+CRAP.aspx">REST</a><a href="http://devhawk.net/2007/05/25/This+Isnt+The+Droid+Im+Looking+For.aspx">discussion</a> with <a href="http://www.from9till2.com">David Ing</a>. Mostly, I'm passing them along with minimal comment so I figured I'd group them into one post.</p><p>David started by <a href="http://devhawk.net/CommentView,guid,077A65C2-6DBC-42E5-B927-4BE2D6E1FF98.aspx#acca030a-8507-4c74-af68-a14b430b79b4">leaving me a comment</a>, but decided instead to <a href="http://www.from9till2.com/PermaLink.aspx?guid=5f9ac25b-6e8d-412f-9a16-f9f0c0dbf9be">post the comments</a> on his blog. His big worry seems to be how well REST as CRUD will interop with REST as protocol. but in general I'm not sure that's a big worry. Bill de Hora's example below about WebDAV <strike>transactions</strike> activities seems to demonstrate at least some RESTifarians are cool with a protocol view of the world.</p><p>Erik Johnson (who's <a href="http://appside.blogspot.com/">blog</a> I mistakenly purged from my reader at some point, so needless to say I've resubscribed) <a href="http://appside.blogspot.com/2007/05/harry-david.html">writes</a> that "real-world experience shows you rarely POST exactly what you GET" and that "even with the flawed cast of characters you see a lot of whining about...the pieces are there to build good systems that also make great constituents in anyone’s SOA." I agree 100%. He goes on to agree with me agreeing with <a href="http://www.pluralsight.com/blogs/tewald/default.aspx">Tim</a> for people "not to limit their comprehension of REST around entities accessed via GET and PUT". Generally speaking, I agree with people when they agree with me, and this is no exception. Erik also has <a href="http://appside.blogspot.com/2007/05/rest-protocols-are-service-layer.html">a REST post</a> that predated my dustup with David(*) where he reaches some interesting conclusions about designing REST style systems. </p><p>Bill de Hora <a href="http://www.dehora.net/journal/2007/05/wouldnt_start_from_there.html">weighs in</a>, pointing out that "value exchange != transaction". Given that I never suggested they were equal, I'm not sure what his point is (other than to be snarky). He also points to <a href="http://subversion.tigris.org/webdav-usage.html">Subversion's use of WebDAV</a> as an example of...well, I'm not sure since it seems to prove my point that a simple CRUD style approach doesn't cut it for many scenarios. According to the page Bill linked to:</p><blockquote><p>"Subversion commits are modeled using the "activity" concept from DeltaV. An activity can be viewed as a <strong>transaction for a set of resources</strong>." [emphasis mine]</p></blockquote><p>While I'm sure this sounds snarky as well, I really don't get what Bill is getting at here. It <em>sounds</em> like he took my disparaging of CRUD as a disparagement of REST, which is NOT how it was intended. This kind of layering of higher-level protocol concepts (like WebDAV's activity) is exactly what I was thinking of when I wrote "I can spurn CRUD and still embrace REST".</p><p>And though not a direct comment on my post, Omri Gazitt <a href="https://www.gazitt.com/blog/PermaLink,guid,ccf9f2f2-a11f-4b70-bb9f-0141dd1041b6.aspx">writes about</a> REST vs. SOAP and the support for both in the next version of WCF. His main point is that "It seems like we'll continue to live in a world where multiple integration paradigms and protocol choices exist for applications". Of course, since he's with the WCF product group, regardless of your integration paradigm or protocol choice, WCF is the way to build it (at least on Windows). We'll have to wait a while to see if WCF is really "future-proof", but the ability to add <a href="https://www.gazitt.com/blog/PermaLink,guid,a8383226-a0dd-48c5-9fea-33d5da159d17.aspx">significant changes</a> in a .5 release is a fairly good sign. </p><hr /><p></p><p>(*) It's a very polite dustup, characterized mostly by agreement rather than disagreement. Which makes it, as dustups go, very boring.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>969</wp:post_id>
		<wp:post_date>2007-05-29 12:54:33</wp:post_date>
		<wp:post_date_gmt>2007-05-29 12:54:33</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>responses-on-rest</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="architecture"><![CDATA[Architecture]]></category>
		<category domain="post_tag" nicename="rest"><![CDATA[REST]]></category>
		<category domain="post_tag" nicename="soa"><![CDATA[SOA]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[3b335291-38c0-492b-b7cd-4463f2ced585]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Responses+On+REST]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/05/29/Responses+On+REST]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Morning Coffee 85</title>
		<link>http://devhawk.net/2007/05/30/morning-coffee-85/</link>
		<pubDate>Wed, 30 May 2007 11:32:24 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://58247f40-b130-47b5-9061-8d909963b4fb</guid>
		<description></description>
		<content:encoded><![CDATA[<ul><li>Microsoft <a href="http://www.microsoft.com/presspass/press/2007/may07/05-29MSSurfacePR.mspx">announces</a><a href="http://www.microsoft.com/surface/">Surface Computing</a>. When can you buy one for your house? Probably not anytime soon. TechMeme has <a href="http://www.techmeme.com/070530/p1">lots more</a>.</li><li>The one piece of swag I want more than anything else at TechEd is an <a href="http://software.ericsink.com/entries/Evil_Mastermind_Shirts.html">Evil Mastermind shirt</a>.</li><li>Nick Allen <a href="http://blogs.msdn.com/drnick/archive/2007/05/30/wsdl-2-0-proposed.aspx">notes</a> that WSDL 2.0 has reached "proposed recommendation" stage. I guess having a "recommended" version of WSDL is an improvement over the <a href="http://www.w3.org/TR/wsdl">"note" version</a>. But other than having a RESTful <a href="http://www.w3.org/TR/2007/PR-wsdl20-primer-20070523/#more-bindings-http">HTTP binding</a> in addition to the <a href="http://www.w3.org/TR/2007/PR-wsdl20-primer-20070523/#more-bindings-soap">SOAP binding</a> - and being longer - what's new?</li><li>Speaking of description languages, Don Box <a href="http://pluralsight.com/blogs/dbox/archive/2007/05/29/47544.aspx">writes</a> about the <a href="https://wadl.dev.java.net/">Web Application Description Language</a> which looks very REST-y in that it supports specifying both the URI as well as the payload format. Like Don, I agree with Erik Johnson who <a href="http://www.innoq.com/blog/st/2007/05/28/does_rest_need_a_service_description_language.html#c82953">commented</a> that "people attracted to REST (in whatever form) are rebelling against interface-based programming more than WS-* itself". I have a longer post on this coming, but suffice to say I'm really souring on interface-based programming. </li><li>Nick Malik <a href="http://blogs.msdn.com/nickmalik/archive/2007/05/30/system-reliability-requires-message-durability-immature-wcf.aspx">writes</a> that WCF is immature because of it's "lack of a routable, intermediable, declared message durability option". Yeah, that's a huge problem in my book too. It also relates to the last bullet - since durable messaging is inherently async, it doesn't fit well into the interface-based programming model.</li></ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>970</wp:post_id>
		<wp:post_date>2007-05-30 11:32:24</wp:post_date>
		<wp:post_date_gmt>2007-05-30 11:32:24</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>morning-coffee-85</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="architecture"><![CDATA[Architecture]]></category>
		<category domain="category" nicename="morning-coffee"><![CDATA[Morning Coffee]]></category>
		<category domain="post_tag" nicename="soa"><![CDATA[SOA]]></category>
		<category domain="post_tag" nicename="web-services"><![CDATA[Web Services]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[58247f40-b130-47b5-9061-8d909963b4fb]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Morning+Coffee+85]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/05/30/Morning+Coffee+85]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>The Case for Durable Messaging in Service Orientation</title>
		<link>http://devhawk.net/2007/05/30/the-case-for-durable-messaging-in-service-orientation/</link>
		<pubDate>Wed, 30 May 2007 13:48:10 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://5b32fed0-0b27-45e9-84c7-e504c49d0d96</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Nick <a href="http://blogs.msdn.com/nickmalik/archive/2007/05/27/reliability-in-soa-is-huge.aspx">jumps on</a> the durable messaging bandwagon, pointing out that it’s HUGE. Not just huge, or Huge but HUGE. But for my taste, he could emphasis it even more – <b><i><u>HUGE</u></i></b> – and still not capture just how important I think durable messaging is. But while he could use more bolding and italics, he certainly explains the problem well: </p><blockquote><p>The reason that [reliability] becomes a problem in SOA is because the basic strength of SOA is the message, and the weakest link is the mechanism used to move the message. If we create a message but we cannot be certain that it gets delivered, then we have created a point of failure that is difficult to surpass.</p></blockquote><p>Durable messaging solves two fundamental reliability issues: </p><ol><li>Transactional Message Send. I want to send a message to some external service as part of a transaction. That is, I only want to send the message if the transaction commits. If the transaction aborts, I don’t want to send the message. The <i><u>only</u></i> way to do this is to durably record the <i>intent</i> to send the message within the transaction and then deliver the message after the transaction successfully commits.</li><li>External System Unavailable. I’m sending a message to an external service that is unavailable at the moment. Maybe it’s a temporary network condition, maybe it’s scheduled downtime, maybe the data center burned down, I don’t know. But because the message is durably stored, I can retry long after the sending transaction has committed. Furthermore, I can continue to retry (until success of course) even if my sending system reboots, fails over to a hot standby or has to be restored from backup (assuming you backed up after message was sent).</li></ol><p>However, Nick points out that reliability has to be considered as part of our design, so do Agility, Flexibility, Scalability, Maintainability, etc. etc. etc. Agility and flexibility require standard transport protocols while scalability and maintainability require intermediation. Unfortunately, at this time there is no standard transport that provides intermediation and durability. Nick says that Microsoft’s “platform is lacking here”, but I’d say it’s an industry wide problem.  </p><p>Nick mentions least three Microsoft technologies that provide some sort of durable messaging – MSMQ, SSB and BizTalk – but they’re all proprietary. The market leader in this space is MQ Series, which is also proprietary. WS-RM was <i>supposed</i> to be support durable messaging, but <a href="http://devhawk.net/2007/02/20/Reliably+Beating+A+Dead+Horse.aspx">doesn’t</a>. There is the <a href="http://www.amqp.org/">Advanced Message Queuing Protocol group</a>, which is defining an open protocol for MQ style systems, but without involvement from any major platform vendors I’m hard pressed to see this go anywhere. Personally, I’d love to see the SSB protocol published, and apparently the SSB wire protocol <a href="http://blogs.msdn.com/nickmalik/archive/2007/05/14/is-it-service-oriented-if-the-message-cannot-be-intermediated.aspx#comments">was designed</a> “to be completely SQL Server agnostic.” Here’s hoping that happens.  </p><p>Nick <a href="http://blogs.msdn.com/nickmalik/archive/2007/05/30/system-reliability-requires-message-durability-immature-wcf.aspx">goes on</a> to call WCF “immature” because of the lack support for message durability. I think that’s somewhat unfair: I think it’s WS-* that’s immature here, not WCF. It’s easy to confuse the two since they’re so joined at the hip in WCF v1. But WCF’s support for MSMQ shows that it <em>can </em>handle durable messaging, even though there is no usable standard for durable messaging in the WS-* stable. Over time, I think WCF will evolve to support a larger variety of messaging scenarios – WS-*, REST, durable messaging, etc. – out of the box. But for those of us who care deeply about durable messaging, WCF’s current lack of support is pretty frustrating. </p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>971</wp:post_id>
		<wp:post_date>2007-05-30 13:48:10</wp:post_date>
		<wp:post_date_gmt>2007-05-30 13:48:10</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>the-case-for-durable-messaging-in-service-orientation</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="architecture"><![CDATA[Architecture]]></category>
		<category domain="post_tag" nicename="service-broker"><![CDATA[Service Broker]]></category>
		<category domain="post_tag" nicename="soa"><![CDATA[SOA]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[5b32fed0-0b27-45e9-84c7-e504c49d0d96]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[The+Case+For+Durable+Messaging+In+Service+Orientation]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/05/30/The+Case+For+Durable+Messaging+In+Service+Orientation]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Morning Coffee 86</title>
		<link>http://devhawk.net/2007/05/31/morning-coffee-86/</link>
		<pubDate>Thu, 31 May 2007 11:15:15 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://a7d6b3f5-cdb1-433d-8f76-71005b121eca</guid>
		<description></description>
		<content:encoded><![CDATA[<ul><li>Google announces <a href="http://gears.google.com/">Gears</a>, a browser plugin for taking your web application offline. Developer docs are <a href="http://code.google.com/apis/gears/">also available</a>. <a href="http://www.techmeme.com/070531/p8">TechMeme</a> has lots more, but obviously this is yet another significant bow shot in the <strike>upcoming</strike><a href="http://devhawk.net/2007/05/23/Morning+Coffee+82.aspx">unified client platform war</a>. By my count, there are four horses in this race: Microsoft with <a href="http://msdn2.microsoft.com/netframework">.NET</a> and <a href="http://www.microsoft.com/silverlight/">Silverlight</a>, Adobe with <a href="http://www.adobe.com/products/flash/">Flash</a> and <a href="http://labs.adobe.com/technologies/apollo">Apollo</a>, Google with <a href="http://code.google.com/webtoolkit/">AJAX</a> and <a href="http://code.google.com/apis/gears/">Gears</a> and Sun with <a href="http://java.sun.com/">Java</a> and <a href="http://www.sun.com/software/javafx/">JavaFX</a>. Did I miss anyone? (via <a href="http://www.25hoursaday.com/weblog/PermaLink.aspx?guid=f61d1dd0-e0f6-48d1-9009-77a5d8a423f0">Dare Obasanjo</a> and <a href="http://www.hanselman.com/blog/GoogleGearsMaybeAllRichInternetApplicationsNeededWasLocalStorageAndAnOfflineMode.aspx">Scott Hanselman</a>)  </li><li>Alex James <a href="http://www.base4.net/blog.aspx?ID=436">writes</a> that REST is about intent and shows a pseudo-code sample posting multiple changes to a single endpoint as a way of demonstrating your intent that they be applied atomically. <a href="http://weblogs.asp.net/aaguiar/">Andres Aguiar</a> left a <a href="http://devhawk.net/CommentView,guid,8DB9FDF7-636D-4BF0-BAC0-C47CBE10664C.aspx#705d9249-216c-43e1-8538-bb23088dc222">comment</a> saying that Astoria does something similar. Personally, I like that model for transactions better than the transaction factory approach Jon Udell <a href="http://blog.jonudell.net/2007/05/24/restful-web-services/">describe</a>s. But either way, you've moved beyond simple CRUD style services and into the world of protocol. Surfacing intent via protocol aligns with what Tim <a href="http://pluralsight.com/blogs/tewald/archive/2007/04/26/46984.aspx">described</a> as making the protocol explicit  </li><li>Windows Live posted <a href="http://get.live.com/betas/home">new beta versions</a> of <a href="http://windowslivewriter.spaces.live.com/blog/cns!D85741BB5E0BE8AA!1272.entry">Writer</a>, <a href="http://morethanmail.spaces.live.com/blog/cns!B7DD1FF3F141F9A1!3459.entry">Mail</a> and <a href="http://messengersays.spaces.live.com/blog/cns!5B410F7FD930829E!27545.entry">Messenger</a>. I've been on an internal build of the new Writer for a while and I've really been impressed. There's also a new <a href="http://msdn2.microsoft.com/en-us/library/bb463266.aspx">Provider Customization API</a>, so I can't wait to see what the DasBlog folks do with that.  </li><li>Scott Guthrie's LINQ series <a href="http://weblogs.asp.net/scottgu/archive/2007/05/29/linq-to-sql-part-2-defining-our-data-model-classes.aspx">continues</a>, this time covering how to build the LINQ to SQL data model. Looks like they used the <a href="http://msdn2.microsoft.com/en-us/vstudio/aa718368.aspx">DSL toolkit</a> to build the LINQ to SQL data model designer, cool!   </li><li>Martin Fowler <a href="http://martinfowler.com/bliki/HelloRacc.html">digs into</a><a href="http://i.loveruby.net/en/projects/racc/">racc</a>, a yacc-esque compiler compiler for Ruby. Looks interesting as a internal DSL example (better than the now-canonical rake example). But why is the sexy new language on the block using old school <a href="http://en.wikipedia.org/wiki/Context-free_grammar">CFG's</a> instead of new hotness <a href="http://pdos.csail.mit.edu/~baford/packrat/">PEG's</a>? </li><li>Speaking of Martin, he <a href="http://martinfowler.com/bliki/RubyMicrosoft.html">writes</a> about the opportunity Ruby presents to Microsoft, building on Scott Hanselman's <a href="http://www.hanselman.com/blog/IsMicrosoftLosingTheAlphaGeeks.aspx">concerns</a> that Microsoft is losing the Alpha Geeks. Sam Gentile also <a href="http://codebetter.com/blogs/sam.gentile/archive/2007/05/31/microsoft-at-the-crossroads.aspx">weighs in</a>, suggesting that Microsoft is at the crossroads. Frankly, I don't work in evangelism anymore so I'm going pass these links along without comment except to say that Scott, Martin and Sam are all folks I have much <em>much</em> respect for.</li></ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>972</wp:post_id>
		<wp:post_date>2007-05-31 11:15:15</wp:post_date>
		<wp:post_date_gmt>2007-05-31 11:15:15</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>morning-coffee-86</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="development"><![CDATA[Development]]></category>
		<category domain="post_tag" nicename="lanugages"><![CDATA[Lanugages]]></category>
		<category domain="post_tag" nicename="linq"><![CDATA[LINQ]]></category>
		<category domain="category" nicename="morning-coffee"><![CDATA[Morning Coffee]]></category>
		<category domain="post_tag" nicename="rest"><![CDATA[REST]]></category>
		<category domain="post_tag" nicename="ruby"><![CDATA[Ruby]]></category>
		<category domain="post_tag" nicename="silverlight"><![CDATA[Silverlight]]></category>
		<category domain="post_tag" nicename="unified-client"><![CDATA[Unified Client]]></category>
		<category domain="post_tag" nicename="windows-live"><![CDATA[Windows Live]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[a7d6b3f5-cdb1-433d-8f76-71005b121eca]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Morning+Coffee+86]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/05/31/Morning+Coffee+86]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Morning Coffee 87</title>
		<link>http://devhawk.net/2007/06/01/morning-coffee-87/</link>
		<pubDate>Fri, 01 Jun 2007 11:30:23 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://792df510-f083-432c-90a4-9aadc903ddf5</guid>
		<description></description>
		<content:encoded><![CDATA[<p>FYI, I'm at TechEd all next week. Given that WiFi access at conferences usually blows, I'm not planning on regular morning coffee posts. I've asked <a href="http://halfmybrain.spaces.live.com/">Dale</a> again to keep the lights on around here and he's graciously said yes. Since I'm not on vacation, I'll be lurking around as well, but I'll be in an out. See you in Orlando!</p><ul><li>Jeff Atwood <a href="http://www.codinghorror.com/blog/archives/000878.html">proclaims</a> that developers are their own worst enemy, because they write too much code. Add in a pinch of "not invented here" syndrome and I think you've got it. This is one of the reasons why people think Ruby is <a href="http://www.hanselman.com/blog/ProgrammerIntentOrWhatYoureNotGettingAboutRubyAndWhyItsTheTits.aspx">the tits</a>.  </li><li>Scott Hanselman has already taken advantage of the new WLWriter <a href="http://msdn2.microsoft.com/en-us/library/bb463266.aspx">provider customization API</a>.  </li><li>Erik Johnson <a href="http://appside.blogspot.com/2007/05/how-do-bandwagons-fit-into-project-plan.html">writes</a> about the thunderous REST bandwagon. He doesn't explicitly say it, but my take is that he thinks this all ends up in some middle ground between REST and WS-*. I hear that, at least, if that's what he's saying. I'm not sold on "HTTP is all you need" - I need <a href="http://devhawk.net/2007/05/30/The+Case+For+Durable+Messaging+In+Service+Orientation.aspx">durability</a> and async messaging, but I don't see how to get there from here with just HTTP. </li></ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>973</wp:post_id>
		<wp:post_date>2007-06-01 11:30:23</wp:post_date>
		<wp:post_date_gmt>2007-06-01 11:30:23</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>morning-coffee-87</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="blogging"><![CDATA[Blogging]]></category>
		<category domain="post_tag" nicename="dasblog"><![CDATA[dasBlog]]></category>
		<category domain="category" nicename="morning-coffee"><![CDATA[Morning Coffee]]></category>
		<category domain="post_tag" nicename="rest"><![CDATA[REST]]></category>
		<category domain="post_tag" nicename="ruby"><![CDATA[Ruby]]></category>
		<category domain="post_tag" nicename="soa"><![CDATA[SOA]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[792df510-f083-432c-90a4-9aadc903ddf5]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Morning+Coffee+87]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/06/01/Morning+Coffee+87]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Morning Doughnuts 7</title>
		<link>http://devhawk.net/2007/06/04/morning-doughnuts-7/</link>
		<pubDate>Mon, 04 Jun 2007 10:18:01 +0000</pubDate>
		<dc:creator>dale</dc:creator>
		<guid isPermaLink="false">http://8a26279e-c514-46be-bab9-dfa17163f2a2</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Once again I get the chance to fill in for Harry while he is gone. I will attempt to keep up with the high standard he has set.</p><ul><li>Be careful with trampolines. I have a four year old that was bouncing on a trampoline this weekend. He twisted his knee slightly on landing, and decided that the fastest way to get comfort was to jump off the edge. His knee gave out and he fractured his tibia. I don't think this was how he planned to start his summer. At least he is pretty calm about the whole thing.</li><li>It looks like there is a good product out there named <a href="http://www.secureteam.net/">CliSecure</a> to obfuscate .net code. From what I was able to read it looks like a pretty decent product, even hiding the code while its in memory. (via <a href="http://www.larkware.com/dg8/TheDailyGrind1156.aspx">Larkware</a>)</li><li><a href="https://www1.msteched.com/public/agenda.aspx">TechEd</a> started this morning. While I am sure Harry will be giving some on-site reports there is a link to the virtual site <a href="http://www.virtualteched.com/Pages/default.aspx">here</a>.</li><li>There is a great <a href="http://www.infoq.com/presentations/hohpe-soa-development">video</a> showing <a href="http://www.enterpriseintegrationpatterns.com/gregor.html">Gregor Hohpe</a> talking about SOA, and the many unrealistic claims in the industry. If you have read any of Hohpe's work it is clear that he has a great understanding of the topic. (via <a href="http://blogs.msdn.com/nickmalik/archive/2007/06/01/debunking-soa-myths.aspx">Nick Malik</a>)</li><li>The <a href="http://netscape.nba.com/finals2007/index.html">NBA Finals</a> will begin this week with the <a href="http://www.nba.com/spurs/news/playoffs_2007.html">Spurs</a> playing the <a href="http://www.nba.com/cavaliers/">Cavaliers</a> and <a href="http://en.wikipedia.org/wiki/LeBron_James">King LeBron</a>. I wonder if this will help rescue the NBA from what seems to be a real apathy on the part of the average fan. Other than the series between Dallas and Golden State earlier in the play-offs it really seems there haven't been any compelling stories. The NBA really needs a shot in the arm to become relevant again.</li></ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>974</wp:post_id>
		<wp:post_date>2007-06-04 10:18:01</wp:post_date>
		<wp:post_date_gmt>2007-06-04 10:18:01</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>morning-doughnuts-7</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="family"><![CDATA[Family]]></category>
		<category domain="post_tag" nicename="lanugages"><![CDATA[Lanugages]]></category>
		<category domain="category" nicename="morning-coffee"><![CDATA[Morning Coffee]]></category>
		<category domain="post_tag" nicename="soa"><![CDATA[SOA]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[8a26279e-c514-46be-bab9-dfa17163f2a2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Morning+Doughnuts+7]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/06/04/Morning+Doughnuts+7]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>TechEd 2007 - Day One Morning</title>
		<link>http://devhawk.net/2007/06/04/teched-2007-day-one-morning/</link>
		<pubDate>Mon, 04 Jun 2007 09:09:16 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://d540b9d5-4a66-49dc-9f0d-e3762e8269c4</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Being at TechEd without thousands of things to worry about is somewhat strange. But I could get used to coming and going as I please, not tracking down speakers, ordering whiteboards and the rest of the responsibility that comes with track ownership. </p><p>My first session is right after lunch - 1:15 @ Green TLC Theater 4 if you're on site. Our Technical Learning Center (aka "the cabana") is fairly sparsely attended, at least for the moment. MSIT has never had this significant a presence at TechEd before, so I wouldn't be surprised if the attendees aren't quite sure what to make of it. I went over to the Architecture and SOA &amp; Web Services area and ran into quite a few people I knew. I expect I'll spend more time down there than in my cabana. </p><p>I skipped the keynote this morning, apparently they did a <a href="http://clickanywhere.blogspot.com/2007/06/keynote-address.html">Back to the Future parody</a>. Had I known, I might have gotten up. But my flight got in at midnight last night, I didn't get to the hotel until 1am and an 8:30 keynote on the east coast feels like a 5:30 keynote to my still jet-lagged system. Since I skipped it, I'm not sure what was announced, but the <a href="http://www.microsoft.com/presspass/press/2007/jun07/06-04TechED07PR.mspx">opening press release salvo</a> mentions the first CTP of <a href="http://www.microsoft.com/sql/prodinfo/futureversion/default.mspx">SQL Server 2008</a>, Visual Studio 2008 (aka the Visual Studio version formally known as "Orcas") and the <a href="http://www.microsoft.com/downloads/details.aspx?FamilyId=AD0B72FB-4A1D-4C52-BDB5-7DD7E816D046&amp;displaylang=en">Open XML SDK</a> among other things. I've been hacking some Open XML lately, so I'll have to check that last thing out. Apparently, there was some also discussion of the <a href="http://www.microsoft.com/dsi">Dynamic Systems Initiative</a>, but in the press release it came across as <a href="http://www.microsoft.com/io">Infrastructure Optimization</a>. Not sure if those are one in the same or not.</p><p>BTW, for those not attending TechEd, you can check out <a href="http://www.virtualteched.com">Virtual TechEd</a> and the <a href="http://www.microsoft.com/presspass/events/teched/default.mspx">TechEd Virtual Pressroom</a>. Not the same as being here - no conversations, no swag and no roller coasters. But at least you can keep up on what's being announced, presented and spoken about.</p><p>I'm off to lunch. Missing the keynotes == missing breakfast. My session is in about an hour, so I'll probably post again afterwards. I'm hoping for more conversation and less presentation, so the only prep I've done is to iron my speaker shirt. </p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>975</wp:post_id>
		<wp:post_date>2007-06-04 09:09:16</wp:post_date>
		<wp:post_date_gmt>2007-06-04 09:09:16</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>teched-2007-day-one-morning</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="microsoft"><![CDATA[Microsoft]]></category>
		<category domain="post_tag" nicename="teched"><![CDATA[TechEd]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[d540b9d5-4a66-49dc-9f0d-e3762e8269c4]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[TechEd+2007+Day+One+Morning]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/06/04/TechEd+2007+Day+One+Morning]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>2517</wp:comment_id>
			<wp:comment_author><![CDATA[orcmid]]></wp:comment_author>
			<wp:comment_author_email>dennis.hamilton@acm.org</wp:comment_author_email>
			<wp:comment_author_url>http://orcmid.com/BlunderDome/clueless</wp:comment_author_url>
			<wp:comment_author_IP>67.42.98.88</wp:comment_author_IP>
			<wp:comment_date>2007-06-04 09:42:28</wp:comment_date>
			<wp:comment_date_gmt>2007-06-04 16:42:28</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Harry, your link to the Open XML SDK lands on a "nothing here" page.  Did you link too deep?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>2518</wp:comment_id>
			<wp:comment_author><![CDATA[DevHawk]]></wp:comment_author>
			<wp:comment_author_email>harry@devhawk.net</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>66.192.30.22</wp:comment_author_IP>
			<wp:comment_date>2007-06-04 21:31:06</wp:comment_date>
			<wp:comment_date_gmt>2007-06-05 04:31:06</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[The link came from the press release. I saw that the download wasn't available this morning when I linked to it, but it came online sometime during the day because it works now.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>A REST Question</title>
		<link>http://devhawk.net/2007/06/05/a-rest-question/</link>
		<pubDate>Tue, 05 Jun 2007 08:01:43 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://87ae6135-942f-4476-9dd7-9992cf073a7a</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Since there appears to be at least a handful of RESTifarians among my readership, I'm just going to throw this half-formed thought / almost question out there. Maybe it's a FAQ, in which case I'd appreciate a pointer in the right direction.</p><p>My observations about REST are:</p><ol><li>REST is a an "<a href="http://roy.gbiv.com/pubs/dissertation/rest_arch_style.htm">architectural style for distributed hypermedia systems</a>". </li><li>REST "<a href="http://roy.gbiv.com/pubs/dissertation/evaluation.htm">has been used to guide the design and development</a>" of HTTP and URI.</li><li>Therefore REST as an architectural style is independent of HTTP and URI.</li><li>Yet, I get the feeling that the REST community would consider a solution that uses the REST architectural style but not HTTP and/or URI as "not RESTful".</li></ol><p>Am I wrong in observation #4 above? If you're addressing resources by resource identifiers [aka URIs] but transferring those resource representations over a durable duplex protocol [aka not HTTP], are you still RESTing?</p><p>(Note, such a RESTful durable duplex protocol doesn't exist to my knowledge, though I would be very happy to be wrong about that. SSB does durable duplex, but it doesn't support URI style resource addressing. Granted, if I was going to build a durable duplex RESTful protocol, I would build on SSB - much the same way that HTTP builds on TCP. Though I am a huge fan of SSB, I'm specifically <em>not</em> suggesting that SSB is RESTful.)</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>976</wp:post_id>
		<wp:post_date>2007-06-05 08:01:43</wp:post_date>
		<wp:post_date_gmt>2007-06-05 08:01:43</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>a-rest-question</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="rest"><![CDATA[REST]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[87ae6135-942f-4476-9dd7-9992cf073a7a]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[A+REST+Question]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/06/05/A+REST+Question]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>2522</wp:comment_id>
			<wp:comment_author><![CDATA[Alex James]]></wp:comment_author>
			<wp:comment_author_email>Alex@base4.net</wp:comment_author_email>
			<wp:comment_author_url>http://www.base4.net/Blog.aspx?ID=447</wp:comment_author_url>
			<wp:comment_author_IP>219.89.81.114</wp:comment_author_IP>
			<wp:comment_date>2007-06-05 14:14:56</wp:comment_date>
			<wp:comment_date_gmt>2007-06-05 21:14:56</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[The sample code that Alan points to is remarkably like something I have implemented recently to seperate the HTTP facing endpoints for REST from the actual implementation endpoints. This seperation / encapsulation allows me to do things like Transactions and program RESTful in-process too.

See a huge chunk of the benefit of REST comes from the formulation of a namespace of URI's. Why should you need to incur protocol costs to use a namespace? If that where the case it is kind of like saying all access to a HDD needs to be through network shares? (i.e. \localhostc$ instead of C:)

And yes there does seem to be a fair bit of equating REST to HTTP going on recently, although typically, it must be said, by SOAP people just coming to grips with REST. I did a post on this very topic:

http://www.base4.net/Blog.aspx?ID=447]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>2523</wp:comment_id>
			<wp:comment_author><![CDATA[Erik Johnson]]></wp:comment_author>
			<wp:comment_author_email>ejohnson@epicor.com</wp:comment_author_email>
			<wp:comment_author_url>http://appside.blogspot.com</wp:comment_author_url>
			<wp:comment_author_IP>65.248.23.250</wp:comment_author_IP>
			<wp:comment_date>2007-06-05 14:28:24</wp:comment_date>
			<wp:comment_date_gmt>2007-06-05 21:28:24</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I think you can separate REST from HTTP, but you ought to call it something other than "REST".

http://appside.blogspot.com/2007/06/rest-over-http.html
]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>2524</wp:comment_id>
			<wp:comment_author><![CDATA[John Tullis]]></wp:comment_author>
			<wp:comment_author_email>John.Tullis@cna.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>159.10.4.170</wp:comment_author_IP>
			<wp:comment_date>2007-06-19 09:05:33</wp:comment_date>
			<wp:comment_date_gmt>2007-06-19 16:05:33</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Clearly REST is not dependent upon HTTP and URI. When the Web was growing, another protocol could have been used for HTTP, and another content type than HTML. But the URI is key -- REST bounded the verbs (HTTP) and content types (MIME in Web world), but the nouns (URIs) are unbounded. It was the unboundedness of the URIs that was key. So -- sure you could replace the URIs with some other noun based approach -- but why?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>2521</wp:comment_id>
			<wp:comment_author><![CDATA[John Heintz]]></wp:comment_author>
			<wp:comment_author_email>jheintz@pobox.com</wp:comment_author_email>
			<wp:comment_author_url>http://johnheintz.blogspot.com</wp:comment_author_url>
			<wp:comment_author_IP>70.112.219.249</wp:comment_author_IP>
			<wp:comment_date>2007-06-05 13:54:24</wp:comment_date>
			<wp:comment_date_gmt>2007-06-05 20:54:24</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[The author of REST himself is working on a non-HTTP protocol to better support REST. Search Google for "roy fielding waka". (There is only a tiny bit of information available...)

A discussion of building a REST-constrained system on top of SSB is perfectly legitimate discussion.

One caveat, (looking for link... looking for link...) because HTTP is so widely deployed and available (plus DNS) there is a huge immediate value in using "http:" based URIs. The simple benefit of an already deployed and free naming infrastructure is huge.

Ah! Found the link: Norman Walsh here: http://norman.walsh.name/2006/07/25/namesAndAddresses]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>2520</wp:comment_id>
			<wp:comment_author><![CDATA[Alan Dean]]></wp:comment_author>
			<wp:comment_author_email>alan.dean@thoughtpad.net</wp:comment_author_email>
			<wp:comment_author_url>http://thoughtpad.net/alan-dean</wp:comment_author_url>
			<wp:comment_author_IP>86.130.246.148</wp:comment_author_IP>
			<wp:comment_date>2007-06-05 11:39:20</wp:comment_date>
			<wp:comment_date_gmt>2007-06-05 18:39:20</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[The short answer to your question is that REST is not bound to HTTP.

To quote from Roy's dissertation:

"REST does not restrict communication to a particular protocol, but it does constrain the interface between components, and hence the scope of interaction and implementation assumptions that might otherwise be made between components ..."
http://www1.ics.uci.edu/~fielding/pubs/dissertation/rest_arch_style.htm#sec_5_3_2
http://simplewebservices.org/index.php?title=Connector_View

There has, in fact, come up in conversation on [rest-discuss] very recently, see http://tech.groups.yahoo.com/group/rest-discuss/message/8781]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>2519</wp:comment_id>
			<wp:comment_author><![CDATA[Larry O'Brien]]></wp:comment_author>
			<wp:comment_author_email>lobrien@knowing.net</wp:comment_author_email>
			<wp:comment_author_url>http://www.knowing.net/</wp:comment_author_url>
			<wp:comment_author_IP>70.95.167.197</wp:comment_author_IP>
			<wp:comment_date>2007-06-05 11:01:27</wp:comment_date>
			<wp:comment_date_gmt>2007-06-05 18:01:27</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[This is the "Do you believe in  evolution?" question for the faithful RESTafarians. I've had conversations about RESTful architectures in desktop applications that I felt were extremely useful. But without a doubt such a conversation would immediately be condemned by certain elements, probably combined with a suspicion that even asking the question is the first step in tricking / co-opting REST for your nefarious, Borg-like ends. 

It's odd that an architectural style, the sort of thing that you might expect to see fruitfully discussed at PLoP, is so prone to dogma and passion. One wonders what people are so wound up about. ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Afternoon Doughnuts 8</title>
		<link>http://devhawk.net/2007/06/05/afternoon-doughnuts-8/</link>
		<pubDate>Tue, 05 Jun 2007 14:05:56 +0000</pubDate>
		<dc:creator>dale</dc:creator>
		<guid isPermaLink="false">http://24ce4607-02ed-40ff-944a-3cd9426cf085</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Due to a temporary reassignment this morning, I spent my usual blogging time moving all of my computer equipment from one cube to another.</p><ul><li><a href="http://codebetter.com/blogs/sam.gentile/archive/2007/06/05/the-alt-net-moniker-and-list.aspx">Sam Gentile</a> writes about the ALT.NET moniker. My favorite of his principles is number 4 where he discusses the importance of tools versus principles and knowledge. I really agree that knowledge and principles are more important because the best tools in the world can't help us if we don't know how and when to use them.</li><li>I find <a href="http://en.wikipedia.org/wiki/Mark_Cuban">Mark Cuban's</a> ideas (<a href="http://www.blogmaverick.com/2007/06/02/internet-video-vs-dvrs-advertising-and-measuring-online-video/">here</a> and <a href="http://www.blogmaverick.com/2007/06/04/measuring-simultaneous-internet-viewers-p2/">here</a>) about how advertising on the Internet is different than traditional media advertising. He points out that the ability of a provider to deliver higher simultaneous views is more important and <em>valuable</em> than delivering views for a longer period of time. I think he right on here, even if I believe his <a href="http://www.blogmaverick.com/2007/05/30/competing-with-the-nfl/">football league</a> is going to fail. (via <a href="http://www.blogmaverick.com/">Blog Maverick</a>)</li><li><a href="http://worsethanfailure.com/">Worse Than Failure</a> has been running an unusual <a href="http://worsethanfailure.com/Articles/The-Worse-Than-Failure-Programming-Contest.aspx">contest</a> to get the most interesting, buggy, and unusual way of writing a calculator application. They have 12 <a href="http://www.google.com/custom?q=OMGWTF+Finalist&amp;sitesearch=worsethanfailure.com&amp;domains=worsethanfailure.com&amp;client=pub-6897220306923822&amp;forid=1&amp;channel=7501220674&amp;ie=ISO-8859-1&amp;oe=ISO-8859-1&amp;cof=GALT%3A%23008000%3BGL%3A1%3BDIV%3A%23336699%3BVLC%3A663399%3BAH%3Acenter%3BBGC%3AFFFFFF%3BLBGC%3AFFFFFF%3BALC%3A0000FF%3BLC%3A0000FF%3BT%3A000000%3BGFNT%3A0000FF%3BGIMP%3A0000FF%3BLH%3A50%3BLW%3A236%3BL%3Ahttp%3A%2F%2Fworsethanfailure.com%2FResources%2FImages%2FPrimary%2Flogo.gif%3BS%3Ahttp%3A%2F%2Fworsethanfailure.com%3BFORID%3A1&amp;hl=en">finalists</a> for readers to review. I find that the descriptions of how the programs work (or don't) to be hilarious.</li><li>As I have been working on service-oriented management and monitoring I have given a lot of thought to the best way to present the data. Doesn't it make the most sense to primarily display information from the business process point of view? I would be interested in your feedback.</li></ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>977</wp:post_id>
		<wp:post_date>2007-06-05 14:05:56</wp:post_date>
		<wp:post_date_gmt>2007-06-05 14:05:56</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>afternoon-doughnuts-8</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="morning-coffee"><![CDATA[Morning Coffee]]></category>
		<category domain="post_tag" nicename="rome"><![CDATA[Rome]]></category>
		<category domain="post_tag" nicename="soa"><![CDATA[SOA]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[24ce4607-02ed-40ff-944a-3cd9426cf085]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Afternoon+Doughnuts+8]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/06/05/Afternoon+Doughnuts+8]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>2526</wp:comment_id>
			<wp:comment_author><![CDATA[Dale Churchward]]></wp:comment_author>
			<wp:comment_author_email>Dale.Churchward@microsoft.com</wp:comment_author_email>
			<wp:comment_author_url>http://halfmybrain.spaces.live.com/</wp:comment_author_url>
			<wp:comment_author_IP>131.107.0.102</wp:comment_author_IP>
			<wp:comment_date>2007-06-06 14:06:41</wp:comment_date>
			<wp:comment_date_gmt>2007-06-06 21:06:41</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hmmm...that is an interesting point. I wasn't actually thinking about presenting it from the middle point, but more from an overall view. I would think that the business would understand the process if it was named after what it does like create customer. Monitoring could then show the process from initiation to completion. You should then be able to drill down to each service along the way. I would consider this somewhat similar to how Amberpoint shows it.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>2525</wp:comment_id>
			<wp:comment_author><![CDATA[Nick Malik]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://blogs.msdn.com/nickmalik</wp:comment_author_url>
			<wp:comment_author_IP>131.107.0.102</wp:comment_author_IP>
			<wp:comment_date>2007-06-05 18:46:27</wp:comment_date>
			<wp:comment_date_gmt>2007-06-06 01:46:27</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi Dale,

The best way to present data in a SOA infrastructure... interesting problem.  The data being passed, if the design is good, is a subset of the canonical data model needed to understand or interpret a particular business event.  However, each producer or consumer will display or lay out that data differently.  Many will translate it.  Therefore when you present the information from the 'middle', it is unlikely that the business would necessarily recognize it!

Therefore, I'm not sure what it means to display information from the business process point of view.

I believe that it makes sense that the canonical schema for the event in question should register a stylesheet or provide a link to one that can be used to display the data.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>TechEd 2007 - Day Two Morning</title>
		<link>http://devhawk.net/2007/06/05/teched-2007-day-two-morning/</link>
		<pubDate>Tue, 05 Jun 2007 06:46:51 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://c5ce83be-bc79-4f0a-9140-c8a79b5829a4</guid>
		<description></description>
		<content:encoded><![CDATA[<p>My session yesterday went very well, especially considering I did no prep whatsoever. Drew a fairly good sized audience - people were sitting on the floor and standing in the back, though honestly the TLC "theaters" only hold about 50 chairs. Most of them stayed the for whole session - at least until I started to run over (only 15 minutes, not too bad). </p><p>After my session, I ended up talking to a customer from a large home loan firm for about two hours. Turns out we had a friend in common, a guy I used to work with a long time ago @ ModaCad named Brian. This is actually the second time I've run into someone at a major Microsoft conference who has a single degree of Brian, which is a little freaky.</p><p>For dinner, I went out with some MS field architects and some customers. We ended up having such a big group, we split up into two tables and somehow my table had four MS employees and only one customer. But that customer was from a very large retail firm and we had lots to talk about. Ate way too much, though I didn't combine that with drinking too much. And, as a bonus, I didn't tell the customer than any of their ideas were "stupid", as my friend <a href="http://weblogs.asp.net/cschittko/">Christoph</a> pointed out I had done the <em>last</em> time I was out to dinner with one of his customers. (That customer wanted to run Java on their mainframe. I stand by my assessment.)</p><p>I was <em>planning</em> to head up to my room, but ran into <a href="http://www.masteringbiztalk.com/blogs/jon/">Jon Flanders</a> in the lobby. Hadn't seen Jon since the class I took with him last fall, so I ended up hanging out with him for several hours, chatting up the folks we knew who walked by, including <a href="http://www.lhotka.net/">Rocky</a>, <a href="http://www.sqlskills.com/blogs/bobb/">Bob</a> and <a href="http://www.mcwtech.com/CS/blogs/brianr/">Brian</a>. I realized I've been heads down with no speaking or travel for about a year, so it's been a while since I had seen many of these folks. For example, I hadn't seen Brian in about three years when we were both presenting at TechEd New Zealand. The downside of hanging out in the lobby is that I didn't get any code written last night, which I was sort of planning to do when I headed back to the hotel. But chatting with these folks - esp. Jon this time - helps be figure out <em>what</em> I want to write anyway, so I guess it's worth it! :)</p><p>I ended up sleeping in this morning (still jet lagged) and skipping the morning session. No second keynote this year, which I didn't realize until I looked at the conf guide this morning. Not sure if that's a good thing or a bad thing. </p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>978</wp:post_id>
		<wp:post_date>2007-06-05 06:46:51</wp:post_date>
		<wp:post_date_gmt>2007-06-05 06:46:51</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>teched-2007-day-two-morning</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="microsoft"><![CDATA[Microsoft]]></category>
		<category domain="post_tag" nicename="teched"><![CDATA[TechEd]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[c5ce83be-bc79-4f0a-9140-c8a79b5829a4]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[TechEd+2007+Day+Two+Morning]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/06/05/TechEd+2007+Day+Two+Morning]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Lunchtime Doughnuts 9</title>
		<link>http://devhawk.net/2007/06/06/lunchtime-doughnuts-9/</link>
		<pubDate>Wed, 06 Jun 2007 12:31:14 +0000</pubDate>
		<dc:creator>dale</dc:creator>
		<guid isPermaLink="false">http://d0240651-cf80-4a66-ba82-2e3467d16c90</guid>
		<description></description>
		<content:encoded><![CDATA[<ul><li>I am a few days behind on this, but <a href="http://updates.zdnet.com/tags/Joe+McKendrick.html">Joe McKendrick</a><a href="http://blogs.zdnet.com/service-oriented/?p=887">writes</a> an interesting piece on if businesspeople are begging for SOA. It is fascinating because I believe that SOA should come from the business, not because of the delivery mechanism, but because of the results. If services will truly make a business more adaptable and responsive to change shouldn't all business people desire those results? At the same time they don't care how that end is achieved, just that it is. That's where we in the IT industry need to do a better job of working out the details amongst ourselves and show the business how SOA can benefit them. Once we do that we should see more SOA adoptions go smoother and real ROI can be seen.</li><li><a href="http://www.ldscio.org/about-joel/">Joel Dehlin</a> has <a href="http://www.ldscio.org/2007/06/05/the-myth-of-youth/">blogged</a> on the myth of youth being the ones that use instant messaging, publish and read blogs, participate in social networks, etc. I agree that the technology has been integrated into every layer of society. If you have ever been at the airport or at a <a href="http://www.starbucks.com/">Starbucks</a> you know what I mean. Who is it exactly that has a <a href="http://abcnews.go.com/WNT/Technology/story?id=2348779">Crackberry addiction</a>? It seems technology has really become a part of our culture, and that it's not just one age group that is adopting the changes.</li><li><a href="http://blogs.msdn.com/vsxteam/archive/2007/06/05/Announcing-the-Visual-Studio-2008-Shell.aspx">Visual Studio 2008 shell</a> was announced at <a href="http://www.microsoft.com/events/teched2007/registration.mspx">TechEd</a> yesterday. Even <a href="http://devhawk.net/2007/06/06/TechEd+2007+Day+Three.aspx">Harry</a> who was on-site missed the release, but it certainly looks <a href="http://msdn2.microsoft.com/en-us/vstudio/bb510103.aspx">cool</a>.</li><li>If you have ever met me you would quickly discover I have quite a background in <a href="http://halfmybrain.spaces.live.com/blog/cns!DF6CA820250998D2!328.entry">Unix</a>. That being the case I couldn't ignore the <a href="http://scobleizer.com/2007/06/05/sun-releases-new-blades/">news</a> that Sun is releasing new <a href="http://www.podtech.net/scobleshow/technology/1522/sun-microsystems-releases-new-blades">blades</a> for the desktop. I had a blade on my desk for several years and it was really a nice system to use. For those that would bash me since I work at Microsoft now I will just say that when you support Solaris boxes, having one on your desk is quite helpful. I don't take sides in the Holy War. :-) (via <a href="http://scobleizer.com/">Scoble</a>)</li></ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>979</wp:post_id>
		<wp:post_date>2007-06-06 12:31:14</wp:post_date>
		<wp:post_date_gmt>2007-06-06 12:31:14</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>lunchtime-doughnuts-9</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="architecture"><![CDATA[Architecture]]></category>
		<category domain="post_tag" nicename="hardware"><![CDATA[Hardware]]></category>
		<category domain="post_tag" nicename="microsoft"><![CDATA[Microsoft]]></category>
		<category domain="post_tag" nicename="soa"><![CDATA[SOA]]></category>
		<category domain="post_tag" nicename="teched"><![CDATA[TechEd]]></category>
		<category domain="post_tag" nicename="visual-studio"><![CDATA[Visual Studio]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[d0240651-cf80-4a66-ba82-2e3467d16c90]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Lunchtime+Doughnuts+9]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/06/06/Lunchtime+Doughnuts+9]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>TechEd 2007 Day Three</title>
		<link>http://devhawk.net/2007/06/06/teched-2007-day-three/</link>
		<pubDate>Wed, 06 Jun 2007 06:28:24 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://d088074d-567b-449a-8e7a-b5e20d83fff9</guid>
		<description></description>
		<content:encoded><![CDATA[<p>On Monday, I primarily talked to customers and partners. Yesterday, I spent most of my time talking to other Microsofties that I hadn't seen or spoken to in a while. For example, <a href="http://blogs.msdn.com/timmall/">Tim Mallalieu</a> was there talking about the Entity Data Model. I worked with Tim a few years back - I did his first interview when he came to Microsoft. We didn't talk much EDM, but it sure was good to see him.</p><p>I finally met <a href="http://blogs.msdn.com/garethj/">Gareth Jones</a> in person. Gareth - along with <a href="http://blogs.msdn.com/stevecook">Steve</a>, <a href="http://blogs.msdn.com/stuart_kent/">Stuart</a> and <a href="http://blogs.msdn.com/alan_cameron_wills">Alan</a> - have a <a href="http://www.domainspecificdevelopment.com/">new book out</a> on the DSL toolkit. Neither stealing nor cajoling worked, I'll have to go get my own copy or <a href="http://safari.informit.com/9780321398208">read it on Safari</a>. Gareth and I talked a while about language evolution - how DSLs come to be. One of the subjects we talked about was <a href="http://devhawk.net/2007/02/21/Internal+DSLs+In+PowerShell.aspx">internal DSLs</a> - I'll be interested in Gareth's non-immediate reaction. Gareth also <a href="http://blogs.msdn.com/garethj/archive/2007/06/05/teched-day-one-visual-studio-2008-shell.aspx">blogged</a> yesterday about a TechEd announcement that I had missed: <a href="http://blogs.msdn.com/vsxteam/archive/2007/06/05/Announcing-the-Visual-Studio-2008-Shell.aspx">VS 2008 Shell</a>.</p><p>I also spent a long time talking to various members of the DLR team. There seems to be quite a <a href="http://www.martinfowler.com/bliki/RubyMicrosoft.html">stir brewing</a> about how the Ruby and Microsoft community can / will come together. I will wisely keep my opinions to myself - I'm already in the <a href="http://devhawk.net/2007/06/05/A+REST+Question.aspx">REST/SOAP fray</a>, no need to join another - though I will say that it's encouraging to <a href="http://ola-bini.blogspot.com/2007/06/there-can-be-only-one-tale-about-ruby.html">hear the call</a> for "a good, complete [Ruby language] specification" in order to support multiple implementations. </p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>980</wp:post_id>
		<wp:post_date>2007-06-06 06:28:24</wp:post_date>
		<wp:post_date_gmt>2007-06-06 06:28:24</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>teched-2007-day-three</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="microsoft"><![CDATA[Microsoft]]></category>
		<category domain="post_tag" nicename="teched"><![CDATA[TechEd]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[d088074d-567b-449a-8e7a-b5e20d83fff9]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[TechEd+2007+Day+Three]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/06/06/TechEd+2007+Day+Three]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Morning Doughnuts 10</title>
		<link>http://devhawk.net/2007/06/07/morning-doughnuts-10/</link>
		<pubDate>Thu, 07 Jun 2007 09:46:45 +0000</pubDate>
		<dc:creator>dale</dc:creator>
		<guid isPermaLink="false">http://f901f0b4-f5df-4860-b543-8a18b022597f</guid>
		<description></description>
		<content:encoded><![CDATA[<ul><li>I am a big fan of <a href="http://www.microsoft.com/windowsserver2003/technologies/management/powershell/default.mspx">PowerShell</a>, and I know Harry likes it as well. Of course I have aliased many of the commands so they appear more Unix like. I mention this because <a href="http://blogs.msdn.com/daiken/default.aspx">David Aiken</a> mentions a new <a href="http://blogs.msdn.com/daiken/archive/2007/06/06/n-software-netcmdlets-and-a-powershell-sticker.aspx">product</a> for PowerShell called <a href="http://www.nsoftware.com/powershell/">NetCmdlets</a> produced by N Software. I downloaded a trial and have been impressed so far. If you use PowerShell it might be worth giving this a look. 
</li><li>The <a href="http://www.newyorker.com/">New Yorker</a> has an interesting <a href="http://www.newyorker.com/talk/financial/2007/05/28/070528ta_talk_surowiecki">article</a> about feature choices in technology. Basically it comes down to customers choose products with more features and customization options if given the choice, but when they actually have to use the products they prefer simplicity. I think that is something lost on those of us who design things. Giving users every possible option can make our products seem more difficult to use over simpler less feature rich choices. (via <a href="http://www.codinghorror.com/blog/archives/000880.html">Coding Horror</a>) 
</li><li>Well it took longer than some may have guessed, but Microsoft has been <a href="http://www.infoworld.com/article/07/06/06/ms-sued-over-vista-name_1.html">sued</a> over the name Vista by a French TV company. Apparently they were going to launch a television station with the same name. I wonder what the courts will decide since apparently the TV company didn't register the name in the software category. </li></ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>981</wp:post_id>
		<wp:post_date>2007-06-07 09:46:45</wp:post_date>
		<wp:post_date_gmt>2007-06-07 09:46:45</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>morning-doughnuts-10</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="morning-coffee"><![CDATA[Morning Coffee]]></category>
		<category domain="post_tag" nicename="powershell"><![CDATA[PowerShell]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[f901f0b4-f5df-4860-b543-8a18b022597f]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Morning+Doughnuts+10]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/06/07/Morning+Doughnuts+10]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>TechEd 2007 Day Four</title>
		<link>http://devhawk.net/2007/06/07/teched-2007-day-four/</link>
		<pubDate>Thu, 07 Jun 2007 08:45:49 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://b944a59f-e3b8-42d7-9522-ccf97240c8b2</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Yesterday was another day of talking primarily to people I know, inside and outside of Microsoft. Got into a long conversation with <a href="http://blogs.msdn.com/garethj">Gareth Jones</a> and <a href="http://www.peterprovost.org/">Peter Provost</a> about combining test-driven and model-driven development. Having done evangelism for five of the last six years, I haven't been an agile practitioner. I'm getting to the point where I feel dirty when I don't write tests or don't check in, but not dirty enough to actually do anything about it (yet). But practicing or not, it was fascinating to hear Gareth and Peter brainstorm on this topic. </p><p>Speaking of storms, we had a downpour here yesterday. Thunderstorm moved right over the convention center - you could tell by how loud the thunder and rain were. I hit a seam in the storm heading back to my hotel, but I did get drenched heading to the <a href="http://blogs.msdn.com/trika/archive/2007/05/01/mcp-posse-rolls-deep-influencer-party-at-teched.aspx">influencer party</a> @ <a href="http://www.margaritavilleorlando.com/">Margaritaville</a>. The party was fun, after I dried off, though I seem to remember knowing more of the influencers last time I was @ TechEd. Ended up sharing a cab back to the hotel with <a href="http://blogs.tedneward.com/">Ted Neward</a> and <a href="http://www.doitwith.net/">Mark Miller</a>. Ted's like the IT Industry's Switzerland, so I took the opportunity to pick his brain on the goings on in other communities - primarily the Ruby community.</p><p>I did get a chance to hack a little code yesterday. As a side effect of my interest in programming language design, I'm also interested in <a href="http://devhawk.net/Modular+Compilers.aspx">parser development</a>. Towards that end, I've been learning about <a href="http://pdos.csail.mit.edu/~baford/packrat/">Parsing Expression Grammars</a>. The <a href="http://pdos.csail.mit.edu/~baford/packrat/thesis/">original PEG parser</a> was built in Haskell, but I decided to write mine in F#. Even though I had never worked in F# before, I got my parser up and running fairly easily the first time. I did hit one syntax snag that <a href="http://blogs.msdn.com/dsyme">Don Syme</a> helped me with. I'll blog this more in detail later, but I ported a <a href="http://pdos.csail.mit.edu/~baford/packrat/icfp02/ArithPackrat.hs">simple arithmetic grammar packrat parser</a> written in 120 lines of Haskell to about 90 lines of F#. Not bad for a first timer. (Don got it down to 25 lines, using F#'s new <a href="http://blogs.msdn.com/dsyme/archive/2007/04/07/draft-paper-on-f-active-patterns.aspx">Active Patterns feature</a>.)</p><p>I gearing up for my second talk, which happens right after lunch. I recorded a <a href="http://www.virtualteched.com">Virtual TechEd</a> session this morning with the help of my friend <a href="http://www.masteringbiztalk.com/blogs/jon">Jon Flanders</a>. It's an 8 minute overview of the Rome project, so it is VERY high level. But anything that helps get the word out I see as a good thing, right?</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>982</wp:post_id>
		<wp:post_date>2007-06-07 08:45:49</wp:post_date>
		<wp:post_date_gmt>2007-06-07 08:45:49</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>teched-2007-day-four</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="f-sharp"><![CDATA[F#]]></category>
		<category domain="post_tag" nicename="microsoft"><![CDATA[Microsoft]]></category>
		<category domain="post_tag" nicename="rome"><![CDATA[Rome]]></category>
		<category domain="post_tag" nicename="teched"><![CDATA[TechEd]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[b944a59f-e3b8-42d7-9522-ccf97240c8b2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[TechEd+2007+Day+Four]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/06/07/TechEd+2007+Day+Four]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>2527</wp:comment_id>
			<wp:comment_author><![CDATA[DaveO]]></wp:comment_author>
			<wp:comment_author_email>doborsh@qwest.net</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>164.92.4.184</wp:comment_author_IP>
			<wp:comment_date>2007-06-15 13:40:21</wp:comment_date>
			<wp:comment_date_gmt>2007-06-15 20:40:21</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Can you post any additional information you have on Rome? We are about to convert from an OO architecture to a SOA and I have not been that successful in finding information on Rome? I went to the MST14-TLC ROME at TechEd 2007 and I find myself hungry for more info.

i was also unsuccessful at finding the virtual TechEd video.
Thank you,
DaveO]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Morning Doughnuts 11</title>
		<link>http://devhawk.net/2007/06/08/morning-doughnuts-11/</link>
		<pubDate>Fri, 08 Jun 2007 09:44:01 +0000</pubDate>
		<dc:creator>dale</dc:creator>
		<guid isPermaLink="false">http://91d54537-53aa-4edd-b395-e46fbc833598</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Harry will be back on Monday so I will returning to blogging on my <a href="http://halfmybrain.spaces.live.com/">website</a>, while I will let the expert return to his normal posts here (not that he really took a break). I agree with Harry's <a href="http://devhawk.net/2007/06/08/TechEd+2007+Heading+Home.aspx">post</a> in that I really want to get something built so that we can talk about more than theoretical models. Like last time I appreciate the opportunity to sub for the master this last week. I hope that you found some of my entries interesting.</p><ul><li><a href="http://codebetter.com/">Sam Gentile</a> wrote the other day why it's great to be a Microsoft <a href="http://codebetter.com/blogs/sam.gentile/archive/2007/06/07/what-s-great-about-being-a-microsoft-developer.aspx">developer</a>. I enjoyed that post because I just celebrated the end of my first year here at Microsoft. At this point I am not sure what I have contributed, but I have learned a great deal and want to apply that knowledge over the next year to help the company to succeed. We really do have great people and great technologies.</li><li>The <a href="http://www.nba.com/sonics/">Seattle/Oklahoma City Sonics</a> hired a GM who is only <a href="http://www.nba.com/sonics/news/presti070607.html">30</a> years old. You know you must be getting old when the people running the sports teams are younger than you. :-) He comes from the Spurs organization though so at least he has a background from a successful franchise.</li><li><a href="http://209.34.241.68/benp/about.aspx">Ben Pearce</a> listed out his <a href="http://209.34.241.68/benp/archive/2007/06/07/tech-ed-2007-top-5-powershell-questions.aspx">top 5 questions</a> about PowerShell this week at TechEd. He also recommends the book "<a href="http://www.amazon.com/Windows-PowerShell-Action-Bruce-Payette/dp/1932394907/ref=pd_bbs_sr_1/105-0291088-6669211?ie=UTF8&amp;s=books&amp;qid=1181320712&amp;sr=8-1">PowerShell in Action</a>" by <a href="http://www.amazon.com/gp/pdp/profile/A24OUCYOSFCKB8/ref=cm_blog_pdp/105-0291088-6669211">Bruce Payette</a>. I heartedly agree with this endorsement as the book is excellent.</li><li>It looks like there are going to be more family friendly <a href="http://www.bloomberg.com/apps/news?pid=20601204&amp;sid=an_wjSge1RpQ&amp;refer=technology">games</a> for the XBOX360. I for one am glad to hear that. The other day as I was trying to find some games my 4 year old with the broken leg could play I realized how many games I have that wouldn't be appropriate for him. This is very good news in my opinion.</li></ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>983</wp:post_id>
		<wp:post_date>2007-06-08 09:44:01</wp:post_date>
		<wp:post_date_gmt>2007-06-08 09:44:01</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>morning-doughnuts-11</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="blogging"><![CDATA[Blogging]]></category>
		<category domain="category" nicename="morning-coffee"><![CDATA[Morning Coffee]]></category>
		<category domain="post_tag" nicename="powershell"><![CDATA[PowerShell]]></category>
		<category domain="post_tag" nicename="soa"><![CDATA[SOA]]></category>
		<category domain="post_tag" nicename="teched"><![CDATA[TechEd]]></category>
		<category domain="post_tag" nicename="xbox-360"><![CDATA[Xbox 360]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[91d54537-53aa-4edd-b395-e46fbc833598]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Morning+Doughnuts+11]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/06/08/Morning+Doughnuts+11]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>TechEd 2007 - Heading Home</title>
		<link>http://devhawk.net/2007/06/08/teched-2007-heading-home/</link>
		<pubDate>Fri, 08 Jun 2007 05:31:21 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://a7872c13-131d-4d3b-acbb-bb09fc98daef</guid>
		<description></description>
		<content:encoded><![CDATA[<p>TechEd isn't technically over, but it is for me. I'm on a flight home in about four hours. Frankly, I am very excited to be going home. It's been almost a year since <a href="http://devhawk.net/2006/06/26/Gartner+EA+Summit+Day+Two.aspx">my last public presentation</a>, and the only work travel I've done in the last 12 months was that Gartner EA conference last June, the <a href="http://devhawk.net/2006/09/27/Thoughts+On+The+SOA+Workshop.aspx">Thomas Erl SOA workshop</a> back in September and TechEd 07. I am simply out of practice being gone from home this long. </p><p>It doesn't look like I'll be going dark another 12 months before my next public presentation. People must have noticed me stick my head up to do TechEd, I've been asked about presenting at seven conferences that all happen in the next six months. I'll do a few - I hope to gravitate to the ones close to campus and don't require me to be gone very long - but my problem with presenting right now is that I'm still talking theory. I <a href="http://devhawk.net/2006/06/15/Moving+On.aspx">left evangelism</a> because I wanted to build something. We're still getting started on that "build something" thing, so I don't have anything to show, just stuff we're thinking about building. Hopefully, by conference season next year, I'll actually have something to show.</p><p>My session yesterday went ok - I think it could have been better, but the audience seemed to get a lot out of it. It was a larger crowd Monday, but only one customer came up afterwards to discuss the talk with me. Yesterday, I had a half a dozen or so. I'd post slides for you dear reader, but I didn't do any. However, I think on of the sessions I will be doing in the next few months is basically a breakout version of this talk, so I'll need slides for that.</p><p>The attendee party was almost a bust due to rainstorm. When I got there around 8pm, the word was that <em>all</em> the rides but Spiderman were closed. So I rode Spiderman with a bunch of UK blokes I ended up hanging out with, and by the time we got out the rain had passed and almost everything was open again. Unfortunately, the one thing that didn't reopen was Hulk, which I was really looking to ride again. I got to ride it two years ago at TechEd 2005 as part of a special trip the TechEd core team took. But I did get to ride Spiderman, Dueling Dragons, Jurassic Park and Ripsaw Falls (I got drenched) which is pretty much all the big rides but Hulk.</p><p>I did take a little time out yesterday before the expo closed to go on a Swag Hunt, mostly to get little trinkets for my kids. I picked up my <a href="http://software.ericsink.com/entries/Evil_Mastermind_Shirts.html">Sourcegear Evil Mastermind</a> shirt on Monday (the only piece of swag I actually wanted). Mostly, it was the usual assortment of little flashlights, yo-yo's, and the like. I do want to give a shout out to the <a href="http://www.nsoftware.com/">/n software</a> folks, who were giving away a custom painted Xbox 360 with the Powershell logo. That was cool. Seemed almost every booth had some type of hi-tech gadget giveaway, but that was the coolest by far. They also gave me a copy of their <a href="http://www.nsoftware.com/powershell/">new NetCmdlets</a> product, which Dale has apparently <a href="http://devhawk.net/2007/06/07/Morning+Doughnuts+10.aspx">been playing with</a>. The question is, which will Dale be more jealous of: my copy of NetCmdlets or the cool PowerShell sticker I got for my laptop?</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>984</wp:post_id>
		<wp:post_date>2007-06-08 05:31:21</wp:post_date>
		<wp:post_date_gmt>2007-06-08 05:31:21</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>teched-2007-heading-home</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="powershell"><![CDATA[PowerShell]]></category>
		<category domain="post_tag" nicename="teched"><![CDATA[TechEd]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[a7872c13-131d-4d3b-acbb-bb09fc98daef]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[TechEd+2007+Heading+Home]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/06/08/TechEd+2007+Heading+Home]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Morning Coffee 88</title>
		<link>http://devhawk.net/2007/06/12/morning-coffee-88/</link>
		<pubDate>Tue, 12 Jun 2007 08:58:10 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://717987cc-89a2-4797-9b66-29d51381e9df</guid>
		<description></description>
		<content:encoded><![CDATA[<p>I've got over 500 unread news posts and 200 emails in my inbox to process. So this is nowhere near comprehensive.</p><ul><li>Clarius released the <a href="http://softwarefactoriestoolkit.net/Download_JUN07CTP.aspx">June 07 CTP</a> of their <a href="http://www.softwarefactoriestoolkit.net/">Software Factory Toolkit</a>. Big new feature in this drop is <a href="http://www.softwarefactoriestoolkit.net/T4Editor_JUN07CTP.pdf.aspx">T4 Text Template editor</a> that has syntax highlighting and eventually intellisense. They also released the May 07 CTP of <a href="http://www.codeplex.com/vssdkassist">VSSDK Assist</a>, previously known as VSIP Factory. Haven't played with either yet, but it seems like a good time to be a tool builder.  </li><li>PowerShell hits <a href="http://blogs.msdn.com/powershell/archive/2007/06/04/powershell-hits-a-million-downloads-in-the-first-six-months.aspx">a million downloads in six months</a>. No surprise there, IT'S FRAKING AWESOME. Jeff Snover details seven MSFT products using PS, promising many more that he can't talk about. See earlier comment about being fraking awesome.  </li><li>Speaking of PS, I don't "get" <a href="http://www.microsoft.com/windowsserver2008/servercore.mspx">Server Core</a> because it doesn't support managed code. So no PS for Server Core. They announced @ TechEd that Server Core will support IIS 7, but since there's no CLR you can't run ASP.NET. As far as I'm concerned, no PS and no ASP.NET is below the minimum threshold of usefulness. I realize it's technical limitation related to the current factoring of the .NET Framework and I assume some team somewhere in Redmond is working on fixing it. But what's the point of releasing Server Core in the meantime?  </li><li>QUT releases version 0.8 of their <a href="http://plas2003.fit.qut.edu.au/Ruby.NET/">Ruby.NET compiler</a>. Given that the IronRuby guys <a href="http://www.iunknown.com/2007/06/ironruby_and_ru.html">bootstrapped</a> by licensing the Ruby.NET compiler, I wonder how these two projects will evolve side by side.  </li><li>Speaking of Ruby, <a href="http://jruby.codehaus.org/">JRuby</a> has <a href="http://ola-bini.blogspot.com/2007/06/jruby-10.html">gone 1.0</a>. Congrats!  </li><li>At TechEd, I saw my friend Steve Jones from Capgemini, and it's not this <a href="http://service-architecture.blogspot.com/">Steve Jones</a>. Woops. But CRUD is still CRAP.  </li><li>Pat Helland breaks Scott Hanselman's <a href="http://www.hanselman.com/blog/BlogInteresting32WaysToKeepYourBlogFromSucking.aspx">Rule #2</a> and details how he "<a href="http://blogs.msdn.com/pathelland/archive/2007/06/10/tmi-a-saga-of-weight-loss-exercise-tummy-tucks-and-health.aspx">lost a Megan</a>".  </li><li>My ex-teammate David Hill has been busy with <a title="Acropolis" href="http://windowsclient.net/Acropolis/Default.aspx">Acropolis</a>. If you are even the slightest bit interested in this technology, you should be reading <a href="http://blogs.msdn.com/dphill/">his blog</a>.  </li><li>Microsoft acquired a company called <a href="http://www.stratature.com/">Stratature</a> last week. I don't typically track MSFT acquisition news + it was lost in the noise of TechEd. But Roger Wolter thinks it's a <a href="http://blogs.msdn.com/rogerwolterblog/archive/2007/06/11/master-data-management-microsoft-and-stratature.aspx">great move</a> and that Stratature's Master Data Management hub product is one of the best. Given the importance of MDM in SOA, I think I need to go learn more about this product.</li></ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>985</wp:post_id>
		<wp:post_date>2007-06-12 08:58:10</wp:post_date>
		<wp:post_date_gmt>2007-06-12 08:58:10</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>morning-coffee-88</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="blogging"><![CDATA[Blogging]]></category>
		<category domain="post_tag" nicename="master-data-management"><![CDATA[Master Data Management]]></category>
		<category domain="category" nicename="morning-coffee"><![CDATA[Morning Coffee]]></category>
		<category domain="post_tag" nicename="powershell"><![CDATA[PowerShell]]></category>
		<category domain="post_tag" nicename="ruby"><![CDATA[Ruby]]></category>
		<category domain="post_tag" nicename="software-factories"><![CDATA[Software Factories]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[717987cc-89a2-4797-9b66-29d51381e9df]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Morning+Coffee+88]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/06/12/Morning+Coffee+88]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Morning Coffee 89</title>
		<link>http://devhawk.net/2007/06/13/morning-coffee-89/</link>
		<pubDate>Wed, 13 Jun 2007 09:57:36 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://275cfa8c-cf7b-45d8-9290-ede7ef9f5aab</guid>
		<description></description>
		<content:encoded><![CDATA[<ul><li><a href="http://www.imdb.com/title/tt0094625/"><img style="border-top-width: 0px; border-left-width: 0px; border-bottom-width: 0px; border-right-width: 0px" height="240" alt="akira" src="http://s3.amazonaws.com/devhawk_images/WindowsLiveWriter/MorningCoffee89_143E6/akira_1.jpg" width="162" align="right" border="0" /></a><a href="http://www.majornelson.com/archive/2007/06/12/video-marketplace-releases-for-week-of-6-11-07.aspx">Akira in HD from XBL Video Marketplace</a>? Cool<em>ness</em>.  </li><li>Omar Shahine has the <a href="http://www.shahine.com/omar/HotmailOutlookSweet.aspx">WL Hotmail + Outlook scoop</a>. Download it <a href="http://www.microsoft.com/downloads/details.aspx?FamilyID=7aad7e6a-931e-438a-950c-5e9ea66322d4&amp;displaylang=en">here</a>. I've used this product off and on over the past few years. Typically, I would use it, love it, but then never get around to reinstalling it after a repave since it was subscription-only product.   </li><li>Microsoft releases <a href="http://www.microsoft.com/downloads/details.aspx?familyid=55a4bde6-10a7-4c41-9938-f388c1ed15e9&amp;displaylang=en&amp;tm">eScrum project management</a> tool. I've seen this internally but haven't used it yet. However, I have no doubt that the cool kids will deem it "not hot" in favor of <a href="http://studios.thoughtworks.com/mingle-project-intelligence">Mingle</a>. (via <a href="http://www.larkware.com/dg8/TheDailyGrind1163.aspx">Larkware</a>)  </li><li>Ted Neward <a href="http://blogs.tedneward.com/2007/06/12/The+Relational+Database+Needs+No+Defense.aspx">writes at length</a> about relational databases, object databases and OR mapping. Ted may be Switzerland when it comes to platform, but he has <em>no </em>problem taking sides and mixing it up when it comes to data &amp; object persistence. He makes some interesting points that mostly boil down to "different tools for different jobs". Also, has the <a href="http://devhawk.net/2006/03/28/The+Dual+Schema+Problem.aspx">dual schema problem</a> entered the general vernacular, or just Ted's?  </li><li>Nick Malik <a href="http://blogs.msdn.com/nickmalik/archive/2007/06/12/showing-up-can-be-the-hardest-part.aspx">survives his trip</a> to Nashville and has <a href="http://blogs.msdn.com/nickmalik/archive/2007/06/12/martin-fowler-wants-to-see-ruby-on-microsoft-to-save-the-alpha-geek.aspx">some thoughts</a> on Ruby, Microsoft and alpha geeks. His point about the alpha geek track record (he sites Powerbuilder, Delphi and EJB) is spot on. This is something I've been thinking about since <a href="http://conferences.oreillynet.com/et2006/">ETech</a> last year. How good are alpha geeks at trendspotting? For every technology they adopt that makes the mainstream, how many don't? I'm guessing quite a few more than the three Nick mentions.  </li><li>Speaking of alpha geeks, this whole <a href="http://blogs.msdn.com/nickmalik/archive/2007/06/12/showing-up-can-be-the-hardest-part.aspx">ALT.NET</a> silliness reminds me of the famous Groucho Marx quote: "I don't want to belong to any club that will accept me as a member." Though maybe I'm just bitter because "Working at MS" has been deemed "<a href="http://weblogs.asp.net/rosherove/archive/2007/06/04/alt-net-alternative-tools-and-approaches-to-mainstream-net.aspx">not hot</a>". :)</li></ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>986</wp:post_id>
		<wp:post_date>2007-06-13 09:57:36</wp:post_date>
		<wp:post_date_gmt>2007-06-13 09:57:36</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>morning-coffee-89</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="agile"><![CDATA[Agile]]></category>
		<category domain="post_tag" nicename="database"><![CDATA[Database]]></category>
		<category domain="post_tag" nicename="microsoft"><![CDATA[Microsoft]]></category>
		<category domain="category" nicename="morning-coffee"><![CDATA[Morning Coffee]]></category>
		<category domain="post_tag" nicename="windows-live"><![CDATA[Windows Live]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[275cfa8c-cf7b-45d8-9290-ede7ef9f5aab]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Morning+Coffee+89]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/06/13/Morning+Coffee+89]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Morning Coffee 90 - REST Response Roundup</title>
		<link>http://devhawk.net/2007/06/14/morning-coffee-90-rest-response-roundup/</link>
		<pubDate>Thu, 14 Jun 2007 09:38:28 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://f01b5915-ba63-4f47-b0fe-d60c8ad22d24</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Last week, I asked <a href="http://devhawk.net/2007/06/05/A+REST+Question.aspx">a REST Question</a>: is it still REST if you don't use HTTP? My interest in durable messaging is <a href="http://devhawk.net/2007/05/30/The+Case+For+Durable+Messaging+In+Service+Orientation.aspx">well documented</a>, so I want is to see a RESTful approach combined with a durable messaging. We all know my <a href="http://devhawk.net/2006/10/23/The+Other+Foundation+Technology.aspx">durable messaging tool of choice</a>, though I'd trade SSB in a second for something that provided durable duplex messaging in a standard way.</p><p>Anyway, there were some fairly interesting responses that I wanted to highlight.</p><p>Probably most interesting to the discussion at hand was <a href="http://johnheintz.blogspot.com">John Heintz</a>' <a href="http://devhawk.net/CommentView,guid,87AE6135-942F-4476-9DD7-9992CF073A7A.aspx#f43c3ac6-f719-428d-b5f7-ce84ef8a707f">comment</a> pointing out the existence of "<a href="http://en.wikipedia.org/wiki/Waka_%28protocol%29">Waka</a>",  a new transfer protocol to replace HTTP from Roy Fielding. The fact that Dr. REST is working on a new protocol that's designed to be more RESTful than HTTP should put to bed any REST "is and only is" HTTP arguments. </p><p>Erik Johnson agrees that you can separate REST and HTTP, but he <a href="http://devhawk.net/CommentView,guid,87AE6135-942F-4476-9DD7-9992CF073A7A.aspx#e80b80a3-bfdb-4615-8516-57193dfed280">thinks</a> I ought to call it something else. He <a href="http://appside.blogspot.com/2007/06/rest-over-http.html">suggests</a> "resource-oriented" - have we created a new TLA here? Are you down with ROA, ROAD, ROD, ROP and all the other acronyms we could spawn?</p><p>Nick Malik <a href="http://blogs.msdn.com/nickmalik/archive/2007/06/06/what-is-the-rest-high-order-bit.aspx">breaks out</a> the IFaP acronym - Identifier, Format, Protocol - and points out "Each of the successful Internet standards, from HTTP to SMTP, has an IFaP at the heart of it." But does anyone think SMTP is RESTful? I don't. I think standardization of IFaP's is on par in importance with RESTfulness, but they're orthogonal. That is to say I think Nick's wrong - I'm guessing we'll go a few rounds on this when he gets back from <a href="http://blogs.msdn.com/nickmalik/archive/2007/06/12/showing-up-can-be-the-hardest-part.aspx">Nashville</a> - or should I say, <em>if</em> he gets back? :)</p><p>Arnon Rotem-Gal-Oz <a href="http://www.ddj.com/blog/architectblog/archives/2007/06/devhawk_harry_p.html">has been wondering</a> about REST without HTTP the same way I have, but he doesn't really go into detail as to why. I want durable messaging, Arnon mentions something about topic hierarchies. Couldn't you do that with HTTP, Arnon? He also points out a <a href="http://www.ddj.com/dept/webservices/199902676">new DDJ article on REST</a>. It's good, if high-level overview-y.</p><p>Pat Helland <a href="http://blogs.msdn.com/pathelland/archive/2007/06/12/every-noun-can-be-verbed.aspx">writes</a> that Every Noun Can be Verbed. It's more related to <a href="http://devhawk.net/2007/05/24/REST+Is+Neither+CRUD+Nor+CRAP.aspx">CRUD is CRAP</a> than REST == HTTP, but it's well worth the read. His point about using filling out a form being CRUD, but then handing the form over to someone else being an invocation of behavior is fairly eye-opening. As long as you "interpret the durn' things with the correct semantics", it doesn't really matter if they're nouns or verbs. </p><p>Last but not least, <a href="http://blogs.tedneward.com/">Ted Neward</a> and Adrian Trenaman <a href="http://tssblog.techtarget.com/index.php/xmlweb-services/neward-and-trenaman-consider-rest-or-the-great-and-complete-soap-vs-pox-debate/">discuss SOAP vs. POX</a> over on The Server Side. They focus too much on SOAP encoding (isn't that dead yet?), but near the end Ted points out: "Problem is, REST assumes that you want to carry all of the state in the payload itself, and for a modern enterprise system, or, hell, even for a game, that’s not always a safe assumption." Doesn't address my questions about using REST without HTTP, but a very good point nonetheless.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>987</wp:post_id>
		<wp:post_date>2007-06-14 09:38:28</wp:post_date>
		<wp:post_date_gmt>2007-06-14 09:38:28</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>morning-coffee-90-rest-response-roundup</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="morning-coffee"><![CDATA[Morning Coffee]]></category>
		<category domain="post_tag" nicename="rest"><![CDATA[REST]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[f01b5915-ba63-4f47-b0fe-d60c8ad22d24]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Morning+Coffee+90+REST+Response+Roundup]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/06/14/Morning+Coffee+90+REST+Response+Roundup]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>2528</wp:comment_id>
			<wp:comment_author><![CDATA[Arnon Rotem-Gal-Oz]]></wp:comment_author>
			<wp:comment_author_email>arnon@rgoarchitects.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.rgoarchitects.com</wp:comment_author_url>
			<wp:comment_author_IP>89.139.153.108</wp:comment_author_IP>
			<wp:comment_date>2007-06-14 11:23:01</wp:comment_date>
			<wp:comment_date_gmt>2007-06-14 18:23:01</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi Harry,
> but he doesn't really go into detail as to why.
I thought I did explain it - anyway I'll try that again
REST is said to be an architectural style - i.e. it has components, relations, attributes and constrains on how to use all of them - e.g. uniform interface etc.

If it is an architectural style then you should be able to apply it in different technologies - I know I can do that with other architectural styles I know like SOA, Client/server, pipe and filters etc.
For me it is interesting on the theoretical level as a way to look at architectural problems and principles but also  on the practical level since you can't always use HTTP in a project or you may have to mix several communications protocols etc.

Arnon ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>2529</wp:comment_id>
			<wp:comment_author><![CDATA[Alex]]></wp:comment_author>
			<wp:comment_author_email>Alex@aol.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>59.93.85.186</wp:comment_author_IP>
			<wp:comment_date>2007-06-15 03:13:59</wp:comment_date>
			<wp:comment_date_gmt>2007-06-15 10:13:59</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Gourmet coffee at coffeebreakusa(dot)com
]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Morning Coffee 91</title>
		<link>http://devhawk.net/2007/06/18/morning-coffee-91/</link>
		<pubDate>Mon, 18 Jun 2007 11:03:52 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://acee534b-36d6-43eb-81f3-60f83db87f84</guid>
		<description></description>
		<content:encoded><![CDATA[<ul><li>My wife <a href="http://techiewife.spaces.live.com/Blog/cns!3DAECC033B88329C!761.entry">loves me</a>. I'm a very lucky man. </li><li>I'm starting to really dig <a href="http://www.safaribooksonline.com/">Safari Books Online</a>. Having a tablet really helps here, I can sit in bed and read and it's ALMOST like reading a real book. Is there an offline experience? Something like the <a href="http://www.hanselman.com/blog/NYTimesReaderWPFsFirstKillerApp.aspx">NYTimes WPF Reader app</a> would be killer.  </li><li>I'm not a Twitter guy, but I like the idea of using it to <a href="http://thomasfreudenberg.com/blog/archive/2007/06/17/twitter-publisher-for-cruisecontrol-net.aspx">publish CI results</a>. Not quite as cool as using the <a href="http://blogs.msdn.com/mswanson/articles/169058.aspx">Ambient Orb</a>, but close. (via <a href="http://www.dotnetkicks.com/opensource/Twitter_Publisher_for_CruiseControl_NET">DotNetKicks</a>)  </li><li>Soma <a href="http://blogs.msdn.com/somasegar/archive/2007/06/18/so-what-does-microsoft-use-for-software-development.aspx">details</a> the dogfood usage of TFS in Developer Division. Sorta interesting if you're into knowing that stuff. <a href="http://blogs.msdn.com/bharry/">Brian Harry</a> apparently has much more.  </li><li>I realize that linking to Pat Helland every time he writes something is fairly redundant. If you want <a href="http://blogs.msdn.com/pathelland/rss.xml">his feed</a>, you know where to find it. But he writes great stuff! The latest is <a href="http://blogs.msdn.com/pathelland/archive/2007/06/14/accountants-don-t-use-erasers.aspx">Accountants Don't Use Erasers</a>, which talks about append-only computing. His point that the database is a cache of the transaction log is mind blowing, yet makes total sense.  </li><li>Bruce Payette <a href="http://blogs.msdn.com/powershell/archive/2007/06/18/using-a-dsl-to-generate-xml-in-powershell.aspx">blogs</a> a PS DSL for creating XML documents.  </li><li>Jesus Rodriguez <a href="http://weblogs.asp.net/gsusx/archive/2007/06/14/orcas-durable-services.aspx">details</a> WCF's new Durable Service support in .NET 3.5. I get the need for the [DurableServiceBehavior] attribute, but do I really have to adorn each of the service methods with [DurableOperationBehavior] too? That seems redundant. Also, I wonder how this looks at the channel layer?  </li><li>Speaking of WCF's channel layer, I recently picked up a copy of <a href="http://www.microsoft.com/mspress/books/9610.aspx">Inside Windows Communication Foundation</a> by <a href="http://www.wintellect.com/cs/blogs/jsmith/default.aspx">Justin Smith</a>. This is the first book I've found that has more coverage of the channel layer than the service layer, so I like it.  </li><li>Dare <a href="http://www.25hoursaday.com/weblog/2007/06/16/Web3SARESTfulProtocolForAccessingWindowsLiveServices.aspx">writes</a> about <a href="http://dev.live.com/livedata/web3s.htm">Web3S</a>, Windows Live's general purpose REST protocol. Apparently, WL <a href="http://www.goland.org/appanddare/">started with Atom Publishing Protocol</a>, but found that it didn't meet their needs around hierarchy and granular updates. David Ing <a href="http://www.from9till2.com/PermaLink.aspx?guid=6fbc1aec-8096-4e21-a015-12ede6fc9646">says</a> it's "not that similar" to my concept of REST, but I going to read the spec before I comment. </li><li>Scott Hanselman <a href="http://feeds.feedburner.com/~r/ScottHanselman/~3/125204676/TeachingChildrenAndKidsToProgramTheOldSchoolWay.aspx">writes</a> about how he learned to program and some thoughts about teaching his son. Patrick has recently started expressing interest in programming (he want's to do what Daddy does). At four, I'm thinking I'll start him on <a href="http://llk.media.mit.edu/projects.php?id=783">Scratch</a> (though <a href="http://www.toontalk.com/">ToonTalk</a> looks interesting). As he gets older, I was thinking about <a href="http://www.squeak.org/">Squeak</a>, though I'm a smalltalk noob. I really like Scott's idea of creating a connection to the physical world via something like <a href="http://mindstorms.lego.com/">Mindstorms</a>. Patrick loves Lego almost as much as his dad, so that would be cool.</li></ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>988</wp:post_id>
		<wp:post_date>2007-06-18 11:03:52</wp:post_date>
		<wp:post_date_gmt>2007-06-18 11:03:52</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>morning-coffee-91</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="agile"><![CDATA[Agile]]></category>
		<category domain="post_tag" nicename="domain-specific-languages"><![CDATA[Domain Specific Languages]]></category>
		<category domain="post_tag" nicename="family"><![CDATA[Family]]></category>
		<category domain="category" nicename="morning-coffee"><![CDATA[Morning Coffee]]></category>
		<category domain="post_tag" nicename="powershell"><![CDATA[PowerShell]]></category>
		<category domain="post_tag" nicename="rest"><![CDATA[REST]]></category>
		<category domain="post_tag" nicename="wcf"><![CDATA[WCF]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[acee534b-36d6-43eb-81f3-60f83db87f84]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Morning+Coffee+91]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/06/18/Morning+Coffee+91]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Morning Coffee 92</title>
		<link>http://devhawk.net/2007/06/20/morning-coffee-92/</link>
		<pubDate>Wed, 20 Jun 2007 19:03:43 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://e06986ea-3717-4225-a2a8-99c43a3d7841</guid>
		<description></description>
		<content:encoded><![CDATA[<ul><li>Brad Wilson <a href="http://www.agileprogrammer.com/dotnetguy/archive/2007/06/19/22906.aspx">blogs</a> about <a href="http://www.codeplex.com/SvnBridge">SvnBridge</a>, a tool that lets you use Subversion clients like <a href="http://tortoisesvn.net/">TortoiseSVN</a> to talk to <a href="http://msdn2.microsoft.com/en-us/teamsystem/aa718825.aspx">Team Foundation Server</a>. While I think that's cool, I wonder is anyone interested in subversion clients <em>other</em> than TortoiseSVN? For example, will people choose <a href="http://ankhsvn.tigris.org/">AnkhSVN</a> instead of the <a href="http://msdn2.microsoft.com/en-us/library/ms181304(VS.80).aspx">Team Explorer Client</a>?  </li><li>Speaking of TortoiseSVN, I wonder if those guys are interested in building a TortoiseTFS project? I did find two other TFS shell extensions projects: <a href="http://blog.benday.com/archive/2007/05/18/23006.aspx">Dubbelbock TFS</a> and <a href="http://www.codeplex.com/Turtle">Turtle</a>, though neither appears as full featured as Tortoise.  </li><li>Scott Guthrie <a href="http://weblogs.asp.net/scottgu/archive/2007/06/20/vs-2008-multi-targeting-support.aspx">details</a> VS08's multi-targeting support. Of course, the three versions of the .NET Framework VS08 can target all use the same underlying runtime, which probably made it easier to build.  </li><li>Michael Platt <a href="http://michaelplatt.net/blogs/architecture/archive/2007/06/18/service-oriented-programming-sop-tenets.aspx">refactors </a>Don Box's original <a href="http://msdn.microsoft.com/msdnmag/issues/04/01/Indigo/default.aspx">tenets of service orientation</a> so he can include some information about how these services get built.  </li><li>Scott Hanselman <a href="http://feeds.feedburner.com/~r/ScottHanselman/~3/126242743/AssemblyFiefdomsWhatsTheRightNumberOfAssembliesLibraries.aspx">tackles</a> the tricky question of assembly granularity.  </li><li><a href="http://powershell.com/store/index.php?act=viewProd&amp;productId=2">PowerShell Analyzer</a> is now available for purchase. Among other things your $59 gets you, besides a 50% savings, is "<a href="http://powershelllive.com/">Feature request priority</a>". That's pretty cool. I wonder how many other micro-ISV's take the approach of "pay me now and you get to help me pick some of the new features."  </li><li><a href="http://s3.amazonaws.com/devhawk_images/WindowsLiveWriter/MorningCoffee92_A997/IMAGE_00062.jpg" atomicselection="true"><img style="border-top-width: 0px; border-left-width: 0px; border-bottom-width: 0px; border-right-width: 0px" height="160" alt="My Monitor Setup" src="http://s3.amazonaws.com/devhawk_images/WindowsLiveWriter/MorningCoffee92_A997/IMAGE_00062_thumb.jpg" width="200" align="right" border="0" /></a>Brandon LeBlanc <a href="http://windowsvistablog.com/blogs/windowsexperience/archive/2007/06/20/running-a-dual-monitor-setup-with-windows-vista.aspx">writes</a> about dual monitor support in Vista. I'm loving the dual monitor support, though I have a somewhat strange setup. I keep my primary monitor rotated in portrait mode, which is great for reading and writing. I typically use my second monitor for blogs and mail. I even wrote a custom multi-mon wallpaper utility so I could easily generate new wallpapers for my non-standard monitor layout, including bitmap rotate support. If there's interest, I can post it. (via <a href="http://codebetter.com/blogs/sam.gentile/archive/2007/06/20/new-and-notable-173.aspx">Sam Gentile</a>)  </li><li>Nick Malik <a href="http://blogs.msdn.com/nickmalik/archive/2007/06/19/not-crazy-just-lateral-thinking.aspx">continues</a> to write about Mort, with the usual response from the usual folks. I liked his point that "You cannot fight economics with education", but otherwise I'm staying out of this discussion.  </li><li>In the same vein, Martin Fowler <a href="http://martinfowler.com/bliki/DesignStaminaHypothesis.html">writes</a> about Technical Debt. I completely agree with his hypothesis that short changing design may save time in the short term but will cost much more in the long term. However, the problem is that the people who are making the tradeoff - i.e. the people paying for the project NOT the people building the project - either don't understand the tradeoff or are more than happy to sacrifice the long term cost for the short term gain. How are most projects measured? Being on time and on budget with the planned set of features. Very few projects - and none that I've ever seen - are goaled on long term maintainability. Until you can change that, this issue will continue to linger. </li></ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>989</wp:post_id>
		<wp:post_date>2007-06-20 12:03:43</wp:post_date>
		<wp:post_date_gmt>2007-06-20 19:03:43</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>morning-coffee-92</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="agile"><![CDATA[Agile]]></category>
		<category domain="category" nicename="morning-coffee"><![CDATA[Morning Coffee]]></category>
		<category domain="post_tag" nicename="powershell"><![CDATA[PowerShell]]></category>
		<category domain="post_tag" nicename="visual-studio"><![CDATA[Visual Studio]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[e06986ea-3717-4225-a2a8-99c43a3d7841]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Morning+Coffee+92]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/06/20/Morning+Coffee+92]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>2530</wp:comment_id>
			<wp:comment_author><![CDATA[Rob Bazinet]]></wp:comment_author>
			<wp:comment_author_email>rbazinet@charter.net</wp:comment_author_email>
			<wp:comment_author_url>http://www.robertbazinet.com</wp:comment_author_url>
			<wp:comment_author_IP>75.130.93.202</wp:comment_author_IP>
			<wp:comment_date>2007-06-20 14:10:07</wp:comment_date>
			<wp:comment_date_gmt>2007-06-20 21:10:07</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I think people will and DO use clients other than TortoiseSVN.  I use VisualSVN, http://www.visualsvn.com.  I use the Microsoft client for TFS but I also use Subversion for several of my smaller projects because it is so much easier to setup and administer than TFS.  Using VisualSVN to talk to both Subversion and TFS would be very nice since Visual Studio doesn't really like multiple source control clients.

My 2 cents.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Morning Coffee 93</title>
		<link>http://devhawk.net/2007/06/22/morning-coffee-93/</link>
		<pubDate>Fri, 22 Jun 2007 09:50:15 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://4b588383-4077-42b7-a975-f0249a9a794f</guid>
		<description></description>
		<content:encoded><![CDATA[<ul><li><a href="http://www.washingtonpost.com/wp-dyn/content/article/2007/06/21/AR2007062102100.html" atomicselection="true"><img style="border-top-width: 0px; border-left-width: 0px; border-bottom-width: 0px; border-right-width: 0px" height="114" alt="newcapsjersey" src="http://s3.amazonaws.com/devhawk_images/WindowsLiveWriter/b1af0a59d47f_D650/newcapsjersey_1.jpg" width="124" align="right" border="0" /></a> The Washington Capitals <a href="http://www.washingtonpost.com/wp-dyn/content/article/2007/06/21/AR2007062102100.html">unveil their new jersey</a> tonight, though they have a picture on their web site. I've got mixed feelings, though I'm trying to reserve judgement until I see it "in action". I like that they're back to the traditional Caps colors. But the Caps have jersey change fatigue. They only had the screaming eagle jersey for twelve years, and they swapped out the blue jersey for the black one (that started life as a third jersey) somewhere along the line.  </li><li>Lawrence Lessig <a href="http://www.lessig.org/blog/archives/003800.shtml">hangs up</a> his IP spurs to go after the deep corruption of the political process. He points out that after a decade focusing on IP, he's learned all he is going to about these issues so he decided (among other reasons) that it was time to start fresh learning about something new. I keep telling my kids that "always keep learning" is one of the secrets to life. This move by Lessig is the embodiment of that principle. Good for him. (via <a href="http://del.icio.us/drjflam#2007-06-20">John Lam</a>)  </li><li>My old team keep chugging along. They've recently added "special coverage" sections on <a href="http://msdn2.microsoft.com/en-us/architecture/bb404166">Agile Development</a> and <a href="http://msdn2.microsoft.com/en-us/architecture/bb469938.aspx">Enterprise Architecture</a>.  </li><li>Miguel de Icaza <a href="http://tirania.org/blog/archive/2007/Jun-21.html">details</a> the three week "hackathon" (his words, not mine) they went thru to get a working version of <a href="http://silverlight.net/">Silverlight</a> on <a href="http://www.mono-project.com">Mono</a> - aka <a href="http://www.mono-project.com/Moonlight">Moonlight</a> - in time for ReMix 07 in Paris. It's an impressive engineering achievement, to say the least. Also, it's nice to see the folks from Microsoft France invite Miguel to come be a part of their keynote. (via <a href="http://www.knowing.net/PermaLink,guid,12780d93-012f-4a5b-ad33-eae24267ad9b.aspx">Larry O'Brien</a>)  </li><li><a href="http://www.robertbazinet.com">Rob Bazinet</a> <a href="http://devhawk.net/CommentView,guid,E06986EA-3717-4225-A2A8-99C43A3D7841.aspx#a2700914-eec7-4f7f-83ab-f82abbaead94">points out</a><a href="http://www.visualsvn.com">VisualSVN</a> in response to my question about SVN clients other than Tortoise. Like <a href="http://ankhsvn.tigris.org/">AnkhSVN</a>, VisualSVN snaps into Visual Studio. However, where AnkhSVN is a native SVN implementation, VisualSVN depends on Tortoise. Scott Bellware <a href="http://codebetter.com/blogs/scott.bellware/archive/2006/09/02/VisualSVN-_2D00_-Finally-Feel_2D00_Good-Visual-Studio-Plugin-for-Subversion.aspx">wrote</a> "VisualSVN takes a novel approach to bringing SVN into the Visual Studio IDE... it brings Tortoise into the IDE!". So it still sounds like Tortoise is <em>the</em> SVN client everyone cares about.  </li><li>Scott Berkun <a href="http://www.scottberkun.com/blog/2007/asshole-driven-development/">details</a> a variety of immature development and management methodologies, including Development By Denial (DBD), Cover Your Ass Engineering (CYAE) and my personal favorite Asshole Driven development (ADD). Scott Hanselman <a href="http://www.hanselman.com/blog/ADDAndFlamingPotatoDevelopment.aspx">suggests</a> looking around and making sure you're not said asshole. I tend to be somewhat...how should I say it?...strong willed about the direction projects I work on should take. My current project is about driving a paradigm shift to service orientation, and I don't think you can't drive that kind of change without being somewhat strong willed. It's a thin line between strong willed and asshole and hopefully I come down on the right side of that line more often than not. </li></ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>990</wp:post_id>
		<wp:post_date>2007-06-22 09:50:15</wp:post_date>
		<wp:post_date_gmt>2007-06-22 09:50:15</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>morning-coffee-93</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="development"><![CDATA[Development]]></category>
		<category domain="category" nicename="morning-coffee"><![CDATA[Morning Coffee]]></category>
		<category domain="post_tag" nicename="open-source"><![CDATA[Open Source]]></category>
		<category domain="post_tag" nicename="washington-capitals"><![CDATA[Washington Capitals]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[4b588383-4077-42b7-a975-f0249a9a794f]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Morning+Coffee+93]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/06/22/Morning+Coffee+93]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Home Networking Question</title>
		<link>http://devhawk.net/2007/06/23/home-networking-question/</link>
		<pubDate>Sat, 23 Jun 2007 11:55:53 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://98876770-273d-48e2-a2b3-7ba03d9fde66</guid>
		<description></description>
		<content:encoded><![CDATA[<p>I'm a software guy, so here's a couple of home networking questions I'm hoping one of you readers can answer. My internet connection (cable) comes in upstairs in the loft (aka where all my computer stuff lives). My TV and Xbox are in the living room on the opposite side of the house, downstairs. Between the distance and general house interference, the network perf in my living room stinks, with both my laptop and Xbox.</p><p>I'd basically resigned myself to running Cat 5 cable from my living room to the loft, which is a pain because it would have to run thru the crawlspace and up the side of the house to the loft and punch in thru the outside wall. Frankly, I haven't been able to make the time commitment to do that yet.</p><p>I was checking out the Linksys site and right there on the homepage is a <a href="http://www.linksys.com/servlet/Satellite?c=L_Content_C1&amp;childpagename=US%2FLayout&amp;cid=1115417027773&amp;pagename=Linksys%2FCommon%2FVisitorWrapper&amp;lid=2777327773B01&amp;page=5&amp;random=7">promotion</a> for their Powerline products. Now that would be MUCH easier than running Cat 5. But how good is it, really? They <a href="http://www.linksys.com/servlet/Satellite?c=L_Product_C2&amp;childpagename=US%2FLayout&amp;cid=1166859566539&amp;packedargs=site%3DUS&amp;pagename=Linksys%2FCommon%2FVisitorWrapper&amp;lid=6653900406B01">claim</a> "Data rates up to 200Mbps", which is plenty fast <em>if</em> they really reach that throughput. Anyone out there had any experience with this Powerline stuff? For around $200 and getting to skip running cable under the house, it's probably worth it for me to take a shot. Worse that happens is that I have to take it back.</p><p>Regardless if I use powerline or run Cat 5, that solves the Xbox problem but I still want a stronger wireless signal on that side of the house. So for my second question, what's the word on multiple access points? Should I set up multiple wireless APs or should I set up a repeater somewhere in between to boost the signal. I'm actually looking at getting a new wireless router/AP anyway, so maybe I could just get one of the ones with some type of range boost. I currently have a now-discontinued <a href="http://www.microsoft.com/products/info/product.aspx?view=8&amp;pcid=13194ee9-f7e7-4785-9cbf-f5ed24e8eff4&amp;type=ovr">MN-700</a> (what do you want, I'm a company man) so it's a good time to get a new AP anyway. </p><p>Another option to the wireless strength question is the <a href="http://www.auraone.com/products.htm">AuraGrid</a>, which tunnels your wireless antenna signal over the coax cable in your home to give you multiple antennas all over the house. So I could easily add a wireless antenna wherever there's a cable jack. Anyone have any experience with that product?</p><p>Anyone who wants to give me free advice, feel free to leave a comment or <a href="mailto:harry@devhawk.net">drop me a line</a>. Thanks in advance.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>991</wp:post_id>
		<wp:post_date>2007-06-23 11:55:53</wp:post_date>
		<wp:post_date_gmt>2007-06-23 11:55:53</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>home-networking-question</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="hardware"><![CDATA[Hardware]]></category>
		<category domain="post_tag" nicename="home-network"><![CDATA[Home Network]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[98876770-273d-48e2-a2b3-7ba03d9fde66]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Home+Networking+Question]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/06/23/Home+Networking+Question]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>2531</wp:comment_id>
			<wp:comment_author><![CDATA[Larry O'Brien]]></wp:comment_author>
			<wp:comment_author_email>lobrien@knowing.net</wp:comment_author_email>
			<wp:comment_author_url>http://www.knowing.net/</wp:comment_author_url>
			<wp:comment_author_IP>70.95.167.197</wp:comment_author_IP>
			<wp:comment_date>2007-06-23 16:10:30</wp:comment_date>
			<wp:comment_date_gmt>2007-06-23 23:10:30</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Jeff Duntemann gave a thumbs-up to Powerline connectors: http://jeff-duntemann.livejournal.com/103259.html

But I've heard (I think on Amazon reviews) that achieved throughput is marginal for HDTV. ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Morning Coffee 94</title>
		<link>http://devhawk.net/2007/06/25/morning-coffee-94/</link>
		<pubDate>Mon, 25 Jun 2007 09:57:37 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://0733a021-2450-4828-acfe-14527f25b8cd</guid>
		<description></description>
		<content:encoded><![CDATA[<ul><li>By <a href="http://japersrink.blogspot.com/2007/06/recapping-caps-draft.html">most accounts</a>, the Capitals had a good draft this weekend. They started the day with ten picks across the seven rounds. The ended the day with ten prospects as well as three extra picks next year, including two second rounders. According to the GM George McPhee (aka GMGM), next year's is "<a href="http://www.washingtonpost.com/wp-dyn/content/article/2007/06/23/AR2007062301097.html">supposed to be a terrific draft</a>" which is probably true but what you always say when you trade down for future picks. On the other hand, if the <a href="http://blog.washingtonpost.com/capitalsinsider/2007/06/notes_from_columbus.html">guys you want</a> are available further down, why not stock up on the future picks?  </li><li>John Lam <a href="http://www.iunknown.com/2007/06/steve-yegge-por.html">reports</a> on <a href="http://steve-yegge.blogspot.com/">Steve Yegge's</a> Rails port to JavaScript that he saw at Foo Camp. Google (aka Steve's employer) wasn't interested in adopting Ruby or Rails since they already use C++, Java, JavaScript and Python. So Steve ported Rails to JavaScript. Wow. However, it does beg the question which is more valuable, Ruby or Rails? If you could have just one or the other, which would you choose? </li><li>Speaking of dynamic languages, <a href="http://www.codeplex.com/PowerShellCX">Powershell Community Extensions</a> v1.1 is out. I want to check out the new <a href="http://keithhill.spaces.live.com/blog/cns!5A8D2641E0963A97!764.entry?_c=BlogPart">Elevate function</a>. Currently, I'm using the <a href="http://www.microsoft.com/technet/technetmag/issues/2007/06/UtilitySpotlight/default.aspx">Script Elevation PowerToys</a>, but I would rather have a pure PS solution. (via <a href="http://blogs.msdn.com/powershell/archive/2007/06/24/powershell-community-extensions-pscx-v1-1-1.aspx">Powershell Team Blog</a>) </li><li>I always know it's a slow day when I decide to check <a href="http://www.techmeme.com/">TechMeme</a> while writing my Morning Coffee post. Usually, I get plenty to write about from just my news reading. However, <a href="http://www.techmeme.com/070625/h1240">right now</a>, even TechMeme seems mostly uninteresting. Only thing remotely interesting to me is Samsung's new <a href="http://www.engadget.com/2007/06/25/samsungs-64gb-ssds-ready-to-roll/">64GB solid state drive</a>.</li></ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>992</wp:post_id>
		<wp:post_date>2007-06-25 09:57:37</wp:post_date>
		<wp:post_date_gmt>2007-06-25 09:57:37</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>morning-coffee-94</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="morning-coffee"><![CDATA[Morning Coffee]]></category>
		<category domain="post_tag" nicename="powershell"><![CDATA[PowerShell]]></category>
		<category domain="post_tag" nicename="ruby"><![CDATA[Ruby]]></category>
		<category domain="post_tag" nicename="washington-capitals"><![CDATA[Washington Capitals]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[0733a021-2450-4828-acfe-14527f25b8cd]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Morning+Coffee+94]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/06/25/Morning+Coffee+94]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>2532</wp:comment_id>
			<wp:comment_author><![CDATA[Nick Malik]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://blogs.msdn.com/nickmalik</wp:comment_author_url>
			<wp:comment_author_IP>131.107.0.102</wp:comment_author_IP>
			<wp:comment_date>2007-06-25 16:58:23</wp:comment_date>
			<wp:comment_date_gmt>2007-06-25 23:58:23</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[So what is the Rails "answer" on the Microsoft platform?  If we don't install Ruby, do we use Rails on JS or is there a Rails version we may want to put up ourselves?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>What is the Rails Question?</title>
		<link>http://devhawk.net/2007/06/26/what-is-the-rails-question/</link>
		<pubDate>Tue, 26 Jun 2007 14:33:24 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://c444e0c2-f9e8-4625-b12a-7a4c00f859e8</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Nick Malik asked "what is the Rails "answer" on the Microsoft platform? If we don't install Ruby, do we use Rails on JS or is there a Rails version we may want to put up ourselves?" I guess it depends, what is the Rails "question"? </p><p>On the one hand, the question could be "What's the best way to run Rails on Windows?" I think the short answer to that is <a href="http://www.iunknown.com/2007/04/introducing_iro.html">IronRuby</a>. In the wake of the IronRuby announcement, John Lam <a href="http://channel9.msdn.com/ShowPost.aspx?PostID=305092#305092">wrote</a> that "Nobody would take our implementation seriously if it doesn't run Rails." <a href="http://ola-bini.blogspot.com/2007/06/there-can-be-only-one-tale-about-ruby.html">Some</a><a href="http://martinfowler.com/bliki/RubyMicrosoft.html">people</a> question the DLR's teams ability to ship a compatible version of Ruby without looking at the source, but my money is on the DLR team. (Of course it is, I'm a kool-aid drinker!)</p><p>BTW, I don't think having a JavaScript port of Rails (JailS?) is much of a help for the Microsoft platform. I'm not sure if Steve Yegge's JavaScript Rails port would run on <a href="http://en.wikipedia.org/wiki/JScript_.NET">JScript.NET</a>, but I wouldn't bet on it. I would expect you need either the old <a href="http://en.wikipedia.org/wiki/JScript">Active Scripting JScript</a> or the new <a href="http://blogs.msdn.com/jscript/archive/2007/05/07/introducing-managed-jscript.aspx">Managed JScript</a> (aka the <a href="http://blogs.msdn.com/hugunin/archive/2007/04/30/a-dynamic-language-runtime-dlr.aspx">DLR</a> based version of JavaScript). Of course, IronRuby runs on DLR as well so why wouldn't you just run Rails on IronRuby instead of the JavaScript port of Rails on Managed JScript? </p><p>(Side note - why isn't the new JScript engine called IronJavaScript? Wouldn't that be cooler than Managed JScript? Don't they know "Iron" is the new "#"?)</p><p>On the other hand, maybe the question is "can ASP.NET evolve to be more Rails-esque?" I think it's starting to, slowly. Rails at it's core is a <a href="http://www.martinfowler.com/eaaCatalog/modelViewController.html">Model View Controller</a> web app pattern (aka <a href="http://api.rubyonrails.org/files/vendor/rails/actionpack/README.html">Action Pack</a>) combined with an <a href="http://www.martinfowler.com/eaaCatalog/activeRecord.html">Active Record</a> data access pattern (aka <a href="http://api.rubyonrails.org/files/vendor/rails/activerecord/README.html">Rails' Active Record</a>). Certainly, nothing stops you from using a similar approach with ASP.NET. The Castle Project has an ASP.NET implementation of MVC (aka <a href="http://www.castleproject.org/monorail/index.html">MonoRail</a>) and Active Record (also called <a href="http://www.castleproject.org/activerecord/index.html">Active Record</a>). But I assume Nick's more interested in what ships natively in the platform to compare to Rails.</p><p>On the data access side, I think LINQ to SQL is a a compelling alternative to the various Active Record implementations. It's not an implementation of the Active Record pattern, it looks more like a <a href="http://www.martinfowler.com/eaaCatalog/tableDataGateway.html">Table Data Gateway</a> patten. Also, it's not <a href="http://en.wikipedia.org/wiki/DRY">DRY</a> like Rails Active Record, but I think that's more of a function of dynamic vs. static languages. Castle Active Record <a href="http://www.castleproject.org/activerecord/index.html">isn't DRY</a> either. But once you get the hang of the slightly funky syntax (the from clause is first so you can get intellisense) I find LINQ very easy to use. Certainly, building <a href="http://www.martinfowler.com/eaaCatalog/queryObject.html">Query Objects</a> is a snap. </p><p>On the web app framework side, the story isn't so pretty. The agile folks like MVC because it's <a href="http://codebetter.com/blogs/jeremy.miller/archive/2007/03/07/Jay_2700_s-TDD-QuickStart_2C00_-and-the-underlying-problems-he-stumbled-into.aspx">easier to test</a> (among other reasons - see update below). Apparently, there's an ASP.NET MVC framework that's "<a href="http://codebetter.com/blogs/jeffrey.palermo/archive/2007/03/16/Big-News-_2D00_-MVC-framework-for-ASP.NET-in-the-works-_2D00_-level-300.aspx">in the works</a>", but AFAIK no one has seen or heard anything about it since the MVP summit. <a href="http://codebetter.com/blogs/jeffrey.palermo/default.aspx">Jeffrey Palermo</a> was impressed with what he saw, but I guess everyone else has to reserve judgement until it gets a little more public.</p><p>Actually, I don't think it's an either-or question, it's both. In order to be the <em><u>Common</u></em> Language Runtime, I think it needs to support common dynamic languages like Ruby, Python and JavaScript natively. And, in order to be the best platform, I think the .NET Framework in general and ASP.NET in particular need to support multiple approaches to meet the needs of different developers. </p><p>UPDATE - in the <a href="http://devhawk.net/CommentView,guid,c444e0c2-f9e8-4625-b12a-7a4c00f859e8.aspx#commentstart">comments</a>, <a href="http://www.jeffreypalermo.com/">Jeffrey Palermo</a> points out that he likes MVC "mostly because it separates concerns of controlling screen and rendering the screen. It makes the application more maintainable and keeps the code easily changeable." Point taken. I didn't mean to imply that testability was the only virtue of MVC.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>993</wp:post_id>
		<wp:post_date>2007-06-26 14:33:24</wp:post_date>
		<wp:post_date_gmt>2007-06-26 14:33:24</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>what-is-the-rails-question</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="asp-net"><![CDATA[ASP.NET]]></category>
		<category domain="post_tag" nicename="ruby"><![CDATA[Ruby]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[c444e0c2-f9e8-4625-b12a-7a4c00f859e8]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[What+Is+The+Rails+Question]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/06/26/What+Is+The+Rails+Question]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>2536</wp:comment_id>
			<wp:comment_author><![CDATA[Mike Moore]]></wp:comment_author>
			<wp:comment_author_email>mike@blowmage.com</wp:comment_author_email>
			<wp:comment_author_url>http://blowmage.com/</wp:comment_author_url>
			<wp:comment_author_IP>137.201.242.130</wp:comment_author_IP>
			<wp:comment_date>2007-06-27 09:06:53</wp:comment_date>
			<wp:comment_date_gmt>2007-06-27 16:06:53</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[ASP.NET does not use MVC, it uses a Page Controller.

http://msdn2.microsoft.com/en-us/library/ms998548.aspx

ASP.NET punished you if you want to care about request dispatching, pretty URLs, or just keeping your code DRY.  Page controls, post-back, and view-state are great, but akin to putting lipstick on a pig.  I'd rather use IronRuby on Rails than ASP.NET for web apps of moderate to heavy complexity.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>2533</wp:comment_id>
			<wp:comment_author><![CDATA[Arnon Rotem-Gal-Oz]]></wp:comment_author>
			<wp:comment_author_email>arnon@rgoarchitects.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.rgoarchitects.com</wp:comment_author_url>
			<wp:comment_author_IP>89.138.235.226</wp:comment_author_IP>
			<wp:comment_date>2007-06-26 15:04:58</wp:comment_date>
			<wp:comment_date_gmt>2007-06-26 22:04:58</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I would think that the closest thing is Monorail which is part of the Castle project(http://www.castleproject.org/monorail/index.html) ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>2534</wp:comment_id>
			<wp:comment_author><![CDATA[Jeffrey Palermo]]></wp:comment_author>
			<wp:comment_author_email>no@thanks.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.jeffreypalermo.com</wp:comment_author_url>
			<wp:comment_author_IP>65.165.110.145</wp:comment_author_IP>
			<wp:comment_date>2007-06-26 15:46:18</wp:comment_date>
			<wp:comment_date_gmt>2007-06-26 22:46:18</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[>"The agile folks like MVC because it's easier to test."<

I would consider myself and "agile folk", but I like MVC for other reasons, not because it's easier to test.  I like it mostly because it separates concerns of controlling screen and rendering the screen.  It makes the application more maintainable and keeps the code easily changeable.

]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>2535</wp:comment_id>
			<wp:comment_author><![CDATA[Mitch Barnett]]></wp:comment_author>
			<wp:comment_author_email>mbarnett@uniserve.com</wp:comment_author_email>
			<wp:comment_author_url>http://softwareindustrialization.com</wp:comment_author_url>
			<wp:comment_author_IP>216.86.108.225</wp:comment_author_IP>
			<wp:comment_date>2007-06-26 15:59:33</wp:comment_date>
			<wp:comment_date_gmt>2007-06-26 22:59:33</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Slowly is right - As an old time ASP.NET developer and using ASP.NET AJAX for the last year (all early CTP's), I still need all the help I can get.  

The GridView control still needs to be sub-classed and overridden if you want something as simple as horizontal scrolls bars or remember scroll position on partial postback or even what row you selected (onpostback again).  Meaning the controls could be a lot more rich and powerful and I don’t know how improved it is in Orcas.  

Also, I end using other JavaScript frameworks (i.e. Sam Stephenson’s Prototype) or even roll my own cause I can’t get synchronous support in ASP.NET AJAX framework. ASP.NET just needs to catch up…regardless of MVC pattern.
]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Morning Coffee 95</title>
		<link>http://devhawk.net/2007/06/27/morning-coffee-95/</link>
		<pubDate>Wed, 27 Jun 2007 09:56:17 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://728e6055-6620-4f3f-b453-506de74ff3ca</guid>
		<description></description>
		<content:encoded><![CDATA[<ul><li><a href="http://www.hanselman.com/blog/DasBlog197ReleaseFinalASPNET11Version.aspx">New version of dasBlog</a> is out, the final version on ASP.NET 1.1 (unless this release "kills a kitten" as per Scott Hanselman). I don't have the time (make the time?)to run daily builds, but I do try and upgrade to new major releases in a timely fashion. I'm also moving hosters, so expect a little downtime around here at some point in the near future.  </li><li>Matt Winkler is doing a series on <a href="http://blogs.msdn.com/mwinkle/archive/2007/05/24/different-execution-patterns-with-wf-or-going-beyond-sequential-and-state-machine.aspx">alternate WF execution patterns</a>. His first is the <a href="http://blogs.msdn.com/mwinkle/archive/2007/06/27/implementing-the-n-of-m-pattern-in-wf.aspx">N of M pattern</a>. While I can <a href="http://devhawk.net/2006/10/17/WF+Clarifications+And+Corrections.aspx">nitpick some things</a> in WF - especially the <a href="http://devhawk.net/2006/12/11/Transactions+In+Workflow+Foundationland.aspx">limitations of transaction flow</a> - WF's support for variability and extensibility of execution patterns is fraking brilliant. (via <a href="http://codebetter.com/blogs/sam.gentile/archive/2007/06/27/new-and-notable-175.aspx">Sam Gentile</a>)  </li><li>Joe McKendrick is all excited about a <a href="http://blogs.zdnet.com/service-oriented/?p=904">SOA built without web services</a>! We've been "doing SOA" since the EDI days without web services, so I'm not sure this level of excitement - with an exclamation point and everything - is warranted. But it is good to see people realize web services != SOA. Instead of web services, <a href="http://searchwebservices.techtarget.com/originalContent/0,289142,sid26_gci1261398,00.html">CERN is using JMS</a> to move messages around. I don't know much about <a href="http://java.sun.com/products/jms/overview.html">JMS</a>, but I do know it supports async and durable messaging, two things I think are critical for enterprise services.  </li><li>I <a href="http://lambda-the-ultimate.org/node/2312">saw on LtU</a> that there's a <a href="http://www.research.microsoft.com/os/singularity/publications/OSR2007_RethinkingSoftwareStack.pdf">new paper</a> on <a href="http://research.microsoft.com/os/singularity/">Singularity</a> out. For those who don't know, Singularity is a MS Research platform designed for reliability instead of performance. But there's more than just a new paper. According to the project <a href="http://research.microsoft.com/os/singularity/">home page</a>, "Singularity Version 1.0 is complete. We've shipped the Singularity Research Development Kit (RDK) to a small number of universities for their research efforts." I wonder if I can get my hands on that RDK?  </li><li>Jeff Atwood is <a href="http://www.codinghorror.com/blog/archives/000893.html">starting to show ads</a> on Coding Horror, but he's donating "a significant percentage" of the ad revenue back into the programming community. He's starting with $5,000 and Microsoft is matching for a total of $10,000 to be donated to <a href="http://www.codinghorror.com/blog/archives/000894.html">open source .NET projects</a>. <a href="http://www.codinghorror.com/blog/archives/000894.html">Go tell Jeff</a> which projects you think he should donate to. <a href="http://www.castleproject.org/">Castle</a> seems to be an early favorite.  </li><li>On Monday, Nick Malik <a href="http://blogs.msdn.com/nickmalik/archive/2007/06/23/simple-lifecycle-agility-maturity-model.aspx">posted</a> what he called the <a href="http://home.comcast.net/~nickmalik1/vault/Simple_Lifecycle_Agility_Maturity_Model.xls">Simple Lifecycle Agility Maturity Model</a> (aka SLAMM) as a way of measuring your "agile factor". Surprisingly, the community response has been zilch. After <a href="http://blogs.msdn.com/nickmalik/archive/2007/06/15/tools-for-mort.aspx">Nick's comments on Agile</a> last week, I figured <em>someone </em>would have <em>something </em>to say about it, even if only to slam it. (Slam SLAMM, ha ha.) Maybe nobody opened <a href="http://home.comcast.net/~nickmalik1/vault/Simple_Lifecycle_Agility_Maturity_Model.xls">the spreadsheet</a> and saw Mort has an agile factor rating of 71%? Personally, SLAMM seems like a rather coarse tool for measuring how agile you are, but coarse tools are better than no tools at all.</li></ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>994</wp:post_id>
		<wp:post_date>2007-06-27 09:56:17</wp:post_date>
		<wp:post_date_gmt>2007-06-27 09:56:17</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>morning-coffee-95</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="agile"><![CDATA[Agile]]></category>
		<category domain="post_tag" nicename="blogging"><![CDATA[Blogging]]></category>
		<category domain="post_tag" nicename="dasblog"><![CDATA[dasBlog]]></category>
		<category domain="category" nicename="morning-coffee"><![CDATA[Morning Coffee]]></category>
		<category domain="post_tag" nicename="open-source"><![CDATA[Open Source]]></category>
		<category domain="post_tag" nicename="soa"><![CDATA[SOA]]></category>
		<category domain="post_tag" nicename="wf"><![CDATA[WF]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[728e6055-6620-4f3f-b453-506de74ff3ca]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Morning+Coffee+95]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/06/27/Morning+Coffee+95]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>The Myth of the Service Catalog</title>
		<link>http://devhawk.net/2007/06/26/the-myth-of-the-service-catalog/</link>
		<pubDate>Tue, 26 Jun 2007 17:26:38 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://d236d038-9cec-42fc-aa45-06a02c8a9352</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Normally, I would simply note that Nick Malik had finally moved on from the <a href="http://blogs.msdn.com/nickmalik/archive/2007/06/19/not-crazy-just-lateral-thinking.aspx">Great Mort vs. Agile Debate<sup>tm</sup></a> in my next Morning Coffee post and be done with it. But man, his post on the <a href="http://blogs.msdn.com/nickmalik/archive/2007/06/26/the-unimportant-soa-catalog.aspx">Unimportant SOA Catalog</a> is just too good to leave until then...</p><p>Nick has come around to the view that the catalog does "a really good job of solving the wrong problem". I agree 100%. I haven't talked about it much here, but my teammates could tell you I have been on a rampage about this internally. People think a service catalog will create adoption and reuse. That suggests that the big obstacle to service adoption and reuse is simply the issue of finding something to adopt or reuse. </p><p>It's not. </p><p>The next PM I meet who says "I wish I had a big catalog of services so I can search for something that I can take an external dependency on" will be the first. And they'll probably be wearing a straightjacket, because looking for dependencies on purpose like that is crazy talk. Project managers <em><u>avoid</u></em>external dependencies like the plague. So when a PM looks at a service catalog, what they see a big list of stuff they don't want to take a dependency on. Not exactly the mindset to stimulate reuse and adoption, is it?</p><p>Nick suggests that a catalog might work if it was small (20-50 services) but not for hundreds or thousands of services. I think it's a culture issue not a scale issue, so I don't think it would work even for a small number of services. But in the end, it's a moot point since he expects a large number of services. Different reasons, same conclusion. 'nuff said.</p><p>However, while I rail against wasting time building a service catalog that won't do what everyone thinks it will do, I haven't had a better idea.</p><p>Nick does. The Periodic Table of Services. <a href="http://blogs.msdn.com/nickmalik/archive/2007/06/26/the-unimportant-soa-catalog.aspx">Go read</a>. More of my thoughts on this later.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>995</wp:post_id>
		<wp:post_date>2007-06-26 17:26:38</wp:post_date>
		<wp:post_date_gmt>2007-06-26 17:26:38</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>the-myth-of-the-service-catalog</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="architecture"><![CDATA[Architecture]]></category>
		<category domain="post_tag" nicename="soa"><![CDATA[SOA]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[d236d038-9cec-42fc-aa45-06a02c8a9352]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[The+Myth+Of+The+Service+Catalog]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/06/27/The+Myth+Of+The+Service+Catalog]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Morning Coffee 96</title>
		<link>http://devhawk.net/2007/06/28/morning-coffee-96/</link>
		<pubDate>Thu, 28 Jun 2007 10:25:06 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://d710c8c6-42b6-4789-9b44-e13ed230de23</guid>
		<description></description>
		<content:encoded><![CDATA[<ul><li>My friend David "LetsKillDave" Weller <a href="http://feeds.feedburner.com/~r/LetsKillDave/~3/128471126/penny-arcade-s-jerry-quot-tycho-quot-holkins-gripes-about-microsoft-blogging-i-respond.aspx">writes a long post</a> on corporate blogging, responding to <a href="http://www.penny-arcade.com/2007/06/27#1182927600">comments on the subject</a> from Penny Arcade. Andre "Ozymandias" Vrignaud <a href="http://ozymandias.com/archive/2007/06/27/Penny-Arcade-on-Microsoft-Bloggers.aspx">also responds</a>. David is specifically talking about blogging within the gaming division, but they apply pretty broadly to Microsoft as a whole when it comes to blogging. "I don't want to get fired", "I don't want to do things that needlessly hurt my company" and "We can say things that PR or marketing people can't.  Or won't." all ring true to me.  </li><li>Speaking of gaming, there seems to be more that your average cool games coming our for Xbox 360 this summer. I just picked up Forza 2 which rocks with the Racing Wheel. <a href="http://www.xbox.com/games/thedarkness/">The Darkness</a> looks very cool and I laughed my ass off playing the <a href="http://www.xbox.com/games/overlord">Overlord</a> demo. Both shipped this week and have gotten <a href="http://www.metacritic.com/games/xbox360/">good reviews</a>. On their way in August are <a href="http://www.xbox.com/games/bioshock/">Bioshock</a> and <a href="http://www.xbox.com/games/bluedragonxbox360/">Blue Dragon</a>. Of course, there are a <a href="http://www.xbox.com/games/grandtheftautoiv/">few</a><a href="http://www.xbox.com/games/assassinscreed/">other</a><a href="http://www.xbox.com/games/halo3">big</a><a href="http://www.xbox.com/games/masseffect/">games</a> coming this holiday. A good, but expensive, year to be a gamer. </li><li>I laughed my ass off reading Larry O'Brien's <a href="http://www.knowing.net/PermaLink,guid,0447726e-8ac1-46b2-8cf5-22afb7eb3cc5.aspx">Top 10 Things To Do With Your Petaflop Supercomputer</a>, esp. #9. </li><li>WSDL 2.0, it's official. Nick Allen has the <a href="http://blogs.msdn.com/drnick/archive/2007/06/28/wsdl-2-0-completed.aspx">news</a>. Personally, WSDL seems to be the spec most responsible for driving RPC-style request/response web services, so let's just say that I am not a fan.   </li><li>Joe McKendrick <a href="http://blogs.zdnet.com/service-oriented/?p=905">thinks</a><em>something </em>is "holding back SOA"? I don't think it's any one thing, but certainly the RPC style that most web service toolkits pretty much force down your throat isn't helping.  </li><li>Nick Malik <a href="http://udidahan.weblogs.us/2007/06/27/cab-and-acropolis-of-little-help-for-soa-interactions/">thinks</a><a href="http://windowsclient.net/acropolis/">Acropolis</a> is promising as a SOA service consumer, but Udi Dalan <a href="http://udidahan.weblogs.us/2007/06/27/cab-and-acropolis-of-little-help-for-soa-interactions/http://udidahan.weblogs.us/2007/06/27/cab-and-acropolis-of-little-help-for-soa-interactions/">thinks</a> it doesn't support multi-threading well enough. I lean towards Nick on this one since I see multi-threading as a language problem, which a library like Acropolis can't solve on it's own.  </li><li>Jon Flanders <a href="http://www.masteringbiztalk.com/blogs/jon/PermaLink,guid,01a499d4-9aa3-4902-bafd-fae03cb89d13.aspx">has been busy</a> building the <a href="https://connect.microsoft.com/site/sitehome.aspx?SiteID=437">BizTalk Server 2006 extensions for Windows Workflow Foundation (June CTP) SDK Sample</a>. I'm not sure why the marketing folks gave this such a long and involved name, but the sample does look pretty cool. Paul Andrews has the <a href="http://blogs.msdn.com/pandrew/archive/2007/06/04/biztalk-adapter-for-windows-workflow-foundation-sample-june-2007-ctp.aspx">project overview</a> and <a href="http://go.microsoft.com/?linkid=6902574">demo video</a>. However, given that the WF workflows are hosted in BTS, is it accurate to say "<a href="http://blogs.msdn.com/pandrew/archive/2007/06/27/no-biztalk-experience-required.aspx">No Biztalk Experience Required</a>"? </li><li>Speaking of WF, Tomas Restrepo <a href="http://www.winterdom.com/weblog/2007/06/28/WorkflowServicesInOrcas.aspx">takes a detailed look</a> at the new WF service hosting in .NET FX 3.5. Mostly, he likes what he sees. I have the same problem he does with the message correlation IDs. I'd like to have other options here, including support for what I call "message data correlation" (Tomas describes this as "natural correlating identifiers") and "address correlation" which is basically the REST model.</li></ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>996</wp:post_id>
		<wp:post_date>2007-06-28 10:25:06</wp:post_date>
		<wp:post_date_gmt>2007-06-28 10:25:06</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>morning-coffee-96</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="morning-coffee"><![CDATA[Morning Coffee]]></category>
		<category domain="post_tag" nicename="soa"><![CDATA[SOA]]></category>
		<category domain="post_tag" nicename="web-services"><![CDATA[Web Services]]></category>
		<category domain="post_tag" nicename="wf"><![CDATA[WF]]></category>
		<category domain="post_tag" nicename="xbox-360"><![CDATA[Xbox 360]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[d710c8c6-42b6-4789-9b44-e13ed230de23]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Morning+Coffee+96]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/06/28/Morning+Coffee+96]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Morning Coffee 97</title>
		<link>http://devhawk.net/2007/07/02/morning-coffee-97/</link>
		<pubDate>Mon, 02 Jul 2007 18:07:21 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://75e37b73-09ed-41e9-9d16-f1e20a4222ec</guid>
		<description></description>
		<content:encoded><![CDATA[<ul><li>For the first six months of 2007, I posted 158 times in 181 days. I'm obviously off the pace I set in January of averaging a <a href="http://devhawk.net/2007/01/31/Morning+Coffee+21.aspx">post a day</a>, but I am averaging just under nine tenth of a post per day. Not bad. At this rate, I'll post almost as much this year as I did the last two years combined.</li><li>It was a great family weekend. Saturday, three of my friends helped me move an upright piano that we got used for a great price. Luckily, one of said friends is also a physics teacher, otherwise I don't think we could have gotten that heavy thing in the truck. To say thanks, we BBQed for them Saturday evening. Then yesterday we took the kids to see a <a href="http://www.sesamestreetlive.com/storylines.asp#1">Sesame Street Live</a> show. Both days were beautiful, which my wife <a href="http://techiewife.spaces.live.com/blog/cns!3DAECC033B88329C!801.entry">greatly appreciated</a>. </li><li>The Caps hit the free agent market running yesterday, picking up <a href="http://japersrink.blogspot.com/2007/07/caps-sign-poti.html">Tom Poti</a> (four years, $14 million) and <a href="http://japersrink.blogspot.com/2007/07/caps-sign-kozlov.html">Victor Kozlov</a> (two years, $5 million). They weren't the A-list free agents, but they both seem like solid pickups. According to Japer's Rink, the Caps <a href="http://japersrink.blogspot.com/2007/06/34300000-to-50300000.html">were about $6.5 million</a> under the <a href="http://www.tsn.ca/nhl/news_story/?ID=212226">new cap minimum</a>. These two signings just about close that gap, but it <a href="http://www.readexpress.com/read_freeride/2007/06/a_little_more_than_one.php">doesn't sound</a> like they're done. That's good news for Caps fans.</li><li>Scott Guthrie <a href="http://weblogs.asp.net/scottgu/archive/2007/06/29/linq-to-sql-part-3-querying-our-database.aspx">continues his series</a> on LINQ to SQL. While I've seen most of this before, the cool thing Scott shows is hovering over the LINQ to SQL result and bringing up the exact SQL statement in a debugger window. That's pretty cool.</li><li>Nick Malik is now "<a href="http://blogs.msdn.com/nickmalik/archive/2007/06/29/as-the-role-changes.aspx">Mr. SOA</a>" inside MSIT. As you might imagine, I'll be working with him fairly closely. Actually, he's late to a meeting with me as I type this. </li><li>John Shewchuk <a href="http://connectedsystems.spaces.live.com/Blog/cns!10E0A1CD60CAE1A9!263.entry">announces a new version</a> of BizTalk Services coming soon. The big new feature is access control for services exposed via the BizTalk Services. If you can't wait, you can try out the new stuff in their <a href="http://labs-ppe.biztalk.net/">pre-production environment</a> right now, before it's live. Is this a beta of a beta?</li><li>Soma announces the <a href="http://msdn2.microsoft.com/smallbusiness">MSDN Small Business Developer Center</a>. I took a quick look thru the site. Strangely enough, it doesn't cover <a href="http://www.microsoft.com/dynamics">Dynamics</a> - Microsoft's business software primarily targeting small and medium size businesses. </li><li>Ted Neward called object/relational mapping the "<a href="http://blogs.tedneward.com/2006/06/26/The+Vietnam+Of+Computer+Science.aspx">Vietnam of Computer Science</a>". David Chappell gives us our next war / technology analogy, declaring that the REST vs. WS-* war is over, ending in a truce like the Korean war rather than "crushing victory for one side". </li><li>Like Jeff Atwood, I didn't realize About Face has been updated, twice. I am a huge fan of the first edition, but Jeff <a href="http://www.codinghorror.com/blog/archives/000897.html">calls About Face 3</a> "the best edition of this classic yet". I just ordered a copy for myself.</li><li>David McGhee transcribed a fantastic session with <a href="http://www.microsoft.com/presspass/exec/techfellow/Ferguson/default.mspx">Dr. Don Ferguson</a> at the <a href="http://www.architectureforum.net.au/Pages/aaf.aspx">Australian Architecture Forum</a> on SOA/ESB integration in the real world. Go read the whole thing. Udi Dahan <a href="http://udidahan.weblogs.us/2007/06/30/no-such-thing-as-a-centralized-esb/">pulls out the quote</a> "there is no such thing as a centralized ESB." Amen to that. My other favorite quotes from this discussion is "The temptation is often to get everything in a repository, but often you cannot rely on people to put everything in the registry" and "there is sometimes the “Highlander” philosophy of there can be only one service". If you're design depends on centralization and/or significant change in human behavior, it's doomed from the start. Frankly, it's amazing how often that happens.</li><li>In response to my <a href="http://devhawk.net/2007/06/26/What+Is+The+Rails+Question.aspx">What is the Rails Question post</a>, Hartmut Wilms <a href="http://www.innoq.com/blog/hw/2007/06/29/the_rails_question_the_net_open_source_dilemma.html">wonders why</a> "the .NET community (for the most part) ignores Open Source Projects". I wonder the same thing, though I don't think you can lump the whole .NET community together on this. While some parts of the community ignore anything they can't download from MSDN, other parts strongly embrace open source projects. </li></ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>997</wp:post_id>
		<wp:post_date>2007-07-02 11:07:21</wp:post_date>
		<wp:post_date_gmt>2007-07-02 18:07:21</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>morning-coffee-97</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="blogging"><![CDATA[Blogging]]></category>
		<category domain="post_tag" nicename="community"><![CDATA[Community]]></category>
		<category domain="post_tag" nicename="family"><![CDATA[Family]]></category>
		<category domain="category" nicename="morning-coffee"><![CDATA[Morning Coffee]]></category>
		<category domain="post_tag" nicename="soa"><![CDATA[SOA]]></category>
		<category domain="post_tag" nicename="washington-capitals"><![CDATA[Washington Capitals]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[75e37b73-09ed-41e9-9d16-f1e20a4222ec]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Morning+Coffee+97]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/07/02/Morning+Coffee+97]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>2540</wp:comment_id>
			<wp:comment_author><![CDATA[Nick Malik]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://blogs.msdn.com/nickmalik</wp:comment_author_url>
			<wp:comment_author_IP>131.107.0.102</wp:comment_author_IP>
			<wp:comment_date>2007-07-18 10:33:43</wp:comment_date>
			<wp:comment_date_gmt>2007-07-18 17:33:43</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi Harry,

Sorry I was on vacation on Monday July 2nd, so if I was late for a meeting with you, it must have been because I forgot to tell you that my vacation had started.  

To be honest, at that time, I was cleaning out my garage.  ;-)

--- Nick]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>2537</wp:comment_id>
			<wp:comment_author><![CDATA[Andreas &#214;hlund]]></wp:comment_author>
			<wp:comment_author_email>andreas.ohlund@steria.se</wp:comment_author_email>
			<wp:comment_author_url>http://andreasohlund.blogspot.com</wp:comment_author_url>
			<wp:comment_author_IP>192.36.80.8</wp:comment_author_IP>
			<wp:comment_date>2007-07-03 08:56:09</wp:comment_date>
			<wp:comment_date_gmt>2007-07-03 15:56:09</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hey you forgot to mention that the Capitals also signed Michael Nylander. With Nicklas Bäckström and Nylander on the team you can expect Capitals to win next years Stanley Cup for sure ;) Thx for a great blog, your dougnuts are great summaries of the blogosphere!

/Andreas (obviously from Sweden)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>2538</wp:comment_id>
			<wp:comment_author><![CDATA[DevHawk]]></wp:comment_author>
			<wp:comment_author_email>harry@devhawk.net</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>24.16.94.200</wp:comment_author_IP>
			<wp:comment_date>2007-07-03 23:07:33</wp:comment_date>
			<wp:comment_date_gmt>2007-07-04 06:07:33</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[The Nylander deal wasn't done when I wrote this. In fact, the word was Nylander was going to the Oilers. Believe me, I'm happy he's a Cap!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>2539</wp:comment_id>
			<wp:comment_author><![CDATA[John Gibson]]></wp:comment_author>
			<wp:comment_author_email>john1000@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>198.231.23.240</wp:comment_author_IP>
			<wp:comment_date>2007-07-04 07:36:15</wp:comment_date>
			<wp:comment_date_gmt>2007-07-04 14:36:15</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Wow....what a completely worthless post.

People like you are what is wrong with this country. You are obviously very politically polarized. It's one thing to dislike Bush (you have plenty of reason!), but when you step forward and say the solace is the Democrats coming to power, then it's pretty clear that you are just another partisan who thinks their party can do no wrong and the opposing party can do no right.

But then to say that you have a hard time celebrating our country's independence...Geesh...Why? Just because it isn't your party's guy in the Oval House? So your love of your country is limited by the extent of your political party's power? Frightening. Very frightening.

I love my country regardless who is in power. I vote my heart and speak my mind. This country isn't it's government. It's the people. Remember that from civics in grade school?

Unsubscribed. Your blog isn't that interesting anyway and I can certainly do without people such as yourself.
]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>A Tough Fourth</title>
		<link>http://devhawk.net/2007/07/03/a-tough-fourth/</link>
		<pubDate>Tue, 03 Jul 2007 15:31:54 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://1202f4f2-0fae-4cf3-ac19-96e41c8defbe</guid>
		<description></description>
		<content:encoded><![CDATA[<p>As Americans prepare to celebrate the birth of our nation tomorrow, what is arguably the most corrupt administration in a generation - certainly the most corrupt administration that I can remember by far (I was four when Nixon left office) - has provided yet another stark reminder of just how unfathomably corrupt it is by <a href="http://www.msnbc.msn.com/id/19570081/">commuting Scooter Libby's prison sentence</a> within hours of Libby losing the appeal to remain free while the original guilty verdict is appealed. It's not a full pardon, but I would expect <a href="http://www.msnbc.msn.com/id/19583008/">that's coming</a> sooner or later. </p><p>True patriots like myself will have a hard time celebrating America tomorrow. But I will, because America is bigger than this festering administration and the damage it has wrought to our safety and our reputation. I take solace in the landslide Democratic victory last November and the <a href="http://pewresearch.org/pubs/434/trends-in-political-values-and-core-attitudes-1987-2007">long-term negative effect</a> this rouge lawless president and his <a href="http://www.pollster.com/blogs/bush_approval_cbs_27_trend_at.php">freefall approval ratings</a> is having on the Republican party.</p><p>As far as I'm concerned, <a href="http://www.bushslastday.com/">Jan. 20th, 2009</a> can't come soon enough.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>998</wp:post_id>
		<wp:post_date>2007-07-03 15:31:54</wp:post_date>
		<wp:post_date_gmt>2007-07-03 15:31:54</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>a-tough-fourth</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="politics"><![CDATA[Politics]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[1202f4f2-0fae-4cf3-ac19-96e41c8defbe]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[A+Tough+Fourth]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/07/03/A+Tough+Fourth]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>2547</wp:comment_id>
			<wp:comment_author><![CDATA[Chris]]></wp:comment_author>
			<wp:comment_author_email>chris@dscoduc.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>64.156.199.117</wp:comment_author_IP>
			<wp:comment_date>2007-07-05 11:44:19</wp:comment_date>
			<wp:comment_date_gmt>2007-07-05 18:44:19</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[You can feel free to think it's a red herring but I beleive we are talking apples to apples...

Okay, lets deal with these one at a time...

1.)  Bush has stated that he beleived the punishment was excessive - the same reason given by Bill Clinton.  So Bill thinks that prison is excessive for a bank robber and no one complains about that, but Bush thinks that libby's punishment for lying is excessive and now all of a sudden it's outrageous.  Nice.

2.) The Democrats have tried to pin Bush down to saying that he will hold anyone accountable for their crimes.  That's a nice strategy to use to try and force the President to not be able to do 'what he believes' is the right thing.  Again, pardons are given to the president for his discression.  If you don't like right, or think that Presidents abuse it then vote to change that right.  The difference between Republicans and Democrats is that Republicans just scratch their head and say whatever, where as the Democrats cry and moan about it.

3.)  You call releasing Libby from 30 months as "off the hook" but forget to mention the remaining fines and probation that Libby is still required to account for.  I disagree that Libby is off the hook.

4.) I keep bringing up Clinton exactly because of the Democrats double standard.  All during the impeachment trials all I ever heard was how Clinton didn't do anything wrong.  Even if I can get over the fact that he disgraced the office by getting a B-job by an intern in the Oval Office, I still can't get past the video of Clinton saying "I did not have sexual relations with that woman".  So yes, he was impeached for lying to the court, and should have REMOVED HIMSELF as President.  In the end it was never even discussed to have Clinton spend 1 day in jail for the same crime you seem to think Libby should spend 30 months in jail for committing.

5.) This is the best part of the story.  An invistigation is created to look into a possible crime.  Testimony is taken for what is later discovered to be not a crime.  Then someone is convicted for lying about something during the testimony of the "non-crime".  That process happens over and over by both parties in an effort to catch anyone saying something that wasn't true.  The whole thing is a joke, on both sides.

6.) Libby was convicted of lying but always maintained that he didn't recall what was said in his conversations:  "The prosecution alleges that Libby deliberately misled FBI agents and a grand jury about several conversations he had with journalists then. Defense lawyers contend their client was too busy to recall the details of those conversations."  (http://www.washingtonpost.com/wp-dyn/content/article/2007/01/16/AR2007011600145.html).  That is the basis of my comment that he "forgot some stuff".  Clinton would have a hard time convincing me that he didn't remember having sexual relations with Monica when he spoke directly to me (the public) on the television.

7.) This whole discussion is more about the hiprocracy of the Democrats and not that Libby was wrongly convicted.  In the end it doesn't matter because Bush had every right to pardon Libby for any reason he saw fit.  Again, if you don't like it then you should try and change the law, not cry about how corrupt this administration is, and not mention how corrupt the Clinton administration was.

My impression of all politicians is that they are basically untrustworthy, both Republicans and Democrats.  Something about absolute power corrupting absolutely.  But even with that said I get sick and tired of hearing about 'how unfathomably corrupt' this administration is from the Democrats.  It's like the Democrats spent the Clinton times with their heads in the sand...

Case in point:
- http://prorev.com/hillary.htm
- http://www.realchange.org/clinton.htm
- http://www.greaterthings.com/News/Clinton_Scandals/index.html
]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>2546</wp:comment_id>
			<wp:comment_author><![CDATA[Chris May]]></wp:comment_author>
			<wp:comment_author_email>chris@christophermayinc.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.chrismay.org</wp:comment_author_url>
			<wp:comment_author_IP>208.18.167.6</wp:comment_author_IP>
			<wp:comment_date>2007-07-05 07:58:44</wp:comment_date>
			<wp:comment_date_gmt>2007-07-05 14:58:44</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[The BS about how many people Clinton pardoned is a red herring for many reasons, but mainly for these:

1) Bush's commutation of Libby's sentence has nothing to do with the facts of the case and everything to do with cronyism and that Libby was taking the fall for Cheney/Bush on this matter.

2) Bush's commutation of Libby's sentence goes against his OWN stated policies for dealing with pardons and commutation requests.

3) Bush has pardoned/commuted almost no one during his time as our President.  This futher illustrates how far outside of normal operation he was willing to go to let his friend off the hook.

4) You keep bringing up Clinton.  For this exact same crime, Clinton was impeached, and was kicked off the bar.  So the same people who screamed from the rafters that perjury was enough of a crime to remove the president, are now the same people who say it isn't enough of a crime to spend 1 day in jail.

5) Clinton's impeachment was based on a civil case where he lied about his personal life and affairs.  Libby leaked the name of an undercover operative (later deemed NOT a crime because Bush/Cheney authorized it), but then lied to cover up his, and Cheney's involvement.

6) The idea that Scooter got 2 years in jail because he "forgot some stuff" is ludicrous.  Not only was the (conservative) prosecutor absolutely convinced that Libby intentionally lied in an effort to obstuct justice.  When presented with the evidence the jury had no problem coming to a unanimous guilty verdict, and the Judge agreed with them when he imposed the sentence.  Or are you going to defend Clinton because he "forgot some stuff".  Lame!

7) Most importantly, the "B-b-b-but Clinton..." defense is stupid.  If Clinton did something shady, that doesn't mean it's fine and dandy for a Republican to do the same, EXPICALLY after chastising him for years on the topic.  

]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>2545</wp:comment_id>
			<wp:comment_author><![CDATA[Chris]]></wp:comment_author>
			<wp:comment_author_email>chris@dscoduc.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>72.197.159.134</wp:comment_author_IP>
			<wp:comment_date>2007-07-04 22:50:38</wp:comment_date>
			<wp:comment_date_gmt>2007-07-05 05:50:38</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Okay, I just re-read your thread and I can't figure out why you haven't already moved to the Peoples Republic of Canada.  You have seemed to forget that Congress' approval rating of 29% (http://www.galluppoll.com/content/?ci=27589).  This rating is with your so called 'landslide Democratic victory'...

As for the upcoming elections, I am sure that without a miracle Hillary will become President.  I can only imagine the horror of having Pelosi and Clinton running this country.  Get ready to pay for amnesty, socialized health care, and whatever else Hillary wants to push through while she is in power.
]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>2544</wp:comment_id>
			<wp:comment_author><![CDATA[Chris]]></wp:comment_author>
			<wp:comment_author_email>chris@dscoduc.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>72.197.159.134</wp:comment_author_IP>
			<wp:comment_date>2007-07-04 22:42:40</wp:comment_date>
			<wp:comment_date_gmt>2007-07-05 05:42:40</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Well interesting that you point out how corrupt the Republicans are, and grap comfort in the Democratic party.  Perhaps you should review the 400+ pardons that Clinton granted before he left office (http://www.usdoj.gov/pardon/clintonpardon_grants.htm).  I found it especially interesting that one of the pardons was for someone who was convicted of Bank Robbery (Charles Patrick Murrin C. D. Calif. 1988 Bank robbery, 18 U.S.C. § 2113(a)).

As for Scooter Libby, remember that he was convicted for "not remembering something", not bank robbery.  Perhaps the hipocracy is just a little too thick...]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>2541</wp:comment_id>
			<wp:comment_author><![CDATA[Whatever]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.fuckingidiotliberals.com</wp:comment_author_url>
			<wp:comment_author_IP>216.59.195.106</wp:comment_author_IP>
			<wp:comment_date>2007-07-03 16:38:11</wp:comment_date>
			<wp:comment_date_gmt>2007-07-03 23:38:11</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Just to be clear...you were ok with Clinton pardoning his Whitewater friends, right? Yeah, that's what I thought. Another fucking politcal hack who only wraps himself in the flag when his fucking party is out of power.

It's ok when the Dems do it, but if Republicans do it then suddenly you weep for your country. How fucking sick.

Be a real patriot and criticize corruption and wrongdoing regardless of the political affiliation. ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>2542</wp:comment_id>
			<wp:comment_author><![CDATA[TruePatriot]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>216.196.227.220</wp:comment_author_IP>
			<wp:comment_date>2007-07-03 16:49:51</wp:comment_date>
			<wp:comment_date_gmt>2007-07-03 23:49:51</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I take solace in un-subscribing from your liberal BS.

"Hey everyone, instead of celebrating our country's independence I'm going to   bitch and complain and claim if you don't do do the same your not a patriot and you hate America"]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>2543</wp:comment_id>
			<wp:comment_author><![CDATA[Sam Gentile]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://codebetter.com/blogs/sam.gentile</wp:comment_author_url>
			<wp:comment_author_IP>75.199.3.27</wp:comment_author_IP>
			<wp:comment_date>2007-07-04 07:43:02</wp:comment_date>
			<wp:comment_date_gmt>2007-07-04 14:43:02</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Harry,

This is one reason I just made my MSN Messenger signature "Liberals Worst Day." As someone just pointed out you're OK with Clinton pardoning his Whitewater friends (who comitted real crimes). If you are concerned with national security, then worry about Clinton admin's Berger who got away scott free with stealing national security documents and covering up Clinton's 3 misses of Bin Laden!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Morning Coffee 98</title>
		<link>http://devhawk.net/2007/07/09/morning-coffee-98/</link>
		<pubDate>Mon, 09 Jul 2007 11:06:11 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://c7c0be58-720c-46e9-8bef-186182b024af</guid>
		<description></description>
		<content:encoded><![CDATA[<ul><li>Morning Coffee was canceled on Thursday and Friday on account of a kidney stone. So not fun. Luckily, it was a little one and it was alone, but I will be listening very closely to my doctor's advice to avoid another. </li><li>Took the kids to see <a href="http://www.imdb.com/title/tt0382932/">Ratatouille</a> last Tuesday and saw <a href="http://www.imdb.com/title/tt0418279/">Transformers</a> yesterday with my wife due to fluke babysitter luck. I liked Ratatouille, but I'm not sure it's the <a href="http://www.imdb.com/chart/top?tt0382932">51st best movie</a> of all time. On the other hand, major props for making a kid movie with a significant lack of toy tie-ins. Ratatouille is a better movie that <a href="http://www.imdb.com/title/tt0317219/">Cars</a>, but I don't see my four year old boy trading in is Lightning McQueen toy car for a Remy the Rat. Transformers on the other hand obviously did not forgo the toy tie-ins! Still, it wasn't bad. Kinda reminded me of <a href="http://www.imdb.com/title/tt0117500/">The Rock</a> with a bigger budget. </li><li>Micahville listed DevHawk on it's list of <a href="http://www.micahville.com/2007/07/08/69-tech-blogs-that-dont-suck/">69 Tech Blogs That Don’t Suck</a>. Thanks!</li><li>David Ing <a href="http://www.from9till2.com/PermaLink.aspx?guid=429b79ef-21ca-4523-be81-33b15fed7e5e">boldly writes</a> that C# is getting fat. Or maybe it's just big-boned. My take: no question that integrated query is a big feature that covers a lot of surface area. But given the prevalence of databases and other queriable stores, it's critical to improving programmer productivity. Go read <a href="http://research.microsoft.com/~toddpro/">Todd Proebsting's</a> talk on <a href="http://research.microsoft.com/papers/disruptive.ppt">Disruptive Programming Language Technologies</a>. Two of his candidates for disruptive language technologies were Database Integration and Manipulating XML. LINQ neatly covers both.</li><li><a href="http://connectedsystems.spaces.live.com/Blog/cns!10E0A1CD60CAE1A9!265.entry">According to John Shewchuck</a>, the new BizTalk Services release is available. However, when I click on the "<a href="http://labs.biztalk.net/WhatsNew.aspx">what's new</a>" page, it tells me they're experiencing technical difficulties. (Their error page is Oops.aspx. Funny!)</li><li>Scott Hanselman has <a href="http://feeds.feedburner.com/~r/ScottHanselman/~3/130939370/BeyondElvisEinsteinAndMortNewProgrammingStereotypesForWeb20.aspx">Programming Personas 2.0</a>. Who are you? I thought I was and "Order n" Architect (the quote "Where's the whiteboard" is spot on) but my CS background isn't as strong as the persona's.</li><li>Sam Gentile is <a href="http://feeds.feedburner.com/~r/SamGentile/~3/131750053/parallel-computing-and-concurrency-on-net.aspx">starting to dig</a> into Concurrency and he has a great list of links that have influenced his design.</li></ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>999</wp:post_id>
		<wp:post_date>2007-07-09 11:06:11</wp:post_date>
		<wp:post_date_gmt>2007-07-09 11:06:11</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>morning-coffee-98</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="blogging"><![CDATA[Blogging]]></category>
		<category domain="category" nicename="development"><![CDATA[Development]]></category>
		<category domain="post_tag" nicename="family"><![CDATA[Family]]></category>
		<category domain="post_tag" nicename="lanugages"><![CDATA[Lanugages]]></category>
		<category domain="category" nicename="morning-coffee"><![CDATA[Morning Coffee]]></category>
		<category domain="post_tag" nicename="movies"><![CDATA[Movies]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[c7c0be58-720c-46e9-8bef-186182b024af]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Morning+Coffee+98]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/07/09/Morning+Coffee+98]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Upgrading My Home Wireless Network</title>
		<link>http://devhawk.net/2007/07/08/upgrading-my-home-wireless-network/</link>
		<pubDate>Sun, 08 Jul 2007 17:12:54 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://a0e3c1c4-d7f7-420d-a392-6d56890fd879</guid>
		<description></description>
		<content:encoded><![CDATA[<p>A few weeks ago, I <a href="http://devhawk.net/2007/06/23/Home+Networking+Question.aspx">put out the call for advice</a> on improving my home network. I got a bunch of responses, both for and against PowerLine. I ended up upgrading my wireless network because 1) I was having laptop connectivity issues and 2) wireless equipment is so fraking cheap. I might still go PowerLine later, though I'm thinking it's "good enough" until I really bite the bullet and run Cat5 under my house.  </p><p>Yesterday, I picked up a couple of Buffalo Wireless routers: a <a href="http://www.buffalotech.com/products/wireless/wireless-g-mimo-performance/wireless-g-mimo-performance-broadband-router-and-access-point-with-high-gain-antenna">WHR-HP-G54</a> and a <a href="http://www.buffalotech.com/products/wireless/wireless-g-125-high-speed/wireless-g-high-speed-router/">WHR-G125</a>. The first one has a high-powered antenna, so I hoped that would solve my range problem. Both support <a href="http://en.wikipedia.org/wiki/Wireless_Distribution_System">Wireless Distribution System</a> (aka WDS), so the plan was to use the WHR-G125 as a repeater and/or bridge. Also, both support 3rd party firmware, a la <a href="http://www.dd-wrt.com">DD-WRT</a> and <a href="http://openwrt.org/">OpenWrt</a>. In fact, I chose these models specifically because they're listed on DD-WRT's <a href="http://www.dd-wrt.com/wiki/index.php/Supported_Devices">Supported Devices page</a> as best range and cheapest, respectively. Best Buy had them both on sale, so together they cost around $90 and I didn't even have to wait for them to be shipped.</p><p>I also moved my cable modem from the loft to the living room. That way, the Xbox 360 - with all the large demo and video downloads - gets the best bandwidth, typically around 8Mbit (though SpeedTest.net has clocked my connection as high as 18Mbit). </p><p>Moving the cable modem meant putting my loft desktop machine on the wireless network. At first, I used the G125 as a bridge. Getting it setup as a bridge using WDS was fairly straightforward, except that these routers only support <a href="http://en.wikipedia.org/wiki/Wired_Equivalent_Privacy">WEP</a> in that configuration and WEP <a href="http://en.wikipedia.org/wiki/RC4_%28cipher%29#Fluhrer.2C_Mantin_and_Shamir_attack">is essentially broken</a>. </p><p>At this point, I figured I had to either live with WEP (*BUZZ* wrong answer) or upgrade both routers with <a href="http://www.dd-wrt.com">DD-WRT firmware</a>. According to <a href="http://www.dd-wrt.com/wiki/index.php/WDS">their wiki</a>, DD-WRT firmware supports <a href="http://en.wikipedia.org/wiki/Wi-Fi_Protected_Access">WPA</a> for WDS. Then I remembered a third option, <a href="http://www.hanselman.com/blog/FlashingTheFirmwareOfAnXboxMN740WirelessAdapterToADLink108AGToSupportWPASecurity.aspx">detailed</a> by Scott Hanselman a few weeks back. I had been using an <a href="http://www.xbox.com/en-US/live/connect/msmn740.htm">Xbox MN-740 wireless bridge</a> to get my Xbox 360 on the wireless network. However, since my Xbox is hardwired now, I didn't need it anymore. Scott's posted about <a href="http://www.dslreports.com/forum/remark,13360873">flashing the MN-740</a> with the firmware from the <a href="http://games.dlink.com/products/?pid=383">D-Link 108AG gaming adapter</a> (they're the same hardware under the hood) that supports WPA. It took several tries before it worked, but eventually I was able to flash the device.</p><p>So now I am using the WHR-HP-G54 as my main router and access point in the living room and the flashed MN-740 to put my loft desktop machine on the wireless WPA-secured network. That desktop has all my media and is running <a href="http://www.microsoft.com/windows/products/windowsvista/editions/ultimate/default.mspx">Vista Ultimate</a>, so I was able to get both <a href="http://www.xbox.com/media/xbox360media.htm">media sharing</a> and the <a href="http://www.xbox.com/hardware/windowsmediacenter.htm">Media Center Extender</a> working. According to the network diagnostics on Vista, the connection is fast enough to stream SD video, but not HD. So I figure I'll still need to run some Cat5. But for now, I'm not trying to stream HD video from the machine in the loft so I figure I can wait on the Cat5.</p><p>Plus, I have the G125 to experiment with. For $35, it was cheap enough that I can upgrade it with the <a href="http://www.dd-wrt.com/dd-wrtv2/down.php?path=downloads%2Fbeta%2FBUFFALO+WHR-G125/">latest DD-WRT firmware</a> without worrying about losing my "investment" if I brick the thing. If I get it upgraded and working, I'll do the HP-G54 too, and be able to use the G125 as a repeater and/or bridge. Maybe that will make the network fast enough to stream HD video, but I doubt it.</p><p>Thanks to those who offered me their advice. Any of you want to come over and help run a little Cat5 under my house, beer &amp; BBQ is on me!</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1000</wp:post_id>
		<wp:post_date>2007-07-08 17:12:54</wp:post_date>
		<wp:post_date_gmt>2007-07-08 17:12:54</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>upgrading-my-home-wireless-network</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="hardware"><![CDATA[Hardware]]></category>
		<category domain="post_tag" nicename="home-network"><![CDATA[Home Network]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[a0e3c1c4-d7f7-420d-a392-6d56890fd879]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Upgrading+My+Home+Wireless+Network]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/07/09/Upgrading+My+Home+Wireless+Network]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Morning Coffee 99</title>
		<link>http://devhawk.net/2007/07/10/morning-coffee-99/</link>
		<pubDate>Tue, 10 Jul 2007 16:47:39 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://46853dc8-1178-4992-b9b7-11dd23fc2da8</guid>
		<description></description>
		<content:encoded><![CDATA[<ul><li>Mladen Prajdic has a <a href="http://weblogs.sqlteam.com/mladenp/archive/2007/07/06/60250.aspx">great post</a> on handling a database in your unit tests. He mentions <a href="http://www.ndbunit.org/">NDbUnit</a> but seems mostly to favor SQL 2005's database snapshot feature. He's got sample code for creating and restoring a snapshot. (via <a href="http://www.dotnetkicks.com/architecture/Ways_to_revert_a_database_to_pre_Test_state_after_Unit_testing">DNK</a>)  </li><li><a href="http://www.microsoft.com/downloads/details.aspx?FamilyId=73092FF6-E37B-45C6-8E5E-C23D5D632B1E&amp;displaylang=en">Microsoft Robotics Studio 1.5</a><a href="http://www.microsoft.com/presspass/press/2007/jul07/07-09msrspr.mspx">released yesterday</a>. Tandy Trower - GM of the Robotics group - <a href="http://msdn2.microsoft.com/en-us/robotics/bb625969.aspx">has the details</a> on what's new.  </li><li>Herb Sutter has a <a href="http://www.ddj.com/dept/architect/200001985">new column</a> in Dr. Dobbs on concurrency. First up, "building a consistent mental model for reasoning about concurrency". Sounds like a must read column. (via <a href="http://lambda-the-ultimate.org/node/2339">LtU</a>) </li><li>Scott Hanselman <a href="http://www.hanselman.com/blog/SezYouArchitectureAndTheArchitectureNinja.aspx">describes</a> "Sez You Architecture". I wonder, do architecture ninjas get to wear a <a href="http://en.wikipedia.org/wiki/Shinobi_shozoku">Shinobi shozoku</a>? </li><li>From the Not Everyone Agrees With DevHawk Dept.: Libor Soucek <a href="http://lsblog.wordpress.com/2007/07/05/avoid-durable-messages-in-enterprise-services/">disagrees with me</a> and thinks that durable messaging should be avoided. I had a hard time following Libor's logic but needless to say, I disagree with his disagreement. He writes that one of the reasons to use DM is for "Cooperating on transaction with external system". While multiple systems may be cooperating on a <em>business</em> transaction, in no way do I believe they are going to cooperate on a <em>database</em> transaction. But since he started talking about <a href="http://msdn2.microsoft.com/en-us/library/ms684146.aspx">the DTC</a>, I suspect we're talking past each other. Libor, <a href="mailto:harry dot pierson at microsoft dot com">drop me a line</a> and we can discuss further.</li></ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1001</wp:post_id>
		<wp:post_date>2007-07-10 09:47:39</wp:post_date>
		<wp:post_date_gmt>2007-07-10 16:47:39</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>morning-coffee-99</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="concurrency"><![CDATA[Concurrency]]></category>
		<category domain="post_tag" nicename="durable-messaging"><![CDATA[Durable Messaging]]></category>
		<category domain="category" nicename="morning-coffee"><![CDATA[Morning Coffee]]></category>
		<category domain="post_tag" nicename="robotics"><![CDATA[Robotics]]></category>
		<category domain="post_tag" nicename="soa"><![CDATA[SOA]]></category>
		<category domain="post_tag" nicename="unit-testing"><![CDATA[Unit Testing]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[46853dc8-1178-4992-b9b7-11dd23fc2da8]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Morning+Coffee+99]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/07/10/Morning+Coffee+99]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Restating the Concurrency Problem</title>
		<link>http://devhawk.net/2007/07/10/restating-the-concurrency-problem/</link>
		<pubDate>Tue, 10 Jul 2007 12:05:41 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://9167a850-9f84-494d-a871-5fd2cb2300de</guid>
		<description></description>
		<content:encoded><![CDATA[<p>I'll be honest, I recommended Herb Sutter's concurrency series in <a href="http://devhawk.net/2007/07/10/Morning+Coffee+99.aspx">today's Morning Coffee</a> because it a series on concurrency by Herb Sutter. In other words, I hadn't actually read it yet, but I know how good Sutter's stuff is. Now I have read it and I wanted to re-issue my recommendation, even more strongly. <a href="http://www.ddj.com/dept/architect/200001985">Go read it</a>. </p><p>Interestingly enough, I like the article because it doesn't provide an "answer" to the problem of concurrency. Rather, by providing a mental model, it essentially is a concise and precise restatement of the <em>problem</em>. Often, in the rush to find a solution to a problem, this step is skipped and it isn't until the end that you realize that you misunderstood the original problem and what you built doesn't match what you need.</p><p>I've often argued that this is also the key to selling in the enterprise. In my experience, whatever solution you're selling is usually way too complicated to be understood by the people who have the purchasing power to buy it. So explaining how your solution works or how your solution solves the problem isn't going to get you very far. However, the buyer does understand the problem at hand. Being able to demonstrate that you understand the fundamental nature of the problem and can communicate it back to them garners you a great deal of trust in the selling process. If you can show that you understand their problem, then you probably know how to fix it - even if the buyer doesn't understand how your solution works.</p><p>One other quick thought on Sutter's article. In discussing the use of concurrency to keep a GUI responsive (aka Pillar 1), he wrote the following:</p><blockquote><p>Today, we typically express Pillar 1 by running the background work on its own thread or as a work item on a thread pool; the foreground task that wants to stay responsive is typically long-running and is usually a thread; and communication happens through message queues and message-like abstractions like futures (Java <i>Future</i>, .NET <i>IAsyncResult</i>). In coming years, we'll get new tools and abstractions in this pillar, where potential candidates include active objects/services (objects that conceptually run on their own thread, and calling a method is an asynchronous message); channels of communication between two or more tasks; and <span style="font-weight: bold; background-color: #ffff00">contracts that let us explicitly express, enforce, and validate the expected order of messages</span>. [emphasis added]</p></blockquote><p>If we're going to provide the ability to express, enforce and validate the expected order of messages between concurrent blocks of code, can we also do it for services across the network? WSDL is wholly deficient in this area. <a href="http://ssdl.org">SSDL's</a><a href="http://ssdl.org/docs/v1.3/html/CSP%20SSDL%20Protocol%20Framework%20v1.3.html">Communicating Sequential Processes</a> (CSP) and <a href="http://ssdl.org/docs/v1.3/html/Rules%20SSDL%20Protocol%20Framework%20v1.3.html">Rules-based</a> Protocol Frameworks are a good start.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1002</wp:post_id>
		<wp:post_date>2007-07-10 12:05:41</wp:post_date>
		<wp:post_date_gmt>2007-07-10 12:05:41</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>restating-the-concurrency-problem</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="architecture"><![CDATA[Architecture]]></category>
		<category domain="post_tag" nicename="concurrency"><![CDATA[Concurrency]]></category>
		<category domain="post_tag" nicename="soa"><![CDATA[SOA]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[9167a850-9f84-494d-a871-5fd2cb2300de]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Restating+The+Concurrency+Problem]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/07/10/Restating+The+Concurrency+Problem]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Morning Coffee 100</title>
		<link>http://devhawk.net/2007/07/11/morning-coffee-100/</link>
		<pubDate>Wed, 11 Jul 2007 11:37:54 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://51048d58-2435-49dd-8cba-413009d0c44c</guid>
		<description></description>
		<content:encoded><![CDATA[<ul><li>The big 100. This puts be <a href="http://www.larkware.com/dg8/TheDailyGrind1183.aspx">1083 posts</a> behind Iron Link Poster Mike Gunderloy. As his <a href="http://afreshcup.com/2007/7/3/progress-report">.NET skills deteriorate</a>, maybe I can catch up...but I doubt it. I'm only <a href="http://codebetter.com/blogs/sam.gentile/archive/2007/07/11/new-and-notable-177.aspx">77 posts</a> behind Sam Gentile, so maybe that's a bit more feasible.  </li><li>The ADO.NET Team blog <a href="http://blogs.msdn.com/adonet/archive/2007/07/02/ado-net-entity-framework-june-2007-ctp-now-available.aspx">announces</a> the new Entity Framework CTP. Looks like there's also a new <a href="http://www.microsoft.com/downloads/details.aspx?FamilyID=e6fd8663-8b77-4649-8d36-3830e18528fa&amp;DisplayLang=en">.NET Framework 3.5 CTP</a> and new <a href="http://download.microsoft.com/download/b/c/e/bcea0399-5dd8-4d02-a125-c02cf331b86b/vnssetup.exe">Visual Web Developer "Orcas" Express CTP</a> as well. (via <a href="http://codebetter.com/blogs/sam.gentile/archive/2007/07/11/new-and-notable-177.aspx">Sam Gentile</a>) </li><li>Speaking of <strike>"Orcas"</strike> VS 2008, it <a href="http://dotnetsamplechapters.blogspot.com/2007/07/windows-server-2008-visual-studio-2008.html">launches</a> with Windows Server 2008 and SQL Server 2008 next February. (via <a href="http://www.dotnetkicks.com/products/Windows_Server_2008_Visual_Studio_2008_and_Microsoft_SQL_Server_2008">DNK</a>) </li><li>Scott Guthrie continues is LINQ to SQL series. <a href="http://weblogs.asp.net/scottgu/archive/2007/07/11/linq-to-sql-part-4-updating-our-database.aspx">This time</a>, using LINQ to SQL to update the database.  </li><li>My friend Arvidra Semhi recently <a href="http://blogs.msdn.com/asehmi/archive/2007/06/20/moved-my-blog-to-msdn.aspx">moved and rebooted</a> his blog. Among his many accomplishments, Arvindra <a href="http://blogs.msdn.com/asehmi/archive/2007/06/20/journal-completes-4-seasons.aspx">started</a> the <a href="http://msdn2.microsoft.com/arcjournal">Architecture Journal</a>. I'm particularly interested in his recent <a href="http://blogs.msdn.com/asehmi/archive/2007/06/22/content-for-my-teched-us-2007-talks.aspx">Service Capsule</a> work. <a href="http://blogs.msdn.com/asehmi/rss.xml">Subscribed</a>.  </li><li>Last night was the Microsoft E3 Briefing. Gamerscore blog has the <a href="http://gamerscoreblog.com/team/archive/2007/07/10/NewsfromBriefing.aspx">news rundown</a>. Didn't seem to be any HUGE news. Last year's E3 was the first Halo 3 showing and X06 featured the Halo Wars announcement. Nothing that earth-shaking this time, though the XBLM keeps on rolling, <a href="http://gamerscoreblog.com/team/archive/2007/07/10/DisneyStudios.aspx">now featuring Disney movies</a>. (Major Nelson <a href="http://www.majornelson.com/archive/2007/07/11/disney-now-on-video-marketplace.aspx">has a list</a>.) I'm thinking that the whole HD-DVD vs. BluRay war is going to be eclipsed by direct download before it's over, though I'm still waiting for PC support &amp; all-you-can-eat pricing. </li><li>Politics 2.0 Watch: Clay Shirky has a <a href="http://many.corante.com/archives/2007/07/09/andrew_keen_rescuing_luddite_from_the_luddites.php">great blog post</a> on modern-day Luddites. As he points out: "A Luddite argument is one in which some broadly useful technology is opposed on the grounds that it will discomfort the people who benefit from the inefficiency the technology destroys." How much inefficiency is there in our modern political system? And more importantly, who benefits from that inefficiency? We've already seen the dramatic effects blogs can have on political news, media and reporting. What happens when <strike>users</strike> citizens are no longer satisfied just writing about the political process and want to get their hands dirty in the policy-making process itself?</li></ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1003</wp:post_id>
		<wp:post_date>2007-07-11 11:37:54</wp:post_date>
		<wp:post_date_gmt>2007-07-11 11:37:54</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>morning-coffee-100</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="ado-net"><![CDATA[ADO.NET]]></category>
		<category domain="post_tag" nicename="blogging"><![CDATA[Blogging]]></category>
		<category domain="category" nicename="morning-coffee"><![CDATA[Morning Coffee]]></category>
		<category domain="category" nicename="politics"><![CDATA[Politics]]></category>
		<category domain="post_tag" nicename="visual-studio"><![CDATA[Visual Studio]]></category>
		<category domain="post_tag" nicename="xbox-360"><![CDATA[Xbox 360]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[51048d58-2435-49dd-8cba-413009d0c44c]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Morning+Coffee+100]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/07/11/Morning+Coffee+100]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Thoughts on C# Fluent Interfaces</title>
		<link>http://devhawk.net/2007/07/12/thoughts-on-c-fluent-interfaces/</link>
		<pubDate>Thu, 12 Jul 2007 14:38:19 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://f55c7062-3698-4b55-8a27-218408aa5714</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Martin Fowler <a href="http://martinfowler.com/bliki/DslReadings.html">points to</a> a <a href="http://andersnoras.com/blogs/anoras/archive/2007/07/04/i-m-coming-down-with-a-serious-case-of-the-dsls.aspx">couple</a> of <a href="http://andersnoras.com/blogs/anoras/archive/2007/07/09/behind-the-scenes-of-the-planning-dsl.aspx">articles</a> by Anders Norås on building internal / embedded domain specific languages in C#. Anders has built a DSL for creating calendar events and tasks, like you might expect to do in Outlook. Here's an example:</p><pre class="brush: csharp">
ToDoComponent planningTask = 
   Plan.ToDo("Plan project X"). 
      StartingNow. 
      MustBeCompletedBy("2007.08.17"). 
      ClassifyAs("Public"); 
planningTask.Save(); 

EventComponent planningMeeting = 
   Plan.Event("Project planning meeting"). 
      RelatedTo(planningTask). 
      WithPriority(1). 
      At("Head office"). 
      OrganizedBy("jane@megacorp.com", "Jane Doe"). 
      StartingAt("12:00").Lasting(45).Minutes. 
      Attendants( 
         "peter@megacorp.com", 
         "paul@megacorp.com", 
         "mary@contractor.com").AreRequired. 
      Attendant("john@megacorp.com").IsOptional. 
      Resource("Projector").IsRequired. 
      ClassifyAs("Public"). 
      CategorizeAs("Businees", "Development"). 
      Recurring.Until(2008).EverySingle.Week.On(Day.Thursday). 
      Except.Each.Year.In(Month.July | Month.August); 
planningMeeting.SendInvitations();
</pre><p>It may not be as clean as a say a Ruby version might be, but even with all the parens and periods it's still pretty readable. Fowler calls this a <a href="http://www.martinfowler.com/bliki/FluentInterface.html">fluent interface</a>, a term I like better than "internal DSL". </p><p>Two things jumped out at me reading Anders' <a href="http://andersnoras.com/blogs/anoras/archive/2007/07/09/behind-the-scenes-of-the-planning-dsl.aspx">entry</a> on how he built this fluent interface. First, there's a lot of code to make this work. Anders didn't publish the code, but he did admit: </p><blockquote><p>"Believe me, there will be a lot of code when you're done. I'm almost there with this DSL, and at the time of writing it consists of 58 classes not including the API and tests."</p></blockquote><p>That's 58 classes just to implement the fluent interface, not counting the underlying EventComponent API. That's a lot of non-business logic code to write. How many projects are willing to invest that kind of time and effort to build a fluent interface? (I would guess "not many")</p><p>However, I bet there's a lot of template-izable code in Anders fluent interface. When he writes about keeping the language consistent by "creating branches within our grammar using different descriptor objects", I can help but think about parser development with <a href="http://en.wikipedia.org/wiki/YACC">YACC</a> and the like. These tools typically use a DSL like <a href="http://en.wikipedia.org/wiki/Backus-Naur_form">BNF</a>. Maybe we could build a DSL for building fluent interfaces?</p><p>Second, Anders makes a very interesting point about the structure of the fluent interface code:</p><blockquote><p>Writing DSLs is a little different from the regular object oriented programming style. You might have noticed that the Plan class has a verb for its name rather than the usual noun. This allows us to have a natural starting point for writing out the "sentence" explaining our intention.</p></blockquote><p>Where have you seen this verb based approach before? Powershell cmdlets.</p><blockquote><p>Windows PowerShell uses a verb-noun pair format for the names of cmdlets and their derived .NET classes. For example, the Get-Command cmdlet provided by Windows PowerShell is used to retrieve all commands registered in the Windows PowerShell shell. The verb part of the name identifies the action that the cmdlet performs. The noun part of the name identifies the entity on which the action is performed. <br />[<a href="http://msdn2.microsoft.com/en-us/library/ms714428.aspx">Cmdlet Verb Names</a>, MSDN Library]</p></blockquote><p>I've <a href="http://devhawk.net/2007/02/06/Perusing+Powershell+Part+1+GetSQLServer.aspx">written</a> about this aspect of PowerShell before: </p><blockquote><p>In OO, most of the focus is on objects, naturally. However, administrators (i.e. the target audience of PS) tend to be much more task or action focused than object focused. Most OO languages don't have actions as a first class citizens within the language. C# and Java don't even allow stand alone functions - they always have to be at least static members of a class.  </p><p>I'm fairly sure there are many reasons why strongly typed OO languages aren't popular among administrators. I'm not going to go down the static/dynamic typing rat hole here, but I would guess the object/action language tradeoff is almost as important as the typing tradeoff. What's nice about PowerShell is that while it has strong object support, it also has strong action support as well. In PS, actions are called Cmdlets. While I'm not a big fan of the name, having first class support for them in PS is one of the things I find most interesting.<br />[<a href="http://devhawk.net/2007/02/06/Perusing+Powershell+Part+1+GetSQLServer.aspx">Perusing Powershell Part 1: Get-SQLServer</a>, DevHawk]</p></blockquote><p>While there is no first-class support for verbs or actions in C#, it looks like Anders has essentially rolled his own. For example, his Plan.Event() method returns a new EventDescriptor object. Subsequent calls on this object (RelatedTo, WithPriority, OrganizedBy) change the internal state of this EventDescriptor object. When you reach the end of the chain of calls, EventDescriptor has an implicit EventComponent cast operator that creates a new EventComponent with all the data that's been collected along the chain by the EventDescriptor.</p><p>Again, I can help but think a significant amount of code in this approach can be generalized and the creation automated. Also, I wonder if any of the new C# 3.0 capabilities could be used to improve the implementation. For example, would <a href="http://weblogs.asp.net/scottgu/archive/2007/03/13/new-orcas-language-feature-extension-methods.aspx">Extension Methods</a> make it easier to build the fluent interface? Maybe / Maybe not. Regardless, Anders has given me a lot to noodle on.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1004</wp:post_id>
		<wp:post_date>2007-07-12 14:38:19</wp:post_date>
		<wp:post_date_gmt>2007-07-12 14:38:19</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>thoughts-on-c-fluent-interfaces</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="development"><![CDATA[Development]]></category>
		<category domain="post_tag" nicename="domain-specific-languages"><![CDATA[Domain Specific Languages]]></category>
		<category domain="post_tag" nicename="powershell"><![CDATA[PowerShell]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[f55c7062-3698-4b55-8a27-218408aa5714]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Thoughts+On+C+Fluent+Interfaces]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/07/12/Thoughts+On+C+Fluent+Interfaces]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Morning Coffee 101</title>
		<link>http://devhawk.net/2007/07/13/morning-coffee-101/</link>
		<pubDate>Fri, 13 Jul 2007 11:38:56 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://827ae261-b514-4d22-969b-b1a31e3c7f20</guid>
		<description></description>
		<content:encoded><![CDATA[<ul><li>In doing a little LINQ research, I stumbled upon Wes Dyer's <a href="http://blogs.msdn.com/wesdyer/default.aspx">Yet Another Language Geek</a> blog. Fascinating stuff. <a href="http://blogs.msdn.com/wesdyer/rss.xml">Subscribed</a>. Be sure to check out his <a href="http://blogs.msdn.com/wesdyer/archive/2007/05/23/in-case-you-haven-t-heard.aspx">recent posts</a> about <a href="http://blogs.msdn.com/wesdyer/archive/2007/05/31/more-on-partial-methods.aspx">Partial Methods</a>, another new C# 3.0 (<a href="http://blogs.msdn.com/timng/archive/2007/06/02/partial-methods-for-visual-basic.aspx">and VB9</a>) language feature.  </li><li>Werner Vogles has a <a href="http://www.allthingsdistributed.com/2007/07/the_different_cto_roles.html">great post</a> on what a CTO does, including a summary of <a href="http://www.brixtonspa.com/Career/The_Role_of_the_CTO_4Models.pdf">four different approaches</a> to the job.  </li><li>Somasegar <a href="http://blogs.msdn.com/somasegar/archive/2007/07/13/it-all-begins-february-27th.aspx">lets us know</a> that even though VS08 doesn't launch until February of next year, MSFT is "still aiming to release Visual Studio 2008 and .NET FX 3.5 by the end of this year".  </li><li>There's a new version of the Windows Live Mobile Search client. The Virtual Earth / Live Search team blog <a href="http://virtualearth.spaces.live.com/Blog/cns%212BBC66E99FDCDB98%218910.entry">has the details</a>. New features include Movie Showtimes, More Local Data with Reviews and improved Maps and Directions (including GPS integration). Can't wait to get this installed. (via <a href="http://www.25hoursaday.com/weblog/2007/07/13/LiveSearchForMobile20IsAvailable.aspx">Dare Obasanjo</a>)  </li><li><a href="http://www.xnagamefest.com">XNA Gamefest</a> is coming up next month. It's sort of like PDC for game developers. It's where we make our big game dev announcements - last year, we <a href="http://www.microsoft.com/presspass/press/2006/aug06/08-13xnagamestudiopr.mspx">announced XNA GSE</a> there. They recently published their <a href="http://www.xnagamefest.com/talk_abstracts.htm">session abstracts</a>, including a whole track on <a href="http://www.xnagamefest.com/talk_abstracts.htm#XNA_GAME_STUDIO">XNA Game Studio <strike>Express</strike></a>. As Shawn Hargreaves <a href="http://blogs.msdn.com/shawnhar/archive/2007/07/12/gamefest.aspx">points out</a>, an "enterprising reader could probably make a good guess" about some of the new stuff getting announced @ Gamefest.</li></ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1005</wp:post_id>
		<wp:post_date>2007-07-13 11:38:56</wp:post_date>
		<wp:post_date_gmt>2007-07-13 11:38:56</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>morning-coffee-101</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="linq"><![CDATA[LINQ]]></category>
		<category domain="category" nicename="morning-coffee"><![CDATA[Morning Coffee]]></category>
		<category domain="post_tag" nicename="visual-studio"><![CDATA[Visual Studio]]></category>
		<category domain="post_tag" nicename="windows-live"><![CDATA[Windows Live]]></category>
		<category domain="post_tag" nicename="xna"><![CDATA[XNA]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[827ae261-b514-4d22-969b-b1a31e3c7f20]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Morning+Coffee+101]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/07/13/Morning+Coffee+101]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Ovechkin as Superman</title>
		<link>http://devhawk.net/2007/07/13/ovechkin-as-superman/</link>
		<pubDate>Fri, 13 Jul 2007 21:01:03 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://44dd8299-543f-4c0e-b2c2-383876f181b6</guid>
		<description></description>
		<content:encoded><![CDATA[<p></p><div class="wlWriterSmartContent" id="scid:5737277B-5D6D-4f48-ABFC-DD9C333F4C5D:6d427c0a-a7b2-4bce-964e-557e948d8bab" style="padding-right: 0px; display: inline; padding-left: 5px; float: right; padding-bottom: 0px; margin: 0px; padding-top: 0px"><div><object width="425" height="350"><param name="movie" value="http://www.youtube.com/v/VQ7MttVX-cg" /><param name="wmode" value="transparent" /><embed src="http://www.youtube.com/v/VQ7MttVX-cg" type="application/x-shockwave-flash" wmode="transparent" width="425" height="350"></embed></object></div></div>Just <a href="http://japersrink.blogspot.com/2007/07/i-want-my-aotv.html">saw this</a> over on Japers' Rink and had to share. This video won a three 2007 Golden Matrix award from the Information and Display and Entertainment Association (IDEA): Best Music Video, Best Overall Video Display (hockey) and Best Overall Video Display (overall). <a href="http://www.kuklaskorner.com/index.php/hockey/comments/caps_honored_with_best_music_video/">More details</a> on Kukla's Korner. Congrats to the Caps PR team.<p></p><p><a href="http://www.nhl.com/nhl/app?service=page&amp;page=TeamSchedule&amp;team=WSH&amp;season=20072008">Next season</a> is only a little under three months away. Given the <a href="http://tsn.ca/nhl/teams/news_story/?ID=213270&amp;hubname=nhl-capitals">moves the Caps have made</a> this off season, next season should be a sight better than last season. Playoffs? Maybe. Contending for playoffs? Probably? Cup Contenders? Check back in a couple more years!</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1006</wp:post_id>
		<wp:post_date>2007-07-13 14:01:03</wp:post_date>
		<wp:post_date_gmt>2007-07-13 21:01:03</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>ovechkin-as-superman</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="hockey"><![CDATA[Hockey]]></category>
		<category domain="category" nicename="sports"><![CDATA[Sports]]></category>
		<category domain="post_tag" nicename="washington-capitals"><![CDATA[Washington Capitals]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[44dd8299-543f-4c0e-b2c2-383876f181b6]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Ovechkin+As+Superman]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/07/13/Ovechkin+As+Superman]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Wired for Sound</title>
		<link>http://devhawk.net/2007/07/16/wired-for-sound/</link>
		<pubDate>Mon, 16 Jul 2007 11:44:05 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://1f519169-d2e0-4f8e-9b58-0967796c2da8</guid>
		<description></description>
		<content:encoded><![CDATA[<p>One of the cool things about my house is that it has built in speakers in four rooms and the back deck. Shortly after we first moved in two years ago, we had a combination house warming and Rileyanne's christening party. As you might expect, one of the top priorities for said party was music, so I hooked up both my main surround sound receiver plus an old receiver I've had forever and we had tunes pumping everywhere except the dining room (which no one was in anyway).</p><p>Then, sometime this past winter, I got tired of NOT having surround sound for my HDTV so I redid the sound system. You might be surprised that it took me over a year to get to that, but remember the part about above about "Rileyanne's christening"? I had other priorities. Anyway, I hooked up the surround sound, including the set of built-in rear speakers in the TV room, and banished the old receiver back to the garage.</p><p>Now, it's summer again. We spend lots of time outside and on the back deck, but now sans tunes. So I'm re-configuring the sound system again, this time so I can get both surround sound and music in the house. Given that it's a fairly custom speaker setup, I don't think there's an affordable off-the-shelf solution that works for this house. </p><p>In the long run, I'm thinking of building a custom amplifier that can drive four sets of speakers (one of the sets in the house is the back surround sound speakers, so they're already taken care of) plus some type of UPnP AV client device. <a href="http://www.diyaudioprojects.com/Chip/chip.htm">Gainclone chip amplifiers</a> look fairly <a href="http://">simple to build</a> - three resistors, two capacitors and the chip itself times eight + a power supply. As for the AV client, I haven't really investigated yet, but whatever solution I go with has to have high <a href="Wife acceptance factor">WAF</a>.</p><p>Of course, building a custom amplifier takes time, so I figured in the short run I'd dust off the old banished receiver and use it to drive two sets of speakers. I also have an old laptop with a bad battery circuit. It can't roam, but it can sit there by the TV and pull music off my loft computer and play feed it into said old receiver just fine. It's not a high WAF solution, but it's something I could put together with parts I had at home + one 1/8" to RCA cable from Radio Shack. I figured I could get this up and running over the weekend. Almost, but not quite. </p><p>I hit one snag with <a href="http://www.microsoft.com/windows/windowsmedia/knowledgecenter/mediaadvice/0109.mspx">WMP 11 for XP</a>. My office machine and my laptop are both running Vista. All my music is on my office machine, but I use WMP 11's media sharing capabilities (previously known as <a href="http://www.microsoft.com/windows/windowsmedia/devices/wmconnect/default.aspx">Windows Media Connect</a>) to make that media available on my Xbox. I figured I could do the same with the old laptop, using WMP 11 as the AV client. Being an old laptop it can't run Vista so I installed a fresh copy of XP instead. However, while WMP 11 XP can share media, it <a href="http://www.microsoft.com/windows/windowsmedia/player/faq/sharing.mspx#q20:1">can't consume shared media</a> the way WMP 11 Vista can. Best laid plans and all that.</p><p>The <a href="http://www.eggheadcafe.com/software/aspnet/30221382/play-wmp-shared-media-fro.aspx">workaround</a> is to expose the media via file sharing. Simple enough, except now you have to make sure the security is correctly configured between the two machines. Since it's a single function device, I hadn't bothered to set up a password for the default user. Now, in order to access files off the network, I guess I'll have to. </p><p>Once I fix this little file sharing and security problem, I think I'm going to start by looking for a better AV client solution. I know I need a custom amplifier if I want to drive all my speakers, but with my old amp I get music in the kitchen and on the back deck which is where we want it most. On the other hand, the AV Client is the main user experience, so perhaps I should pay it more attention. I'd love to have a solution that is drivable on the TV via the remote while also isn't built on a seven year old slightly busted laptop. </p><p>Any suggestions?</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1007</wp:post_id>
		<wp:post_date>2007-07-16 11:44:05</wp:post_date>
		<wp:post_date_gmt>2007-07-16 11:44:05</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>wired-for-sound</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="diy"><![CDATA[DIY]]></category>
		<category domain="category" nicename="general-geekery"><![CDATA[General Geekery]]></category>
		<category domain="post_tag" nicename="home-electronics"><![CDATA[Home Electronics]]></category>
		<category domain="post_tag" nicename="music"><![CDATA[Music]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[1f519169-d2e0-4f8e-9b58-0967796c2da8]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Wired+For+Sound]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/07/16/Wired+For+Sound]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>2548</wp:comment_id>
			<wp:comment_author><![CDATA[Marc Brooks]]></wp:comment_author>
			<wp:comment_author_email>IDisposable@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://musingmarc.blogspot.com</wp:comment_author_url>
			<wp:comment_author_IP>69.53.203.123</wp:comment_author_IP>
			<wp:comment_date>2007-07-18 13:29:26</wp:comment_date>
			<wp:comment_date_gmt>2007-07-18 20:29:26</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[One thing to watch out for when doing WMP11 sharing is that it sends all packets out with TTL value of 1, so they will only cross one router on the way to the other devices.  Additionally, it will only stream to devices on the same subnet, so you might want to switch to the Class B private IP addresses (172.16.0.0 – 172.31.255.255) to insure you're not getting hosed by that.  More very useful information is available in the Microsoft document about building WMP11 compatible devices.

http://www.microsoft.com/whdc/device/media/NetCompat_WMP11.mspx]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Morning Coffee 102</title>
		<link>http://devhawk.net/2007/07/18/morning-coffee-102/</link>
		<pubDate>Wed, 18 Jul 2007 16:06:13 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://7ac9ffc1-8859-45b6-85e0-81bb5258a195</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Seems like a slow week.</p><ul><li>Jules and I went to see the latest <a href="http://www.harrypotterorderofthephoenix.com/">Harry Potter movie</a> this past weekend. It's easily the weakest of the six HP stories so far. The first two stories were about discovering this magical world, the next two about discovering Harry's past, and the last two about confronting said past. That leaves OotP as the odd-story-out, mostly bridging from the end of the fourth story to the start of the sixth.  </li><li>Speaking of movies, the new movie feature of <a href="http://virtualearth.spaces.live.com/Blog/cns!2BBC66E99FDCDB98!8910.entry">Mobile Search v2</a> rocks, though I have two quick suggestions. First, it would be nice to have a time-sorted view of when a given movie is playing. So if it's playing at 4pm at one theater and 4:30pm at another, you'd see them in a list ordered that way. Second, how about an option to buy tickets directly from the phone?  </li><li>If you're interested in WPF and 3D, Eric Sink has a <a href="http://software.ericsink.com/wpf3d/index.html">series for you</a>.  </li><li>Old news, but Windows Home Server <a href="http://blogs.technet.com/homeserver/archive/2007/07/16/ship-it.aspx">RTMed</a> on Monday. I'm really looking forward to this product.  </li><li>I was looking for some information on how WCF pumps messages in the service host and I found <a href="http://blogs.msdn.com/mahjayar/archive/2006/12/22/wcf-runtime-blocks.aspx">this post</a> from Maheshwar Jayaraman. Between that post and Reflector, I think I've got a good handle on how ChannelDispatcher works. </li><li>Larry O'Brein <a href="http://www.knowing.net/PermaLink,guid,1e2684b4-d7e8-4927-8307-a477a82af958.aspx">calls</a><a href="http://www.knowing.net/PermaLink,guid,32f45ea2-e324-4326-8496-697a07c15a96.aspx">out</a><a href="http://www.knowing.net/PermaLink,guid,f06c9629-09c6-430c-ad9f-9fa7ae71a908.aspx">three</a> MS Research Projects. <a href="http://research.microsoft.com/research/downloads/Details/25e1bea3-142e-4694-bde5-f0d44f9d8709/Details.aspx">Microsoft Research Accelerator</a> is a high-level data-parallel library that targets GPUs. <a href="http://research.microsoft.com/~levnach/GLEEWebPage.htm">Graph Layout Execution Engine</a> (aka GLEE) is a library for graph layout and viewing. <a href="http://research.microsoft.com/research/downloads/Details/66596bbd-0444-4ab1-93bc-e41f010a237d/Details.aspx">VirtualEarth MapCruncher</a> converts existing maps (PDF and bitmaps) to work with Virtual Earth.  </li><li>Ted Neward <a href="http://blogs.tedneward.com/2007/07/14/The+Korean+Conflict+And+Why+SOAP+And+REST+Were+Never+A+Quotwarquot.aspx">weighs in</a> on the David Chappell's <a href="http://www.davidchappell.com/blog/2007/06/rest-vs-ws-war-is-over-if-you-want-it.html">Korean War REST vs. WS-* analogy</a>. Skim the history lesson, but make sure you read his points about security and reliability interop. WS-* has addressed these areas, so <em><u>if</u></em> you need those capabilities, why wouldn't you use WS-* to get them rather than re-invent the wheel? As for the history lesson, Ted does say he thinks software development is more analogous to making war than building a house. He <a href="http://blogs.tedneward.com/2007/07/14/The+Strategies+Of+Software+Development.aspx">expands</a> on that idea and recommends Robert Greene's <a href="http://www.amazon.com/33-Strategies-War-Robert-Greene/dp/0670034576">The 33 Strategies of War</a>. I want to read the book and mull it over a bit, but I certainly see where Ted's coming from.</li></ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1008</wp:post_id>
		<wp:post_date>2007-07-18 09:06:13</wp:post_date>
		<wp:post_date_gmt>2007-07-18 16:06:13</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>morning-coffee-102</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="microsoft"><![CDATA[Microsoft]]></category>
		<category domain="category" nicename="morning-coffee"><![CDATA[Morning Coffee]]></category>
		<category domain="post_tag" nicename="movies"><![CDATA[Movies]]></category>
		<category domain="post_tag" nicename="wcf"><![CDATA[WCF]]></category>
		<category domain="post_tag" nicename="windows-live"><![CDATA[Windows Live]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[7ac9ffc1-8859-45b6-85e0-81bb5258a195]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Morning+Coffee+102]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/07/18/Morning+Coffee+102]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Morning Coffee 103</title>
		<link>http://devhawk.net/2007/07/20/morning-coffee-103/</link>
		<pubDate>Fri, 20 Jul 2007 11:48:07 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://7cb827aa-2908-4965-bda5-cf50ae6847e0</guid>
		<description></description>
		<content:encoded><![CDATA[<ul><li>My Virtual TechEd Session <a href="http://www.virtualteched.com/videos/JohnFlandersHarryPiersonsmall.asf">What is Project Rome?</a> got posted. It's only 8 minutes long, so as you might expect it's fairly high level. Thanks to <a href="http://www.masteringbiztalk.com/blogs/jon/default.aspx">Jon Flanders</a> for handling interview duty.  </li><li>QUT's <a href="http://plas.fit.qut.edu.au/Ruby.NET/">Garden Point Ruby.NET</a> compiler is now the <a href="http://code.google.com/p/rubydotnetcompiler/">Ruby.NET open source project</a>.  </li><li>The NHL is partnering with <a href="http://www.neulion.com/">NeuLion</a> to provide IPTV services for NHL team websites. They <a href="http://www.neulion.com/news/2007/050707.php">piloted</a> with the <a href="http://www.newyorkislanders.com/">Islanders</a> last season. Wouldn't it be cool to get <a href="http://capitals.nhl.com/">my favorite team's</a> IPTV channel on my <a href="http://www.xbox.com/en-US/community/events/ces2007/microsoftintegratesiptvsoftwareplatform.htm">Xbox 360</a>?  </li><li><img style="border-top-width: 0px; border-left-width: 0px; border-bottom-width: 0px; margin: 0px 0px 0px 5px; border-right-width: 0px" height="139" alt="Crosby Gets Checked in NHL08" src="http://s3.amazonaws.com/devhawk_images/WindowsLiveWriter/db4b61b806d0_EC23/NHL08_crosbydown_1.jpg" width="184" align="right" border="0" />Speaking of Hockey, I like this new <a href="http://news.teamxbox.com/xbox/14029/NHL-08-Reebok-Edge-Trailer/">NHL 08 trailer</a>. It's about <a href="http://www.rbkedgeuniform.com/">Reebok's new uniform system</a>, so it focuses on the teams with new uniforms, including the Caps. It does feature marquee players from rival teams like Sidney Crosby and Eric Staal (who is the cover athlete) heavily. But any video featuring Ovechkin's stick handling, Semin scoring and Crosby falling to the ice is OK in my book. </li><li>Speaking of Video Games, the <a href="http://www.dreambuildplay.com">XNA Dream-Build-Play contest</a> is over. You can <a href="http://www.ziggyware.com/news.php?readmore=369">see and download</a> some of the submitted games over on Ziggyware. Some of them look awesome. (via <a href="http://klucher.com/archive/2007/07/20/playing-some-great-xna-framework-games.aspx">Michael Klucher</a>) </li><li>I <a href="http://devhawk.net/2007/07/18/Morning+Coffee+102.aspx">said on Wednesday</a> that it was a slow week. It may be, but I've also been less than motivated on pretty much all geek fronts this week. Not sure why. </li></ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1009</wp:post_id>
		<wp:post_date>2007-07-20 11:48:07</wp:post_date>
		<wp:post_date_gmt>2007-07-20 11:48:07</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>morning-coffee-103</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="hockey"><![CDATA[Hockey]]></category>
		<category domain="category" nicename="morning-coffee"><![CDATA[Morning Coffee]]></category>
		<category domain="post_tag" nicename="rome"><![CDATA[Rome]]></category>
		<category domain="post_tag" nicename="ruby"><![CDATA[Ruby]]></category>
		<category domain="post_tag" nicename="xbox-360"><![CDATA[Xbox 360]]></category>
		<category domain="post_tag" nicename="xna"><![CDATA[XNA]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[7cb827aa-2908-4965-bda5-cf50ae6847e0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Morning+Coffee+103]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/07/20/Morning+Coffee+103]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>2549</wp:comment_id>
			<wp:comment_author><![CDATA[Rob Bazinet]]></wp:comment_author>
			<wp:comment_author_email>rbazinet@charter.net</wp:comment_author_email>
			<wp:comment_author_url>http://www.robertbazinet.com</wp:comment_author_url>
			<wp:comment_author_IP>24.177.11.21</wp:comment_author_IP>
			<wp:comment_date>2007-07-20 12:59:16</wp:comment_date>
			<wp:comment_date_gmt>2007-07-20 19:59:16</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Speaking of Ruby on .NET, check out http://www.sapphiresteel.com/.  I am not affliated with them at all.  I bought a copy and it rocks.  Bascially it is a Visual Studio add-in for writing Ruby code as well as a strong focus on Rails applications.  

One thing that really spoiled me with all of these years of C#...Intellisense.  Ruby on it's own has no Intellisense but with this tool you get great Intellisense and the support if great.

Again, not affiliated with them but happy with the product.  They don't seem to get a ton of coverage out there, I think they deserve more.
]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Morning Coffee 104</title>
		<link>http://devhawk.net/2007/07/23/morning-coffee-104/</link>
		<pubDate>Mon, 23 Jul 2007 15:15:34 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://2ed64f4e-4c90-411c-bb6c-eac6dc833ac3</guid>
		<description></description>
		<content:encoded><![CDATA[<ul><li>I'm presenting at a an internal training conference today and tomorrow, so my Morning Coffee roundup posts will be lighter than usual. On the other hand, I'm taking a bus downtown to the convention center, so I might write something more substantial on the way there and back. Or maybe I'll just read.</li><li><a href="http://techiewife.spaces.live.com/">My wife's</a> blogging will also be light, because she's got her nose buried in <a href="http://www.amazon.com/gp/product/0545010225">a book</a>. If I do read something to or from the conference, it's not that book because she won't let me near it until she's done! :)</li><li>Speaking of "that book", Werner Vogel drops a few details about how well Amazon handled 1.3 million pre-orders that were delivered on Saturday (including our copy).</li><li>First drop of IronRuby is available. For now, you can get it from <a href="http://www.iunknown.com/2007/07/a-first-look-at.html">John Lam's blog</a>. Unlike <a href="http://www.codeplex.com/ironpython">IronPython</a>, IronRuby will be hosted at <a href="http://rubyforge.org/">RubyForge</a>, not <a href="http://codeplex.com">CodePlex</a>, but the site isn't set up yet. Other big news is that the IronRuby team will be accepting external contributions. Are these encouraging signs to the Ruby community? </li><li>More MS Research goodness: a <a href="http://research.microsoft.com/research/downloads/Details/da809d0a-2776-4415-8835-4f24832e0f0d/Details.aspx">new drop of Spec#</a> is available. I've <a href="http://devhawk.net/2006/08/02/LangNET+Is+Helping+Game+Developers.aspx">written about Spec# before</a>, but haven't had the time to dig into it. (via <a href="http://www.larkware.com/dg8/TheDailyGrind1191.aspx">Larkware</a>)</li><li>Scott Hanselman <a href="http://www.hanselman.com/blog/BlueBadge.aspx">takes the red pill</a>. Congrats!</li><li>Speaking of Scott, <a href="http://www.hanselman.com/blog/TaskRemoveAProgrammaticCrutch.aspx">he forwards on advice</a> to remove a programmatic crutch. Good advice. Not to <a href="http://charlespetzold.com/etc/DoesVisualStudioRotTheMind.html">go all Petzold on Visual Studio</a>, but I would guess the IDE is the biggest crutch out there. As for giving up compulsively checking email, if that's a goal Scott, I think you might have joined the wrong company...</li></ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1010</wp:post_id>
		<wp:post_date>2007-07-23 08:15:34</wp:post_date>
		<wp:post_date_gmt>2007-07-23 15:15:34</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>morning-coffee-104</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="morning-coffee"><![CDATA[Morning Coffee]]></category>
		<category domain="post_tag" nicename="ruby"><![CDATA[Ruby]]></category>
		<category domain="post_tag" nicename="working-at-msft"><![CDATA[Working at MSFT]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[2ed64f4e-4c90-411c-bb6c-eac6dc833ac3]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Morning+Coffee+104]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/07/23/Morning+Coffee+104]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Early Afternoon Coffee 105</title>
		<link>http://devhawk.net/2007/07/25/early-afternoon-coffee-105/</link>
		<pubDate>Wed, 25 Jul 2007 19:36:34 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://16ef23e8-0971-40b5-adb7-9a240562f474</guid>
		<description></description>
		<content:encoded><![CDATA[<ul><li>My two sessions on Rome went very well. Sort of like what I did @ TechEd last month, but with a bit more kimono opening since it was an internal audience. Best things about doing these types of talks is the questions and post-session conversation. I've missed that since moving over to MSIT.</li><li>Late last week, I got my phone switched over to the new Office Communications Server 2007 beta. In my old office, I used the <a href="http://office.microsoft.com/en-us/communicator/HA102027031033.aspx#2">Office Communicator PBX phone integration features</a> extensively. However, when we moved we got new IP phones that didn't integrate with Communicator. So when a chance to get on the beta came along, I jumped. I'll let you know my impressions after a few weeks, in the meantime you can <a href="http://blogs.technet.com/markdea/archive/2007/07/20/28-days-later.aspx">read about Mark Deakin's experience</a>. </li><li>Matevz Gacnik <a href="http://www.request-response.com/blog/PermaLink,guid,bca19fa8-7ba8-43d8-873e-3a8cf03335cb.aspx">figures out</a> how to build a transactional web service that interacts with the new transactional file system in Vista and Server 08. Interesting, but personally I don't believe in using transactional web services. The whole point of service orientation is to <em>reduce</em> the coupling between services. Trying two services (technically, a service consumer and provider) together in an atomic transaction seems like going in the wrong direction. Still, good on Matevz for digging into the transactional file system. </li><li>Udi Dahan gives us <a href="http://udidahan.weblogs.us/2007/07/19/6-simple-steps-to-becoming-a-top-it-consultant/">6 simple steps</a> to being a "top" IT consultant. I notice that getting well known, speaking and publishing are at the top of the list but actually being good at what you're well known for comes in at #5 on the list. I'm sure Udi thinks that's implicit in becoming a "top" consultant, but I'm not so sure. </li><li>Pat Helland thinks <a href="http://blogs.msdn.com/pathelland/archive/2007/07/23/normalization-is-for-sissies.aspx">Normalization is for Sissies</a>. Slide #6 has the key take away: "For God's Sake, Don't Normalize Immutable Data". </li><li>Larry O'Brien <a href="http://www.knowing.net/PermaLink,guid,df0a45e4-0add-4598-9ac7-409774232094.aspx">bashes</a> the new <strike>binary</strike> efficient XML <a href="http://www.w3.org/XML/EXI/">working group</a> and <a href="http://www.w3.org/XML/EXI/">working draft</a>. I agree 100% w/ Larry. These aren't the droids we're looking for. </li><li>John Evdemon <a href="http://blogs.msdn.com/jevdemon/archive/2007/07/20/soa-in-the-real-world-now-available.aspx">points to</a> a new e-book from my old team called <a href="http://www.microsoft.com/downloads/details.aspx?FamilyID=cb2a8e49-bb3b-49b6-b296-a2dfbbe042d8&amp;displaylang=en">SOA in the Real World</a>. I flipped thru it (figuratively) and it appears to drill into the <a href="http://msdn2.microsoft.com/en-us/architecture/aa699418.aspx">Foundations of Solution Architecture</a> as well as provide real-world case studdies for each of the <strike>pillars</strike> recurring logical capabilities. Need to give it a deeper read.</li></ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1011</wp:post_id>
		<wp:post_date>2007-07-25 12:36:34</wp:post_date>
		<wp:post_date_gmt>2007-07-25 19:36:34</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>early-afternoon-coffee-105</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="database"><![CDATA[Database]]></category>
		<category domain="category" nicename="morning-coffee"><![CDATA[Morning Coffee]]></category>
		<category domain="post_tag" nicename="presentation"><![CDATA[Presentation]]></category>
		<category domain="post_tag" nicename="rome"><![CDATA[Rome]]></category>
		<category domain="post_tag" nicename="soa"><![CDATA[SOA]]></category>
		<category domain="post_tag" nicename="wcf"><![CDATA[WCF]]></category>
		<category domain="post_tag" nicename="xml"><![CDATA[XML]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[16ef23e8-0971-40b5-adb7-9a240562f474]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Early+Afternoon+Coffee+105]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/07/25/Early+Afternoon+Coffee+105]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>2550</wp:comment_id>
			<wp:comment_author><![CDATA[John Heintz]]></wp:comment_author>
			<wp:comment_author_email>john.heintz@newaspects.com</wp:comment_author_email>
			<wp:comment_author_url>http://johnheintz.blogspot.com/2007/07/integration-forethought-o</wp:comment_author_url>
			<wp:comment_author_IP>70.112.219.249</wp:comment_author_IP>
			<wp:comment_date>2007-07-25 20:40:02</wp:comment_date>
			<wp:comment_date_gmt>2007-07-26 03:40:02</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Interesting reference to "SOA in the Real World".

I haven't read it yet, but I think the summary is telling: forethought over afterthought to achieve integration.

My reaction is to choose a REST/Web architecture and design for serendipity...]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>2551</wp:comment_id>
			<wp:comment_author><![CDATA[J Perseo]]></wp:comment_author>
			<wp:comment_author_email>jperseo@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://N/A</wp:comment_author_url>
			<wp:comment_author_IP>72.245.126.230</wp:comment_author_IP>
			<wp:comment_date>2007-07-26 08:30:44</wp:comment_date>
			<wp:comment_date_gmt>2007-07-26 15:30:44</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Re: New XML draft

Here we go again ...

A long time ago in a galaxy far far away during the tech boom ...
I worked at a little company called XML Solutions that was made up of 1/2 of the XML 1.0 board.

Granted, I was a sys admin and hardly dealt with the language unless it was getting the Tomcat ISAPI to work with it, but I digress ...

The problem that I forsee with this course of action is thus :

- By restricting / reclassifying the XML, It has the effect of proprietizing XML. And of course, XML was created because companies couldn't agree on standards in the first place.

- By adding the Binary Elements to XML, the only good I could see coming from this is *possibly* additional layers / levels of security of data within the XML Structure.

One of the earliest issues / problems that my former company had was that potential clients / customers would demand that their version be unique to them. For Example: AmEx demanded certain portions of the XML structure be included while others were dis-cluded (?) resulting in a slightly proprietary new AMEXML .

Several others complained about the inherant openness of XML and how to secure the information in transit. This lead to a high utilization of EDI as more or less a transport layer or encryption of XML. This brought on a small boom for products such as XEDI (Pronounced Zee-Tea) to perform the EDI <-> XML translations.

Whoopie. Back to the present.

So now they want to re-invent the wheel so that binary code can be brought through a structured text file all over again. I think that people have "been there / done that". It's called UUENCODE. Get used to it.

The problem itself seems to lie in that no-one has noticed that a similar company generic structure and way of allowing standard information passing and notification has been around for years in a slightly modified form. Is anyone familiar with a SNMP Walker ? Has anyone addressed the issues with transporting information / transforming data within the confines of SNMP yet ?

I don't think so, but then again, a Pessimist is never disappointed ;-)
]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>2552</wp:comment_id>
			<wp:comment_author><![CDATA[Udi Dahan - The Software Simplis]]></wp:comment_author>
			<wp:comment_author_email>blog@UdiDahan.com</wp:comment_author_email>
			<wp:comment_author_url>http://udidahan.weblogs.us</wp:comment_author_url>
			<wp:comment_author_IP>84.229.95.14</wp:comment_author_IP>
			<wp:comment_date>2007-07-28 14:17:07</wp:comment_date>
			<wp:comment_date_gmt>2007-07-28 21:17:07</wp:comment_date_gmt>
			<wp:comment_content><![CDATA["but actually being good at what you're well known for comes in at #5 on the list. I'm sure Udi thinks that's implicit in becoming a "top" consultant, but I'm not so sure."

I think that one of the key differences between those who are perceived as top IT consultants and others who are knowledgable, valuable consultants is the exposure. This is often "the hard part" for those wanting to move up and make "the big bucks" :)

I think that being good is practically a prerequisite for anyone actually making a living from consulting.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>*Now* How Much Would You Pay For This Code?</title>
		<link>http://devhawk.net/2007/07/25/now-how-much-would-you-pay-for-this-code/</link>
		<pubDate>Wed, 25 Jul 2007 14:47:52 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://6c298f24-05dc-4ecc-973d-77293e65d492</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Via <a href="http://www.larkware.com/dg8/TheDailyGrind1193.aspx">Larkware</a> and <a href="http://www.infoq.com/news/2007/07/worthless-code">InfoQ</a>, I discovered a great post on code reuse by Dennis Forbes: <a href="http://www.yafla.com/dennisforbes/Internal-Code-Reuse-Considered-Dangerous/Internal-Code-Reuse-Considered-Dangerous.html">Internal Code Reuse Considered Dangerous</a>. I've <a href="http://devhawk.net/2006/09/19/A+Question+Of+Context.aspx">written about</a><a href="http://devhawk.net/2006/09/20/Feasible+Service+Reuse.aspx">reuse before</a>, albeit in the context of services. But where I wrote about the impact of context on reuse (high context == low or no reuse), Dennis focused on the idea of accidental reuse. Here's the money quote from Dennis:</p><blockquote><p>Code reuse doesn't happen by accident, or as an incidental - <em>reusable code is designed and developed to be generalized reusable code</em>. Code reuse as a <em>by-product</em> of project development, usually the way organizations attempt to pursue it, is almost always detrimental to both the project and anyone tasked with reusing the code in the future. [Emphasis in original]</p></blockquote><p>I've seen many initiatives of varying "officialness" to identify and produce reusable code assets over the years, both inside and outside Microsoft. Dennis' point that code has to be specifically designed to be reusable is right on the money. Accidental code (or service) reuse just doesn't happen. Dennis goes so far as to describe such efforts as "almost always detrimental to both the project and anyone tasked with reusing the code in the future".</p><p>One of the more recent code reuse efforts I've seen went so far as to identify a reusable asset lifecycle model. While it was fairly detailed at the lifecycle steps that came <em>after</em> said asset came into existence, it was maddeningly vague as to how these reusable assets got built in the first place. The lifecycle said that a reusable asset "comes into existence during the planning phases". That's EA-speak for "and then a miracle happens". </p><p>Obviously, the hard part about reusable assets is designing and building them in the first place. So the fact that they skimped on this part of the lifecycle made it very clear they had no chance of success with the project. I shot back the following questions, but never got a response. If you are attempting such a reuse effort, I'd strongly advise answering these questions first:</p><ul><li>How does a project know a given asset is reusable? </li><li>How does a project design a given asset to be reusable?</li><li>How do you incent (<a href="http://dictionary.reference.com/browse/incentivize">incentivize?</a>) a project to invest the extra resources (time, people, money) in takes to generalize an asset to be reusable?</li></ul><p>And to steal one from Dennis:</p><ul><li>What, realistically, would competitors and new entrants in the field offer for a given reusable asset?</li></ul><p>Carl Lewis wonders <a href="http://cysquatch.net/blog/2007/06/08/is-your-code-worthless/">Is your code worthless?</a> As a reusable asset, probably yes.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1012</wp:post_id>
		<wp:post_date>2007-07-25 14:47:52</wp:post_date>
		<wp:post_date_gmt>2007-07-25 14:47:52</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>now-how-much-would-you-pay-for-this-code</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="development"><![CDATA[Development]]></category>
		<category domain="post_tag" nicename="reuse"><![CDATA[Reuse]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[6c298f24-05dc-4ecc-973d-77293e65d492]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Now+How+Much+Would+You+Pay+For+This+Code]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/07/25/Now+How+Much+Would+You+Pay+For+This+Code]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>2553</wp:comment_id>
			<wp:comment_author><![CDATA[Nick Malik]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://blogs.msdn.com/nickmalik</wp:comment_author_url>
			<wp:comment_author_IP>67.183.175.157</wp:comment_author_IP>
			<wp:comment_date>2007-07-27 09:56:47</wp:comment_date>
			<wp:comment_date_gmt>2007-07-27 16:56:47</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[It's unfortunate that no one answered your questions, Harry.  if they ever do, let me know.

I do thing that the stuff you saw was useful and necessary.  Just, as you point out, probably incomplete.

My personal opinion is that we are serious about code reuse, we need to identify the services that SHOULD be provided by that reusable code.  The .Net framework takes the horizontal approach, and tries to fill in gaps for a dozen different types of projects for any business need.  If we want to do something in IT, it needs to take the opposite approach: build for one or two project types for one or two business needs, but cross all the way up across the stack.  That's right: Components at every level of the stack.

Perhaps something for patterns that connect dynamic user interfaces down through the stacks, including workflow and business rules engine, and through to adapters that save data?  See what I mean?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>2554</wp:comment_id>
			<wp:comment_author><![CDATA[raveman]]></wp:comment_author>
			<wp:comment_author_email>otworz@buziaczek.pl</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>83.243.106.6</wp:comment_author_IP>
			<wp:comment_date>2007-07-31 20:16:47</wp:comment_date>
			<wp:comment_date_gmt>2007-08-01 03:16:47</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[i for once think there is no code reusable by default, its much harder to write that kind of code and really what for? because you hope it might get reused in the future? how much reusable code you wrote and .... Its slow you down, i personally know right away if the code should be reusable, if i write something that im planning(90% of time i wrong about it anyway ;) to use in the future then i make it reusable, if i not then i wont.

I just wonder how many people really reuse the code? and i dont mean classes that names are ended with Util or Helper.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>The Durable Messaging Debate Continues</title>
		<link>http://devhawk.net/2007/07/26/the-durable-messaging-debate-continues/</link>
		<pubDate>Thu, 26 Jul 2007 13:48:34 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://9534eca8-3c7f-40bd-b06f-a49de1b57425</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Last week, Nick Malik <a href="http://blogs.msdn.com/nickmalik/archive/2007/07/19/is-durability-in-messaging-bad-libor-thinks-so.aspx">responded</a> to Libor Soucek's <a href="http://lsblog.wordpress.com/2007/07/05/avoid-durable-messages-in-enterprise-services/">advice</a> to avoid durable messaging. Nick points out that while both durable and non-durable messaging requires some type of compensation logic (nothing is 100% foolproof because fools are so ingenious), the durable messaging compensation logic is significantly simpler. </p><p>This led to a <a href="http://lsblog.wordpress.com/2007/07/21/durable-messages-still-losing-over-redundancy-and-eda/">very long conversation</a> over on Libor's blog. Libor started by clarifying his original point, and then the two of them went back and forth chatting in the comments. It's been very respectful, Libor calls both Nick and I "clever and influential" though he also thinks we're wrong on this durable messaging thing. In my private emails with Libor, he's been equally respectful and his opinion is very well thought out, though obviously I think <em>he's</em> the one who's wrong. :)</p><p>I'm not sure how much is clear from Libor's public posts, but it looks like most of his recent experience comes from building trading exchanges. According to his <a href="http://lsblog.wordpress.com/about/">about page</a>, he's been building electronic trading systems since 2002. While I have very little experience in that domain, I can see very clearly how the highly redundant, reliable multicast approach that he describes would be a very good if not the best solution.</p><p>But there is no system inside Microsoft IT that looks even remotely like a trading exchange. Furthermore, I don't think approaches for building a trading exchange generalize well. So that means Nick and I have very different priorities than Libor, something that seems to materialize as a significant amount of talking past each other. As much as I respect Libor, I can't shake the feeling that he doesn't "get" my priorities and I wouldn't be at all surprised if he felt the same way about me.</p><p>The biggest problem with his highly redundant approach is the sheer cost when you consider the large number of systems involved. <a href="http://lsblog.wordpress.com/2007/07/21/durable-messages-still-losing-over-redundancy-and-eda/#comment-830">According to Nick</a>, MSIT has "over 2700 applications in 82 solution domains". When you consider the cost for taking a highly redundant approach across that many applications, the cost gets out of control very quickly. Nick estimates that the support staff cost alone for tripling our hardware infrastructure to make it highly redundant would be around half a billion dollars a year. And that doesn't include hardware acquisition costs, electricity costs, real-estate costs (gotta put all those servers somewhere) or any other costs. The impact to Microsoft's bottom line would be enormous, for what Nick calls "negligible or invisible" benefit.</p><p>There's no question that high availability costs big money. I just asked <a href="http://halfmybrain.spaces.live.com/">Dale</a> about it, and he said that in his opinion going above 99.9% availability increases costs "nearly exponentially". He estimates just going from 99% to 99.9% doubles the cost. 99% availability is almost 15 minutes of downtime per day (on average). 99.9% is about 90 seconds downtime per day (again, on average).  </p><p>How much is that 13 extra minutes of uptime per day worth? I would say "depends on the application". How many of the 2700 applications Nick mentions need even 99% availability? Certainly some do, but I would guess that less than 10% of those systems need better than 99% <em>availability</em>. What pretty much all of them actually need is high <em>reliability</em>, which is to say they need to work even in the face of "<a href="http://en.wikipedia.org/wiki/Reliability">hostile or unexpected circumstances</a>" (like system failures and downtime).</p><p>High availability implies high reliability. However, the reverse is not true. You can build systems to gracefully handle failures without the cost overhead of highly redundant infrastructure intended to avoid failures. Personally, I think the best way to build such highly reliable yet not highly available systems is to use durable messaging, though I'm sure there are other ways. </p><p>This is probably the biggest difference between Libor and me. I am actively looking to trade away availability (not reliability) in return for lowering the cost of building and running a system. To someone who builds electronic trading systems like Libor, that probably sounds completely wrongheaded. But an electronic trading system would fall into the minority of systems that need high availability (ultra high five nines of availability in this case). For the systems that actually do need high availability, you have to invest in redundancy to get it. But for the rest of the systems, there's a less costly way to get the reliability you need: Durable Messaging. </p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1013</wp:post_id>
		<wp:post_date>2007-07-26 13:48:34</wp:post_date>
		<wp:post_date_gmt>2007-07-26 13:48:34</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>the-durable-messaging-debate-continues</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="architecture"><![CDATA[Architecture]]></category>
		<category domain="post_tag" nicename="durable-messaging"><![CDATA[Durable Messaging]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[9534eca8-3c7f-40bd-b06f-a49de1b57425]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[The+Durable+Messaging+Debate+Continues]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/07/26/The+Durable+Messaging+Debate+Continues]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Afternoon Coffee 106</title>
		<link>http://devhawk.net/2007/07/27/afternoon-coffee-106/</link>
		<pubDate>Fri, 27 Jul 2007 20:41:09 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://1a015737-2d42-48e5-839e-4d1c4f638914</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Lots of meetings today, so my coffee post is late...</p><ul><li>The Big News<sup>tm</sup>: <a href="http://msdn2.microsoft.com/en-us/vstudio/aa700830.aspx">Visual Studio 2008</a> and .NET Framework 3.5 Beta 2 is <a href="http://msdn2.microsoft.com/en-us/vstudio/aa700831.aspx">available for download</a>. <a href="http://blogs.msdn.com/somasegar/archive/2007/07/26/announcing-the-release-of-visual-studio-2008-beta-2-net-fx-3-5-beta-2-and-silverlight-1-0-rc.aspx">Soma</a> and <a href="http://weblogs.asp.net/scottgu/archive/2007/07/26/vs-2008-and-net-3-5-beta-2-released.aspx">Scott</a> have more. Silverlight 1.0 RC and the Silverlight Add-in for VS08 will apparently be available in a couple of days. Finally, there's a go-live license for the framework, so you get a head-start deploying apps before VS08 and NETFX 3.5 RTM. Time to build out a new VPC image.  </li><li>Next week, I'm attending the p&amp;p <a href="http://www.codeplex.com/servicefactory/Wiki/View.aspx?title=CustomizationWorkshop">Service Factory v3 Customization Workshop</a>. I'm looking forward to playing with the <a href="http://blogs.msdn.com/donsmith/archive/2007/04/06/first-service-factory-v3-community-drop.aspx">new Service Factory drop</a>, but I'm really interested in learning more about building factories. I wonder if they're going to discuss their VS08 plans.  </li><li>Nick Malik <a href="http://blogs.msdn.com/nickmalik/archive/2007/07/21/what-you-need-to-make-middle-out-soa-architecture-work.aspx">recently wrote</a> about making "middle out SOA" work. I hate that term "middle-out". It feels like we're pinning our hopes on middle-out because we know top-down and bottom-up don't work. My old boss <a href="http://blogs.msdn.com/jdevados/">John DeVadoss</a> (who assures me he'll be blogging regularly again "soon") big vs. little SOA, with big SOA being "dead". I like the term "little SOA" better than "middle-out SOA", but just because big SOA is a big failure, doesn't mean little SOA will make any headway.  </li><li>There's a new <a href="http://research.microsoft.com/research/downloads/Details/a81e161e-1e4b-42cc-97c2-2ba9b0efba94/Details.aspx">F# drop available</a>. Don Syme <a href="http://blogs.msdn.com/dsyme/archive/2007/07/27/f-1-9-2-7-released.aspx">has the details</a>. Looks like they've got some interesting new constructs for async and parallel programing. </li><li>ABC <a href="http://blogs.abc.com/fepblog/2007/07/hd-streaming-ha.html">announced yesterday</a> that they are streaming HD on <a href="http://dynamic.abc.go.com/streaming/landing">their website</a>. So you can check out the <a href="http://www.lostpedia.com/wiki/Through_the_Looking_Glass">season finale</a> of Lost in HD for free. They embed commercials so it's not really "for free", but you don't have to pay $3 an episode like you do on XBLM. I wonder if XBLM might offer this capability in the future? Certainly would increase my use of XBLM. (as would an all-you-can-eat pricing scheme)</li></ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1014</wp:post_id>
		<wp:post_date>2007-07-27 13:41:09</wp:post_date>
		<wp:post_date_gmt>2007-07-27 20:41:09</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>afternoon-coffee-106</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="morning-coffee"><![CDATA[Morning Coffee]]></category>
		<category domain="post_tag" nicename="soa"><![CDATA[SOA]]></category>
		<category domain="post_tag" nicename="software-factories"><![CDATA[Software Factories]]></category>
		<category domain="post_tag" nicename="television"><![CDATA[Television]]></category>
		<category domain="post_tag" nicename="visual-studio"><![CDATA[Visual Studio]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[1a015737-2d42-48e5-839e-4d1c4f638914]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Afternoon+Coffee+106]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/07/27/Afternoon+Coffee+106]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Is Serendipity the Heart of the WS-*/REST Debate?</title>
		<link>http://devhawk.net/2007/07/31/is-serendipity-the-heart-of-the-ws-rest-debate/</link>
		<pubDate>Tue, 31 Jul 2007 14:34:08 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://6b4d0d87-7244-4a43-9cae-304a5c8a96d3</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Thanks to Technorati, I found <a href="http://johnheintz.blogspot.com/2007/07/integration-forethought-over.html">this post</a> by John Heintz. He's checking out <a href="http://blogs.msdn.com/jevdemon/archive/2007/07/20/soa-in-the-real-world-now-available.aspx">John Evdemon's</a><a href="http://www.microsoft.com/downloads/details.aspx?FamilyID=cb2a8e49-bb3b-49b6-b296-a2dfbbe042d8&amp;displaylang=en">e-book on SOA</a> and has a problem with this overview:</p><blockquote><p>SOA is an architectural approach to creating systems built from autonomous services. With SOA, integration becomes forethought rather than afterthought. This book introduces a set of architectural capabilities, and explores them in subsequent chapters.</p></blockquote><p>To which John H. responds: </p><blockquote><p>I, for one, would rather build on an architecture that promotes integration as an afterthought, so I don't have to think about it before hand!!!</p></blockquote><p>Yeah, I'd rather not have to think about integration before hand either. On the other hand, I want integration that actually works. It sounds like John H. is suggesting here that REST somehow eliminates the need to consider integration up front. It doesn't. Consider this: if you're building a Web 2.0 site then you are <em>expected </em>to expose everything in your site via <a href="http://en.wikipedia.org/wiki/Atom_Publishing_Protocol">APP</a>, RSS and/or RESTful POX services. In other words, the Web 2.0 community expects you to have the forethought to enable integration. If you don't, Marc Canter <a href="http://blog.broadbandmechanics.com/2006/03/bill-and-tim-rap-it-out-i-ask-the-1st-question">will call you out</a> in front of Bill Gates and Tim O'Reilly.   </p><p>This integration by afterthought approach seems to be big among RESTifarians. John H. links to a <a href="http://tech.groups.yahoo.com/group/rest-discuss/message/8873">REST discussion post</a> by Nick Gall advocating the principle of generality, "unexpected reuse" and "design for serendipity". Money quote:  </p><blockquote><p>The Internet and the Web are paradigms of Serendipity-Oriented Architectures. Why? Largely because of their simple generality. It is my belief that generality is one of the major enablers of serendipity. So here I immodestly offer Gall's General Principle of Serendipity: "Just as generality of knowledge is the key to serendipitous discovery, generality of purpose is the key to serendipitous (re)use."</p></blockquote><p>Serendipity means "<a href="http://encarta.msn.com/dictionary_/serendipity.html">the accidental discovery of something pleasant, valuable, or useful</a>". "Serendipitous reuse" sounds an awful lot like <a href="http://devhawk.net/2007/07/25/Now+How+Much+Would+You+Pay+For+This+Code.aspx">accidental reuse</a>. Most enterprises have been there, done that and have nothing to show for their efforts or $$$ except the team t-shirt. Yet <a href="http://en.wikipedia.org/wiki/Tim_Berners-Lee">Tim Berners-Lee</a><a href="http://www.w3.org/2005/Talks/0511-keynote-tbl">believes</a> "Unexpected reuse is the value of the web" and <a href="http://en.wikipedia.org/wiki/Roy_Fielding">Roy Fielding</a><a href="http://tech.groups.yahoo.com/group/rest-discuss/message/8343">tells us to</a> "Engineer for serendipity". What gives?</p><p>First off, enterprises aren't interested in unexpected or serendipitous reuse. They want their reuse to be systematic and predictable. The likelihood of serendipitous reuse is directly related to the number of potential reusers. But the number of potential reusers inside the enterprise is dramatically smaller than out on the public Internet. That brings the chance for serendipitous reuse inside the enterprise to nearly zero. </p><p>Second, enterprise systems aren't exactly known for their "simple generality". If Nick's right that "generality of purpose is the key to serendipitous (re)use", then enterprises might as well give up on serendipitous reuse right now. As I said last year, it's a <a href="http://devhawk.net/2006/09/19/A+Question+Of+Context.aspx">question of context</a>. Context is specifics, the opposite of generality. Different business units have different business practices, different geographies have different laws, different markets have different competitors, etc. If an enterprise operates in multiple contexts - and most do - enterprise solutions have to take them into account. Those different contexts prevent you from building usable - much less reusable - general solutions. </p><p>Finally, I think the amount of serendipitous reuse in REST is overstated. If you build an app on the <a href="http://developers.facebook.com/">Facebook Platform</a>, can you use it on MySpace? Nope. If you build an app that uses the <a href="http://www.flickr.com/services/api/">Flickr services</a>, will it work with <a href="http://code.google.com/apis/picasaweb/overview.html">Picasa Web Albums</a>? Nope. Of course, there are exceptions - pretty much everyone supports the MetaWeblog API - but those exceptions seem few and far between to me. Furthermore, the bits that are getting reused - such as identifier, format and protocol - are infrastructure capabilities more suitable to reuse anyway. Serendipitously reusing infrastructure capabilities is much easier than serendipitously reusing business capabilities, REST or not. </p><p>The problems that stand in the way of reuse aren't technology ones. Furthermore, the reuse problems face by enterprises are very different than ones faced by Web 2.0 companies. REST is a great approach, but it isn't a one-size-fits-all technology solution that magically relegates integration and reuse to "afterthought" status. Serendipity is nice, when it happens. However, <em>by definition</em> it's not something you can depend on. </p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1015</wp:post_id>
		<wp:post_date>2007-07-31 14:34:08</wp:post_date>
		<wp:post_date_gmt>2007-07-31 14:34:08</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>is-serendipity-the-heart-of-the-ws-rest-debate</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="architecture"><![CDATA[Architecture]]></category>
		<category domain="post_tag" nicename="rest"><![CDATA[REST]]></category>
		<category domain="post_tag" nicename="reuse"><![CDATA[Reuse]]></category>
		<category domain="post_tag" nicename="soa"><![CDATA[SOA]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[6b4d0d87-7244-4a43-9cae-304a5c8a96d3]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Is+Serendipity+The+Heart+Of+The+WSREST+Debate]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/07/31/Is+Serendipity+The+Heart+Of+The+WSREST+Debate]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>2555</wp:comment_id>
			<wp:comment_author><![CDATA[Mark Baker]]></wp:comment_author>
			<wp:comment_author_email>distobj@acm.org</wp:comment_author_email>
			<wp:comment_author_url>http://www.markbaker.ca</wp:comment_author_url>
			<wp:comment_author_IP>209.161.202.187</wp:comment_author_IP>
			<wp:comment_date>2007-07-31 20:49:09</wp:comment_date>
			<wp:comment_date_gmt>2007-08-01 03:49:09</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Serendipity derives from commonality; the more our components agree upon before they meet, the more they can accomplish without requiring a software change.

You're right about Facebook and Flickr apps, but keep in mind that all it takes to create this problem is the slightest dependency of one component on anything specific to the implementation of the other.  In the cases of Facebook/Flickr, those dependencies are solely on data.  Had those APIs been WS-* APIs, the disagreement would have been far greater.

Look at it this way; one could consider Googlebot as a client of both Facebook and Flickr, but it has no dependency on any specific implementation detail of either.  It also handles other apps, including those yet to be developed, quite well too.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>2556</wp:comment_id>
			<wp:comment_author><![CDATA[John Heintz]]></wp:comment_author>
			<wp:comment_author_email>john.heintz@newaspects.com</wp:comment_author_email>
			<wp:comment_author_url>http://johnheintz.blogspot.com/2007/08/rest-serendipity-and-hard</wp:comment_author_url>
			<wp:comment_author_IP>70.112.219.249</wp:comment_author_IP>
			<wp:comment_date>2007-08-01 20:18:59</wp:comment_date>
			<wp:comment_date_gmt>2007-08-02 03:18:59</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I've written a reply to your comments.

My main points are:

1. I want my systems building effort to have the highest leverage possible.

2. REST add uniformity constraints to promote loose-coupling and integration.

3. A few more quotes from the book.
]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>2557</wp:comment_id>
			<wp:comment_author><![CDATA[John]]></wp:comment_author>
			<wp:comment_author_email>jevdemon@microsoft.com</wp:comment_author_email>
			<wp:comment_author_url>http://blogs.msdn.com/jevdemon</wp:comment_author_url>
			<wp:comment_author_IP>131.107.0.102</wp:comment_author_IP>
			<wp:comment_date>2007-08-09 16:28:16</wp:comment_date>
			<wp:comment_date_gmt>2007-08-09 23:28:16</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[The book defines SOA as "A loosely-coupled architecture designed to meet the business needs of the organization."  SOA does not necessarily require the use of Web Services or REST – these are, for most organizations, the simplest approach for implementing a loosely coupled solution architecture.   

There is no need for a REST/WS-* debate, simply use the approach best suited to the problem at hand.  The Microsoft Robotics Studio (http://msdn2.microsoft.com/en-us/robotics/default.aspx) illustrates how both can be supported, combining REST with event notifications, relationships between components and more.

"Some architectural styles are often portrayed as 'silver bullet' solutions for all forms of software. However, a good designer should select a style that matches the needs of the particular problem being solved."  - From Roy Fielding's REST dissertation ("Architectural Styles and
the Design of Network-based Software Architectures" - http://www.ics.uci.edu/~fielding/pubs/dissertation/software_arch.htm#sec_1_5)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Service Factory Customization Workshop Day One</title>
		<link>http://devhawk.net/2007/07/31/service-factory-customization-workshop-day-one/</link>
		<pubDate>Tue, 31 Jul 2007 09:26:52 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://a24f5262-97e5-4c4b-b922-b7c9fb2d75ce</guid>
		<description></description>
		<content:encoded><![CDATA[<p>No morning coffee posts for the first half of this week, because I'm <a href="http://www.codeplex.com/servicefactory/Wiki/View.aspx?title=CustomizationWorkshop">in training</a> thru Wednesday. Day one was mostly overview of GAT and DSL, which was review for me. Today we're starting to dig into some of the new stuff they've build for the new version of <a href="http://www.codeplex.com/servicefactory">WSSF</a>, so I'm paying much more attention today. </p><p>This isn't your typical workshop in that the content is sort of being generated on the fly. As I type, we're voting on what we're going to cover for the next two days. Most classes I've been in are pre-programmed, the teacher doesn't ask the class what topics should be covered and what order. There isn't even one "teacher" - there are five folks from p&amp;p including the architect, dev lead and PM of WSSF that are tag-teaming. Even the hands-on labs aren't completely ironed out - they're evolving the lab directions as we do the labs. It's atypical, but it works. </p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1016</wp:post_id>
		<wp:post_date>2007-07-31 09:26:52</wp:post_date>
		<wp:post_date_gmt>2007-07-31 09:26:52</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>service-factory-customization-workshop-day-one</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="domain-specific-languages"><![CDATA[Domain Specific Languages]]></category>
		<category domain="post_tag" nicename="guidance-automation"><![CDATA[Guidance Automation]]></category>
		<category domain="post_tag" nicename="software-factories"><![CDATA[Software Factories]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[a24f5262-97e5-4c4b-b922-b7c9fb2d75ce]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Service+Factory+Customization+Workshop+Day+One]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/07/31/Service+Factory+Customization+Workshop+Day+One]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>(Re)Introducing HawkWiki</title>
		<link>http://devhawk.net/2007/08/01/reintroducing-hawkwiki/</link>
		<pubDate>Wed, 01 Aug 2007 15:56:24 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://42609cca-c597-4a9b-8ae6-d5745154d40c</guid>
		<description></description>
		<content:encoded><![CDATA[<p>In case you didn't know, <a href="http://www.gotdotnet.com/">GotDotNet</a> is shutting down. I recently got an email asking about my very old <a href="http://devhawk.net/prj_wiki.aspx">DevHawk Wiki project</a>, which had been hosted on GDN. I didn't realize anyone was still interested in this project, so I set up a <a href="http://www.codeplex.com/HawkWiki">new project</a> for it on CodePlex. As part of the move, I decided to rebrand it "HawkWiki" and change its license to <a href="http://www.microsoft.com/resources/sharedsource/licensingbasics/sharedsourcelicenses.mspx#EDC">Ms-PL</a>. (CodePlex doesn't support the <a href="http://opensource.org/licenses/zlib-license.php">zlib license</a> DevHawk Wiki was originally released under.)</p><p>I uploaded two versions to the HawkWiki <a href="http://www.codeplex.com/HawkWiki/SourceControl/ListDownloadableCommits.aspx">source repository</a>. The version that until recently was hosted on GDN is <a href="http://www.codeplex.com/HawkWiki/SourceControl/DownloadSourceCode.aspx?changeSetId=2039">version 0.2</a>. There's also <a href="http://www.codeplex.com/HawkWiki/SourceControl/DownloadSourceCode.aspx?changeSetId=2084">later version</a> that I never publicly released before. This later version compiles the wiki markup text into an IHttpHander class, similar to how ASP.NET compiles web pages. I'm not sure if you'd ever really want a wiki built this way, but it does provide a good example for building your own compiled web page infrastructure. If you ever read my old <a href="http://devhawk.net/prj_webskin.aspx">MSDN magazine article</a>, you'd know this is an approach I've been interested in for a long time.</p><p>I also used this project as an excuse to get to know CodePlex. Though CodePlex can integrate directly into VS via <a href="http://www.codeplex.com/CodePlex/Wiki/View.aspx?title=Obtaining%20the%20Team%20Explorer%20Client">Team Explorer</a>, I chose instead to use the <a href="http://www.codeplex.com/CodePlexClient">CodePlex client</a>. CPC provides an edit-merge-commit command-line experience like Subversion. I found it much easier than using Team Explorer, though adding new files was troublesome since they had to be added to the project and source control separately. If you like this approach, there's also a version that works with vanilla TFS instances (CPC is hardwired to CodePlex). </p><p>So feel free to take the wiki code and mangle it to your heart's content. If there's interest, I'd be willing to grant some other folks checkin permission. However, it's more a curiosity than a real project, so if you're really interested in a .NET based wiki, there are <a href="http://www.screwturn.eu/">better</a><a href="http://www.flexwiki.com/">choices</a> out there. </p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1017</wp:post_id>
		<wp:post_date>2007-08-01 15:56:24</wp:post_date>
		<wp:post_date_gmt>2007-08-01 15:56:24</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>reintroducing-hawkwiki</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="hawkwiki"><![CDATA[HawkWiki]]></category>
		<category domain="post_tag" nicename="projects"><![CDATA[Projects]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[42609cca-c597-4a9b-8ae6-d5745154d40c]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[ReIntroducing+HawkWiki]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/08/01/ReIntroducing+HawkWiki]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Service Factory Customization Workshop Day Two</title>
		<link>http://devhawk.net/2007/08/01/service-factory-customization-workshop-day-two/</link>
		<pubDate>Wed, 01 Aug 2007 09:23:53 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://877535d0-8706-450a-9ad5-684db4fc26ac</guid>
		<description></description>
		<content:encoded><![CDATA[<p>As expected, day two of the WSSF customization workshop was much meatier than <a href="http://devhawk.net/2007/07/31/Service+Factory+Customization+Workshop+Day+One.aspx">day one</a>. If you look at the technologies that power these p&amp;p <a href="http://msdn2.microsoft.com/en-us/teamsystem/aa718951.aspx">software factories</a> - <a href="http://msdn2.microsoft.com/en-us/teamsystem/aa718948.aspx">GAT</a> and <a href="http://msdn2.microsoft.com/en-us/teamsystem/aa718368.aspx">DSL</a> - you'll notice that they're not very well integrated. They share a text templating engine and there are <a href="http://msdn2.microsoft.com/en-us/library/aa905334.aspx">some docs</a>, but that's pretty much it. WSSF v3 is the first factory from p&amp;p to heavily use both technologies, and they've had to do significant integration work to make them play nice. </p><p>In the new WSSF, there's a special "model project" where you define data and service contracts independently of an implementation technology. This allows you to postpone your implementation decision as long as possible. For WSSF, this seems pretty pointless - if you're starting a new service project from scratch, why would you build on ASMX instead of WCF? - but conceptually the idea is rock solid. But this requires a variety of cross-model and cross-project code generation and validation. The vanilla DSL toolkit doesn't support that, so the p&amp;p guys had to build it themselves. </p><p>I'd like to see p&amp;p take their GAT/DSL integration work and package it separately from WSSF. As it currently stands, you've got to install GAT &amp; the <a href="http://msdn2.microsoft.com/en-us/vstudio/aa700819.aspx">VS SDK</a> (to get DSLs) plus the integration bits from WSSF. There's also the <a href="http://www.codeplex.com/GEL">GAX Extension Library</a> (aka GEL) plus Clarius' <a href="http://www.softwarefactoriestoolkit.net/">Software Factory Toolkit</a>. How about a single install to get all that stuff guys?</p><p>BTW, there's a <a href="http://blogs.msdn.com/tomholl/archive/2007/07/03/gax-1-3-for-orcas-announced.aspx">new version of GAT</a> coming soon that will support both VS05 and VS08 Beta 2. <a href="http://blogs.msdn.com/vsxteam/archive/2007/07/01/VSX-Community-Letter-for-July-2007.aspx">According to the VSX team</a>, VS08 beta 2 SDK should also be available "early August". So if you're moving over to VS08 (I am), you can still get down and dirty with software factories.</p><p>Update: VS08 SDK for Beta 2 is <a href="http://www.microsoft.com/downloads/details.aspx?FamilyID=d9000e2c-bd3f-4717-a181-723960814e16&amp;displaylang=en">now available</a>. The new version of GAT is <a href="http://blogs.msdn.com/agile/archive/2007/07/19/shipping-gax-1-3.aspx">apparently done</a>, but isn't available for download yet.</p><p>Later Update: GAX/GAT July CTP is <a href="http://blogs.msdn.com/agile/archive/2007/08/02/new-gax-gat-july-2007-released.aspx">now available</a>.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1018</wp:post_id>
		<wp:post_date>2007-08-01 09:23:53</wp:post_date>
		<wp:post_date_gmt>2007-08-01 09:23:53</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>service-factory-customization-workshop-day-two</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[877535d0-8706-450a-9ad5-684db4fc26ac]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Service+Factory+Customization+Workshop+Day+Two]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/08/01/Service+Factory+Customization+Workshop+Day+Two]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Morning Coffee 107</title>
		<link>http://devhawk.net/2007/08/02/morning-coffee-107/</link>
		<pubDate>Thu, 02 Aug 2007 11:25:30 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://ddea2694-9463-41ca-81c7-3a0ee6cb8787</guid>
		<description></description>
		<content:encoded><![CDATA[<ul><li>The last day of the service factory workshop was much like <a href="http://devhawk.net/2007/08/01/Service+Factory+Customization+Workshop+Day+Two.aspx">the second</a>, primarily focusing on stuff p&amp;p built to integrate GAT and DSLs. We also got a briefing in what's coming for factories after VS08 (can't blog about that). We ended with a look at the <a href="http://www.codeplex.com/dept">DSL Editor Power Toy</a>, which provides additional views on a given model and allows you to completely replace the graphical editor with a Windows Forms UserControl. I wonder if you could <a href="http://msdn2.microsoft.com/en-us/library/ms745781.aspx">use ElementHost</a> in order to build a WPF based editor? </li><li>Finished the last Harry Potter book last night. My wife finished it last week but kept quiet about it until I got to the end. No spoilers here, but I wasn't exactly surprised by how it played out. I wonder what J.K. Rowling will write next?  </li><li>As promised, <a href="http://www.microsoft.com/silverlight/installation-win.aspx">Silverlight 1.0 RC</a> and <a href="http://www.microsoft.com/silverlight/installation-win-dev.aspx">Silverlight 1.1 Alpha Refresh</a> were released last week. Also finishing out this beta wave were <a href="http://www.microsoft.com/downloads/details.aspx?FamilyId=B52AEB39-1F10-49A6-85FC-A0A19CAC99AF&amp;displaylang=en">Silverlight 1.1 Alpha Tools for VS08</a> and a <a href="http://www.microsoft.com/expression/products/download.aspx?key=blend2preview">new preview</a> of Expression Blend 2. Scott Hanselman <a href="http://www.hanselman.com/blog/VS2008AndNET35Beta2ReleasesMadeEasy.aspx">has all the details</a> on all the releases. </li><li>In one of his articles on LINQ to SQL, Scott Guthrie <a href="http://weblogs.asp.net/scottgu/archive/2007/06/29/linq-to-sql-part-3-querying-our-database.aspx">mentioned</a> the LINQ to SQL debug visualizer in passing. Now, he <a href="http://weblogs.asp.net/scottgu/archive/2007/07/31/linq-to-sql-debug-visualizer.aspx">drills into that feature</a> in more detail. Apparently, this isn't a built-in feature of VS08 - it has to be <a href="http://www.scottgu.com/blogposts/linqquery/SqlServerQueryVisualizer.zip">installed separately</a>. Make sure you do that, this seems like a must-have extension for LINQ to SQL development. </li><li>Jeff Atwood is <a href="http://www.codinghorror.com/blog/archives/000809.html">worried</a> that he spends more time talking about programming than actually programming. That's exactly why I left evangelism to join MSIT. </li><li>I'm still way behind on blogs, but if I don't post this soon, it's going to be an afternoon coffee. I've also got this day job thing that I've been away from for several days. So more old news tomorrow.</li></ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1019</wp:post_id>
		<wp:post_date>2007-08-02 11:25:30</wp:post_date>
		<wp:post_date_gmt>2007-08-02 11:25:30</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>morning-coffee-107</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="linq"><![CDATA[LINQ]]></category>
		<category domain="category" nicename="morning-coffee"><![CDATA[Morning Coffee]]></category>
		<category domain="post_tag" nicename="silverlight"><![CDATA[Silverlight]]></category>
		<category domain="post_tag" nicename="software-factories"><![CDATA[Software Factories]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[ddea2694-9463-41ca-81c7-3a0ee6cb8787]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Morning+Coffee+107]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/08/02/Morning+Coffee+107]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>2558</wp:comment_id>
			<wp:comment_author><![CDATA[lb]]></wp:comment_author>
			<wp:comment_author_email>leonNOSPAMbambrick@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://secretGeek.net</wp:comment_author_url>
			<wp:comment_author_IP>123.108.80.8</wp:comment_author_IP>
			<wp:comment_date>2007-08-03 21:04:08</wp:comment_date>
			<wp:comment_date_gmt>2007-08-04 04:04:08</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[>wasn't exactly surprised by how it played out

you *weren't* suprised when Ron and Hermione died? 

you must have a heart of stone.

thoroughly enjoyed the book, though ;-)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Where Have All the SOA Mashups Gone?</title>
		<link>http://devhawk.net/2007/08/02/where-have-all-the-soa-mashups-gone/</link>
		<pubDate>Thu, 02 Aug 2007 14:26:27 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://328fb172-dc3a-4fc4-84a8-0ad8634e71ed</guid>
		<description></description>
		<content:encoded><![CDATA[<p>John Heintz <a href="http://johnheintz.blogspot.com/2007/08/rest-serendipity-and-hard-work.html">responded</a> to my <a href="http://devhawk.net/2007/07/31/Is+Serendipity+The+Heart+Of+The+WSREST+Debate.aspx">serendipitous reuse post</a>. Nice to see I misunderstood his opinions about how easy RESTful systems are to integrate:</p><blockquote><p>I didn't mean to imply that building RESTful system would lead to magical integration without any hard work. I can see how that came across in my post, and I guess I got the reaction I asked for ;)</p></blockquote><p>I get the feeling that John would be a good guy to have a beer with. </p><p>John spends most of his post writing about the <a href="http://blogs.msdn.com/jevdemon/archive/2007/07/20/soa-in-the-real-world-now-available.aspx">SOA in the Real World</a> book. I've flipped thru it and I'm familiar with the model (it is my old team after all) but I haven't read it so I don't really want to comment about the book specifically. But there were two things John mentioned that I did want to comment on.</p><p>First, at the end of his post John writes:</p><blockquote><p>Can some of the constraints of REST be applied to SOA? Absolutely. I think an asynchronous, message-passing architecture with a uniform interface would be astoundingly interesting! I'm not the only one: see <a href="http://savas.parastatidis.name/2005/01/29/544a6902-40e1-47e8-a51c-18776f3dd036.aspx">MEST</a>, <a href="http://www.ampq.com/">AMPQ</a>, and <a href="http://www.erlang.org/">Erlang</a>.</p></blockquote><p>This goes back to <a href="http://devhawk.net/2007/06/05/A+REST+Question.aspx">a REST question</a> I asked two months ago: is it still REST if you don't use HTTP? I'm guessing John would say yes. </p><p>I might be going out on a limb here, I'll bet the core of John's problem with SOA is how toolkits like WCF all but force you to build RPC style services that can easily be modeled as <a href="http://msdn2.microsoft.com/en-us/library/system.servicemodel.operationcontractattribute.aspx">method calls</a>. That's certainly one of <em>my</em> problems with SOA. Tim Ewald <a href="http://pluralsight.com/blogs/tewald/archive/2007/04/26/46984.aspx">said it best</a>:</p><blockquote><p>It's depressing to think that SOAP started just about 10 years ago and that now that everything is said and done, we built RPC again. I know SOAP is really an XML messaging protocol, you can do oneway async stuff, etc, etc, but let's face it. The tools make the technology and the tools (and the examples and the advice you get) point at RPC. And we know what the problems with RPC are. If you want to build something that is genuinely loosely-coupled, RPC is a pretty hard path to take.</p></blockquote><p>If SOA == RPC and REST == loosely coupled messages, then I'll start growing dreadlocks right now. Frankly, as Tim says, I think it's a problem with the tools (I'm looking at you WCF) and not the underlying architecture, but how many people can distinguish the architecture from the tools? Not many, I'm afraid.</p><p>Second, John asks an interesting question:</p><blockquote><p>Where are the SOA mashups?</p></blockquote><p>That's easy! They're inside the firewall where you can't see them! ;) </p><p>Seriously, I'm not sure about "SOA" mashups, but I'm working with what you might call a huge "enterprise" mashup system inside Microsoft. Our Enterprise Data Integration Services push around massive amounts of data to downstream systems. There are over fifty datasets in production, each with scores of tables, millions of rows and hundreds of subscribing systems. One example, our Products dataset, has over 100 tables and nearly 300 subscribing systems.  </p><p>Is it "service oriented"? No, but then again it was originally developed ten years ago on SQL 6.5. But is it a mashup? Is it an "<a href="http://en.wikipedia.org/wiki/Mashup_%28web_application_hybrid%29">application that combines content from more than one source into an integrated experience</a>"? Yep. Is it easy to work with? No, but guess why I'm involved? We're looking at ways to "modernize" the system. Am I going to build RPC style services as part of this modernization? Hell, no.  </p><p>So John, am I right or wrong about that beer?</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1020</wp:post_id>
		<wp:post_date>2007-08-02 14:26:27</wp:post_date>
		<wp:post_date_gmt>2007-08-02 14:26:27</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>where-have-all-the-soa-mashups-gone</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="architecture"><![CDATA[Architecture]]></category>
		<category domain="post_tag" nicename="rest"><![CDATA[REST]]></category>
		<category domain="post_tag" nicename="soa"><![CDATA[SOA]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[328fb172-dc3a-4fc4-84a8-0ad8634e71ed]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Where+Have+All+The+SOA+Mashups+Gone]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/08/02/Where+Have+All+The+SOA+Mashups+Gone]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>2559</wp:comment_id>
			<wp:comment_author><![CDATA[Erik Johnson]]></wp:comment_author>
			<wp:comment_author_email>ejohnson@epicor.com</wp:comment_author_email>
			<wp:comment_author_url>http://appside.blogspot.com</wp:comment_author_url>
			<wp:comment_author_IP>65.248.23.250</wp:comment_author_IP>
			<wp:comment_date>2007-08-03 11:08:54</wp:comment_date>
			<wp:comment_date_gmt>2007-08-03 18:08:54</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Those mashups are stuffed into a shoebox along with our web services.  Four years ago, weren't there meant to be *millions* of web services thriving in a new market?  What happened (hint -- it had nothing to do with WS-*)?  

It's one thing to show a mashup, quite another to commercially rely on a mashup, and yet another to profit when mashups use your content.  

Viable, cross-enterprise, commercial mashups have startup with large commodity/service companies like FedEx content embedded in an eCommerce site (where's my stuff?).  But beyond that, it will be vertical applications that are further automating a specific business chain.  I think you'll find web services have submerged similarly to industry-specific applications.
]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Morning Coffee</title>
		<link>http://devhawk.net/2007/08/03/morning-coffee/</link>
		<pubDate>Fri, 03 Aug 2007 18:34:13 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://c92a59c4-4546-44b1-b06e-187d063a2fb6</guid>
		<description></description>
		<content:encoded><![CDATA[<ul><li>Libor Soucek <a href="http://lsblog.wordpress.com/2007/07/30/epilog-on-durable-message-discussion/">continues our conversation</a> about durable messaging. We still don't agree, but he says he "fine" with durable messaging. He does go out of his way to differentiate between *enterprise* and *supporting* systems. But when you're building connected systems, does that differentiation still matter?</li><li>After taking a few months off, <a href="http://blogs.msdn.com/jdevados/">John deVadoss</a> is <a href="http://blogs.msdn.com/jdevados/archive/2007/08.aspx">back at the blog</a>. Check out his <a href="http://blogs.msdn.com/jdevados/archive/2007/08/02/big-soa-little-soa-soa-in-the-real-world.aspx">Big SOA/Little SOA post</a>. I especially like his snowball analogy "How do you build a big snowball? You start with a small snowball.") though he's also on this "middle out" bandwagon. Do we really believe "middle out" works, or are we just saying it because we know top down and bottom up don't? And John: You're welcome!</li><li>Anyone coming to the <a href="http://www.mssoaandbpconference.com/">Microsoft SOA &amp; Business Process Conference</a> this fall? Maybe we can have a shindig / blogger dinner / unconference / something?</li><li>Remus Rusanu <a href="http://blogs.msdn.com/remusrusanu/archive/2007/07/31/dynamic-routing-service.aspx">writes about</a> SSB's dynamic routing. One of the (many) cool things about SSB is that all the addressing is logical, not physical. Routing is what binds logical addresses to physical addresses, and it's extensible. </li><li>Martin Fowler <a href="http://martinfowler.com/bliki/OneLanguage.html">discusses</a> the value of sticking to one language. I agree with his points about large frameworks being as difficult to learn as a new language. I've said for a long time "If you build a framework, build tools to make it easy to use your framework". Language is obviously a core example of a tool. Another interesting point Martin makes is the traditional "intimate relationship" between scripting languages and C, but that the rise of JVM &amp; CLR makes them impossible to ignore. Does the need to play well in a managed environment hinder a C based language like Ruby when compared to a natively managed scripting language like Powershell? Finally, Martin's "jigger of 80 proof ugliness" quote made me laugh. </li><li>Politics 2.0 Watch: EJ Dionne <a href="http://www.washingtonpost.com/wp-dyn/content/article/2007/08/02/AR2007080202023.html">says that</a><a href="http://www.dailykos.com/">DailyKos</a> is doing for Democrats what <a href="http://www.rushlimbaugh.com/">Rush Limbaugh</a> did for Republicans almost twenty years ago: mobilization. Josh Marshall <a href="http://talkingpointsmemo.com/archives/016166.php">points out</a> that "what's happening today is vastly more participatory and distributed...than anything happening back then."</li></ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1021</wp:post_id>
		<wp:post_date>2007-08-03 11:34:13</wp:post_date>
		<wp:post_date_gmt>2007-08-03 18:34:13</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>morning-coffee</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="domain-specific-languages"><![CDATA[Domain Specific Languages]]></category>
		<category domain="category" nicename="morning-coffee"><![CDATA[Morning Coffee]]></category>
		<category domain="post_tag" nicename="service-broker"><![CDATA[Service Broker]]></category>
		<category domain="post_tag" nicename="soa"><![CDATA[SOA]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[c92a59c4-4546-44b1-b06e-187d063a2fb6]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Morning+Coffee]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/08/03/Morning+Coffee]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>2560</wp:comment_id>
			<wp:comment_author><![CDATA[Bryant Likes]]></wp:comment_author>
			<wp:comment_author_email>devhawk@bryantlikes.com</wp:comment_author_email>
			<wp:comment_author_url>http://blogs.sqlxml.org/bryantlikes</wp:comment_author_url>
			<wp:comment_author_IP>69.108.62.86</wp:comment_author_IP>
			<wp:comment_date>2007-08-03 13:10:43</wp:comment_date>
			<wp:comment_date_gmt>2007-08-03 20:10:43</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I'm heading up there for the conference. A dinner sounds like fun. I haven't been to a geek dinner since the WS-Sushi dinner a few years back:

http://blogs.msdn.com/kaevans/archive/2004/04/09/110423.aspx]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>2561</wp:comment_id>
			<wp:comment_author><![CDATA[Erik Johnson]]></wp:comment_author>
			<wp:comment_author_email>ejohnson@epicor.com</wp:comment_author_email>
			<wp:comment_author_url>http://appside.blogspot.com</wp:comment_author_url>
			<wp:comment_author_IP>70.181.194.38</wp:comment_author_IP>
			<wp:comment_date>2007-08-03 15:34:27</wp:comment_date>
			<wp:comment_date_gmt>2007-08-03 22:34:27</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[It looks like I'm coming up as well.  Let me know if a plan comes together.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Quote of the Day</title>
		<link>http://devhawk.net/2007/08/07/quote-of-the-day-2/</link>
		<pubDate>Tue, 07 Aug 2007 12:03:46 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://e8786c59-32e3-41e8-ab28-3ff6032ce92b</guid>
		<description></description>
		<content:encoded><![CDATA[<p>In a discussion on governance in our bi-weekly Integration v-team meeting, Jason Howell made the following tongue-in-cheek suggestion:</p><blockquote><p>"If you have architect in your title, you get a taser."</p></blockquote>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1022</wp:post_id>
		<wp:post_date>2007-08-07 12:03:46</wp:post_date>
		<wp:post_date_gmt>2007-08-07 12:03:46</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>quote-of-the-day-2</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="quote-of-the-day"><![CDATA[Quote of the Day]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[e8786c59-32e3-41e8-ab28-3ff6032ce92b]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Quote+Of+The+Day]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/08/07/Quote+Of+The+Day]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Calling InitImportantThing</title>
		<link>http://devhawk.net/2007/08/08/calling-initimportantthing/</link>
		<pubDate>Wed, 08 Aug 2007 14:10:03 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://388d28fc-03b8-4cb8-a28d-53915fde9250</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Jon Flanders <a href="http://www.masteringbiztalk.com/blogs/jon/PermaLink,guid,fa3c471d-a0f5-4790-a1b7-1fc374df651b.aspx" target="_blank">throws a little vitriol</a> at the WCF team fore their design of the abstract ServiceHostBase class, calling the current design "stupid". Normally, I'm not one to take up for the WCF team. I've spent many an hour banging my head against WCF for different reasons but exactly how Jon describes. However, in this case, the WCF team looks caught between a rock and a hard place, where the rock is correct behavior and the hard place is the way CLR object construction works.</p><p>The crux of Jon's beef is that if you build your own ServiceHost by inheriting from <a href="http://msdn2.microsoft.com/en-us/library/system.servicemodel.servicehostbase.aspx" target="_blank">SeviceHostBase</a>, it's not enough just to override the abstract <a href="http://msdn2.microsoft.com/en-us/library/aa717533.aspx" target="_blank">CreateDescription</a> method. You also have to call the "magic" <a href="http://msdn2.microsoft.com/en-us/library/system.servicemodel.servicehostbase.initializedescription.aspx" target="_blank">InitializeDescription</a> method in your derived class constructor. If you don't, CreateDescription never gets called. CreateDescription returns a <a href="http://msdn2.microsoft.com/en-us/library/system.servicemodel.description.servicedescription.aspx" target="_blank">ServiceDescription</a> instance which is to route messages from the channel layer to the and service layer. Jon writes that "Creating a valid ServiceDescription and returning the list of implemented contracts is essential for making your ServiceHostBase-derived class work." I.e. it's really important. Yet, unless you remember to call InitializeDescription, this "essential" ServiceDescription doesn't get configured correctly. Yep, I see how that might sound stupid.</p><p>But if this design is stupid, what would be a better design? After thinking about this specific problem a while, I'm don't think there is a better design out there. </p><p>The question is, when is<em></em>the right time to set up the service description? Jon called ServiceDescription "essential" to the operation of ServiceHostBase. That implies it should be configured during the construction of a new service host instance. It wouldn't do to have ServiceDescription unconfigured for some period of time between construction and use. What if the ServiceDescription is invalid or the call to CreateDescription throws an exception? Then you'd be in a position where you could create what looks like a valid service host, but it would throw an exception when you tried to use it. You can see why the WCF team would want to avoid that scenario.</p><p>So if you want the service host to have a valid ServiceDescription by the end of construction, what choices do you have? Given that the ServiceDescription depends on derived class data, the <em>only</em> choice is to use a magic method! Here's an example to demonstrate what I mean:</p><pre class="brush: csharp">
public abstract class Base 
{ 
    public Base() 
    { 
    } 

    private string _importantThing; 
    protected abstract string CreateImportantThing(); 

    protected void InitImportantThing() 
    { 
        _importantThing = CreateImportantThing(); 
        if (_importantThing == null) 
            throw new Exception(); 
    } 

    public string ImportantThing  
    {  
        get { return _importantThing; }  
    } 
} 

public class Derived : Base 
{ 
    private object _data; 

    public Derived(DateTime dt) 
    { 
        _data = dt; 
         
    } 

    protected override string CreateImportantThing() 
    { 
        return _data.ToString(); 
    } 
}
</pre><p>I've tried to distill out the relevant parts of ServiceHostBase. In the example, Base stores some important thing that gets created by the derived class based on data that's passed into the derived class's constructor. Remember, we want the class to be fully configured by the end of the constructor. If CreateImportantThing throws an exception or returns null, we want to know about it right away when the object is created.</p><p>In the code above, the magic method InitImportantThing never gets called and thus the _importantThing field never gets setup. This roughly corresponds to Jon's scenario where he didn't know to call InitalizeDescription. And like WCF, we can make this sample work by inserting a call to InitImportantThing at the end of Derived's constructor.</p><p>You might be tempted to put the call to InitImportantThing in Base's constructor. But that won't work because Base's constructor runs before Derived's constructor does. Thus, Derived's _data field will still be null and the call to CreateImportantThing throws a null reference exception. </p><p>The final option would be to place the a call to InitImportantThing in ImportantThing's property get method, if _importantThing is null. This defers construction of _importantThing until the first time it's used. By this time, the derived class constructor will have run and so the derived class data will be available for use. This eliminates the magic method call, but it means we don't know if the instance is valid until we go to use it - i.e. the scenario we were expressly trying to avoid.</p><p>So basically, the looks like the WCF team had two choices:</p><ol><li>Err on the side of caution and require calling InitializeDescription in the ServiceHostBase derived class's constructor.  </li><li>Err on the side of easy extensibility and call InitializeDescription the first time the ServiceDescription.</li></ol><p>Put that way, what the WCF team ended up doing doesn't seem so stupid. This is especially true when you consider that the vast majority of people aren't creating their own service hosts anyway. It would have been possible to do both: explicitly call InitializeDescription in ServiceHost's constructor but also have an implicit call in ServiceDescription property get if the field was null. But I'm not on the product team, so I don't know what other tradeoffs that implies. Checking for a null reference seems like no big deal, but I don't know how often this property gets called.</p><p>One other point: even though I don't think this design is stupid, I agree 100% with Jon that the exception is misleading.The way it's written, the immediate assumption is that your implementation of CreateDescription is bad, not that you forgot to call InitializeDescription. It turns out that ServiceHostBase is already tracking wether InitializeDescription has been called via the <a href="code://System.ServiceModel:3.0.0.0:b77a5c561934e089/System.ServiceModel.ServiceHostBase/initializeDescriptionHasFinished:Boolean" target="_blank">initializeDescriptionHasFinished</a> field. So why can't it throw an exception like "Dude, you forgot to call InitializeDescription" when that field is false? It wouldn't make the design any cleaner, but it would have saved Jon hours of digging thru the implementation of ServiceHost and ServiceHostBase in Reflector.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1023</wp:post_id>
		<wp:post_date>2007-08-08 14:10:03</wp:post_date>
		<wp:post_date_gmt>2007-08-08 14:10:03</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>calling-initimportantthing</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[388d28fc-03b8-4cb8-a28d-53915fde9250]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Calling+InitImportantThing]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/08/08/Calling+InitImportantThing]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>2562</wp:comment_id>
			<wp:comment_author><![CDATA[Thomas Eyde]]></wp:comment_author>
			<wp:comment_author_email>thomas.eyde@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>195.0.195.197</wp:comment_author_IP>
			<wp:comment_date>2007-08-09 10:23:55</wp:comment_date>
			<wp:comment_date_gmt>2007-08-09 17:23:55</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Here's a way to initialize last in the constructor:

namespace SnippetsFromBlogs.InitializeInConstructor
{
    [TestFixture]
    public class ClassTests
    {
        [Test]
        public void InitializeLastInContructor()
        {
            Base b = new Base(new Implementation(DateTime.Today));
            Assert.IsNotNull(b.ImportantThing);
        }

        [Test, ExpectedException(typeof (Exception))]
        public void FailFastOnMissingConstructorInitializing()
        {
            new Base(new FlawedImplementation());
        }
    }

    internal class Base
    {
        private string _importantThing;

        public Base(IInitializer implementation)
        {
            // Do initial setup
            InitImportantThing(implementation);
        }

        private void InitImportantThing(IInitializer implementation)
        {
            _importantThing = implementation.CreateImportantThing();
            if (_importantThing == null)
                throw new Exception();
        }

        public string ImportantThing
        {
            get { return _importantThing; }
        }
    }

    internal class Implementation : IInitializer
    {
        private readonly object _data;

        public Implementation(DateTime dt)
        {
            _data = dt;
        }

        public string CreateImportantThing()
        {
            return _data.ToString();
        }
    }

    internal class FlawedImplementation : IInitializer
    {
        public string CreateImportantThing()
        {
            return null;
        }
    }

    internal interface IInitializer
    {
        string CreateImportantThing();
    }
}]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>2563</wp:comment_id>
			<wp:comment_author><![CDATA[DevHawk]]></wp:comment_author>
			<wp:comment_author_email>harry@devhawk.net</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>131.107.0.102</wp:comment_author_IP>
			<wp:comment_date>2007-08-09 13:56:45</wp:comment_date>
			<wp:comment_date_gmt>2007-08-09 20:56:45</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thomas, that's an interesting implementation. However, this works because your implementation class doesn't inherit from the base class. Removing that restriction makes solving the problem fairly straightforward. 

Plus, the way you built this makes constructing a your constructor fairly cumbersome. I'm sure the WCF team wouldn't want to force all developers to construct two objects every time they need to create a service host.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Morning Coffee 109</title>
		<link>http://devhawk.net/2007/08/08/morning-coffee-109/</link>
		<pubDate>Wed, 08 Aug 2007 17:15:29 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://0872dc33-9cd5-4cec-a54c-eb3e71784f6b</guid>
		<description></description>
		<content:encoded><![CDATA[<ul><li>I forgot to add a number to my <a href="http://devhawk.net/2007/08/03/Morning+Coffee.aspx">last morning coffee post</a>. However, after extensive research, I have determined that it was #108. So thing are continuing as usual today with #109. On the other hand, do you really want development and architecture opinions from a guy who can barely count? :)</li><li>The finalists in the <a href="http://www.dreambuildplay.com/">Dream-Build-Play contest</a><a href="http://blogs.msdn.com/xna/archive/2007/08/03/dream-build-play-finalists-announced.aspx">have been announced</a>. I haven't played any of them yet (some are <a href="http://swampthingtom.blogspot.com/2007/08/congrats-to-dbp-winners.html">available for download</a>) but they several of them sure look good. </li><li>And speaking of gaming, MS <a href="http://gamerscoreblog.com/team/archive/2007/08/06/PriceDropAug8FP.aspx">announced</a> an Xbox 360 price drop yesterday. So if you want to get in on some of the XNA action, here's your chance (or you could just build for your PC - take your pick).</li><li>Finally on the gaming front, if you're not busy Monday you can <a href="http://feeds.feedburner.com/~r/LetsKillDave/~3/141730154/gamefest-webcasts-keynote-plus-first-day-of-xna-game-studio-track.aspx">watch the first day</a> of <a href="http://www.xnagamefest.com/">Gamefest 2007</a> online. Get the scoop on XNA 2.0 as well as the new XNA networking support. I, alas, am busy Monday so I'll have to catch it on demand.</li><li>On to, you know, actual geek stuff things. Scott Guthrie seems to have retired his LINQ to SQL series and <a href="http://weblogs.asp.net/scottgu/archive/2007/08/07/using-linq-to-xml-and-how-to-build-a-custom-rss-feed-reader-with-it.aspx">moved on</a> to LINQ to XML. He shows how to build an RSS reader application with LINQ to XML. An oldie demo, but a goodie.</li><li>Wanna learn F#, there's a <a href="http://www.codeplex.com/fsharpsamples">whole site of samples</a> up on CodePlex. (via <a href="http://blogs.msdn.com/dsyme/archive/2007/08/03/new-codeplex-project-f-programming-samples.aspx">Don Syme</a>)</li><li>Jeff Atwood is annoyed at how many different products you have to install to get a current &amp; complete setup of VS 2005. Of course, MS shipped two parts of that stack since VS05 shipped (TFS &amp; DBPro), three service packs (VS05 SP1, SQL 05 SP2 and DBPro SR1) and a major OS upgrade (VS Vista update). Doesn't the same thing happen with any shipping product after a few years? BTW, if this is such a huge hassle, I wonder why Jeff doesn't create a <a href="http://blogs.msdn.com/heaths/archive/2006/12/16/slipstreaming-visual-studio-2005-service-pack-1.aspx">slipstreamed VS installer</a>?</li><li>Udi Dahan has a <a href="http://udidahan.weblogs.us/2007/08/06/dont-trust-developers-with-project-management/">great post on estimation</a> where he claims "Developers don’t know how to estimate." No argument, but the way he phrases it sounds like it's the developer's fault they suck at estimation. It's not. Developing - by definition - is building something you've never built before. Is it any surprise we suck at estimating how long it will take us to do something we've never done before? </li></ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1024</wp:post_id>
		<wp:post_date>2007-08-08 10:15:29</wp:post_date>
		<wp:post_date_gmt>2007-08-08 17:15:29</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>morning-coffee-109</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="f-sharp"><![CDATA[F#]]></category>
		<category domain="post_tag" nicename="linq"><![CDATA[LINQ]]></category>
		<category domain="category" nicename="morning-coffee"><![CDATA[Morning Coffee]]></category>
		<category domain="post_tag" nicename="visual-studio"><![CDATA[Visual Studio]]></category>
		<category domain="post_tag" nicename="xbox-360"><![CDATA[Xbox 360]]></category>
		<category domain="post_tag" nicename="xna"><![CDATA[XNA]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[0872dc33-9cd5-4cec-a54c-eb3e71784f6b]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Morning+Coffee+109]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/08/08/Morning+Coffee+109]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>2564</wp:comment_id>
			<wp:comment_author><![CDATA[ScottGu]]></wp:comment_author>
			<wp:comment_author_email>scottgu@microsoft.com</wp:comment_author_email>
			<wp:comment_author_url>http://weblogs.asp.net/scottgu</wp:comment_author_url>
			<wp:comment_author_IP>131.107.0.102</wp:comment_author_IP>
			<wp:comment_date>2007-08-08 11:34:37</wp:comment_date>
			<wp:comment_date_gmt>2007-08-08 18:34:37</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Don't worry - my LINQ to SQL series isn't over.  Another one will be coming soon.... ;-)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Another InitImportantThing Approach</title>
		<link>http://devhawk.net/2007/08/09/another-initimportantthing-approach/</link>
		<pubDate>Thu, 09 Aug 2007 12:49:23 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://f2250067-7970-401a-8ff2-93de2fba58f6</guid>
		<description></description>
		<content:encoded><![CDATA[<p>I thought of another approach to the InitImportantThing problem that I <a href="http://devhawk.net/2007/08/08/Calling+InitImportantThing.aspx" target="_blank">blogged about yesterday</a>. I think it's a bit harder to code, but it's certainly explicit and avoids the magic method that Jon <a href="http://www.masteringbiztalk.com/blogs/jon/PermaLink,guid,fa3c471d-a0f5-4790-a1b7-1fc374df651b.aspx" target="_blank">dislikes so much</a>.</p><p>The crux of the problem is that ServiceHostBase needs a valid ServiceDescription in order to operate. The WCF team chose to provide said description to ServiceHostBase via the abstract CreateDescription method. But as we saw, ServiceHostBase can't call CreateDescription from it's own constructor. So instead, derived classes are forced to call InitializeDescription in their own constructor. Since that call isn't enforced by the compiler, it's easy to forget to include it. Since the exception that gets thrown doesn't really tell you what went wrong, it's easy to spend hours trying to figure it out.</p><p>So here's a better approach: since the ServiceHostBase needs a valid ServiceDescription in order to operate, why not pass it in as a constructor parameter? </p><p>ServiceHostBase has a protected constructor with no parameters. But since it needs you to call InitializeDescription in your derived class constructor, it really needs the ServiceDescription, a collection of ContractDescriptions (also returned from CreateDescription) and a collection of base addresses (passed into InitalizeDescription). If these were parameters on ServiceHostBase's constructor, it could validate that information directly, without needing abstract or magic methods.</p><p>The one problem with this approach is that the creation of a ServiceDescription is non-trivial. ServiceHost's <a href="code://System.ServiceModel:3.0.0.0:b77a5c561934e089/System.ServiceModel.ServiceHost/CreateDescription(System.Collections.Generic.IDictionary&lt;String,System.ServiceModel.Description.ContractDescription&gt;&amp;):System.ServiceModel.Description.ServiceDescription" target="_blank">implementation of CreateDescription</a> generates the ServiceDescription by reflecting over the service type. You still need that code, but now you would call it from the base constructor initializer instead. That means it has to be a static method, but otherwise it would work just fine. Here's yesterday's code, updated for this approach:</p><pre class="brush: csharp">
public abstract class Base 
{ 
    public Base(string importantThing) 
    { 
        if (string.IsNullOrEmpty(importantThing)) 
            throw new Exception(); 

        _importantThing = importantThing; 

    } 

    private string _importantThing; 

    public string ImportantThing  
    {  
        get { return _importantThing; }  
    } 
} 

public class Derived : Base 
{ 
    private object _data; 

    public Derived(DateTime dt) : base(CreateImportantThing(dt)) 
    { 
        _data = dt; 
    } 

    private static string CreateImportantThing(DateTime dt) 
    { 
        //this is obviously trivial, but could be much
        //more complicated if need be
        return dt.ToLongDateString(); 
    } 
}
</pre><p>This seems like the best approach to me. You remove the un-obvious magic method call requirement when deriving your own service host while still enforcing the data consistency check in the base class during construction. Best of both worlds, right?</p><p>So I wonder why the WCF team didn't do it this way?  </p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1025</wp:post_id>
		<wp:post_date>2007-08-09 12:49:23</wp:post_date>
		<wp:post_date_gmt>2007-08-09 12:49:23</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>another-initimportantthing-approach</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="c-sharp"><![CDATA[C#]]></category>
		<category domain="post_tag" nicename="object-oriented"><![CDATA[Object Oriented]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<category domain="post_tag" nicename="wcf"><![CDATA[WCF]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[f2250067-7970-401a-8ff2-93de2fba58f6]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Another+InitImportantThing+Approach]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/08/09/Another+InitImportantThing+Approach]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>2565</wp:comment_id>
			<wp:comment_author><![CDATA[John P]]></wp:comment_author>
			<wp:comment_author_email>jperseo@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>72.245.126.230</wp:comment_author_IP>
			<wp:comment_date>2007-08-09 14:12:26</wp:comment_date>
			<wp:comment_date_gmt>2007-08-09 21:12:26</wp:comment_date_gmt>
			<wp:comment_content><![CDATA["Since the ServiceHostBase needs a valid ServiceDescription in order to operate, why not pass it in as a constructor parameter? "

< Sarchasm >
You aren't suggesting that programmers should fully initialize their ImportantThings are you ? That's almost as silly as initializing variables in an old C or C++ compiler so when they're first read, Random data isn't already residing in the called memory location!
< /Sarchasm >

You approach can work as long as your have programmer that are willing to craft and modify code VS most of the current script monkeys I've dealt with who expect the compilers to do everything but collect their checks for them.
What I mean by this is : Bad code exists for good things. Copying bad code and modifying it slightly to fit your needs tends to carry the problems instead of offering desired solutions.

Lasyness is a good approach for System Administrators who's job is to keep Networks and PCs operating in an operational state ( Because by being lazy , they want to perform as little work as possible. Thusly, for that to happen, They need to measure and set the requirements and impliment the solutions so it only needs to be performed once. ). This is not applicable to programmers who's job is to properly bind and create code. Now, I'm not implying that programmers should re-invent the wheel every time, But at least look and see if all items brought into a program are required and secured to avoid Miss Takes. ;-)

Then again, my programming is a little rusty.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>2566</wp:comment_id>
			<wp:comment_author><![CDATA[DevHawk]]></wp:comment_author>
			<wp:comment_author_email>harry@devhawk.net</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>131.107.0.102</wp:comment_author_IP>
			<wp:comment_date>2007-08-09 17:03:28</wp:comment_date>
			<wp:comment_date_gmt>2007-08-10 00:03:28</wp:comment_date_gmt>
			<wp:comment_content><![CDATA["Copying bad code and modifying it slightly to fit your needs tends to carry the problems instead of offering desired solutions." 

I don't know for sure, but I'd bet that's probably how the ServiceHostBase design got broken in the first place! ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>2567</wp:comment_id>
			<wp:comment_author><![CDATA[John P]]></wp:comment_author>
			<wp:comment_author_email>jperseo@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>68.98.131.68</wp:comment_author_IP>
			<wp:comment_date>2007-08-09 17:07:45</wp:comment_date>
			<wp:comment_date_gmt>2007-08-10 00:07:45</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[So, does this mean that we have put the final nail in the coffin for "Portable , Reusable Code" ? I think not but then again ...

These ARE NOT the droids we're looking for ...]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Fantasy, Free Code and the SharePoint Model</title>
		<link>http://devhawk.net/2007/08/09/fantasy-free-code-and-the-sharepoint-model/</link>
		<pubDate>Thu, 09 Aug 2007 16:53:35 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://b8a95052-7133-4b22-8058-5dfd6d931fcc</guid>
		<description></description>
		<content:encoded><![CDATA[<p>It might sounds like a fantasy, but Nick Malik really wants free code. He started <a href="http://blogs.msdn.com/nickmalik/archive/2007/06/19/not-crazy-just-lateral-thinking.aspx" target="_blank">talking about it</a> a few months ago when he was <strike>getting raked over the coals by</strike> debating Mort with the agile .NET community:</p><blockquote><p>Rather than look at "making code maintainable," what if we look at <u>making code free</u>.  Why do we need to maintain code?  Because code is expensive to write.  Therefore, it is currently cheaper to fix it than rewrite it.  On the other hand, what if code were cheap, or free?  What if it were cheaper to write it than maintain it?  Then we would never maintain it.  We'd write it from scratch every time.  </p></blockquote><p>Then about a week ago, <a href="http://blogs.msdn.com/nickmalik/archive/2007/07/30/free-code-getting-it-out-of-the-applications-business.aspx" target="_blank">he laid out the reasons</a> why free code would be a good thing. At a high level (Nick's blog has the details), those reasons are:  </p><ol><li>Lower the cost of IT through reduced skill requirements.  </li><li>The speed of development goes up.  </li><li>Projects become more agile.  </li><li>Solution quality goes up.  </li></ol><p>Talking about the benefits of free code is sorta like talking about talking about the benefits of dating a movie star. The benefits are actually pretty obvious, but talking about them doesn't really help you get there from here. </p><p>Actually, Nick isn't suggesting that all code can be free. He's focused on separating out business process modeling/development from the rest of software development. In essence, he's describing a new class of developer (should we call the persona Nick as an homage?) who needs their own class of tools and for the IT department to "formally" allow them to "easily develop, test, and deploy [aka host] their processes." For the most part, these BP developers wouldn't be traditional developers. They'd be more like software analysts who do the work directly instead of writing specs for developers.</p><p>I call this separation of business and IT concerns the SharePoint Model. <a href="http://www.microsoft.com/sharepoint/default.mspx" target="_blank">SharePoint</a>, IMO, does an amazing job of separating the concerns and needs of business and IT users when it comes to running intranet web sites. Only the truly geeky stuff that requires specialized access, knowledge or equipment - installing the SharePoint farm in the first place, keeping it backed up, installing service packs, etc. - is done by IT. Everything else is done by the business folks. Need a new site? Provision it yourself. Need to give your v-team members access to it? Do it yourself. I see similarities in the free BP code approach Nick's suggesting. I'd even argue that SharePoint is the natural "host" for such business processes. It already <a href="http://msdn2.microsoft.com/en-us/library/ms414613.aspx" target="_blank">supports WF</a> and can provide access to back-end enterprise data via the <a href="http://msdn2.microsoft.com/en-us/library/ms563661.aspx" target="_blank">Business Data Catalog</a>. </p><p>On the other hand, some of what Nick suggests seems fairly impractical. For example, he thinks IT should "formally and officially take control of managing the common enterprise information model and the business event ontology." First off, who officially manages this today? Does such an official information model or event ontology even exist? I'm guessing not. That means you've got to start by getting the business people to agree on one. That's usually a sucker's bet. Nick also suggests we "reduce the <a href="http://www.joelonsoftware.com/articles/LeakyAbstractions.html" target="_blank">leaky abstractions</a>" in our services. To suggest this is even possible seems incredibly naive. </p><p>The good news is the things that will work (evolving BP into its own development discipline, building custom tools for BP development, getting IT into the BP hosting business) don't depend in any way on the things that wont work (getting lots of folks to agree on anything, <strike>breaking the laws of physics</strike>, overcoming the law of leaky abstractions). I'm not sure it will result it truly free code, but it sure would bring the costs down dramatically. Thus, I think most of Nick's free code vision is quite practical and not a fantasy at all. </p><p>As for dating a movie star, you're on your own.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1026</wp:post_id>
		<wp:post_date>2007-08-09 16:53:35</wp:post_date>
		<wp:post_date_gmt>2007-08-09 16:53:35</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>fantasy-free-code-and-the-sharepoint-model</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="business-process-management"><![CDATA[Business Process Management]]></category>
		<category domain="category" nicename="development"><![CDATA[Development]]></category>
		<category domain="post_tag" nicename="sharepoint"><![CDATA[SharePoint]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[b8a95052-7133-4b22-8058-5dfd6d931fcc]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Fantasy+Free+Code+And+The+SharePoint+Model]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/08/09/Fantasy+Free+Code+And+The+SharePoint+Model]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Retire the Tenets</title>
		<link>http://devhawk.net/2007/08/13/retire-the-tenets/</link>
		<pubDate>Mon, 13 Aug 2007 17:08:12 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://16c1b1f6-0620-4b18-af29-28ddd5a87877</guid>
		<description></description>
		<content:encoded><![CDATA[<p>John Heintz and I <a href="http://johnheintz.blogspot.com/2007/08/soa-integration-rpc-and-constraints.html">continue to be</a> in mostly violent agreement. It's kinda like me saying "You da architect! Look at my massive scale EAI Mashup!" and having him respond "No, you da architect! The SOA tenets drive me bonkers!" Makes you wonder what would happen after a few beers. What's the architect version of <a href="http://en.wikipedia.org/wiki/Miller_Lite#Advertising">Tastes Great, Less Filling</a>? [1]</p><p>Speaking of <a href="http://msdn.microsoft.com/msdnmag/issues/04/01/Indigo/default.aspx#S1">the tenets</a>, John gives them a good shredding:</p><blockquote><p>Tenet 1: Boundaries are Explicit<br />(Sure, but isn't everything? Ok, so SQL based integration strategies don't fall into this category. How do I build a good boundary? What will version better? What has a lower barrier to mashup/integration?)</p><p>Tenet 2: Services are Autonomous<br />(Right. This is a great goal, but provides no guidance or boundaries to achieve it.)</p><p><strong>Tenet 3: Services share schema and contract, not class</strong><br />(So do all of my OO programs with interface and classes. What is different from OO design that makes SOA something else?)</p><p>Tenet 4: Service compatibility is based upon policy<br />(This is a good start: the types and scope of policy can shape an architecture. The policies are the constraints in a system. There not really defined though, just a statement that they should be there.)</p><p>Ah, I feel better getting that out.</p></blockquote><p>As John points out, the four tenets aren't particularly useful as guidance. They're too high level (like <a href="http://www.nps.gov/mora/">Mt. Rainier</a> high) to be really actionable. They're like knowing a pattern's name but not understanding how and when to use the actual pattern. However, I don't think the tenets were ever intended to be guidance. Instead, they were used to shift the conversation on how to build distributed applications just as Microsoft was introducing the new distributed application stack @ PDC03.</p><p>John's response to the first tenet makes it sound like having explicit boundaries is obvious. And today, maybe it is. But back in 2003, mainstream platforms typically used a <a href="http://en.wikipedia.org/wiki/Distributed_objects">distributed object</a> approach to building distributed apps. Distributed objects were widely implemented and fairly well understood. You created an object like normal, but the underlying platform would create the actual object on a remote machine. You'd call functions on your local proxy and the platform would marshal the call across the network to the real object. The network hop would still be there, but the platform abstracted away the mechanics of making it. Examples of distributed object platforms include CORBA via <a href="http://en.wikipedia.org/wiki/Interoperable_Object_Reference">IOR</a>, Java <a href="http://en.wikipedia.org/wiki/Java_remote_method_invocation">RMI</a>, COM via <a href="http://en.wikipedia.org/wiki/Distributed_Component_Object_Model">DCOM</a> and .NET <a href="http://en.wikipedia.org/wiki/.Net_Remoting">Remoting</a>.</p><p>The (now well documented and understood) problem with this approach is that distributed objects can't be designed like other objects. For performance reasons, distributed objects have to have what Martin Fowler <a href="http://www.ddj.com/architect/184414966">called</a> a "coarse-grained interface", a design which sacrifices flexibility and extensibility in return for minimizing the number of cross-network calls. Because the network overhead can't be abstracted away, distributed objects are a very <a href="http://www.joelonsoftware.com/articles/LeakyAbstractions.html">leaky abstraction</a>. </p><p>So in 2003, Indigo folks came along and basically said "You know the distributed object paradigm? The one we've been shipping in our platform since <a href="http://en.wikipedia.org/wiki/NT4">1996</a>? Yeah, turns out we think that's the wrong approach." Go back and check out <a href="http://www.theserverside.net/tt/talks/videos/DonBox/interview.tss?bandwidth=56k">this interview</a> with Don Box from early 2004. The interviewer asks Don if WCF will "declare the death of distributed objects". Don hems and haws at first, saying "that's probably too strong of a statement" but then later says that the "contract, protocol, messaging oriented style will win out" over distributed objects because of natural selection. </p><p>The tenets, IMHO, were really designed to help the Windows developer community wrap their heads around some of the implications of messaging and service orientation. These ideas weren't really new - the four tenets apply to <a href="http://en.wikipedia.org/wiki/Electronic_Data_Interchange">EDI</a>, which has been around for decades. But for a generation of Windows developers who had cut their teeth on DCOM, MTS and VB, it was a significant paradigm shift. </p><p>These days, with the tenets going on four years old, the conversation has shifted. Platform vendors are falling over themselves to ship service/messaging stacks like WCF and most developers are looking to these stacks for the next systems they build. Did the tenets do that? In part, I think. Mainstream adoption of RSS was probably the single biggest driver of this paradigm shift, but the tenets certainly helped. Either way, now that service orientation is mainstream, I would say that the tenets' job is done and it's time to retire them. Once you accept the service-oriented paradigm, what further guidance do the tenets provide? Not much, if any. </p><p></p><hr /><p></p><p>[1] Not that you would catch me drinking Miller Lite. Ever. </p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1027</wp:post_id>
		<wp:post_date>2007-08-13 17:08:12</wp:post_date>
		<wp:post_date_gmt>2007-08-13 17:08:12</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>retire-the-tenets</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="architecture"><![CDATA[Architecture]]></category>
		<category domain="post_tag" nicename="object-oriented"><![CDATA[Object Oriented]]></category>
		<category domain="post_tag" nicename="soa"><![CDATA[SOA]]></category>
		<category domain="post_tag" nicename="wcf"><![CDATA[WCF]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[16c1b1f6-0620-4b18-af29-28ddd5a87877]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Retire+The+Tenets]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/08/14/Retire+The+Tenets]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>2568</wp:comment_id>
			<wp:comment_author><![CDATA[David Ing]]></wp:comment_author>
			<wp:comment_author_email>david.ing@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.from9till2.com</wp:comment_author_url>
			<wp:comment_author_IP>86.144.79.95</wp:comment_author_IP>
			<wp:comment_date>2007-08-14 03:35:48</wp:comment_date>
			<wp:comment_date_gmt>2007-08-14 10:35:48</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[
http://www.from9till2.com/PermaLink.aspx?guid=2354684e-5c70-4e69-b711-5097be3b57af

Welcome to the builder's club, we've got jackets...]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>2569</wp:comment_id>
			<wp:comment_author><![CDATA[Hartmut Wilms]]></wp:comment_author>
			<wp:comment_author_email>hartmut.wilms@innoq.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.innoq.com/blog/hw/</wp:comment_author_url>
			<wp:comment_author_IP>80.133.21.10</wp:comment_author_IP>
			<wp:comment_date>2007-08-14 11:59:18</wp:comment_date>
			<wp:comment_date_gmt>2007-08-14 18:59:18</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[http://www.innoq.com/blog/hw/2007/08/14/retire_the_tenets.html

There are better ways of expressing what SO is all about, but the tenets are a start. I agree with some of your statements, but "service orientation is mainstream" isn't among them. "Boundaries are explicit is obvious." To whom? I thing that we (meaning all of us) still have a long way to go. ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Hawkeye on Office Communicator 2007</title>
		<link>http://devhawk.net/2007/08/15/hawkeye-on-office-communicator-2007/</link>
		<pubDate>Wed, 15 Aug 2007 09:43:38 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://247ebae7-911e-4bee-aaff-12aeb1be5669</guid>
		<description></description>
		<content:encoded><![CDATA[<p>I've been running <a href="http://office.microsoft.com/en-us/communicator/HA102037151033.aspx" target="_blank">Office Communicator 2007</a> (aka OC07) and the <a href="https://polycom.centercode.com/callout/default.html?callid=DF8E7030197849A39746014B5BB00670" target="_blank">Polycom CX200 phone</a> for a couple of weeks now. Here are a few thoughts on the experience.</p><ul><li><u><strong>Multiple Points of Presence</strong></u>. I've got OC07 installed on both my desktop and laptop. Unlike <a href="http://get.live.com/messenger/overview" target="_blank">WL Messenger</a> with it's "you've signed in on another machine" messages, OC07 happily lets me log in both places. If I get an IM, it pops up on both screens. If my phone rings, I can answer it on either machine.  </li><li><strong><u>Simultaneous Ring</u></strong>: When I get a call, both my machines and my mobile phone ring. I can answer in whatever place I want. For the most part, people know my mobile phone number, so I'll need to get out the word to call my work number instead. (First step: re-program my work number in my wife's phone.) I can also choose to forward my work calls directly to my mobile phone, though I tend to be better about checking work voice mail so I doubt I'll use that feature.  </li><li><strong><u>Outlook Integration</u></strong>: The <a href="http://office.microsoft.com/en-us/communicator/HA102027031033.aspx" target="_blank">previous version of OC</a> had PBX system integration and Outlook. So you could call someone simply by right clicking on their name in Outlook, OC would talk to your PBX system to place the call. Unfortunately, when we moved offices we also got new IP phones that didn't integrate with OC05. Now that I'm on OC07, my computer <em>is</em> my phone and all the Outlook integration works again.  </li><li><strong><u>Status Indicator on the Phone</u></strong>: It's minor, but the USB handset has the OC logo that lights up the same as your status. If you're available, the logo is green. Busy? The logo is red. Do Not Disturb? Logo flashes red. Nice touch.  </li><li><strong><u>Missed Conversations</u></strong>: The other day when I was in training, a colleague IMed me but I was away from my desk and my laptop was turned off. The IM conversation ended up in my inbox like an email. Doesn't help for "You there?" IMs, but when he realized I wasn't there, he just wrote the information he wanted me to know and I got it the next time I logged in.  </li><li><strong><u>No Clock</u></strong>: A very minor sticking point, but the old phone system had a clock on the phone so you could easily see what time it is, even if your machine is locked. The USB handset doesn't have a clock and I miss it. Not nearly enough to go back to my old phone, but enough that I'm going to go buy a little desk clock.  </li><li><strong><u>No Keypad</u></strong>: I didn't miss it right off the bat, but the lack of a keypad is a hassle. If I have to look a phone number up, having the ability to place the call inside of Outlook is slick. If I know the number off the top of my head (home, wife's cell phone, helpdesk) then having to type it into Communicator is a pain. Also, if you're calling one of those automated systems, keying the numbers on the software keypad is a real hassle.  </li><li><strong><u>IM to Phone</u></strong>: Since I have to look my wife up in Communicator to call her anyway, I can shoot her an IM before  call her. The kids nap in the afternoon, so if I catch her online, it avoids a potentially waking ring.  </li><li><strong><u>Extra Speaker</u></strong>: When you set up the USB phone, it sets itself up as the default speaker. That's typically not what you want, but it's easy enough to change in the sound control panel. However, when my earphones broke and I found myself sans audio, I changed it back until I could get new earphones. The only problem with this approach is that in a cube environment (like I work in), the noise from the phone speaker is a bit loud. You can pick up the receiver and listen that way without bugging your neighbors, but after about 20 seconds, it reverts back to speaker phone for no apparent reason.</li></ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1028</wp:post_id>
		<wp:post_date>2007-08-15 09:43:38</wp:post_date>
		<wp:post_date_gmt>2007-08-15 09:43:38</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>hawkeye-on-office-communicator-2007</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="office"><![CDATA[Office]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[247ebae7-911e-4bee-aaff-12aeb1be5669]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Hawkeye+On+Office+Communicator+2007]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/08/15/Hawkeye+On+Office+Communicator+2007]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>2570</wp:comment_id>
			<wp:comment_author><![CDATA[Tommy Delan]]></wp:comment_author>
			<wp:comment_author_email>file4seo@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://groups.msn.com/dir99999/</wp:comment_author_url>
			<wp:comment_author_IP>203.144.160.248</wp:comment_author_IP>
			<wp:comment_date>2007-08-22 06:06:12</wp:comment_date>
			<wp:comment_date_gmt>2007-08-22 13:06:12</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[very nice site]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Morning Coffee 110</title>
		<link>http://devhawk.net/2007/08/15/morning-coffee-110/</link>
		<pubDate>Wed, 15 Aug 2007 16:37:00 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://400b5978-a218-4678-9d38-26541acce866</guid>
		<description></description>
		<content:encoded><![CDATA[<ul><li>Monday @ <a href="http://www.xnagamefest.com/">Gamefest</a>, the XNA team <a href="http://blogs.msdn.com/xna/archive/2007/08/13/announcing-xna-game-studio-2-0.aspx">announced</a> XNA Game Studio 2.0. The two big new things are support for the entire VS product line (1.0 only works on VC# Express) and the addition of networking APIs. Let's Kill Dave <a href="http://letskilldave.com/archive/2007/08/13/gamefest-quick-summary-day-1.aspx">has a good wrapup</a> of the announcements from Gamefest Day One.  </li><li>Speaking of Xbox 360, I played thru the demos of <a href="http://www.xbox.com/games/johnwoopresentsstranglehold/">Stranglehold</a> and <a href="http://www.xbox.com/games/bioshock">Bioshock</a>. Two thumbs up on both. It's gonna be an expensive year for Xbox gamers.  </li><li>Mark Cuban <a href="http://www.blogmaverick.com/2007/08/13/solution-for-the-real-estate-market-take-your-house-public/" target="_blank">noodles on</a> taking your house public. "Why not create a market or exchange where homeowners can sell equity in their homes?" I've thought about this myself from time to time. However, Mark thinks making it happen would "probably take the country's biggest banks working together". I wonder if there's a more Web 2.0 <a href="http://www.centernetworks.com/social-lending-web-2-0" target="_blank">social lending</a> approach that would work better.  </li><li>Jeff Atwood calls virtualization as "the next great frontier for computer security". I agree 100%. But I don't think the action is going to be in "full-machine" virtualization like Virtual PC. Rather, it's going to be sandbox virtualization. Jeff mentions GreenBorder (now <a href="http://blogs.zdnet.com/security/?p=241" target="_blank">part of Google</a>) but it's not the only solution. Some time ago, Microsoft acquired <a href="http://www.microsoft.com/systemcenter/softgrid/default.mspx" target="_blank">SoftGrid</a> which uses sandbox virtualization for application deployment, but using <a href="http://www.microsoft.com/systemcenter/softgrid/evaluation/virtualization.mspx" target="_blank">SystemGuard</a> for security sandboxing seems like a logical step.  </li><li>The WCF LOB Adapter SDK has released. Sonu Arora <a href="http://blogs.msdn.com/sonuarora/archive/2007/08/08/wcf-lob-adapter-sdk-is-now-generally-available-for-download.aspx" target="_blank">has the details</a>. As part of the Integration team @ MSIT, I have a feeling we're going to become fairly familiar with this technology. (via <a href="http://weblogs.asp.net/gsusx/archive/2007/08/09/wcf-lob-adapters-sdk-is-available-for-download.aspx" target="_blank">Jesus Rodriguez</a>). </li><li>Speaking of Jesus, he <a href="http://weblogs.asp.net/gsusx/archive/2007/08/13/sca-committees.aspx" target="_blank">thinks</a> the <a href="http://www.oasis-open.org/news/oasis-news-2007-08-09.php" target="_blank">six new SCA4SOA committees</a> are "going to help". Why? Because inventing technology in committee has turned out so well in the past?  </li><li>John deVadoss cements BPM's fad du jour status by <a href="http://blogs.msdn.com/jdevados/archive/2007/08/08/big-bpm-vs-little-bpm.aspx" target="_blank">contrasting</a> "big" BPM and "little" BPM. It's fairly obvious to me that big *anything* just doesn't work in the enterprise. But I worry that little *anything* doesn't work that well either. So how long until someone (<a href="http://blogs.msdn.com/nickmalik/archive/2007/07/21/what-you-need-to-make-middle-out-soa-architecture-work.aspx" target="_blank">probably Nick</a>) starts arguing for "middle out" BPM? </li><li>David Bressler <a href="http://blogs.progress.com/soa_infrastructure/2007/08/thank-you-scott.html" target="_blank">wonders</a> "What is it about registries that everyone thinks is a panacea for all things SOA?" Amen, Brother! Joe McKendrick <a href="http://blogs.zdnet.com/service-oriented/?p=937" target="_blank">claims</a> it's required for governance, but then gets to what I think is the *real* reason for focus on registries: the "registry is a tangible offering" that vendors can sell. Just because it's productizable doesn't mean you need it.  </li><li>Hartmut Wilms <a href="http://www.innoq.com/blog/hw/2007/08/14/retire_the_tenets.html" target="_blank">responds</a> to my <a href="http://devhawk.net/2007/08/14/Retire+The+Tenets.aspx" target="_blank">retire the tenets</a> post, but he seems to contradict himself. On the one hand, he suggests that "the four tenets just expressed, what “almost” everybody outside the MS world knew already". But then he goes on to dispute that the SO paradigm shift has even occurred! Hartmut, I'll grant you that WCF (among other similar stacks) are way too focused on "you write the classes, we'll handle the contracts and messages". On the other hand, if you don't provide a productive interface that most everyone can pick up and run with, the technology won't get adopted in the first place.</li></ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1029</wp:post_id>
		<wp:post_date>2007-08-15 09:37:00</wp:post_date>
		<wp:post_date_gmt>2007-08-15 16:37:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>morning-coffee-110</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="microsoft"><![CDATA[Microsoft]]></category>
		<category domain="category" nicename="morning-coffee"><![CDATA[Morning Coffee]]></category>
		<category domain="post_tag" nicename="soa"><![CDATA[SOA]]></category>
		<category domain="post_tag" nicename="wcf"><![CDATA[WCF]]></category>
		<category domain="post_tag" nicename="xbox-360"><![CDATA[Xbox 360]]></category>
		<category domain="post_tag" nicename="xna"><![CDATA[XNA]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[400b5978-a218-4678-9d38-26541acce866]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Morning+Coffee+110]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/08/15/Morning+Coffee+110]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>2571</wp:comment_id>
			<wp:comment_author><![CDATA[Hartmut Wilms]]></wp:comment_author>
			<wp:comment_author_email>hartmut.wilms@innoq.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.innoq.com/blog/hw/</wp:comment_author_url>
			<wp:comment_author_IP>80.133.9.76</wp:comment_author_IP>
			<wp:comment_date>2007-08-15 12:22:23</wp:comment_date>
			<wp:comment_date_gmt>2007-08-15 19:22:23</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi Harry,
there's a misunderstanding. I don't think that "the four tenets just expressed, what "almost" everybody outside the MS world knew already". In my opinion that's what you implied in your post.
Granted, many of the principles that are nowadays found in SO have been around for a while (not everywhere, not by everyone!). There have always been good designs, good patterns and awesome implementations. But they are the exceptions. To me service orientation collects the ideas of message-orientation, document-based data exchange, platform independent contracts (interfaces) and machine-readable policies. These principles have been expressed by the four tenets in an abstract way. Why? Because there are several ways of designing a system (better a service landscape), which adheres to these tenets. The tenets are the cornerstones of the service oriented paradigm.
My only contradiction (at least in my view ;-)) was/is that on the one hand I'm defending the idea of the tenets and on the other hand I'm saying that there are better ways to describe the idea of a SOA, e.g. 

http://www.innoq.com/blog/st/2005/11/04/10_statements_about_soa.html.

To sum up I agree that the tenets are too abstract in order to be used as a concrete guideline for building services that adhere to service oriented principles. I disagree with your statement that service oriented principles have been adopted by the masses, that SOA is mainstream, and that there's no need for (abstract) advice/tenets/principles anymore.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>2572</wp:comment_id>
			<wp:comment_author><![CDATA[Erik Johnson]]></wp:comment_author>
			<wp:comment_author_email>ejohnson@epicor.com</wp:comment_author_email>
			<wp:comment_author_url>http://appside.blogspot.com</wp:comment_author_url>
			<wp:comment_author_IP>206.114.176.75</wp:comment_author_IP>
			<wp:comment_date>2007-08-15 21:13:00</wp:comment_date>
			<wp:comment_date_gmt>2007-08-16 04:13:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[The 4 Tenets were indoctrination about service-orientation and (I think) purposely aimed at a specific, large population of Microsoft-platform developers.  Think back to the time when – as Microsoft put it – 80% of developers on the Windows platform used VB.  The Tenets served a purpose in jolting mindshare away from RPC and distributed objects.  In my job, such principles had been around a while.  So, I generally thought that the Tenets were obvious (and, sure, a little incomprehensible).  

But despite giving the Tenets some benefit of the doubt, I thought David Ing’s Four Horsemen essay was wonderfully written and a spot-on review.  No, the Tenets aren’t really guidance, but I don’t think anyone is saying they have done more harm than good.  Now, bring on the flames reserved for those who take middle ground!
]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Morning Coffee 111</title>
		<link>http://devhawk.net/2007/08/16/morning-coffee-111/</link>
		<pubDate>Thu, 16 Aug 2007 18:06:08 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://f083ebfc-fb0e-4c4c-8a77-178b148c9913</guid>
		<description></description>
		<content:encoded><![CDATA[<ul><li>I'm not sure if I should laugh or cry at Nick Malik's definition of <a href="http://blogs.msdn.com/nickmalik/archive/2007/08/14/politecture.aspx" target="_blank">politecture</a>. I mean, it's funny so I'm laughing, but it's so true that it makes me want to cry.  </li><li>Don Box <a href="http://pluralsight.com/blogs/dbox/archive/2007/08/15/48232.aspx" target="_blank">comments</a> on retiring the tenets. It's good to see him say "please God tell me we can do better" than CLR interfaces or WSDL.  </li><li>Looks like the P2P APIs are finally <a href="http://msdn.microsoft.com/msdnmag/issues/07/09/Networking/default.aspx" target="_blank">getting the managed treatment</a> in .NET FX 3.5. A long time ago, <a href="http://blogs.msdn.com/jdevados/" target="_blank">John deVadoss</a> asked me what an enterprise system like CRM might look like if it used a peer-to-peer approach instead of client-server. If I had any free time, I'd prototype one out on this API. (via <a href="http://mtaulty.com/CommunityServer/blogs/mike_taultys_blog/archive/2007/08/09/9574.aspx" target="_blank">Mike Taulty</a>) </li><li>Scott Guthrie goes back to his LINQ to SQL series to <a href="http://weblogs.asp.net/scottgu/archive/2007/08/16/linq-to-sql-part-6-retrieving-data-using-stored-procedures.aspx" target="_blank">tackle Stored Procs and UDFs</a>. Being able to use UDFs inline with LINQ queries is very cool. However, it seems to me that LINQ discourages the use of stored procs. As a developer, I'd rather write LINQ queries than stored procs, if I can. The probably puts me at odds with DBAs who'd rather all DB access be via stored procs they control. </li><li>Soma <a href="http://blogs.msdn.com/somasegar/archive/2007/08/15/visual-studio-2008-msbuild.aspx" target="_blank">writes</a> about new MSBuild enhancements in VS08: <a href="http://blogs.msdn.com/msbuild/archive/2006/11/15/multi-targeting-how-does-it-work.aspx" target="_blank">multi-targeting</a> and <a href="http://blogs.msdn.com/msbuild/archive/2007/04/26/building-projects-in-parallel.aspx" target="_blank">parallel build</a>.  </li><li>I just discovered <a href="http://www.codeplex.com/vistabattery" target="_blank">Vista Battery Saver</a>. Basically, it turns off Aero and Sidebar when you're on battery. I'm traveling to Chicago next week, so we'll see if it has much impact on my battery life. (via <a href="http://www.plentyofcode.com/2007/08/most-active-open-source-projects-in.html" target="_blank">Plenty of Code</a> and <a href="http://www.larkware.com/dg9/TheDailyGrind1209.aspx" target="_blank">Larkware</a>)</li></ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1030</wp:post_id>
		<wp:post_date>2007-08-16 11:06:08</wp:post_date>
		<wp:post_date_gmt>2007-08-16 18:06:08</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>morning-coffee-111</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="linq"><![CDATA[LINQ]]></category>
		<category domain="category" nicename="morning-coffee"><![CDATA[Morning Coffee]]></category>
		<category domain="post_tag" nicename="p2p"><![CDATA[P2P]]></category>
		<category domain="post_tag" nicename="visual-studio"><![CDATA[Visual Studio]]></category>
		<category domain="post_tag" nicename="wcf"><![CDATA[WCF]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[f083ebfc-fb0e-4c4c-8a77-178b148c9913]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Morning+Coffee+111]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/08/16/Morning+Coffee+111]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>DataReaders, LINQ to XML and Range Generation</title>
		<link>http://devhawk.net/2007/08/17/datareaders-linq-to-xml-and-range-generation/</link>
		<pubDate>Fri, 17 Aug 2007 16:55:01 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://90dc9487-d2bc-436b-8446-25b249f1539d</guid>
		<description></description>
		<content:encoded><![CDATA[I'm doing a bunch of database / XML stuff @ work, so I decided to use to <a href="http://msdn2.microsoft.com/en-us/vstudio/aa700831.aspx" target="_blank">VS08 beta 2</a> so I can use LINQ. For reasons I don't want to get into, I needed a way to convert arbitrary database rows, read using a SqlDataReader, into XML. LINQ to SQL was out, since the code has to work against arbitrary tables (i.e. I have no compile time schema knowledge). But <span style="text-decoration: line-through;">XLinq</span> LINQ to XML helped me out a ton. Check out this example:
<pre class="brush: csharp">const string ns = "{http://some.sample.namespace.schema}";

while (dr.Read())
{
    XElement rowXml = new XElement(ns + tableName,
        from i in GetRange(0, dr.FieldCount)
        select
            new XElement(ns + dr.GetName(i), dr.GetValue(i)));
}</pre>
That's pretty cool. The only strange thing in there is the GetRange method. I needed an easy way to build a range of integers from zero to the number of fields in the data reader. I wasn't sure of any standard way, so I wrote this little two line function:
<pre class="brush: csharp">IEnumerable&lt;int&gt; GetRange(int min, int max)
{
    for (int i = min; i &lt; max; i++)
        yield return i;
}</pre>
It's simple enough, but I found it strange that I couldn't find a standard way to generate a range with a more elegant syntax. Ruby has standard range syntax that looks like (1..10), but I couldn't find the equivalent C#. Did I miss something, or am I really on my own to write a GetRange function?

<span style="text-decoration: underline;">Update</span> - As expected, I missed something. John Lewicki pointed me to the static <a href="http://msdn2.microsoft.com/en-us/library/system.linq.enumerable.range(VS.90).aspx">Enumerable.Range</a> method that does exactly what I needed.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1031</wp:post_id>
		<wp:post_date>2007-08-17 16:55:01</wp:post_date>
		<wp:post_date_gmt>2007-08-17 16:55:01</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>datareaders-linq-to-xml-and-range-generation</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="ado-net"><![CDATA[ADO.NET]]></category>
		<category domain="post_tag" nicename="database"><![CDATA[Database]]></category>
		<category domain="category" nicename="development"><![CDATA[Development]]></category>
		<category domain="post_tag" nicename="linq"><![CDATA[LINQ]]></category>
		<category domain="post_tag" nicename="ruby"><![CDATA[Ruby]]></category>
		<category domain="post_tag" nicename="xml"><![CDATA[XML]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[90dc9487-d2bc-436b-8446-25b249f1539d]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[DataReaders+LINQ+To+XML+And+Range+Generation]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/08/17/DataReaders+LINQ+To+XML+And+Range+Generation]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>2573</wp:comment_id>
			<wp:comment_author><![CDATA[Andres Aguiar]]></wp:comment_author>
			<wp:comment_author_email>andres.aguiar@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://weblogs.asp.net/aaguiar</wp:comment_author_url>
			<wp:comment_author_IP>190.64.39.43</wp:comment_author_IP>
			<wp:comment_date>2007-08-17 17:56:34</wp:comment_date>
			<wp:comment_date_gmt>2007-08-18 00:56:34</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[AFAIK there's no standard way of doing it, but you could add an extension method to 'Int32' 

public static IEnumerable<int> RangeFromZero(this int number)
{
   for (int i = 0; i < number; i++)
   {
      yield return i;
   }
}

and have something like

from i in dr.FieldCount.RangeFromZero()

or

from i in dr.FieldCount.Range(0)

with a 'Range' extension method, which is the same that you wrote but a little cooler ;).

]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>2574</wp:comment_id>
			<wp:comment_author><![CDATA[Alex James]]></wp:comment_author>
			<wp:comment_author_email>Alex@base4.net</wp:comment_author_email>
			<wp:comment_author_url>http://www.base4.net/blog.aspx?ID=409</wp:comment_author_url>
			<wp:comment_author_IP>219.89.81.114</wp:comment_author_IP>
			<wp:comment_date>2007-08-17 22:04:41</wp:comment_date>
			<wp:comment_date_gmt>2007-08-18 05:04:41</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Even better is to add an Extension method to IDataReader to make it enumerable of IDataRecord, I mean semantically it is anyway...

public static IEnumerable<IDataRecord> Enumerate(this IDataReader reader)
{

using (reader)
    {

while (reader.Read())

yield return reader;

    }
}

Then you can do from r in reader.Enumerate() from i in GetRange(...) etc....]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>2575</wp:comment_id>
			<wp:comment_author><![CDATA[John Lewicki]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>68.163.162.161</wp:comment_author_IP>
			<wp:comment_date>2007-08-18 05:22:32</wp:comment_date>
			<wp:comment_date_gmt>2007-08-18 12:22:32</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I believe System.Linq.Enumerable.Range() is exactly the same as your GetRange method.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>2576</wp:comment_id>
			<wp:comment_author><![CDATA[Anonymous]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>131.107.0.102</wp:comment_author_IP>
			<wp:comment_date>2007-08-21 10:16:04</wp:comment_date>
			<wp:comment_date_gmt>2007-08-21 17:16:04</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Another minor improvement:

XNamespace ns = "http://some.sample.namespace.schema";
while (dr.Read()) 
{ 
    XElement rowXml = new XElement(ns + tableName,
                          from i in Enumerable.Range(0, dr.FieldCount) 
                          select new XElement(ns + dr.GetName(i), dr.GetValue(i)));
}
]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Morning Coffee 112</title>
		<link>http://devhawk.net/2007/08/17/morning-coffee-112/</link>
		<pubDate>Fri, 17 Aug 2007 18:33:11 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://cd9914c4-47f6-4ff5-80ef-599f8c0ec07a</guid>
		<description></description>
		<content:encoded><![CDATA[<ul><li>The Lee Holmes over at the Powershell Team Blog <a href="http://blogs.msdn.com/powershell/archive/2007/08/15/preview-of-powershell-plus.aspx" target="_blank">writes about</a> alternatives to the "decades-old" Windows console host. <a href="http://www.powershell.com/plus/" target="_blank">Powershell Plus</a> looks awesome. <a href="http://www.codeplex.com/PoshConsole" target="_blank">PoshConsole</a> also looks pretty cool (though far from finished yet) and is free.  </li><li><a href="http://dev.live.com/liveid/" target="_blank">WL ID</a><a href="http://www.microsoft.com/downloads/details.aspx?FamilyId=8BA187E5-3630-437D-AFDF-59AB699A483D&amp;displaylang=en" target="_blank">Web Authentication SDK</a> has been released. <a href="http://winliveid.spaces.live.com/blog/cns!AEE1BB0D86E23AAC!908.entry" target="_blank">Details</a> on the WL ID team blog. It looks like what Passport SDK provided for quite some time, but now it's free. There's also a <a href="http://www.microsoft.com/downloads/details.aspx?FamilyID=b5a78784-922d-4267-a6e9-5d2ecf1dced8&amp;displaylang=en" target="_blank">client auth SDK</a> in development. (via <a href="http://www.25hoursaday.com/weblog/2007/08/16/Version10OfWindowsLiveIDWebAuthenticationSDKShipped.aspx" target="_blank">Dare Obasanjo</a>) </li><li>Libor Soucek <a href="http://lsblog.wordpress.com/2007/08/17/enterprise-application-reality/" target="_blank">leaps to the wrong conclusion</a> about <a href="http://devhawk.net/2007/08/03/Morning+Coffee.aspx" target="_blank">not differentiating</a> enterprise &amp; support systems. Of course, different systems will have different availability requirements. But what happens when we connect them together? We can't let the support system effect the availability of the enterprise system, right? To me, that implies either a) the support system now needs to conform to enterprise system availability requirements or b) we need some other mechanism (like async durable messaging) to act as a buffer between them. Personally, I like "b".  </li><li>Nick Carr <a href="http://www.roughtype.com/archives/2007/08/erps_troubled_l.php" target="_blank">points to</a> an article <a href="http://sloanreview.mit.edu/smr/issue/2007/fall/01/" target="_blank">The Trouble with Enterprise Software</a> by Cynthia Rettig. Cynthia writes that while the massive complexity of enterprise software, especially large-scale ERP systems like SAP, significantly hinder it's value. It's a must read. Choice quotes:</li><ul><li>"It is estimated that for every 25% increase in complexity in the tasks to be automated, the complexity of the software solution itself rises by 100%." </li><li>"The notion of reusable software works on a small scale. Programmers have successfully built and reused subroutines of standard functions. But as software grows more complex, reusability becomes a difficult or impossible task." </li><li>"Hope, unfortunately, has never been a very effective strategy." </li><li>"Is enterprise software just too complex to deliver on its promises? After all, enterprise systems were supposed to streamline and simplify business processes. Instead, they have brought high risks, uncertainty and a deeply worrying level of complexity. Rather than agility they have produced rigidity and unexpected barriers to change, a veritable glut of information containing myriad hidden errors, and a cloud of questions regarding their overall benefits."</li></ul></ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1032</wp:post_id>
		<wp:post_date>2007-08-17 11:33:11</wp:post_date>
		<wp:post_date_gmt>2007-08-17 18:33:11</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>morning-coffee-112</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="morning-coffee"><![CDATA[Morning Coffee]]></category>
		<category domain="post_tag" nicename="powershell"><![CDATA[PowerShell]]></category>
		<category domain="post_tag" nicename="windows-live"><![CDATA[Windows Live]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[cd9914c4-47f6-4ff5-80ef-599f8c0ec07a]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Morning+Coffee+112]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/08/17/Morning+Coffee+112]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Morning Coffee 113</title>
		<link>http://devhawk.net/2007/08/23/morning-coffee-113/</link>
		<pubDate>Thu, 23 Aug 2007 14:23:53 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://08f02252-de04-4a8d-933d-eff57cf3c186</guid>
		<description></description>
		<content:encoded><![CDATA[<ul><li>I'm in Chicago today and tomorrow for a reunion of sorts. In my last job, I managed a group of external architects called the Microsoft Architecture Advisory Board (aka the MAAB). We discontinued the program a while back, but the core of the group found the program valuable enough they have continued to meet anyway. I found the MAAB meetings incredibly valuable and insightful, so I'm really excited to be invited to continue my involvement with the group. </li><li>I picked up Bioshock Tuesday (Circuit City <a href="http://www.xbox360fanboy.com/2007/08/19/get-bioshock-and-all-pro-football-for-the-cheap/">had it on sale</a>) on my way to my bi-weekly campus excursion. My meetings were over around 2pm so I headed home early, expecting to surprise the kids. But Jules had decided to skip naps and go shopping with them. Her cell phone was dead, so I ended up at home with a couple of hours to myself and a brand new copy of Bioshock. Wow, is that a good game. Certainly deserving of the <a href="http://www.metacritic.com/games/platforms/xbox360/bioshock">amazingly good reviews</a> it's garnered. </li><li>Speaking of reviews, <a href="http://www.sonydefenseforce.com/?p=83">this transparently biased review of Bioshock</a> over at Sony Defense <strike>Farce</strike> Force is frakking hilarious. Somehow, I doubt their dubious review will stem the tidal wave of Bioshock's well-deserved hype. Can't wait to read their Halo 3 review. </li><li>Pat Helland <a href="http://blogs.msdn.com/pathelland/archive/2007/08/19/thoughts-about-multi-master-replication-of-tree-structured-data.aspx">writes at length</a> on master-master replication. I <a href="http://blogs.msdn.com/pathelland/archive/2007/08/20/easier-to-read-version-of-my-last-post.aspx">reformated it into PDF</a> so I could read it - the large images were messing up the text flow on my system. As usual for Pat, there's gold in that thar post. His thoughts on DAGs of versions and vector clocks as identifiers are very exciting. However, I think he glosses over the importance of declarative merging. I would think programmatic merge would likely be non-deterministic across nodes. If so, wouldn't you end up with two documents with the same vector-clock identifier by different data? </li><li>Joe McKendrick <a href="http://blogs.zdnet.com/service-oriented/?p=939">points to</a> a few people who predict the term "service-oriented" will eventually be subsumed under the general heading of "architecture". Not to brag, but I made that exact same prediction <a href="http://blogs.msdn.com/jevdemon/archive/2004/12/17/323889.aspx">almost three years ago</a>. </li><li>Erik Johnson <a href="http://appside.blogspot.com/2005/08/patterns-for-soa-20.html">thinks</a> that SOA 2.0 centers on transformational patterns. The idea (I think) is that if systems "understand each other more deeply", then we can build a "smarter stack" and design apps via new constructs to promote agility and simplicity. Personally, I'm skeptical that we can define unambiguously system semantics except in the simplest scenarios, but Erik talks about using "graph transformation mathematics" to encode semantics. I don't know anything about graph transformation mathematics, but at least Erik has progressed beyond hand waving to describing the "what". Here's looking forward to the "how". </li><li><a href="http://vasters.com/clemensv/PermaLink,guid,70d581f0-577d-4f80-aa11-248574b1e420.aspx">New dad</a> Clemens Vasters somehow <a href="http://vasters.com/clemensv/PermaLink,guid,9677a491-9037-4b79-baa3-bcf093737957.aspx">finds time to implement</a> an XML-RPC binding for WCF 3.5. I was encouraged that it didn't require any custom attributes or extensions at the programmer level. Of course, XML-RPC fits semantically into WCF's interface based service model, so it shouldn't be a huge surprise that it didn't require any custom extensions. But did it need WCF 3.5? Would this work if recompiled against the 3.0 assemblies? </li><li>Phil Haack <a href="http://haacked.com/archive/2007/08/19/why-duck-typing-matters-to-c-developers.aspx">writes a long post</a> on Duck Typing. VB9 <a href="http://download.microsoft.com/download/5/8/6/5868081c-68aa-40de-9a45-a3803d8134b8/Visual_Basic_9.0_Overview.doc">originally supported</a> duck typing - the feature was called Dynamic Interfaces - when it was first announced, but it was <a href="http://blogs.msdn.com/vbteam/archive/2007/01/11/extension-methods-part-2.aspx#1458124">subsequently cut</a>. I was really looking forward to that feature. Between it and XML Literals, VB9 was really stepping out of C#'s shadow. I guess <a href="http://steve.emxsoftware.com/LINQ/XLinq+has+me+wanting+to+code+in+VBNET">it still is</a>, even without dynamic interfaces. </li><li>Since I've been doing some LINQ to XML work lately, I decided to go back and re-write my code in VB9 using XML literals. While XML literals are nice, I don't think they're a must have. First, LINQ to XML has a nice fluent interface, so the literals don't give you that much cleaner code (though you do avoid writing XElement and XAttribute over and over.) Second, I find VB9's template syntax (like ASP &lt;%= expression %&gt;) clunky to work with, especially in nested templates. Finally, I like the namespace support of XNames better. As far as I can tell, VB9 defines namespaces with xmlns attributes just like XML does. So I'm not dying for literal XML support in a future version of C#. How about you? </li></ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1033</wp:post_id>
		<wp:post_date>2007-08-23 07:23:53</wp:post_date>
		<wp:post_date_gmt>2007-08-23 14:23:53</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>morning-coffee-113</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="linq"><![CDATA[LINQ]]></category>
		<category domain="category" nicename="morning-coffee"><![CDATA[Morning Coffee]]></category>
		<category domain="post_tag" nicename="soa"><![CDATA[SOA]]></category>
		<category domain="post_tag" nicename="wcf"><![CDATA[WCF]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[08f02252-de04-4a8d-933d-eff57cf3c186]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Morning+Coffee+113]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/08/23/Morning+Coffee+113]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>2577</wp:comment_id>
			<wp:comment_author><![CDATA[Clemens Vasters]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>131.107.0.102</wp:comment_author_IP>
			<wp:comment_date>2007-08-23 13:48:45</wp:comment_date>
			<wp:comment_date_gmt>2007-08-23 20:48:45</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[The XML-RPC download should be a 3.0 compatible assembly. It's 3.5 "ready" in that it gains partial trust support on 3.5 automatically.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Morning Coffee 114 - MoMAAB Edition</title>
		<link>http://devhawk.net/2007/08/24/morning-coffee-114-momaab-edition/</link>
		<pubDate>Fri, 24 Aug 2007 16:46:34 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://1b5f62f1-0240-48b5-8221-025e6c0316ec</guid>
		<description></description>
		<content:encoded><![CDATA[<ul><li>We spent all day yesterday discussing four topics: SaaS, Tools for Scrum, Web 2.0 and Domain Specific Languages. Even though it was just a day, my brain is full. These were deep and challenging discussion. I need to let the discussions stew a bit before posting anything about them here. But I will. </li><li>Next time we do one of these, I'm bringing a video camera. I took notes, but looking over them the next morning they seem woefully incomplete. OneNote's <a href="http://office.microsoft.com/en-us/onenote/CH102381791033.aspx">integrated audio/video recording capabilities</a> would nicely augment my notes. </li><li>We ran this meeting using <a href="http://en.wikipedia.org/wiki/Open_Space_Technology">Open Space</a>, and it worked very well. Of course, we only had 8 people, so we didn't need a lot of process to self organize. However, it did whet my appetite for having a larger Open Space style un-conference for architects. Is that something other folks might be interested in? </li><li>Major thanks to the folks at <a href="http://www.claritycon.com/">Clarity Consulting</a> who graciously gave us space to meet and fed us yesterday. Their CTO <strong></strong><a href="http://blogs.claritycon.com/blogs/jon_rauschenberger/default.aspx">Jon Rauschenberger</a> sat in on most of our meeting, and drove our Web 2.0 discussion. I said I wanted to stew a bit on the discussions, but <a href="http://www.claritycon.com/arcready">Jon's slides</a> are available on line if you're interested. </li><li><a href="http://www.traceofthought.net/">Scott Colestock</a> showed me <a href="http://www.diigo.com/">Diigo</a>, a social annotation tool. Where del.icio.us lets you tag and annotate individual pages, Diigo lets you annotate and highlight specific parts of the page. They also have <a href="http://www.diigo.com/help/blog/2">blogging tools</a>, where these annotations and highlights become blog posts, but they <a href="http://www.diigo.com/help/blog/3">don't support dasBlog</a>. However, since FeedBurner doesn't support Diigo for <a href="http://blogs.feedburner.com/feedburner/archives/2004/08/introducing_the_link_splicer.php">link splicing</a>, I'm afraid my use of it will be limited. </li><li><a href="http://www.microsoft.com/learning/mcp/architect/bios/jim_wilt/default.mspx">Jim Wilt</a> introduced me to <a href="http://support.microsoft.com/kb/831501">Virtual PC's command line</a>. He recommends using "-pc &lt;vpc name&gt; -launch -singlepc" which launches a single virtual environment without the VPC console. I rarely run more than one VPC at a time and I hate stuff cluttering up my taskbar and notification area, so I like this a lot. </li><li><a href="http://www.inrule.com/Management_Team.aspx">Loren Goodman</a> demonstrated the <a href="http://www.thedotnetfactory.com/SharePointExplorerClient.aspx">SharePoint Explorer Client</a>. SharePoint &amp; MOSS came up several times in all of our topics, so this is going to get a second look. I always thought it was strange that MSFT ships a <a href="http://office.microsoft.com/en-us/sharepointdesigner/default.aspx">smart client for editing</a> WSS &amp; MOSS, but not viewing it. SP Explorer looks like it fills that gap nicely. </li><li><a href="http://www.sysknowlogy.com/">Shannon Braun</a> sent us all a link to <a href="http://www.nealwhittengroup.com/articles/pmn10-99.asp">the 50/70 rule</a>, which seems like a good rule of thumb. Of course, assuming that things won't progress linearly is almost always a good rule of thumb. But the 50/70 rule has reasoning behind the assumption. </li><li>Chicago is nice, but the weather has been a little freaky. It's either been hot &amp; humid, downporing thunderstorms or <a href="http://www.wandtv.com/Global/story.asp?S=6974859">tornados</a>. <a href="http://www.kavp.com/">Keith Powell</a> showed me <a href="http://flightaware.com/">FlightAware</a>, which shows you flight departure and arrival history. My flight hasn't left within an hour of scheduled departure in a week. I'm going to try and grab an earlier flight, but I have a feeling it's going to be a long trip home.</li></ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1034</wp:post_id>
		<wp:post_date>2007-08-24 09:46:34</wp:post_date>
		<wp:post_date_gmt>2007-08-24 16:46:34</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>morning-coffee-114-momaab-edition</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="morning-coffee"><![CDATA[Morning Coffee]]></category>
		<category domain="post_tag" nicename="open-space"><![CDATA[Open Space]]></category>
		<category domain="post_tag" nicename="sharepoint"><![CDATA[SharePoint]]></category>
		<category domain="post_tag" nicename="travel"><![CDATA[Travel]]></category>
		<category domain="post_tag" nicename="virtual-pc"><![CDATA[Virtual PC]]></category>
		<category domain="post_tag" nicename="web-2-0"><![CDATA[Web 2.0]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[1b5f62f1-0240-48b5-8221-025e6c0316ec]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Morning+Coffee+114+MoMAAB+Edition]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/08/24/Morning+Coffee+114+MoMAAB+Edition]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>2578</wp:comment_id>
			<wp:comment_author><![CDATA[Craig Randall]]></wp:comment_author>
			<wp:comment_author_email>craig@craigrandall.net</wp:comment_author_email>
			<wp:comment_author_url>http://craigrandall.net/</wp:comment_author_url>
			<wp:comment_author_IP>71.146.9.65</wp:comment_author_IP>
			<wp:comment_date>2007-08-24 20:54:34</wp:comment_date>
			<wp:comment_date_gmt>2007-08-25 03:54:34</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Glad that you're all having a good time in Chicago. (I miss MAAB.) A long-planned family vacation prevented me from being there will you guys, too. Thanks for the links...I like the 50-70 rule article...will digest the Web 2.0 decks next. Was the SaaS content SaaS or "S + S" as Charles Fitzgerald and others at MSFT talk about it? Cheers!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>The One Business Case for Integration</title>
		<link>http://devhawk.net/2007/08/23/the-one-business-case-for-integration/</link>
		<pubDate>Thu, 23 Aug 2007 22:40:32 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://b20dde93-10e8-48ac-95d6-d9c17c527f90</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Nick Malik <a href="http://blogs.msdn.com/nickmalik/archive/2007/08/22/the-business-case-for-integrated-systems.aspx">lays out</a> what he thinks are the four business cases for integration:</p><blockquote><p>Assume we succeeded, and our systems are all optimally integrated.  What has changed?  </p><ol><li>We have better business intelligence.  We have better understanding of our customers, our partners, our products, and our business.  And from that understanding, we make better decisions.  Those decisions are made in a federated manner using self-apparent information. </li><li>We have end-to-end business processes that cross multiple systems, multiple roles, multiple geographies, and multiple data stores, all aware of and supporting the needs of the customer. </li><li>We have end-to-end awareness of the metrics that drive both dissatisfaction and cost, and we can take that knowledge and apply it to making our business better. </li><li>We have a more efficient enterprise, more able to grow to a larger size, at an accelerated rate, and still respond with agility to changing business opportunities. </li></ol></blockquote><p>I put to you that, in fact, we only have one business case for integration: better business intelligence. The other reasons Nick lists are either redundant or not as important to the business - at least in the general case - as you might think.</p><p>First off, #3 from Nick's list sounds suspiciously like #1. If there's a difference between "better understanding driving better decisions" and "applying awareness of metrics to making our business better", I don't know what it is. We'll send one of them off to the Dept. of Redundancy Dept. and be done with it.</p><p>Second, I don't think the business cares that IT has multiple systems or multiple data stores. If the business could run on one big centralized system that could meet the needs of the customer (aka the ERP fantasy), they'd be fine with that. The fact that realities of modern enterprise IT require splitting up capabilities across many systems is an implementation detail that frankly isn't a concern of the business. </p><p>Besides, what's the business benefit here? News flash: the enterprise already has end-to-end business processes that cross multiple systems, multiple roles, blah blah blah. They're just not <em>automated</em> end-to-end. Does the business care that their not automated? Not a bit. Sure, they care about processes are slow, costly and error-prone, which manual processes tend to be. But it's those negative characteristics that the business cares about, not integration. Besides, making processes quick, cheap and error-free sounds a lot like making them efficient. In other words, more work for the Dept. of Redundancy Dept.</p><p>Finally, I don't think efficiency and agility is as important to the enterprise as Nick makes it out to be. I mean, the enterprise will <em>say</em> it cares about efficiency - especially in front of the stock holders. But when it comes to putting it's money where it's mouth is, the enterprise doesn't, more often than not. Think about how success is measured in the typical IT project. Is efficiency one of the criteria for judging success? Not really. Will your project stakeholders let you run over budget and ship a few months late, just to improve efficiency? Probably not, unless that efficiency gain is both demonstrable and dramatic. </p><p>Of course, there are certainly specific examples where a automation or efficiency business case for integration can be made. For example, if replacing a specific manual process with an automated one has a large and measurable ROI, the business will likely be interested in making that investment. If you have a certain process that you do over and over that's core to the business, the business will probably be interested in optimizing the frak out of it. For example, I would guess a delivery company like UPS or FedEx has spent a lot of time and money on optimizing their delivery processes. </p><p>But what it sounds like Nick's talking about here is making a general case for making all our systems "optimally integrated". Given that our current systems aren't, this would take significant time and money. Yet the tangible benefit to the business is at best nebulous. Nick thinks improved integration will allow the business to "respond with agility to changing business opportunities." He's probably right. But how do you quantify this agility? How much will we save in the future for what we're spending today? For the general case, the answer is "it depends". It's really hard to fund a project when it's projected ROI is "it depends" . </p><p>However, business intelligence is a no brainer for the enterprise to invest in. Giving decision makers better and more up-to-date information, that's a tangible benefit that the organization can quantify <em>now</em>. If you can quantify the value of a project, you've got the start of a budget. Of course, all that juicy data is smeared across a variety of systems, which means integration. Again, the enterprise doesn't really care about said multiple systems or integration, but they care about the outcome. </p><p>Nick <a href="http://blogs.msdn.com/nickmalik/archive/2007/08/21/soa-and-bi-support-the-same-goals.aspx">recommends</a> to SOA folks that "if you aren't already working with your BI team, pick up the phone. Their mature processes and practices are able to address many of your issues, and the natural synergy between BI and SOA can make them a strong ally in the fight for a better, faster, cheaper, and more intelligent enterprise." Good advice. Otherwise, selling integration to the business isn't much different than <a href="http://blogs.msdn.com/nickmalik/archive/2007/08/15/soa-is-not-a-disruptive-technology-selling-soa-part-three.aspx">selling them SOA</a>. In other words, don't sell it - just do it. </p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1035</wp:post_id>
		<wp:post_date>2007-08-23 22:40:32</wp:post_date>
		<wp:post_date_gmt>2007-08-23 22:40:32</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>the-one-business-case-for-integration</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="architecture"><![CDATA[Architecture]]></category>
		<category domain="post_tag" nicename="business-intelligence"><![CDATA[Business Intelligence]]></category>
		<category domain="post_tag" nicename="integration"><![CDATA[Integration]]></category>
		<category domain="post_tag" nicename="soa"><![CDATA[SOA]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[b20dde93-10e8-48ac-95d6-d9c17c527f90]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[The+One+Business+Case+For+Integration]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/08/24/The+One+Business+Case+For+Integration]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>2579</wp:comment_id>
			<wp:comment_author><![CDATA[Jack van Hoof]]></wp:comment_author>
			<wp:comment_author_email>jack.vanhoof.soa.eda@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://soa-eda.blogspot.com</wp:comment_author_url>
			<wp:comment_author_IP>83.128.67.232</wp:comment_author_IP>
			<wp:comment_date>2007-08-25 07:41:15</wp:comment_date>
			<wp:comment_date_gmt>2007-08-25 14:41:15</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[What is integration at all?

Application Integration is – ironically – about application division. I recently posted my view on how applications can be divided into separated components and how the components are glued together. Several “glue-areas” are recognized where mashups, portals, shared databases, SOA and EDA all play a role in gluing the pieces together.

http://soa-eda.blogspot.com/2007/08/what-is-eai.html

I agree not to sell integration to the business, but just do it. 


Jack]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Morning Coffee 115</title>
		<link>http://devhawk.net/2007/08/27/morning-coffee-115/</link>
		<pubDate>Mon, 27 Aug 2007 17:34:57 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://2bd7e04b-dddb-4ab7-8fba-2117a87ddc7c</guid>
		<description></description>
		<content:encoded><![CDATA[<ul><li>Scott Guthrie has two new posts in his series on LINQ to SQL. <a href="http://weblogs.asp.net/scottgu/archive/2007/08/23/linq-to-sql-part-7-updating-our-database-using-stored-procedures.aspx">The first</a> covers updating the database using stored procs instead of dynamic SQL. I was somewhat surprised that there wasn't the capability to auto-generate vanilla Insert, Update and Deleted procs, but I guess DBA's probably hate that anyway. <a href="http://weblogs.asp.net/scottgu/archive/2007/08/27/linq-to-sql-part-8-executing-custom-sql-expressions.aspx">The second</a> shows how to use ExecuteQuery to execute arbitrary SQL instead of using the cool LINQ query syntax. I'm doing a bunch of loosely-typed SQL work right now, so I'm going to take a deeper look at this. </li><li>Speaking of LINQ, I just discovered this <a href="http://community.bartdesmet.net/blogs/bart/archive/2007/04/05/the-iqueryable-tales-linq-to-ldap-part-0.aspx">great series</a> on IQueriable by Bart De Smet. It's four months old, but takes an incredibly detailed look at what happens under the hood with LINQ. Bart also has a <a href="http://www.codeplex.com/LINQSQO">reference implementation</a> of LINQ's standard query operators as well as <a href="http://community.bartdesmet.net/blogs/linqtosharepoint/default.aspx">LINQ to Sharepoint</a>. </li><li>Dan Maharry has pulled together what looks like <a href="http://blogs.ipona.com/dan/archive/2007/08/22/8419.aspx">the definitive guide</a> for really slimming down and speeding up your VPC. It's XP specific, but I'd bet most of the guidance would also apply to WS03, which is what I mostly use in my VPCs. (via <a href="http://www.larkware.com/dg9/TheDailyGrind1214.aspx">Larkware</a>) </li><li>Jimmy Nilsson <a href="http://jimmynilsson.com/blog/posts/PowerBalance.htm">thinks</a> it's the operations department that holds the power in today's IT world. I agree 100% That's why I value <a href="halfmybrain.spaces.live.com">Dale's</a> input so much.</li><li>Nick Malik <a href="http://blogs.msdn.com/nickmalik/archive/2007/08/24/is-it-time-to-bring-the-fea-concepts-to-the-commercial-space.aspx">wonders</a> if it's time to translate the <a href="http://www.whitehouse.gov/omb/egov/a-2-EAModelsNEW2.html">Federal Enterprise Architecture</a> for use in the commercial sector. My dad just retired from 5 years in the <a href="http://www.faa.gov/">FAA</a> and he thinks FEA is too high level to be particularly useful. </li><li>The <a href="http://feeds.feedburner.com/~r/ScottHanselman/~3/147518722/ScottHanselmans2007UltimateDeveloperAndPowerUsersToolListForWindows.aspx">2007 edition</a> version of <a href="http://www.hanselman.com/tools">Scott Hanselman's ultimate tool list</a> is now available.</li><li>A bunch of <a href="http://msdn2.microsoft.com/en-us/xna/aa937787.aspx">XNA Gamefest sessions</a> are now available for on-demand viewing.</li></ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1036</wp:post_id>
		<wp:post_date>2007-08-27 10:34:57</wp:post_date>
		<wp:post_date_gmt>2007-08-27 17:34:57</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>morning-coffee-115</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="linq"><![CDATA[LINQ]]></category>
		<category domain="category" nicename="morning-coffee"><![CDATA[Morning Coffee]]></category>
		<category domain="post_tag" nicename="virtual-pc"><![CDATA[Virtual PC]]></category>
		<category domain="post_tag" nicename="xna"><![CDATA[XNA]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[2bd7e04b-dddb-4ab7-8fba-2117a87ddc7c]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Morning+Coffee+115]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/08/27/Morning+Coffee+115]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Durable Services with Fake Persistence</title>
		<link>http://devhawk.net/2007/08/31/durable-services-with-fake-persistence/</link>
		<pubDate>Fri, 31 Aug 2007 13:48:14 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://a54fd2d7-faae-4d70-833d-5056c47afbc9</guid>
		<description></description>
		<content:encoded><![CDATA[<p>I've been investigating the new WCF/WF integration in .NET Framework 3.5. I want to understand how the new context features work. Unfortunately, there's not much info out there (that I could find at any rate). You're pretty much stuck with the <a href="http://www.microsoft.com/downloads/details.aspx?FamilyID=2611a6ff-fd2d-4f5b-a672-c002f1c09ccd&amp;DisplayLang=en" target="_blank">samples</a> and Jesus Rodriguez's <a href="http://weblogs.asp.net/gsusx/archive/2007/06/14/orcas-durable-services.aspx" target="_blank">overview of durable services</a>. So I sat down to dig a little deeper.</p><blockquote><p>Note, since there are no docs on this stuff as I write this, many of the links below are <a href="http://www.aisto.com/roeder/dotnet" target="_blank">Reflector</a> code links. </p></blockquote><p>I started by lifting the <a href="http://msdn2.microsoft.com/en-us/library/bb410782(VS.90).aspx" target="_blank">DurableCalculator sample</a> contract and service implementation and dumping it into a new WCF Service Library project. I did this for two reasons. First, VS08 has added a WCF Service Host much like VS05 added the ASP.NET Development Server. Very cool. But the existing sample is still written to be hosted in IIS, so I wanted to change that. Second, and much more important, I wanted to start with a vanilla config file. I knew it wouldn't work out of the box, but the point of this exercise was to learn how this works under the covers. </p><p>When you fire up the durable service with the vanilla config file, you get an error (as expected). Services marked with the DurableServiceAttribute require a binding that supports the context protocol. WsHttpBinding, the default binding when you create a new service, doesn't. However, it's easy to fix by switching to <a href="code://System.WorkflowServices:3.5.0.0:31bf3856ad364e35/System.ServiceModel.WSHttpContextBinding" target="_blank">wsHttpContextBinding</a> instead. Via Reflector, we see that wsHttpContextBinding inherits from wsHttpBinding and <a href="code://System.WorkflowServices:3.5.0.0:31bf3856ad364e35/System.ServiceModel.WSHttpContextBinding/CreateBindingElements():System.ServiceModel.Channels.BindingElementCollection" target="_blank">adds a ContextBindingElement to the binding element collection</a> created by the base class. <a href="code://System.WorkflowServices:3.5.0.0:31bf3856ad364e35/System.ServiceModel.BasicHttpContextBinding" target="_blank">BasicHttpContextBinding</a> and <a href="code://System.WorkflowServices:3.5.0.0:31bf3856ad364e35/System.ServiceModel.NetTcpContextBinding" target="_blank">netTcpContextBinding</a> work the same way.</p><p>Even after changing to wsHttpContextBinding, we're still getting an error on service start. But it's a new error, so we're making progress. Now, we're told that services marked with DurableServiceAttribute need a persistence provider to be specified. If we look in the original sample's web.config file, we find a persistenceProvider element in the service behavior. This element references the <a href="code://System.WorkflowServices:3.5.0.0:31bf3856ad364e35/System.ServiceModel.Persistence.SqlPersistenceProviderFactory" target="_blank">SqlPersistenceProviderFactory</a> type. Obviously, the point here is to persist durable service instances to the database between calls, much as WF can do.</p><p>However, merely configuring the existing SQL persistence provider doesn't really tell you what's going on under the hood. Besides, often when you're experimenting, you don't really want to go thru the headache of setting up a SQL store for persisting instances to. Somewhere along the line, I implemented a fake persistence service for WF that stored the serialized instances in memory. So I decided to do the same for WCF durable services.</p><p>Building a WCF Persistence Provider requires building two classes: a factory and the provider itself. Factories inherit from <a href="code://System.WorkflowServices:3.5.0.0:31bf3856ad364e35/System.ServiceModel.Persistence.PersistenceProviderFactory" target="_blank">PersistenceProviderFactory</a>, which exposes only one non-<a href="http://msdn2.microsoft.com/en-us/library/system.servicemodel.channels.communicationobject.aspx" target="_blank">CommunicationObject</a> method: <a href="code://System.WorkflowServices:3.5.0.0:31bf3856ad364e35/System.ServiceModel.Persistence.PersistenceProviderFactory/CreateProvider(System.Guid):System.ServiceModel.Persistence.PersistenceProvider" target="_blank">CreateProvider</a>. It appears that the service host creates a single persistence provider factory and calls CreateProvider whenever it needs a persistence provider. Providers themselves inherit from <a href="code://System.WorkflowServices:3.5.0.0:31bf3856ad364e35/System.ServiceModel.Persistence.PersistenceProvider" target="_blank">PersistenceProvider</a>, which exposes methods to <a href="code://System.WorkflowServices:3.5.0.0:31bf3856ad364e35/System.ServiceModel.Persistence.PersistenceProvider/Load(System.TimeSpan):Object" target="_blank">Load</a>, <a href="code://System.WorkflowServices:3.5.0.0:31bf3856ad364e35/System.ServiceModel.Persistence.PersistenceProvider/Save(Object,System.TimeSpan):Object" target="_blank">Save</a> and <a href="code://System.WorkflowServices:3.5.0.0:31bf3856ad364e35/System.ServiceModel.Persistence.PersistenceProvider/Delete(Object,System.TimeSpan)" target="_blank">Delete</a> durable service instances. </p><p>My FakePersistenceProvider (and factory) are brain dead simple, though the ratio of "real" code to factory and CommunicationObject scaffolding is quite low (about 40 lines out of 258). The factory keeps a dictionary of serialized service instances, keyed by guid. When providers are created, this key guid is passed as a parameter to CreateProvider. The provider instances delegate Load, Save and Delete back to internal methods on the factory class. The methods themselves use the <a href="http://msdn2.microsoft.com/en-us/library/system.runtime.serialization.netdatacontractserializer.aspx" target="_blank">NetDataContractSerializer</a> to serialize the service instance out to a byte array and deserializing it back again. I chose NetDataContractSerializer because that's what the SQL persistence provider uses under the hood. </p><p>PersistenceProvider supports async versions of Load, Save and Delete but I didn't implement them. Also, there's a <a href="code://System.WorkflowServices:3.5.0.0:31bf3856ad364e35/System.ServiceModel.Persistence.LockingPersistenceProvider" target="_blank">LockingPersistenceProvider</a> abstract class which adds (you guessed it) instance locking semantics. However, my fake provider doesn't span machines, much less require locking semantics so I skipped it.</p><p>So it looks like DurableServiceAttribute, context-supporting bindings and persistence providers are all inter-related. Certainly, you can't use the attribute with out the binding and persistence provider. As I continue to dig, I'm want to see how context inter-relates with WF as well as it's possible usage outside of DurableServiceAttribute based scenarios. </p><p>If you're interested in the code, I've <a href="http://cid-0d9bc809858885a4.skydrive.live.com/self.aspx/Public/Code/FakePersistenceProvider.zip" target="_blank">stuck it up on my SkyDrive</a>. In addition to the FakePersistenceProvider implementation and the simple Durable Calculator service, it includes a simple client to test the service and persistence provider. The WCF Service Host includes a test client, but it doesn't appear to support the context protocol, so I had to build a simple test app instead. Enjoy.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1037</wp:post_id>
		<wp:post_date>2007-08-31 13:48:14</wp:post_date>
		<wp:post_date_gmt>2007-08-31 13:48:14</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>durable-services-with-fake-persistence</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<category domain="post_tag" nicename="wcf"><![CDATA[WCF]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[a54fd2d7-faae-4d70-833d-5056c47afbc9]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Durable+Services+With+Fake+Persistence]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/08/31/Durable+Services+With+Fake+Persistence]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>The Integration Business Case, continued</title>
		<link>http://devhawk.net/2007/09/04/the-integration-business-case-continued/</link>
		<pubDate>Tue, 04 Sep 2007 10:08:09 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://fd2ea7fb-ce18-4105-8634-5181731d6fa4</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Nick <a href="http://blogs.msdn.com/nickmalik/archive/2007/08/24/business-case-for-integration-part-two.aspx">responds</a> to my <a href="http://devhawk.net/2007/08/24/The+One+Business+Case+For+Integration.aspx">visceral thoughts</a> on the integration business case. There's no point in excerpting it - go read the whole thing. I'll wait.</p><p>It looks like for case #2, he added the ability to "change readily and inexpensively", which is to say he made it overlap even further with #4 than it used to. He also changed #3 to make it clear that he was collecting metrics to give us "awareness of process efficiency". That makes #3 overlap with #4 on efficiency instead of #1 on BI, but either way it's still redundant.</p><p>So we're still left with the business cases of Business Intelligence, Efficiency and Agility. Nick conflates Efficiency and Agility both in his <a href="http://blogs.msdn.com/nickmalik/archive/2007/08/22/the-business-case-for-integrated-systems.aspx">original post</a> and his <a href="http://blogs.msdn.com/nickmalik/archive/2007/08/24/business-case-for-integration-part-two.aspx">follow-up</a>, but I think it makes sense to separate them. I still stand by my original point that the business is only interested in directly funding Business Intelligence. </p><p>Nick is willing to bet a nice lunch that MSFT has invested more in improving operational efficiency that we have on BI in the past four years. He's probably right, but he missed the point I was making. The business will readily invest in improving a specific process they can measure the ROI on improving. MSFT has lots of processes, I'm sure most of them have significant room for improvement. </p><p>But Nick's list isn't about specific improvements. He's explicitly wrote that he's describing a scenario where "our systems are all optimally integrated". Selling the business on generally improving efficiency is very different that selling the business on improving the efficiency of a specific process. I'd bet the same nice lunch that the vast majority - if not all - of integration infrastructure running at MSFT was originally deployed as part of a specific business scenario that needed to be solved.</p><p>My point here is most businesses are better at funding projects to meet specific business needs than it is at funding pure infrastructure projects. </p><p>As for agility. Martin Fowler <a href="http://www.artima.com/intv/flexplex2.html">pointed out once</a> that adding flexibility means adding complexity. But chances are, you'll be wrong about the flexibility you think you'll need. So you actually end up with the additional complexity but none of the flexibility benefit. Martin recommends "since most of the time we get it wrong, just don't put the flexibility in there". Instead, you should strive for simplicity, since simpler systems are easier to understand and thus easier to change.</p><p>Does the same philosophy apply to process? I think so, though there is one thing I'd be willing to risk being wrong on. We all expect the steps in a process to change over time, so moving to a declarative model for process definition sounds like a good idea. Luckily, there's <a href="http://msdn2.microsoft.com/en-us/netframework/aa663328.aspx">existing platform infrastructure</a> that helps you out here. But beyond that, I can't think of a flexibility requirement that I'm so sure of that I'm willing to take on the additional complexity.</p><p>Again, I'm not saying efficiency or agility (or integration for that matter) are bad things. I'm saying they're a tough sell to the business in the absence of specific scenarios. Selling the business on automating the ordering processing is feasible. Selling the business on building out integration infrastructure because some future project will leverage it is much tougher. If you can sell them on it, either because the company is particularly forward thinking or because you can sell ice to Eskimos, then more power to you. But for the rest of us, better to focus on specific scenarios that the business will value and keep the integration details under wraps.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1039</wp:post_id>
		<wp:post_date>2007-09-04 10:08:09</wp:post_date>
		<wp:post_date_gmt>2007-09-04 10:08:09</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>the-integration-business-case-continued</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="agile"><![CDATA[Agile]]></category>
		<category domain="category" nicename="architecture"><![CDATA[Architecture]]></category>
		<category domain="post_tag" nicename="business-intelligence"><![CDATA[Business Intelligence]]></category>
		<category domain="post_tag" nicename="integration"><![CDATA[Integration]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[fd2ea7fb-ce18-4105-8634-5181731d6fa4]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[The+Integration+Business+Case+Continued]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/09/04/The+Integration+Business+Case+Continued]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>The DevHawk 2007 World Tour</title>
		<link>http://devhawk.net/2007/09/04/the-devhawk-2007-world-tour/</link>
		<pubDate>Tue, 04 Sep 2007 11:00:38 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://1c8a745d-5d6d-4d27-9f91-2b96fff5f8f3</guid>
		<description></description>
		<content:encoded><![CDATA[<p>After spending almost all of fiscal year 07 (July '06 thru June '07) <em>not </em>traveling and <em>not</em> presenting, I'm going to be doing a few public talks to finish out the year. If you, dear reader, are going to one of these please <a href="mailto:harry.pierson@microsoft.com" target="_blank">drop me a line</a>. Invariably, it's the side meetings and discussions that are the most valuable at these conferences. </p><p><strong><u><a href="http://www.iasahome.org/web/socal/itarc2007" target="_blank"><font size="4">IT Architect Regional Conference 2007</font></a><br /></u></strong>October 15th - 16th, San Diego, CA</p><p>I'm a huge fan of <a href="http://www.iasahome.org" target="_blank">IASA</a>, so I'm thrilled to be doing their west regional conference. I've presented to a packed house for the local chapter before, so I think these folks will put on a good conference. They sure have a good selection of <a href="http://www.iasahome.org/web/itarc/socal/topics" target="_blank">topics and speakers</a>.</p><p>My session is called "<a href="http://www.iasahome.org/web/itarc/socal/topics#HarryPierson" target="_blank">Moving Beyond Industrial Software</a>". Here's the abstract:</p><blockquote><p>Computers have been instrumental in ushering in the post-industrial age. Yet, most enterprises today are run with an industrial mindset and the IT department is organized like a factory. This creates a tension between the forces of industrialization that define the organization and the forces of post-industrialization that define today’s marketplace. For example, our post-industrial world is becoming more decentralized by the day. Yet many organizations believe the key to a successful service oriented architecture – a very decentralized system design – is to have a central service repository.  </p><p>In this session, Harry Pierson will examine this tension, get you thinking outside the industrial mindset and help you think about software development in a post-industrial way.</p></blockquote><p>I'm very excited about this talk.</p><p><a href="http://www.mssoaandbpconference.com/" target="_blank"><font size="4"><strong>MS SOA &amp; Business Process Conference</strong></font></a><br />October 29th - November 2nd, Redmond, WA</p><p>I'm not presenting at MSSOABPC (that's a mouthful) but looks like most of my team is going. So if you're going and want to hang out with the guys who are doing this stuff in the trenches @ MSIT, let me know. Also, <a href="http://devhawk.net/2007/08/03/Morning+Coffee.aspx" target="_blank">I put out the call</a> for anyone interested in a geek dinner. From the <a href="http://www.mssoaandbpconference.com/agenda.htm" target="_blank">agenda</a>, looks like they're keeping us busy until 8pm every night Mon-Wed, so we can either a) have geek dinner Thursday or Friday or b) have geek beers after one of the receptions in the early part of the week.</p><p><a href="http://www.pnpsummit.com/west2007.aspx" target="_blank"><strong><font size="4">patterns &amp; practices Summit USA West</font></strong></a><br />November 5th - 9th, Redmond, WA  </p><p>I did the p&amp;p Summit back in 2005, a very successful debut of my Developer 2.0 talk. (I'm doing that talk at a different conference this year, details below.) This year, I'm not 100% sure what I'm going to talk about yet. I'm currently slated to talk about the Rome project that I'm doing in MSIT, but given our current slow progress on that project, I'm probably going to talk about something else. I'm thinking either the "Moving Beyond Industrial Software" talk described above or the "Facing the Fallacies of Distributed Computing" talk described below. Any other suggestions?  </p><p><a href="http://devteach.com/" target="_blank"><strong><font size="4">DevTeach Vancouver 2007</font></strong></a><br />November 26th - 30th, Vancouver, BC</p><p>This is a brand new experience for me. Frankly, I'd never heard of DevTeach before my friend <a href="http://www.mariocardinal.com/blog/" target="_blank">Mario Cardnial</a> suggested I submit a couple of sessions. Since it's only a few hours drive away, I'm bringing the family along. We'll see how that goes. And when I'm not doing my sessions or hanging out with the family, I might take in a session or two in the <a href="http://devteach.com/Session.aspx#79" target="_blank">XNA track</a>.</p><p>Here are the sessions I'm doing:</p><blockquote><p><u><a href="http://devteach.com/wconnect/wc.dll?FournierTransformation~1,5,1,1017" target="_blank"><strong>Developer 2.0<br />Finding Your Way in the Future of Software Development</strong></a></u><br />The one constant in software development is change. Software development in 2007 is dramatically different than it was in 2000, which was in turn dramatically different than in 1993. You can be guaranteed that the platforms, languages, and tools will continue to evolve. Learn how Harry Pierson, Architect in Microsoft IT, believes software development is going to evolve in the next five years and what you must do today to remain competitive. </p></blockquote><blockquote><p><u><strong><a href="http://devteach.com/wconnect/wc.dll?FournierTransformation~1,5,1,1019" target="_blank">Facing the Fallacies of Distributed Computing</a><br /></strong></u>Sun Fellow Peter Deutsch is credited with authoring "The Eight Fallacies of Distributed Computing". These are near-universal assumptions about distributed systems that “All prove to be false in the long run and all cause big trouble and painful learning experiences.” In this session, we will examine these fallacies in depth and learn how to avoid them on the Windows platform by leveraging Web Services, WCF and SQL Service Broker.</p></blockquote>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1038</wp:post_id>
		<wp:post_date>2007-09-04 11:00:38</wp:post_date>
		<wp:post_date_gmt>2007-09-04 11:00:38</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>the-devhawk-2007-world-tour</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="architecture"><![CDATA[Architecture]]></category>
		<category domain="post_tag" nicename="community"><![CDATA[Community]]></category>
		<category domain="post_tag" nicename="presentation"><![CDATA[Presentation]]></category>
		<category domain="post_tag" nicename="travel"><![CDATA[Travel]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[1c8a745d-5d6d-4d27-9f91-2b96fff5f8f3]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[The+DevHawk+2007+World+Tour]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/09/04/The+DevHawk+2007+World+Tour]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>The F5 High</title>
		<link>http://devhawk.net/2007/09/11/the-f5-high/</link>
		<pubDate>Tue, 11 Sep 2007 10:35:02 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://1690fc91-9106-4224-8d95-8cae344858a9</guid>
		<description></description>
		<content:encoded><![CDATA[A while back, my good friend and MAAB cohort <a href="http://www.inrule.com/company/team-lg.aspx" target="_blank">Loren Goodman</a> sent me the following. I was <em>hoping </em>he'd start his own blog and post it (and other stuff) there. But he's busy working on other things these days, so I doubt he'll get to the whole blogging thing anytime soon. So I offered to post it here rather than have it sit gathering virtual dust. Enjoy.

Update: I got the timeline wrong. Loren sent me this and I offered to post it. He didn't ask me to post it originally as I originally wrote. Sorry about that, Loren.

<hr />

<h3>The F5 High</h3>
<h4>Hunting and farming in the next generation of software development</h4>
A little while ago I was having an intense discussion with a colleague of mine Scott Colestock while we were both out at Microsoft.  We were discussing the ever present need some developers have to build things themselves instead of looking for something to leverage or using an off the shelf product.  After we were postulating a couple of off the wall, overly judgmental and holier than thou theories behind this phenomenon, Scott said something that really hit home and opened my eyes to an interesting explanation of what might really be going on.  He offhandedly said maybe it is not about ego or fear of less than adequate solutions at all; maybe it is actually bout the F5 high instead.  The F5 high… hmmm have not heard of that one.  What is the F5 high I asked him?  The F5 high, you know, that feeling you get when you hit F5 in the development environment and something happens.  Come on, admit it, It feels good.  As I took in the idea, I realized that he was totally right, it does feel good, it is a sense of accomplishment, it is an ultra quick hit, and more importantly, it makes us want to do it again.  This simple button and the rote process wrapped around it is a gateway to experiencing indisputable proof of our own creativity.  So to some extent, we are able to become our own dealer, dolling out small packets of that near harmless drug called satisfaction whenever we want.    So after this grand near religious realization of our true essence and this new found understanding behind that very special little key, we moved back on topic and continued our discussion about architecture.

Later on I was replaying the discussion between Scott and I with another colleague of mine, Jon Tobey.  Jon is one of the most avid fisherman I know.  Right in the middle of my F5 story, just when I thought mans greatest revelation had been already been achieved, if you can even imaging anything greater, he proceeded to add yet another improvement to the growing theory.  He took the F5 high concept and explained it in the context of fishing.  As a sportsman, fishing is about the hunt, it is about the building feeling you get when there is a bite and the exhilaration that courses through your veins as you attempt to catch and reel in the unknown trophy on the other end of you line.  In the case of fishing, we don’t even keep the fish, we throw it back for reuse.  Considering that we return the fish to the pond or stream from which we caught it, fishing is clearly much more about the rewards of the process and not about the value proposition of the actual fish.

If we approached fishing trips like software projects there would be some very strange consequences.  Firstly, we would have to keep everything we caught – even if it is not a fish and even if we did not catch it.   Then we would bring them back to office and try and probably have to cram them though the little slots on the sharepoint server or something.  Reusing fish would be dramatically less fulfilling, we would just take the dead fish, somehow work a hook into its mouth, throw it across the floor, and then yank the rod with excitement on a par with a kid on the traveling carnival merry go round.  Then drag the lifeless fish corpse across the floor by reeling it in until it reached the end of our rod.  Take it off and throw it back across the floor, repeat.  Man, that sounds exciting doesn’t it?  So where does that leave us?  Right now we have a very smelly server closet and a bunch of drug crazed developers yanking dead fish around the office hoping to somehow score an F5 fix while wondering when fish serialization technology will reach the point where the rehydrated fish are slightly more exciting.  They are all very excited about the new social network called FishTank 2.0 where anyone can reel in anyone else’s dead fish.  This does not look good – I must need a quick hit of F5 - {F5} – crap, well not so exciting, it turns out that F5 in word fires up the find and replace box and I remain unfulfilled.

So it appears that good developers, aka hunters, need to do some fishing every once in a while to keep the monotony of eating fish every day in check.  For when this get too far out of balance, the devs usually start using the project managers as the fish and the requirements of the project as the river.  They bait the project managers and try to yank them off the page and into something new, something that will give them that F5 fix they so desperately need.  When the PMs tell them NO, they might go to the users, a different company, who knows?]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1040</wp:post_id>
		<wp:post_date>2007-09-11 10:35:02</wp:post_date>
		<wp:post_date_gmt>2007-09-11 10:35:02</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>the-f5-high</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[1690fc91-9106-4224-8d95-8cae344858a9]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[The+F5+High]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/09/11/The+F5+High]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Morning Coffee 116</title>
		<link>http://devhawk.net/2007/10/08/morning-coffee-116/</link>
		<pubDate>Mon, 08 Oct 2007 16:57:40 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://65d3d053-c5e6-40be-9172-e50e8a9c14d4</guid>
		<description></description>
		<content:encoded><![CDATA[<p align="right">"Looks like I picked the wrong week to stop sniffing glue"<br />Steve McCroskey, Airplane!</p><ul><li>So it's been a while since my last post. Just over a month, not including <a href="http://devhawk.net/2007/09/11/The+F5+High.aspx" target="_blank">The F5 High</a>, which wasn't "original IP". Frankly, I just stopped reading pretty much cold turkey. I wanted and needed to go heads down on day job stuff for a while. Since I haven't been reading, Morning Coffee is going to be a little cold while I ramp back up. </li><li>The new NHL season is upon us, and the <a href="http://capitals.nhl.com/" target="_blank">Caps</a> are looking good so far. Obviously, they have the new uniforms, but they're also out to a 2-0 start for the first time in five years. And in those two games, they've only allowed one goal and are 100% on the PK. It's nice to see them start strong, but obviously there's a long way to go. Here's hoping the can stay strong all season. </li><li>Speaking of staying strong, the wheels that were rattling last week came off the Trojan bandwagon completely this week. I'm not sure it's as big an upset as <a href="http://scores.espn.go.com/ncf/recap?gameId=272440130" target="_blank">Appalachian State beating Michigan</a> but it's close. What happened to the team that scored 5 TD's in a row on Nebraska?  </li><li>Big news last week is that MSFT is going to release the source code to much of the .NET Framework. Scott Guthrie <a href="http://weblogs.asp.net/scottgu/archive/2007/10/03/releasing-the-source-code-for-the-net-framework-libraries.aspx" target="_blank">has the details</a>. Frankly, between Rotor &amp; Reflector, it wasn't like you couldn't see the source code anyway, so this seems like a no-brainer. But integrating it directly into the VS Debugging experience, that's frakking brilliant. </li><li>I haven't had a chance to install the new <a href="http://www.microsoft.com/downloads/details.aspx?FamilyID=4de12c98-1221-4a0e-b5aa-bfc7daf02550&amp;DisplayLang=en" target="_blank">XML Schema Designer (Aug 07 CTP)</a>  but I was really impressed with <a href="http://datajunkies.net/screencasts/XSD%20Designer%20Demo/XSD%20Designer%20Demo%20[skits].html" target="_blank">this video</a>. The <a href="http://blogs.msdn.com/xmlteam/archive/2007/08/27/announcing-ctp1-of-the-xml-schema-designer.aspx" target="_blank">XML Team blog</a> has more details. However, I'm not sure what the ship vehicle is. The CTP install on top of VS08 beta 2, but in the video they keep saying "a future version" of VS, implying that it's not going to be in VS08.  </li><li>Dare is <a href="http://www.25hoursaday.com/weblog/2007/09/18/MessageQueuesDenormalizationAndScalability.aspx" target="_blank">spending some time</a> investigating SSB. I think it's interesting that some of the REST crowd are starting to see the need for durable messaging. Dare argues that the features and usage models are more important than wire protocol. As long as it's standardized, I don't care that much about the protocol. Several of the REST folks mentioned <a href="http://en.wikipedia.org/wiki/AMQP" target="_blank">AMQP</a>. While I've got nothing against AMQP technically (frankly, I haven't read the spec), but what does it say about durable messaging vendors (including MSFT) that a <a href="http://en.wikipedia.org/wiki/JPMorgan_Chase_%26_Co." target="_blank">financial institution</a> felt the need to drive an interoperable durable messaging specification?</li></ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1041</wp:post_id>
		<wp:post_date>2007-10-08 09:57:40</wp:post_date>
		<wp:post_date_gmt>2007-10-08 16:57:40</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>morning-coffee-116</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="blogging"><![CDATA[Blogging]]></category>
		<category domain="post_tag" nicename="college-football"><![CDATA[College Football]]></category>
		<category domain="post_tag" nicename="hockey"><![CDATA[Hockey]]></category>
		<category domain="category" nicename="morning-coffee"><![CDATA[Morning Coffee]]></category>
		<category domain="post_tag" nicename="service-broker"><![CDATA[Service Broker]]></category>
		<category domain="post_tag" nicename="washington-capitals"><![CDATA[Washington Capitals]]></category>
		<category domain="post_tag" nicename="xml"><![CDATA[XML]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[65d3d053-c5e6-40be-9172-e50e8a9c14d4]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Morning+Coffee+116]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/10/08/Morning+Coffee+116]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Morning Coffee 117</title>
		<link>http://devhawk.net/2007/10/09/morning-coffee-117/</link>
		<pubDate>Tue, 09 Oct 2007 09:05:12 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://51ab3d8a-fa61-46aa-ad74-6139a426ca27</guid>
		<description></description>
		<content:encoded><![CDATA[<ul><li>Quick update to the DevHawk 2007 World Tour: I won't be making it to the <a href="http://www.mssoaandbpconference.com/" target="_blank">SOA &amp; BP Conference</a>. Riley's having her tonsils out. As much as I'd like to hang with my geek peeps, family is the priority. But I can still make an evening event or geek dinner later in the week if anyone is game. </li><li>Caps season-opening winning streak <a href="http://www.nhl.com/scores/htmlreports/20072008/GS020036.HTM" target="_blank">continues</a>. Still 100% on the PK, though the <a href="http://japersrink.blogspot.com/2007/10/early-power-outage-no-cause-for.html" target="_blank">power play is pretty anemic</a>. As I said yesterday, it's WAAAAY to early in the season to start bragging, but starting strong is much better than starting weak.  </li><li>Speaking of hockey, looks like the <a href="http://www.variety.com/article/VR1117973647.html?categoryid=14&amp;cs=1&amp;nid=2562" target="_blank">NHL Network is launching</a> in the US this month (it's been available in Canada since 2001). Also, <a href="http://www.nhl.tv/" target="_blank">NHL.tv</a> is up and running. Those wishing to see Caps highlights can go directly to <a href="http://Capitals.NHL.tv" target="_blank">Capitals.NHL.tv</a>. Unfortunately, if you want to see full games, you've got to subscribe to <a href="http://www.indemand.com/sports/nhl/" target="_blank">Center Ice</a> or <a href="http://www.nhl.com/nhlhq/centerice_online.html" target="_blank">Center Ice Online</a> to the tune of $150. But I don't want to get "up to 40 games each week", I just want the Caps games. Between the time zone difference and kids, it's not like I have time to watch that much hockey anyway. Why can't I subscribe to just the Caps games online for say $25 a season?  </li><li>Finished <a href="http://www.xbox.com/games/halo3" target="_blank">Halo 3</a> Sunday night. Fun game and a great end of the trilogy. Looking forward to what the <a href="http://www.bungie.net/News/content.aspx?type=news&amp;cid=12835" target="_blank">newly-independent</a> Bungie does next. Something tells me we haven't seen the last of Master Chief. However, I do think <a href="http://www.xbox.com/games/bioshock" target="_blank">Bioshock</a> has better and more original storytelling. <a href="http://www.xbox.com/games/masseffect/" target="_blank">Mass Effect</a> looks like it'll be better still.  </li><li>Sam Gentile <a href="http://samgentile.com/blogs/samgentile/archive/2007/09/26/wcf-soa-tips-from-neudesic-dave-pallmann.aspx" target="_blank">pointed out</a> that his Neudesic colleague David Pallmann has posted a <a href="http://davidpallmann.spaces.live.com/?_c11_BlogPart_BlogPart=blogview&amp;_c=BlogPart&amp;partqs=cat%3dWCF" target="_blank">series of WCF tips</a>. Several of them are right on the money like "<a href="http://davidpallmann.spaces.live.com/blog/cns!E95EF9DC3FDB978E!257.entry" target="_blank">Take Advantage of One Way Operations</a>" and "<a href="http://davidpallmann.spaces.live.com/blog/cns!E95EF9DC3FDB978E!261.entry" target="_blank">Use a Discovery Mechanism to Locate Services</a>". However, I can't agree with "<a href="http://davidpallmann.spaces.live.com/blog/cns!E95EF9DC3FDB978E!257.entry" target="_blank">Maintain a Service Catalog</a>". David warns that if you don't, "The left hand won’t know what the right hand is doing." Of course, that's probably the case regardless of how you maintain your service catalog. And "<a href="http://davidpallmann.spaces.live.com/blog/cns!E95EF9DC3FDB978E!263.entry" target="_blank">Retry on minor failures</a>"? That's fine, if you've got an <a href="http://dictionary.reference.com/browse/idempotent" target="_blank">idempotent</a> operation. Unfortunately, most non-read operations aren't idempotent unless you take the time to design them that way. And most people don't.  </li><li>Speaking of Sam, he's <a href="http://samgentile.com/blogs/samgentile/archive/2007/10/06/goodbye-codebetter-and-alt-net.aspx" target="_blank">blown up his CodeBetter blog</a> and <a href="http://samgentile.com/blogs/samgentile/archive/2007/10/07/codebetter-and-alt-net-the-short-version.aspx" target="_blank">walked away from the ALT.NET crowd</a>. I've <a href="http://devhawk.net/2007/06/13/Morning+Coffee+89.aspx" target="_blank">not been a fan</a> of this ALT.NET stuff since it surfaced - as Sam said, "ALT.NET is a divisive thing" - so I'm happy to see my good friend walk away from it.  </li><li>Speaking of ALT.NET, Scott Hanselman blogged about <a href="http://www.hanselman.com/blog/ScottGuMVCPresentationAndScottHaScreencastFromALTNETConference.aspx" target="_blank">previewing the new ASP.NET MVC Framework</a> at the ALT.NET conference. Like Sam, Scott thinks the term ALT.NET is "too polarizing". I like Scott's suggestion for Pragmatic.NET. Oh, and the MVC framework stuff looks cool too.  </li><li>Reading <a href="http://www.25hoursaday.com/weblog/2007/10/06/OAuth10IsHereDelegatedAuthorityComesToMashups.aspx" target="_blank">Dare's description of OAuth</a> gave me a <a href="http://www.amazon.com/Microsoft-NET-My-Services-Specification/dp/073561556X" target="_blank">distinct sensation of deja-vu</a>.</li></ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1042</wp:post_id>
		<wp:post_date>2007-10-09 09:05:12</wp:post_date>
		<wp:post_date_gmt>2007-10-09 09:05:12</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>morning-coffee-117</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="asp-net"><![CDATA[ASP.NET]]></category>
		<category domain="post_tag" nicename="hockey"><![CDATA[Hockey]]></category>
		<category domain="post_tag" nicename="media-2-0"><![CDATA[Media 2.0]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<category domain="post_tag" nicename="washington-capitals"><![CDATA[Washington Capitals]]></category>
		<category domain="post_tag" nicename="wcf"><![CDATA[WCF]]></category>
		<category domain="post_tag" nicename="web-2-0"><![CDATA[Web 2.0]]></category>
		<category domain="post_tag" nicename="xbox-360"><![CDATA[Xbox 360]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[51ab3d8a-fa61-46aa-ad74-6139a426ca27]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Morning+Coffee+117]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/10/09/Morning+Coffee+117]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>2580</wp:comment_id>
			<wp:comment_author><![CDATA[Don Demsak]]></wp:comment_author>
			<wp:comment_author_email>don@donxml.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.donxml.com</wp:comment_author_url>
			<wp:comment_author_IP>70.107.239.168</wp:comment_author_IP>
			<wp:comment_date>2007-10-09 12:37:13</wp:comment_date>
			<wp:comment_date_gmt>2007-10-09 19:37:13</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[The funny thing is, Dave Laribee was never a big fan of the ALT.Net name either, and he coined it.  This blog thing has a bit more power than we realize, sometimes.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Throwing Gasoline on the Fire</title>
		<link>http://devhawk.net/2007/10/09/throwing-gasoline-on-the-fire/</link>
		<pubDate>Tue, 09 Oct 2007 12:56:11 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://1458334d-e700-44fc-9100-35a602ca3449</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Steve Vinoski has raised a bit of a <a href="http://www.technorati.com/search/http%3A%2F%2Fsteve.vinoski.net%2Fblog%2F2007%2F10%2F04%2Fthe-esb-question%2F" target="_blank">flame war</a> by admitting he has <a href="http://steve.vinoski.net/blog/2007/10/04/the-esb-question/" target="_blank">lost the ESB religion</a>. Given that I've <a href="http://devhawk.net/2007/04/25/Enterprise+Service+Bus+Give+Me+An+Extra+Special+Bitter+Instead.aspx" target="_blank">never been a fan of ESB's</a> anyway, there's a lot there that I agree with. In particular I liked the description of "magical framework" middleware, blaming enterprise architects for driving ESB's as the "single integration architecture" even though a single *anything* in the enterprise is untenable and his point that flexibility means you don't do any one thing particularly well. </p><p>However, Steve goes on to bash compiled languages and WS-* while suggesting the One True Integration Strategy™ is REST + &lt;insert your favorite dynamic language here&gt;, then <a href="http://steve.vinoski.net/blog/2007/10/06/the-degenerating-esb-discussion/" target="_blank">acts surprised</a> that the conversation denigrates into "us vs. them". When you start by saying that compiled language proponents "natter on pointlessly", I think you lose your right to later lament the depreciating level of conversation .</p><p>All programming languages provide their own unique model of the execution environment.  Dynamic languages have a very different model than compiled languages. Arguing that this or that model is better for everyone, everywhere, in all circumstances seems unbelievably naive and arrogant at the same time. </p><p>On the other hand, I do agree with Steve's point that most developers only know a single programming language, to their detriment. One language developers often miss a better solution because their language of choice doesn't provide the right semantics to solve the problem at hand. Developers could do a lot worse than learn a new language. And I don't mean a C# developer should learn VB. </p><p>The most pressing example of picking the right language for the right problem today is multi-threading. Most languages - including dynamic languages - have shitty concurrency semantics. If you're building an app to take advantage of many-core processing, "mainstream" apps like C#, Java and Ruby won't help you much. But we're starting to see languages with native concurrency semantics like Erlang. Erlang is dynamically typed, but that's not what makes it interesting. It's interesting because of it's native primitives for spawning tasks. I don't see why you couldn't add similar primitives for task spawning to a compiled functional language like <a href="http://research.microsoft.com/fsharp/fsharp.aspx" target="_blank">F#</a>. </p><p>As for REST vs. SOAP/WS-*, I thought it was interesting that Steve provided no rationale whatsoever for why you should avoid them. The more I listen to this <strike>pissing match </strike>debate, the more I think the various proponents are arguing over unimportant syntactical details when the semantics are basically the same. SOAP is just a way to add metadata to an XML message, much as HTTP headers are. WS-* provides a set of <em><u>optional</u></em> message-level capabilities for handling cross-cutting concerns like security. Past that, are the models really that different? Nope. </p><p>For system integration scenarios like Steve is talking about, I'm not sure how important any of the WS-* capabilities are. Security? I can get that at the transport layer (aka HTTPS). Reliable Messaging? If I do request/response (which REST excels at), I don't need RM. Transactions? Are you kidding me? Frankly, the only capability you <em>really</em> need in this scenario is idempotence, and neither REST or SOAP provides any standard mechanism to achieve that. (more on that in a later post)</p><p>I understand that some vendors are taking the WS-* specs and building out huge centralized infrastructure products and calling them ESBs. I think Steve is primarily raging against that, and on that point I agree 100%. But Steve sounds like he's traded one religion for another - "Born Again REST". For me, picking the right tool for the job implies much less fanaticism than Steve displays in his recent posts. </p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1043</wp:post_id>
		<wp:post_date>2007-10-09 12:56:11</wp:post_date>
		<wp:post_date_gmt>2007-10-09 12:56:11</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>throwing-gasoline-on-the-fire</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="architecture"><![CDATA[Architecture]]></category>
		<category domain="post_tag" nicename="rest"><![CDATA[REST]]></category>
		<category domain="post_tag" nicename="soa"><![CDATA[SOA]]></category>
		<category domain="post_tag" nicename="web-services"><![CDATA[Web Services]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[1458334d-e700-44fc-9100-35a602ca3449]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Throwing+Gasoline+On+The+Fire]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/10/09/Throwing+Gasoline+On+The+Fire]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>2581</wp:comment_id>
			<wp:comment_author><![CDATA[Erik Johnson]]></wp:comment_author>
			<wp:comment_author_email>ejohnson@epicor.com</wp:comment_author_email>
			<wp:comment_author_url>http://appside.blogspot.com</wp:comment_author_url>
			<wp:comment_author_IP>206.114.176.75</wp:comment_author_IP>
			<wp:comment_date>2007-10-12 10:02:35</wp:comment_date>
			<wp:comment_date_gmt>2007-10-12 17:02:35</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[> I think the various proponents are arguing over unimportant syntactical
> details when the semantics are basically the same.

That was my point when I regurgitated some SOAP history a while back (http://appside.blogspot.com/2007/09/rest-by-way-of-soap.html).  

If you avoid the optional stuff and use good URI practices Doc-Lit is pretty much REST. ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Morning Coffee 118 - ITARC SoCal Edition</title>
		<link>http://devhawk.net/2007/10/18/morning-coffee-118-itarc-socal-edition/</link>
		<pubDate>Thu, 18 Oct 2007 19:18:00 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://d22cc6d8-edd6-4381-a0f1-b368d99e491f</guid>
		<description></description>
		<content:encoded><![CDATA[<p>I'm not back on blog sabbatical, but between finishing my presentation and attending <a href="http://www.iasahome.org/web/itarc/socal">ITARC SoCal</a> earlier this week - not to mention being sick - I didn't have time to write anything. Normal Morning Coffee resumes tomorrow, here's a summary of my notes from on my two days at ITARC.</p><ul><li><a href="http://www.ambysoft.com/">Scott Ambler</a> did the opening keynote on agile enterprise architecture strategy. </li><ul><li>He claims that success is more prevalent in the industry that people think, because the industry has a narrow definition of success. If you change (aka widen) the definition, the success rate goes way up! That's not exactly useful, but he referred to an as-yet-unpublished survey on project success rate that should be up on DDJ "soon". I'd like to see that raw data.</li><li>While I agree with most of his points, Scott's presentation style is very abrasive. For example, he makes the point that there is no one-size-fits-all process, which I couldn't agree with more. But does he say it like that? No, he says "Repeatable processes? What an incredibly stupid idea!" even though the room is full of folks who probably think repeatable process is actually a good idea. </li><li>Scott suggested that unit tests are the best way to specify requirements. I've heard this before from agile practitioners, but something nags at me about it. Certainly, having executable requirements is a huge plus. But how can you be sure they're the right requirements if the stakeholders can't read them?</li><li>This keynote setup what turned out to be a major theme for the conference - traditional vs. non-traditional enterprise architecture. Or as I would characterize it: Industrial vs. Post Industrial architecture. </li></ul><li><a href="http://simonguest.com/blogs/smguest/default.aspx">Simon Guest</a> presented on user experience in architecture, which is his specialty these days. He lays out a UX model that was very compelling. I'm not sure if there's a whitepaper version of this model (there should be) but you can see the model as he <a href="http://simonguest.com/blogs/smguest/archive/2007/06/21/Slides-from-San-Diego-UX-Summit.aspx">lays it out in powerpoint</a>. I've seen Simon's UX decks, but never actually seen him present it, so that was a treat. </li><li>I skipped Ted Neward's session in order to take in something new. So I went to see <a href="http://weblogs.java.net/blog/turbogeek/">Daniel Brookshier</a> of <a href="http://www.nomagic.com/">No Magic</a> talk about DoDAF - the <a href="http://en.wikipedia.org/wiki/DODAF">Dept. of Defense Architecture Framework</a>. I had met Daniel the night before at dinner and while No Magic primarily sells <a href="http://www.nomagic.com/text.php?lang=2&amp;item=232&amp;arg=206">UML modeling tools</a>, we seemed to agree that UML is most useful (in my opinion "at all useful") when you imbue the vanilla models with custom semantics - aka you turn them into a DSL. So while I liked hanging out with Daniel, his DoDAF session did nothing except ensure I never work for the DoD. There's no amount of money that's worth dealing with the two dozen or so bureaucratic models that are all wholly isolated from anything that actually executes. Daniel kept saying how easy these models are to build. I'm sure they are, but that's not the problem. Since they're not an intrinsic part of a construction process, they won't stay up to date. This was a very industrial approach - Daniel even stated at one point that he was "anti-Ambler". </li><li><a href="http://blogs.oracle.com/davidchappell/">David Chappell</a> did the second keynote on grid-enabled SOA.</li><ul><li>When did David join Oracle? I guess I haven't been paying much attention to competitors since I moved to MSIT.</li><li>There's an <a href="http://www.soamag.com/I10/0907-1.asp">article version</a> of this presentation available, but I haven't read it yet.</li><li>For me, the best part of this presentation was him acknowledging that there's a need for non-stateless services, something he has <a href="http://blogs.oracle.com/davidchappell/2007/09/27#a22">blogged about recently</a>. I'm not sure I agree with his framework for stateful interaction, but at least he's admitting that it's needed. Now if I could only convince the Connected Systems Division...</li><li>The rest of his talk was basically a sales pitch for the Coherence product Oracle recently bought. Basically, it's a huge, multi-node, redundant, in-memory database. While I'm sure there are a few high-end problems out there - my immediate thought was travel and David mentioned <a href="http://www.sabretravelnetwork.com/">SABRE</a> is one of their customers - this is not a good general purpose solution, though David was positioning it as such.</li></ul><li>My talk on "Moving Beyond Industrial Software" was after the second keynote. It was good, if sparsely attended. I'm doing it again @ the <a href="http://www.pnpsummit.com/west2007.aspx">p&amp;p Summit</a> so I'll post the slides and hopefully a recording after that.</li><li>I skipped the last session of the day to decompress, so the next session I went to was the day two opening keynote by <a href="http://www.omg.org/news/about/contacts.htm#tek">Fred Waskiewicz</a>, OMG's Director of Standards. His talk, unsurprisingly, was on the value of standards - in particular, OMG's standards. This was about as anti-Ambler, anti-agile, pro-industrial a presentation as you could make. I'd heard this spiel before, so I mostly tuned out. I did challenge Fred on his point that the UML models are at a higher level of abstraction than code. They're not - they're a visualization and they're very useful, but they're at the exact same level of abstraction as code. That's why you can automatically generate the visualization in tools like Visual Studio's <a href="http://msdn.microsoft.com/vstudio/tour/vs2005_guided_tour/VS2005pro/Smart_Client/ClassDesign.htm">class designer</a>. Fred didn't have much of a response to my question, though he did point out that some models like Business Process Models are, in fact, higher levels of abstraction. </li><li>Next was what I thought was the best presentation of the entire show, IASA Founder <a href="http://www.iasahome.org/web/home/about/leadership">Paul Preiss</a> on what architects need to know. Note, I'm not brown-nosing Paul here - I'm the guy that first decided to commit Microsoft as an <a href="http://www.iasahome.org/c/portal/layout?p_l_id=PUB.1.159">IASA sponsor</a>, so he has to like me even if I thought his session was crap. Paul talked about architect as a career, comparing it to doctors. He worries that he's over-using that analogy, but software architect has much more in common career wise than it does with building architects IMO. I wonder where one might do their architecture residency? He also thinks of architects as "living governance", saying that project managers answer to the stakeholders while architects are beholden to the stockholders. I like that approach to governance.</li><li>Finally, I attended Vince Casarez's session on Web 2.0 in the enterprise. Vince is an Oracle VP and this turned into a sales pitch like David Chappell's keynote did. I'm not sure what product it was, but it reminded me of QEDWiki from IBM that I <a href="http://devhawk.net/2006/03/08/Rod+Smith+On+Do+It+Yourself+IT.aspx">saw at ETech last year</a>, which isn't a complement. If you're going to build an enterprise mashup designer, is it just me or is "lots of code spew" a poor model. Why not go for something like <a href="http://www.popfly.ms/">Popfly</a> or <a href="http://pipes.yahoo.com/pipes/">Pipes</a>? </li><li>I left early the second day in order to get home before my kids went to sleep (which I failed at due to lack of naptime). Overall, the conference was pretty good, though a bit sparsely attended in part I think because they held it in San Diego. The Orange Country IASA user group is very popular, so I don't understand why they didn't just hold it around there somewhere. Live and learn, I guess. They did have to postpone the DC event until next year sometime. Here's hoping I get invited to that as well as well as ITARC SoCal '08 (note, that *is* brown-nosing a bit)</li></ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1044</wp:post_id>
		<wp:post_date>2007-10-18 12:18:00</wp:post_date>
		<wp:post_date_gmt>2007-10-18 19:18:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>morning-coffee-118-itarc-socal-edition</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="agile"><![CDATA[Agile]]></category>
		<category domain="post_tag" nicename="domain-specific-languages"><![CDATA[Domain Specific Languages]]></category>
		<category domain="post_tag" nicename="iasa"><![CDATA[IASA]]></category>
		<category domain="post_tag" nicename="modelling"><![CDATA[Modelling]]></category>
		<category domain="category" nicename="morning-coffee"><![CDATA[Morning Coffee]]></category>
		<category domain="post_tag" nicename="web-2-0"><![CDATA[Web 2.0]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[d22cc6d8-edd6-4381-a0f1-b368d99e491f]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Morning+Coffee+118+ITARC+SoCal+Edition]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/10/18/Morning+Coffee+118+ITARC+SoCal+Edition]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>2582</wp:comment_id>
			<wp:comment_author><![CDATA[Dennis Mulder]]></wp:comment_author>
			<wp:comment_author_email>dennis.mulder@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.dennismulder.net</wp:comment_author_url>
			<wp:comment_author_IP>72.254.32.139</wp:comment_author_IP>
			<wp:comment_date>2007-10-29 22:14:15</wp:comment_date>
			<wp:comment_date_gmt>2007-10-30 05:14:15</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[The Oracle David Chappell is not the same David you mean:
www.davidchappell.com. Funny to see both move around in the same space. That happens with common names. I have the same issue here in the Netherlands.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Morning Coffee 119</title>
		<link>http://devhawk.net/2007/10/19/morning-coffee-119/</link>
		<pubDate>Fri, 19 Oct 2007 10:27:49 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://43f1f524-ca47-4ebb-ac2f-69cb6c7a9969</guid>
		<description></description>
		<content:encoded><![CDATA[<ul><li>The biggest news of the week IMHO is Soma <a href="http://blogs.msdn.com/somasegar/archive/2007/10/17/f-a-functional-programming-language.aspx" target="_blank">announcing</a> the formation of an F# product team. Specifically, they will "fully integrate the F# language into Visual Studio and continue innovating and evolving F#." Though Soma calls F# "another first-class programming language on the CLR", I get the feeling there won't be a "Visual F#" sku. Don Syme has <a href="http://blogs.msdn.com/dsyme/archive/2007/10/17/s-somasegar-on-taking-f-forward.aspx" target="_blank">more on the news</a>. </li><li>In other Soma <a href="http://blogs.msdn.com/somasegar/archive/2007/10/18/popfly-beta.aspx" target="_blank">announcement news</a>, <a href="http://www.popfly.com/" target="_blank">Popfly</a> is now in beta. More <a href="http://popflyteam.spaces.live.com/blog/cns!51018025071FD37F!264.entry" target="_blank">details on what's new</a> on the Popfly Team Blog. I haven't played with Popfly in depth, but I think it's got huge potential. </li><li>Scott Guthrie <a href="http://weblogs.asp.net/scottgu/archive/2007/10/14/asp-net-mvc-framework.aspx" target="_blank">details</a> the upcoming ASP.NET MVC Framework. Personally, I'm not building web apps much these days, so I'm not really invested one way or the other. Given the interest in this approach, it's nice to see the ASP.NET team respond to the market, though I'm sure someone will complain that we're trying to kill off the various open-source MVC Web frameworks that have sprung up. </li><li>Over in Windows Live, they <a href="http://virtualearth.spaces.live.com/blog/cns!2BBC66E99FDCDB98!9276.entry" target="_blank">shipped a new version</a> of Live Search Maps, <a href="http://blogs.msdn.com/pix/archive/2007/10/18/do-you-use-flickr-then-check-out-windows-live-photo-gallery-beta.aspx" target="_blank">upgraded</a> WL Photo Gallery (which I've been digging) to support Flickr and shipped an <a href="http://www.liveside.net/blogs/main/archive/2007/10/18/update-to-windows-live-account-enables-linked-ids.aspx" target="_blank">update to WL Accounts</a> which allows you to link accounts.  </li><li>The Clarius folks keep churning out great tools for software factory developers. The latest is the <a href="http://www.t4editor.net/" target="_blank">T4 editor</a>, which brings intellisense, color syntax highlighting and property inspector support for Text Templating Transformation Toolkit (aka T4) files. T4 files are used for code generation in both <a href="http://msdn2.microsoft.com/en-us/teamsystem/aa718368.aspx" target="_blank">DSL Toolkit</a> and <a href="http://msdn2.microsoft.com/en-us/teamsystem/aa718948.aspx" target="_blank">GAT</a>.  </li><li>David Pallman (again via <a href="http://samgentile.com/blogs/samgentile/archive/2007/10/09/new-and-notable-196.aspx" target="_blank">Sam Gentile</a>) <a href="http://davidpallmann.spaces.live.com/Blog/cns!E95EF9DC3FDB978E!266.entry" target="_blank">suggests</a> there are only three choices for infrastructure architecture: None/Point-to-point, Centralized/Hub-and-Spoke and Thin/Bus. I get the first two, but his explanation of the third goes to far into the "magic framework" category for my taste. "Physically distributed but logically centralized"? That doesn't make any sense to me at all.  </li><li>Fellowship of the Ring <a href="http://www.xbox.com/en-US/live/marketplace/moviestv/newline.htm" target="_blank">makes its way onto XBLM</a>. Alas, not in HD so I'll stick w/ my <a href="http://www.amazon.com/Lord-Rings-Fellowship-Platinum-Extended/dp/B000067DNF" target="_blank">extended four hour DVD version</a> thankyouverymuch. </li></ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1045</wp:post_id>
		<wp:post_date>2007-10-19 10:27:49</wp:post_date>
		<wp:post_date_gmt>2007-10-19 10:27:49</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>morning-coffee-119</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="asp-net"><![CDATA[ASP.NET]]></category>
		<category domain="post_tag" nicename="f-sharp"><![CDATA[F#]]></category>
		<category domain="category" nicename="morning-coffee"><![CDATA[Morning Coffee]]></category>
		<category domain="post_tag" nicename="software-factories"><![CDATA[Software Factories]]></category>
		<category domain="post_tag" nicename="visual-studio"><![CDATA[Visual Studio]]></category>
		<category domain="post_tag" nicename="windows-live"><![CDATA[Windows Live]]></category>
		<category domain="post_tag" nicename="xbox-360"><![CDATA[Xbox 360]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[43f1f524-ca47-4ebb-ac2f-69cb6c7a9969]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Morning+Coffee+119]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/10/19/Morning+Coffee+119]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Morning Coffee 120</title>
		<link>http://devhawk.net/2007/10/25/morning-coffee-120/</link>
		<pubDate>Thu, 25 Oct 2007 09:50:30 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://d30b76c1-a10f-4249-a803-1e86c939f012</guid>
		<description></description>
		<content:encoded><![CDATA[<ul><li>Doing these morning coffee posts is a lot tougher since I cut back my blog reading. Where I used to have no trouble finding 4-5 coffee-worthy items every day, these days I seem to only get 1-2, if that. </li><li>After starting off 3-0 and 100% on the PK, the Caps dropped four in a row and have been miserable on special teams. The special teams woes continued <a href="http://www.nhl.com/scores/htmlreports/20072008/GS020126.HTM" target="_blank">last night against the Lightning</a>, but they still won. Caps went 0-4 on the powerplay, and coughed up a short handed goal. But they also went 3-3 on the PK, so I guess it wasn't all bad. Maybe my mother will stop calling for Hanlon's job now. It's a long season and as Peerless Prognosticator points out, <a href="http://peerlessprognosticator.blogspot.com/2007/10/rebuild-is-not-over.html" target="_blank">the rebuild isn't over</a>. </li><li>Jomo Fisher, who helped Scott Hanselman <a href="http://www.hanselman.com/blog/MixingLanguagesInASingleAssemblyInVisualStudioSeamlesslyWithILMergeAndMSBuild.aspx" target="_blank">auto-merge assemblies</a>, has been <a href="http://blogs.msdn.com/jomo_fisher/archive/tags/F_2300_/default.aspx" target="_blank">digging around in F#</a> of late. As it turns out, he's <a href="http://blogs.msdn.com/dsyme/archive/2007/10/17/s-somasegar-on-taking-f-forward.aspx" target="_blank">joining the F# team</a> so I'm thinking it's not a huge stretch for him. If you're a C# developer trying interested in getting a handle on this new F# thing, his blog is a good place to start. </li><li>Speaking of F#, Don Syme posts about yet another new F# feature: <a href="http://blogs.msdn.com/dsyme/archive/2007/10/11/introducing-f-asynchronous-workflows.aspx" target="_blank">Async Workflows</a>. Workflow is a bad term here IMO since it can be easily confused with <a href="http://wf.netfx3.com/" target="_blank">WF</a>. Regardless of it's name, Async Workflows is about making <a href="http://msdn2.microsoft.com/en-us/library/ms228969.aspx" target="_blank">.NET's Async Programming model</a> a first class citizen in F#. Robert Pickering has a good post <a href="http://strangelights.com/blog/archive/2007/10/15/1599.aspx" target="_blank">explaining</a> how this new feature works. </li><li>Microsoft sure has a lot of multi-threading / async-programming tools coming out. In addition to F# Async Workflows, there's the <a href="http://msdn2.microsoft.com/en-us/library/bb905422.aspx" target="_blank">Concurrency and Coordination Runtime</a>, <a href="http://msdn.microsoft.com/msdnmag/issues/07/10/PLINQ/default.aspx" target="_blank">Parallel LINQ</a> and the <a href="http://msdn.microsoft.com/msdnmag/issues/07/10/Futures/default.aspx" target="_blank">Task Parallel Library</a>. I would hope all this work eventually coalesces as a coherent product offering.  </li><li>Now that F# is <a href="http://blogs.msdn.com/somasegar/archive/2007/10/17/f-a-functional-programming-language.aspx" target="_blank">being "producized"</a>, I wonder if the language evolution will slow down. Async workflows were introduced in F# 1.9.2.9. Other recent changes include <a href="http://blogs.msdn.com/dsyme/archive/2007/09/22/some-details-on-f-computation-expressions-aka-monadic-or-workflow-syntax.aspx" target="_blank">Computation Expressions</a> (v1.9.2), <a href="http://blogs.msdn.com/dsyme/archive/2007/08/01/introducing-use-bindings-in-f-1-9-2.aspx" target="_blank">Use Bindings</a> (v1.9.2) and <a href="http://blogs.msdn.com/dsyme/archive/2007/04/07/draft-paper-on-f-active-patterns.aspx" target="_blank">Active Patterns</a> (v1.9.1). F# seems to churn more in minor releases than C# does in major releases. Of course, that's because F# was a research project, not a "real" product. Now that it's going to be a product, will the rate of innovation slow?</li></ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1046</wp:post_id>
		<wp:post_date>2007-10-25 09:50:30</wp:post_date>
		<wp:post_date_gmt>2007-10-25 09:50:30</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>morning-coffee-120</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="concurrency"><![CDATA[Concurrency]]></category>
		<category domain="post_tag" nicename="f-sharp"><![CDATA[F#]]></category>
		<category domain="category" nicename="morning-coffee"><![CDATA[Morning Coffee]]></category>
		<category domain="post_tag" nicename="washington-capitals"><![CDATA[Washington Capitals]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[d30b76c1-a10f-4249-a803-1e86c939f012]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Morning+Coffee+120]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/10/25/Morning+Coffee+120]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>2583</wp:comment_id>
			<wp:comment_author><![CDATA[Tomas Restrepo]]></wp:comment_author>
			<wp:comment_author_email>tomas@winterdom.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.winterdom.com/weblog/</wp:comment_author_url>
			<wp:comment_author_IP>200.116.179.191</wp:comment_author_IP>
			<wp:comment_date>2007-10-25 12:54:20</wp:comment_date>
			<wp:comment_date_gmt>2007-10-25 19:54:20</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[F# won't "slow down", it will just start coming in 3-5 year increments ;) (seriously, of course it would slow down, bureaucracy must be served!)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>The Worst of Both Worlds</title>
		<link>http://devhawk.net/2007/10/25/the-worst-of-both-worlds/</link>
		<pubDate>Thu, 25 Oct 2007 10:38:59 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://d1296dd7-ebfe-430f-aebe-cfcc3d1b44ec</guid>
		<description></description>
		<content:encoded><![CDATA[<p>David Pallmann of Neudesic <a href="http://davidpallmann.spaces.live.com/Blog/cns!E95EF9DC3FDB978E!277.entry" target="_blank">responded</a> to my <a href="http://devhawk.net/2007/10/19/Morning+Coffee+119.aspx" target="_blank">comment</a> that "Physically distributed but logically centralized" didn't make any sense to me at all:</p><blockquote><p>What exactly does this mean? To some this may sound like a contradiction. </p><p>This simply means that a bus is <em>physically</em> more like the point-to-point architecture (spread out, no hub) but <em>functionally</em> more like the hub-and-spoke architecture (pub-sub messaging, centralized configuration and activity tracking, easy change management).</p></blockquote><p>Unfortunately, I wasn't confused about the seeming contradictory nature of these concepts. In other words, I understand the "what" and "how" of David's physically distributed/logically centralized approach. </p><p>I don't understand the "why". As in, "why would you want to do this?" or "why do you think this would work at any significant scale?". </p><p>If we check out Neudesic's page on <a href="http://www.neudesic.com/Main.aspx?SS=7&amp;PE=75" target="_blank">their ESB product</a> (which David pointed me to) we find the following blurb:</p><blockquote><p><strong><u>Centralized Management</u><br /></strong>The distributed nature of service oriented programming can create a management nightmare. Neuron·ESB supports this distributed architecture while simultaneously centralizing monitoring and configuration. </p></blockquote><p>SOA's "distributed nature" is it's primary strength. SOA's not primarily about standards or ease-of-connectivity - though those obviously play a role. It's about enabling decentralized decision making. Since you can't be both centralized and decentralized, enforcing centralized management basically negates SOA's primary strength. This seems like the worst of both worlds to me. All the hassle of distributed decision making combined with all the hassle of centralized management. </p><p>Yes, decentralized decision making can create a management nightmare. Personally, a management nightmare is much more attractive anything centralized approaches have ever delivered in the IT industry. </p><p>Dare Obasanjo recently wrote "<a href="http://www.25hoursaday.com/weblog/2007/10/20/IfYouFightTheWebYouWillLose.aspx" target="_blank">If You Fight the Web, You Will Lose</a>". He was talking about the Web as a Platform, but it's good general advice. Can you imagine applying the marketing blurb above to the Internet at large? </p><blockquote><p><strong><u>Centralized Management<br /></u></strong>The distributed nature of <strike>service oriented programming</strike> the Internet can create a management nightmare. Neuron·ESB supports this distributed architecture while simultaneously centralizing monitoring and configuration.</p></blockquote><p>If the Internet can somehow get by without centralized management, why can't you?</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1047</wp:post_id>
		<wp:post_date>2007-10-25 10:38:59</wp:post_date>
		<wp:post_date_gmt>2007-10-25 10:38:59</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>the-worst-of-both-worlds</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="architecture"><![CDATA[Architecture]]></category>
		<category domain="post_tag" nicename="soa"><![CDATA[SOA]]></category>
		<category domain="post_tag" nicename="web-2-0"><![CDATA[Web 2.0]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[d1296dd7-ebfe-430f-aebe-cfcc3d1b44ec]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[The+Worst+Of+Both+Worlds]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/10/25/The+Worst+Of+Both+Worlds]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>2584</wp:comment_id>
			<wp:comment_author><![CDATA[Oran]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>209.165.168.2</wp:comment_author_IP>
			<wp:comment_date>2007-10-25 15:36:56</wp:comment_date>
			<wp:comment_date_gmt>2007-10-25 22:36:56</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Does DNS count as centralized management for the internet?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>2585</wp:comment_id>
			<wp:comment_author><![CDATA[DevHawk]]></wp:comment_author>
			<wp:comment_author_email>harry@devhawk.net</wp:comment_author_email>
			<wp:comment_author_url>http://devhawk.net</wp:comment_author_url>
			<wp:comment_author_IP>24.16.13.109</wp:comment_author_IP>
			<wp:comment_date>2007-10-30 09:11:20</wp:comment_date>
			<wp:comment_date_gmt>2007-10-30 16:11:20</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[DNS isn't really management, it's addressing and naming. And it certainly isn't centralized. So I'd say, no it's not.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Morning Coffee 121</title>
		<link>http://devhawk.net/2007/10/30/morning-coffee-121/</link>
		<pubDate>Tue, 30 Oct 2007 15:44:49 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://bf213d84-62ee-4c7e-bf39-1259afd1ff5c</guid>
		<description></description>
		<content:encoded><![CDATA[<ul><li>My daughter had her tonsils &amp; adenoids out on yesterday. It was a routine procedure and it went by-the-numbers, but any parent will tell you it's hard to see your kid in a hospital bed. </li><li>Given the previous bullet, I'm not at the <a href="http://www.mssoaandbpconference.com/">SOA/BPM conference</a> for the <a href="http://www.microsoft.com/presspass/press/2007/oct07/10-30OsloPR.mspx">big announcement</a>. Don't worry, there's lots of other folks covering the news. </li><li>It was a crappy sports weekend in the Pierson house. Va Tech <a href="http://scores.espn.go.com/ncf/recap?gameId=272980259">snatched defeat from the jaws of victory</a>, Southern Cal <a href="http://scores.espn.go.com/ncf/recap?gameId=273002483">never led at Oregon</a>, the Capitals <a href="http://scores.espn.go.com/nhl/recap?gameId=271026023">lost</a><a href="http://scores.espn.go.com/nhl/recap?gameId=271027019">twice</a>, and the Redskins <a href="http://sports.espn.go.com/nfl/recap?gameId=271028017">got blown out by the Pats</a>. At least the Caps <a href="http://sports.espn.go.com/nhl/recap?gameId=271029021">won big yesterday</a> in Toronto. </li><li>Speaking of the Capitals, Peter Bondra <a href="http://www.nhl.com/nhl/app?articleid=341538&amp;page=NewsPage&amp;service=page">retired Monday</a>. I still think it's <a href="http://devhawk.net/2004/02/19/Doing+The+Unthinkable.aspx">a travesty</a> that he didn't spend his whole career in DC, but I've <a href="http://devhawk.net/2006/07/06/Meeting+Ted+Leonsis.aspx">made my peace</a> with it. </li><li>Nick Malik has a <a href="http://blogs.msdn.com/nickmalik/archive/2007/10/12/soa-and-the-cisr-operating-models.aspx">great series</a> on business operations models and how they apply to SOA. Regular readers should be unsurprised that I favor low standardization, though I can see the value of high integration. That makes the Coordinated Operating Model my fav, though I can see the benefit of the Diversified Model as well. I can't wait to read what Nick has to say on changing models. </li><li>Speaking of Nick, I'm doing a roundtable with him on "Making SOA Work in the Enterprise" @ the Strategic Architect Forum. Should be fun. Sorry for the lack of linkage on this, but it's an invite-only event. </li><li>Jezz Santos has a <a href="http://blogs.msdn.com/jezzsa/archive/2007/10/29/packaging-building-software-factories-series.aspx">new series of white papers</a> on building software factories. First up "<a href="http://msdn2.microsoft.com/en-us/library/bb880038.aspx">Packaging with Visual Studio 2005</a>" </li><li>Aaron Skonnard has <a href="http://pluralsight.com/blogs/aaron/archive/2007/10/29/48887.aspx">a new whitepaper</a> on using the WCF LOB Adapter SDK with BTS 2006 R2. I've been building one of these things recently, so I'm looking forward to checking that out. (via <a href="http://samgentile.com/blogs/samgentile/archive/2007/10/29/aaron-s-wcf-adapters-in-biztalk-server-r2-paper-up.aspx">Sam Gentile</a>) </li><li>Tim Ewald looks at Resource Oriented Architecture (when did ROA become a TLA?) and <a href="http://www.pluralsight.com/blogs/tewald/archive/2007/10/19/48805.aspx">wonders</a> "what if your problem domain is more focused on processes than data?" I wonder that all the time. (via <a href="http://weblogs.asp.net/gsusx/archive/2007/10/26/tim-on-roa-vs-get-and-post.aspx">Jesus Rodriguez</a>) </li><li>It's not just durable messaging - <a href="http://lsblog.wordpress.com/">Libor Soucek</a> also <a href="http://lsblog.wordpress.com/2007/10/26/missing-pragmatic-view-on-management-of-soa-based-system/">disagrees</a> with <a href="http://devhawk.net/2007/10/25/The+Worst+Of+Both+Worlds.aspx">my opinions</a> on centralized control. I agree 100% with Libor that centralized management would make operation's lives "much, MUCH easier" as he puts it. However, that doesn't make it feasible at any significant scale. Furthermore, I wouldn't describe an approach that requires that "all services adopt [the] same common management interface" as "pragmatic". Frankly, just <a href="http://dictionary.reference.com/browse/impractical">the opposite</a>. </li></ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1048</wp:post_id>
		<wp:post_date>2007-10-30 08:44:49</wp:post_date>
		<wp:post_date_gmt>2007-10-30 15:44:49</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>morning-coffee-121</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="biztalk"><![CDATA[BizTalk]]></category>
		<category domain="post_tag" nicename="family"><![CDATA[Family]]></category>
		<category domain="category" nicename="morning-coffee"><![CDATA[Morning Coffee]]></category>
		<category domain="post_tag" nicename="rest"><![CDATA[REST]]></category>
		<category domain="post_tag" nicename="soa"><![CDATA[SOA]]></category>
		<category domain="post_tag" nicename="software-factories"><![CDATA[Software Factories]]></category>
		<category domain="post_tag" nicename="washington-capitals"><![CDATA[Washington Capitals]]></category>
		<category domain="post_tag" nicename="wcf"><![CDATA[WCF]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[bf213d84-62ee-4c7e-bf39-1259afd1ff5c]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Morning+Coffee+121]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/10/30/Morning+Coffee+121]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Morning Coffee 122</title>
		<link>http://devhawk.net/2007/11/09/morning-coffee-122/</link>
		<pubDate>Fri, 09 Nov 2007 18:26:59 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://29dfca7a-dca5-489a-b198-f176140b5378</guid>
		<description></description>
		<content:encoded><![CDATA[<ul><li>Sorry for the posting lag. Had a few technical difficulties around here. In the process of moving hosts, so expect more glitches.  </li><li>My talk at the p&amp;p Summit on Monday went really well. At least, it felt good and the applause at the end felt genuine. I recorded the audio on my laptop, so I'll be posting a Silverlight version as soon as I figure out how to adjust the levels so their somewhat consistent. <a href="http://paraesthesia.com/archive/2007/11/06/microsoft-patterns--practices-summit-2007---day-1.aspx" target="_blank">Paraesthesia</a> and <a href="http://www.ademiller.com/blogs/tech/2007/11/software-factories-a-poor-choice-of-name/" target="_blank">#2872</a> have reactions.  </li><li>Speaking of the p&amp;p Summit, Scott Hanselman posted his ASP.NET MVC demo from his talk. Said ASP.NET MVC bits aren't available yet, so you can't, you know, run the demo for yourself. But at least you can review what the ASP.NET MVC code will look like.  </li><li>I stopped by the SOA/BPM conference last week and saw <a href="http://www.masteringbiztalk.com/blogs/jon/" target="_blank">Jon</a>, <a href="http://samgentile.com/blogs/samgentile/" target="_blank">Sam</a> and <a href="http://weblogs.asp.net/gsusx" target="_blank">Jesus</a> among others. Spent quite a bit of time talking to Sam and his Neudesic colleagues about this "physically distributed/logically centralized" approach that <a href="http://devhawk.net/2007/10/25/The+Worst+Of+Both+Worlds.aspx" target="_blank">I think is hogwash</a>. It sounds to me like Neudesic approach is really federated not centralized, though I'm not sure <a href="http://davidpallmann.spaces.live.com/default.aspx" target="_blank">David Pallmann</a> would agree. Federated makes much more sense to me than centralized.  </li><li>Nick Malik <a href="http://blogs.msdn.com/nickmalik/archive/2007/11/05/soa-in-the-replication-model.aspx" target="_blank">continues his series</a> on SOA Business Operations Model. I especially like his point that this isn't a series of choices, you need to "look at your company<strong></strong>and try to understand which model the business has selected. "  </li><li>The <a href="http://blogs.msdn.com/powershell/archive/2007/11/06/the-community-technology-preview-ctp-of-windows-powershell-2-0.aspx" target="_blank">first CTP of PowerShell 2.0</a> is out! Check out <a href="http://blogs.msdn.com/powershell/archive/2007/11/06/what-s-new-in-ctp-of-powershell-2-0.aspx" target="_blank">what's new</a> on the PowerShell team blog and Jeffrey Snover's <a href="http://blogs.msdn.com/powershell/archive/2007/11/08/teched-what-s-new-for-developers-in-powershell-v2.aspx" target="_blank">TechEd Presentation</a>. (via <a href="http://samgentile.com/blogs/samgentile/archive/2007/11/06/new-and-notable-201.aspx" target="_blank">Sam Gentile</a>)  </li><li>Soma announced <a href="http://blogs.msdn.com/somasegar/archive/2007/11/09/visual-c-libraries-update.aspx" target="_blank">updates to VC++ coming next year</a>, including <a href="http://en.wikipedia.org/wiki/Technical_Report_1" target="_blank">TR1 support</a> and a <a href="http://blogs.msdn.com/vcblog/archive/2007/11/09/announcing-a-major-mfc-update-plus-tr1-support.aspx" target="_blank">"major" MFC upgrade</a> to support creating native apps that look like Office, IE or VS. I get supporting TR1, but the idea that <a href="http://blogs.msdn.com/vcblog/archive/2007/11/09/hola-from-barcelona-and-welcome-to-a-major-mfc-update.aspx" target="_blank">people are clamoring</a> for MFC updates is kinda surprising. Many years ago when I first came to MSFT, a friend asked "But don't you hate Microsoft?" to which I responded "No, I just hate MFC". Obviously, not everyone agrees with that sentiment.  </li><li>Steve Vinoski thinks <a href="http://steve.vinoski.net/blog/2007/10/29/theres-no-hope-for-it/" target="_blank">there's no hope for IT</a>. Funny, I keep agreeing with Steve's overall point but disagreeing with his reasoning. I still don't buy the <a href="http://devhawk.net/2007/07/31/Is+Serendipity+The+Heart+Of+The+WSREST+Debate.aspx" target="_blank">serendipity argument</a>. I like compiled languages. And I think he's overstating the amount of "real, useful guidance" for REST floating around. Basically, there's "<a href="http://www.oreilly.com/catalog/9780596529260/" target="_blank">the book</a>".  </li><li>In widely reported news, Windows Live launched their next generation services. Don't bother with the <a href="http://www.microsoft.com/Presspass/press/2007/nov07/WindowsLiveLaunchPR.mspx" target="_blank">press release</a>, just go to the new <a href="http://www.windowslive.com/" target="_blank">WL home page</a>.  </li><li>Speaking of WL, Dare Obasanjo <a href="http://www.25hoursaday.com/weblog/2007/10/24/LiveContactsInteractiveSDKTryOutTheWindowsLiveContactsAPI.aspx" target="_blank">points to</a> the <a href="https://dev.live.com/livedata/sdk/">Live Data Interactive SDK page</a> where you can experiment with the WL Contacts REST API. It gives you a good sense of how the <a href="http://dev.live.com/livedata/web3s.htm" target="_blank">Web3S protocol</a> works. Pretty well, IMO. However, how come <a href="http://msdn2.microsoft.com/en-us/library/bb463953.aspx" target="_blank">WL Contacts Schema</a> doesn't include some type of update timestamp for sync purposes? If you wanted to build say a Outlook &lt;--&gt; WL Contacts sync engine, you'd have to download the entire address book and grovel thru it for changes every sync.  </li><li>Speaking of Web3S, I'd love to see some info on how one might implement a service using Web3S. Yaron Goland <a href="http://www.goland.org/appanddare/" target="_blank">positions</a> Web3S as an alternative to <a href="http://bitworking.org/projects/atom/draft-ietf-atompub-protocol-15.html" target="_blank">APP</a> that WL developed because they "couldn't make APP work in any sane way for our scenarios". I'm sure other folks have similar scenarios.</li></ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1049</wp:post_id>
		<wp:post_date>2007-11-09 10:26:59</wp:post_date>
		<wp:post_date_gmt>2007-11-09 18:26:59</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>morning-coffee-122</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="asp-net"><![CDATA[ASP.NET]]></category>
		<category domain="post_tag" nicename="c-plus-plus"><![CDATA[C++]]></category>
		<category domain="category" nicename="morning-coffee"><![CDATA[Morning Coffee]]></category>
		<category domain="post_tag" nicename="powershell"><![CDATA[PowerShell]]></category>
		<category domain="post_tag" nicename="rest"><![CDATA[REST]]></category>
		<category domain="post_tag" nicename="soa"><![CDATA[SOA]]></category>
		<category domain="post_tag" nicename="windows-live"><![CDATA[Windows Live]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[29dfca7a-dca5-489a-b198-f176140b5378]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Morning+Coffee+122]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/11/09/Morning+Coffee+122]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>The Importance of Idempotence</title>
		<link>http://devhawk.net/2007/11/09/the-importance-of-idempotence/</link>
		<pubDate>Fri, 09 Nov 2007 12:28:48 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://e0aad463-d046-4638-8877-3960e099ee98</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Every organization has some operations or processes that have to happen Exactly Once. Your employer needs to make sure they issue your paycheck exactly once. Your bank needs to make sure that paycheck is deposited in your account exactly once. Exactly Once isn't something that just "traditional" enterprises like banks care about. Google needs to make sure your AdSense check is issued exactly once. Amazon needs to make sure your credit card is charged exactly once. Especially when there's money involved, the company wants to make sure it gets handled correctly - Exactly Once.</p><p>In application (aka siloed) development, transactions are often used to ensure stuff happens Exactly Once, to good effect. But how do we guarantee Exactly Once now that we're connecting systems together? Given how well transactions work inside applications, it's not surprising that early attempts to guarantee Exactly Once between systems relied on distributed transactions, this time to not-so-good effect. Pat Helland summarized the problems with distributed transactions this way:</p><blockquote><p>"The two-phase commit protocol will ensure perfect consistency given infinite time.  I say that because it will wait and wait and wait until the transaction is resolved and then provide perfect consistency.   Of course, while partitioned and waiting, arbitrary swaths of the application's database may be locked up rendering the application unusable.  For this reason, I've frequently referred to the two phase commit protocol as the "Anti-Availability Protocol". "<br />Pat Helland, <a href="http://blogs.msdn.com/pathelland/archive/2007/05/20/soa-and-newton-s-universe.aspx" target="_blank">SOA and Newton's Universe</a></p></blockquote><p>So now we're faced with a dilemma. Transactions are, for all practical purposes, unusable to ensure Exactly Once processing between connected systems. And yet, the business requirement to ensure Exactly Once hasn't gone away. We need another way.</p><p>The first <a href="http://en.wikipedia.org/wiki/Fallacies_of_Distributed_Computing" target="_blank">fallacy of distributed computing</a> is that the network is reliable. It's usually works, but usually isn't a guarantee. If I send a message to a remote system but don't get an acknowledgement, which got lost: the original message or the ack? There's no way to know, so I have to send the message again. But if I send it again and it's the ack that got lost, then the target system will receive the message multiple times. </p><p>Since the network is not reliable, there's no way to guarantee that a message will be delivered exactly once. The best we can go is ensure a message will be delivered at least once. However, that implies the target system will receive some messages multiple times. If we need to ensure Exactly Once, we need to make sure the target system won't duplicate the work if it receives duplicate messages. In other words, we need the target system to be <a href="http://en.wikipedia.org/wiki/Idempotence" target="_blank">idempotent</a>.  </p><blockquote><p>"In <a href="http://en.wikipedia.org/wiki/Computer_science">computer science</a>, the term idempotent is used to describe <a href="http://en.wikipedia.org/wiki/Method_%28computer_science%29">method</a> or <a href="http://en.wikipedia.org/wiki/Subroutine">subroutine</a> calls which can safely be called multiple times, as invoking the procedure a single time or multiple times results in the system maintaining the same state i.e. after the method call all variables have the same value as they did before.</p></blockquote><blockquote><p>Example: Looking up some customer's name and address are typically idempotent, since the system will not change state based on this. However, placing an order for a car for the customer is not, since running the method/call several times will lead to several orders being placed, and therefore the state of the system being changed to reflect this."<br />Wikipedia, <a href="http://en.wikipedia.org/wiki/Idempotence#Computer_Science" target="_blank">Idempotence (Computer Science)</a></p></blockquote><p>Or more succinctly:</p><blockquote><p>"Idempotent Means It’s OK to Arrive Multiple Times" <br />Pat Helland (again)</p></blockquote><p>I can't overstate the importance of designing your cross-system communication to be idempotent. If you care about ensuring Exactly Once, each step of your process has to be either transactional or idempotent, or you'll be screwed. It's interesting to note that you have to be transactional <em>*OR*</em> idempotent, but not both. You can chain together multiple steps in long business process, across multiple disparate systems, but as long as each step is either transactional or idempotent, you can guarantee Exactly Once across the entire process. In other words:</p><blockquote><p>Transactional/Exactly Once == Idempotent/At Least Once</p></blockquote><p>This implies that you can substitute an idempotent operation for a transactional operation, and still ensure Exactly Once. </p><p>Let's look at an example. Typically you ensure Exactly Once processing with MSMQ by receiving messages within the scope of a transaction along with whatever other work you're doing. But what if you can't use a transactional receive, say because it's a remote queue? What would an idempotent equivalent for transactional receive look like? </p><p>How about:</p><ol><li><a href="http://msdn2.microsoft.com/library/system.messaging.messagequeue.peek" target="_blank">Peek</a> a message from the remote queue</li><li>Insert the message into the target system database, using the <a href="http://msdn2.microsoft.com/en-us/library/system.messaging.message.id.aspx" target="_blank">unique MSMQ Message ID</a> as the primary key</li><li><a href="http://msdn2.microsoft.com/library/system.messaging.messagequeue.receivebyid.aspx" target="_blank">Remove the message</a> from the queue by ID</li></ol><p>Each of those steps is idempotent. Peek is a read, which is naturally idempotent. Inserting the message into the database is idempotent, since we use the message ID as the primary key. As long as that ID is unique, we can never insert it into the database more than once. Finally, removing a message based on it's unique ID is also naturally idempotent. Once the message is in the target system database, we can use traditional transactions to ensure it gets processed Exactly Once. </p><p>So we took a single transactional operation and turned it into a series of idempotent steps. Both ensure each message is processed Exactly Once. Given the choice, I'd rather write the transactional operation - it's much less code since we're we can use existing infrastructure - aka the distributed transaction coordinator. But if the transactional infrastructure isn't available, I'd rather write multiple idempotent steps and ensure Exactly Once rather than risk losing or duplicating messages.</p><p>I've got more on this topic, but in the meantime think about this: How do you think durable messaging infrastructure like MSMQ ensures exactly once delivery? You can use that pattern, even if you're not using durable messaging infrastructure. </p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1050</wp:post_id>
		<wp:post_date>2007-11-09 12:28:48</wp:post_date>
		<wp:post_date_gmt>2007-11-09 12:28:48</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>the-importance-of-idempotence</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="architecture"><![CDATA[Architecture]]></category>
		<category domain="post_tag" nicename="durable-messaging"><![CDATA[Durable Messaging]]></category>
		<category domain="post_tag" nicename="idempotence"><![CDATA[Idempotence]]></category>
		<category domain="post_tag" nicename="soa"><![CDATA[SOA]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[e0aad463-d046-4638-8877-3960e099ee98]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[The+Importance+Of+Idempotence]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/11/09/The+Importance+Of+Idempotence]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Afternoon Coffee 123</title>
		<link>http://devhawk.net/2007/11/16/afternoon-coffee-123/</link>
		<pubDate>Fri, 16 Nov 2007 20:27:41 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://cbba8c52-bc17-472f-b216-5e0d2d4f74de</guid>
		<description></description>
		<content:encoded><![CDATA[<ul><li>Morning Coffee is late this morning because we went for our Christmas portrait this morning and it took for<em>ever</em>. The pictures turned out great though.</li><li>Nick Malik finishes up his series on business operation models by covering the <a href="http://blogs.msdn.com/nickmalik/archive/2007/11/13/soa-in-the-diversification-model.aspx" target="_blank">diversification model</a>. Also, Nick's points about the synergy between a diversified model and <a href="http://blogs.msdn.com/nickmalik/archive/2007/10/19/soa-in-the-coordination-model.aspx" target="_blank">the coordinated model</a> are spot on. I happen to be a big fan of those models (aka the models with low standardization) which probably drives some of the  more my "unique" perspectives on SOA.</li><li>Scott Guthrie starts out a new series and future technology, this time it's ASP.NET MVC Framework that gets the series treatment. The <a href="http://weblogs.asp.net/scottgu/archive/2007/11/13/asp-net-mvc-framework-part-1.aspx" target="_blank">first entry</a> in the series is a general overview. I wonder why there's no cool code name for the MVC framework? Whatever it's named, I like the auto routing and action rules - it seems very Rails-inspired. </li><li>Over the weekend, Don Box points out that the REST authentication story "blows chunks". I've recently given up on the reliable part of the original "<a href="http://msdn2.microsoft.com/en-us/library/ms996535.aspx" target="_blank">Secure, Reliable, Transacted Web Services</a>" vision - and I never believed the transacted part. Security, on the other hand, is the one part of that original vision that has worked out IMO. My experience with the WS-* security stack has been pretty good, though Dare Obasanjo <a href="http://www.25hoursaday.com/weblog/2007/11/12/OpenIDOAuthIsTheFinalNailInTheCoffinOfTheWSVsRESTDiscussion.aspx" target="_blank">thinks</a> that <a href="http://openid.net/">OpenID</a> and <a href="http://oauth.net/">OAuth</a> are the final nail in the WS-* coffin. </li><li>Speaking of Dare, he goes on to say <a href="http://www.25hoursaday.com/weblog/2007/11/15/WSIsToRESTAsTheoryIsToPractice.aspx" target="_blank">WS-* is to REST as Theory is to Practice</a>. He makes the point that "The only times I encounter someone with good things to say about WS-* is if it is their job to pimp these technologies or they have already “invested” in WS-* and want to defend that investment." I gave up <strike>pimping</strike> evangelizing technology a while back and I don't want to be in the position of defending a bad investment, so I'm spending lots of time looking at REST.</li><li>Jesus Rodriguez <a href="http://weblogs.asp.net/gsusx/archive/2007/11/15/managed-services-engine.aspx" target="_blank">takes a look</a> at the <a href="http://www.codeplex.com/servicesengine" target="_blank">Managed Services Engine</a> and comes away excited. Jesus is a self-described "strong believer" in SOA governance. I'm a self-described strong disbeliever in SOA governance, so MSE sounds like more of the <a href="http://devhawk.net/2007/10/25/The+Worst+Of+Both+Worlds.aspx" target="_blank">Worst of Both Worlds</a> to me.</li><li>A little light reading: I pulled <a href="http://www.schneier.com/book-applied.html" target="_blank">Applied Cryptography</a> and <a href="http://www.wolframscience.com/thebook.html" target="_blank">A New Kind of Science</a> out of my garage last weekend. Plus my copies of <a href="http://www.oreilly.com/catalog/9780596529260/" target="_blank">RESTful Web Services</a> and <a href="http://www.pragprog.com/titles/jaerlang/index.html" target="_blank">Programming Erlang</a> just arrived yesterday. </li></ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1051</wp:post_id>
		<wp:post_date>2007-11-16 12:27:41</wp:post_date>
		<wp:post_date_gmt>2007-11-16 20:27:41</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>afternoon-coffee-123</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="asp-net"><![CDATA[ASP.NET]]></category>
		<category domain="post_tag" nicename="family"><![CDATA[Family]]></category>
		<category domain="category" nicename="morning-coffee"><![CDATA[Morning Coffee]]></category>
		<category domain="post_tag" nicename="rest"><![CDATA[REST]]></category>
		<category domain="post_tag" nicename="security"><![CDATA[Security]]></category>
		<category domain="post_tag" nicename="soa"><![CDATA[SOA]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[cbba8c52-bc17-472f-b216-5e0d2d4f74de]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Afternoon+Coffee+123]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/11/16/Afternoon+Coffee+123]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>The Hawk Flies Again</title>
		<link>http://devhawk.net/2007/11/16/the-hawk-flies-again/</link>
		<pubDate>Fri, 16 Nov 2007 07:48:35 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://e7a6e9f1-d61f-4a8b-8828-a89cea7f3e5a</guid>
		<description></description>
		<content:encoded><![CDATA[<p>After a week offline, I think I've finally gotten DevHawk back online. I'm having a few issues from my personal laptop, so if you're having issues seeing the site, please <a href="mailto:harry@devhawk.net">let me know</a>.</p><p>I took the downtime to make a few changes to the site. I fixed up a few things with the theme - I run 120 DPI on both my machines and the theme looked wrong in a few places. Now, except for the main text, I specify font sizes in pixels instead of points so it looks right whatever DPI you run in. Also, I finally got around to updating the stylesheet so the tag list and calendar renders correctly plus I added "older posts" and "newer posts" links at the bottom of the page. </p><p>I also took the opportunity to get rid of my Projects, Articles and Presentations sections. I didn't trash the content, I moved it all <a href="http://cid-0d9bc809858885a4.skydrive.live.com/self.aspx/DevHawk%20Content">to my SkyDrive</a>. But now I've eliminated a bunch of pages from my site that I just never took the time to keep up to date. </p><p>Back to regular blogging "soon".</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1052</wp:post_id>
		<wp:post_date>2007-11-16 07:48:35</wp:post_date>
		<wp:post_date_gmt>2007-11-16 07:48:35</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>the-hawk-flies-again</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="blogging"><![CDATA[Blogging]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[e7a6e9f1-d61f-4a8b-8828-a89cea7f3e5a]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[The+Hawk+Flies+Again]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/11/16/The+Hawk+Flies+Again]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Morning Coffee 124</title>
		<link>http://devhawk.net/2007/11/19/morning-coffee-124/</link>
		<pubDate>Mon, 19 Nov 2007 11:12:56 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://72773508-5175-4626-a11e-aa690d54a2c7</guid>
		<description></description>
		<content:encoded><![CDATA[<ul><li>While my blog was down last week, I finally finished <a href="http://www.xbox.com/games/gearsofwar/" target="_blank">Gears of War</a>. I played thru on hardcore, but had to throttle back to casual to beat the last boss. I'd like to try and finish on hardcore, but I've moved on to <a href="http://www.xbox.com/games/deadrising/" target="_blank">Dead Rising</a> - another game from last year I never had time to finish. I'm almost done the main play mode, though I understand there are other play modes that get unlocked when you finish it.  </li><li>I'm forbidden from buying any new games before Christmas, so <a href="http://www.xbox.com/games/masseffect" target="_blank">Mass Effect</a>, <a href="http://www.xbox.com/games/assassinscreed/" target="_blank">Assassin's Creed</a> and <a href="http://www.xbox.com/games/orangebox/" target="_blank">The Orange Box</a> will have to wait. My next game will either be <a href="http://www.xbox.com/games/bluedragonxbox360/" target="_blank">Blue Dragon</a>, which a friend let me borrow, or <a href="http://www.xbox.com/games/tomclancyrainbowsixvegas/" target="_blank">R6:Vegas</a>, yet another (but the last) game from last year I never got time to play.  </li><li>I'll skip the "giving thanks" jokes and point out that <a href="http://msdn2.microsoft.com/en-us/vstudio/products/bb931214.aspx" target="_blank">Visual Studio 2008</a> and <a href="http://www.microsoft.com/downloads/details.aspx?FamilyId=333325FD-AE52-4E35-B531-508D977D32A6&amp;displaylang=en" target="_blank">.NET FX 3.5</a> have shipped.  Soma has the <a href="http://blogs.msdn.com/somasegar/archive/2007/11/19/visual-studio-2008-and-net-framework-3-5-shipped.aspx" target="_blank">announcement</a> and both <a href="http://weblogs.asp.net/scottgu/archive/2007/11/19/visual-studio-2008-and-net-3-5-released.aspx" target="_blank">Scott Guthrie</a> and <a href="http://samgentile.com/blogs/samgentile/archive/2007/11/19/visual-studio-2008-rtm-available-on-msdn-subscriber-downloads.aspx" target="_blank">Sam Gentile</a> summarize what's new. The Express editions are available from the new <a href="http://www.microsoft.com/express/default.aspx" target="_blank">Express Developer Center</a>. The VS SDK doesn't appear to be released yet, but I'm sure it will be along in due course. </li><li>Speaking of VS SDK, CoDe Magazine did an <a href="http://code-magazine.com/focus/vsx/" target="_blank">entire issue</a> on VS Extensibility which you can read online or <a href="http://code-magazine.com/Milos_DocumentManagement_DownloadFileAttachment.aspx?id=7bbfeccf-6167-4912-9c64-a0d984c524d4" target="_blank">download as PDF</a>. </li><li>Nick Malik took a <a href="http://blogs.msdn.com/nickmalik/archive/2007/06/19/not-crazy-just-lateral-thinking.aspx" target="_blank">bunch of heat</a> back in June for what <a href="http://ayende.com/Blog/archive/2007/06/16/Redefining-reality.aspx" target="_blank">some thought</a> was a <a href="http://blogs.msdn.com/nickmalik/archive/2007/06/15/tools-for-mort.aspx" target="_blank">redefinition of Mort</a>, one of the Developer Division personas. Now Paul Vick thinks it's time to <a href="http://www.panopticoncentral.net/archive/2007/11/14/22589.aspx" target="_blank">retire the Mort persona</a>, primarily because of the negative connotation the name carries. His suggestion for a replacement is Ben (as in Franklin). And did you notice how similar Paul's description of Mort is to what Nick described? I'd say some folks owe Nick an apology.  </li><li>I <a href="http://devhawk.net/2007/11/16/Afternoon+Coffee+123.aspx" target="_blank">said Friday</a> I was going to take a closer look @ OpenID and OAuth. There's an <a href="http://wiki.openid.net/Introduction" target="_blank">intro to OpenID</a> on <a href="http://wiki.openid.net" target="_blank">their wiki</a> and Sam Ruby's <a href="http://www.intertwingly.net/blog/2007/01/03/OpenID-for-non-SuperUsers" target="_blank">OpenID for non-SuperUsers</a> seems to be the canonical source on implementing OpenID on your own blog. Frankly, reading the OpenID intro reminded me a lot of <a href="http://en.wikipedia.org/wiki/WS-Federation_Passive_Requestor_Profile" target="_blank">WS-Federation Passive Requestor Profile</a>. Does OpenID have the equivalent of an "active" mode?  </li><li>Likewise, the <a href="http://www.hueniverse.com/hueniverse/2007/10/beginners-guide.html" target="_blank">Beginner’s Guide to OAuth</a> series of posts by Eran Hammer-Lahav is a good intro to OAuth. The phrase "Jane notices she is now at a Faji page by looking at the browser URL" from the <a href="http://www.hueniverse.com/hueniverse/2007/10/beginners-gui-1.html" target="_blank">protocol walkthru</a> makes me worry that OAuth is vulnerable to phishing. Having one of the <a href="http://oauth.googlecode.com/svn/spec/branches/1.0/drafts/6/spec.html#anchor1" target="_blank">OAuth authors</a> call phishing victims <a href="http://www.hueniverse.com/hueniverse/2007/09/would-you-like-.html" target="_blank">careless</a> and <a href="http://www.hueniverse.com/hueniverse/2007/09/oauth-needs-kar.html" target="_blank">wishing for Karl Rove</a> to "scare people into being more careful and smarter about what they do online" makes me think my fears are well grounded. I'm thinking maybe OAuth and OpenID aren't quite ready to <a href="http://www.25hoursaday.com/weblog/2007/11/12/OpenIDOAuthIsTheFinalNailInTheCoffinOfTheWSVsRESTDiscussion.aspx" target="_blank">nail down WS-*'s coffin</a>. </li><li>In researching OpenID, I came across <a href="http://www.edtechpost.ca/wordpress/2007/11/14/openid-wcet-presentation/" target="_blank">this presentation</a> hosted on <a href="http://www.slideshare.net/" target="_blank">SlideShare</a>. I had never seen SlideShare before - it's kinda like YouTube for presentations. Sharing basic presentations is kinda lame - there doesn't appear to be any animation support, so the slides are basically pictures. However, they also support "<a href="http://www.slideshare.net/faqs/slidecast" target="_blank">slidecasting</a>" where you sync slides to an audio file hosted elsewhere. That I like. I have a bunch of old decks + audio, maybe I'll stick them up there.</li></ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1053</wp:post_id>
		<wp:post_date>2007-11-19 11:12:56</wp:post_date>
		<wp:post_date_gmt>2007-11-19 11:12:56</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>morning-coffee-124</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="games"><![CDATA[Games]]></category>
		<category domain="category" nicename="morning-coffee"><![CDATA[Morning Coffee]]></category>
		<category domain="post_tag" nicename="presentation"><![CDATA[Presentation]]></category>
		<category domain="post_tag" nicename="rest"><![CDATA[REST]]></category>
		<category domain="post_tag" nicename="security"><![CDATA[Security]]></category>
		<category domain="post_tag" nicename="visual-studio"><![CDATA[Visual Studio]]></category>
		<category domain="post_tag" nicename="web-2-0"><![CDATA[Web 2.0]]></category>
		<category domain="post_tag" nicename="xbox-360"><![CDATA[Xbox 360]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[72773508-5175-4626-a11e-aa690d54a2c7]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Morning+Coffee+124]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/11/19/Morning+Coffee+124]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Morning Coffee 125</title>
		<link>http://devhawk.net/2007/11/20/morning-coffee-125/</link>
		<pubDate>Tue, 20 Nov 2007 08:53:58 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://954c8b51-85f3-41db-852d-b8808bf87ac5</guid>
		<description></description>
		<content:encoded><![CDATA[<ul><li>So I wasn't quite as close to the end of <a href="http://www.xbox.com/games/deadrising/">Dead Rising</a> as I thought I was. Those who've played the game thru will understand. </li><li>After their promising start, the Capitals <a href="http://scores.espn.go.com/nhl/recap?gameId=271119023">lost yet again</a>. At the 20 game point, they're now 6-13-1 for a league-worst 13 points. I think we're at the point where they need to fire <a href="http://en.wikipedia.org/wiki/Glen_Hanlon">Glen Hanlon</a>. Nothing personal Glen, but it's not getting done. The only problem is who you would replace him with? <a href="http://en.wikipedia.org/wiki/Bob_Hartley">Bob Hartley</a>? Uh, no thanks. I think most Caps fans want <a href="http://en.wikipedia.org/wiki/Dale_Hunter">Dale Hunter</a>, but I think he's <a href="http://en.wikipedia.org/wiki/London_Knights#The_Hunter_Era.2C_2000-Present">too involved</a> with the <a href="http://www.ontariohockeyleague.com/stats/roster.php?team_id=14&amp;season_id=32">London Knights</a> - he's co-owner, president and head coach. But if we could get Dale, I'm guessing Glen would be gone in a heartbeat.</li><li>The XNA team blog <a href="http://blogs.msdn.com/xna/archive/2007/11/19/now-available-xna-game-studio-2-0-beta.aspx">announced</a> that XNA Game Studio 2.0's beta has released. The <a href="http://creators.xna.com/beta/betahome.aspx">download</a> is available from Creators Club Online. The big new feature in this release is network support, and they've shipped a new <a href="http://creators.xna.com/beta/NetRumbleWindows.vsi">starter kit</a> to get you started. </li><li>In addition to shipping VS08 &amp; .NET FX 3.5, a new <a href="http://www.microsoft.com/downloads/details.aspx?FamilyId=3BF4C5CA-B905-4EBC-8901-1D4C1D1DA884&amp;displaylang=en">CTP of SQL 2008</a> shipped yesterday. I couldn't find a good overview of what's new, but the SQL Express team has a <a href="http://blogs.msdn.com/sqlexpress/archive/2007/11/19/what-s-new-in-sql-express-2008-november-ctp.aspx">post on what's new</a> in just their corner of this release. (via <a href="http://weblogs.asp.net/gsusx/archive/2007/11/20/vs-2008-net-fx-3-5-and-sql-server-2008-ctp-are-here.aspx">Jesus Rodriguez</a>)</li><li>In more "I know it's Thanksgiving week, but we're shipping anyway" news, the <a href="http://rubydotnet.googlegroups.com/web/Home.htm">Ruby.NET</a> folks have shipped v0.9 - the first release since transferring control to the community. Does it run Rails? Not yet, but <a href="http://rubydotnet.googlegroups.com/web/PastPresentFuture.htm#Current">apparently</a> they're "close to getting Ruby on Rails to run successfully". One thing that caught my eye is that it includes <a href="http://rubydotnet.googlegroups.com/web/VisualStudioIntegration.htm">VS integration</a>. Nice.</li></ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1054</wp:post_id>
		<wp:post_date>2007-11-20 08:53:58</wp:post_date>
		<wp:post_date_gmt>2007-11-20 08:53:58</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>morning-coffee-125</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="morning-coffee"><![CDATA[Morning Coffee]]></category>
		<category domain="post_tag" nicename="ruby"><![CDATA[Ruby]]></category>
		<category domain="post_tag" nicename="sql-server"><![CDATA[SQL Server]]></category>
		<category domain="post_tag" nicename="washington-capitals"><![CDATA[Washington Capitals]]></category>
		<category domain="post_tag" nicename="xbox-360"><![CDATA[Xbox 360]]></category>
		<category domain="post_tag" nicename="xna"><![CDATA[XNA]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[954c8b51-85f3-41db-852d-b8808bf87ac5]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Morning+Coffee+125]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/11/20/Morning+Coffee+125]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>1988</wp:comment_id>
			<wp:comment_author><![CDATA[John]]></wp:comment_author>
			<wp:comment_author_email>jevdemon@microsoft.com</wp:comment_author_email>
			<wp:comment_author_url>http://blogs.msdn.com/jevdemon</wp:comment_author_url>
			<wp:comment_author_IP>71.217.73.65</wp:comment_author_IP>
			<wp:comment_date>2007-11-20 23:47:26</wp:comment_date>
			<wp:comment_date_gmt>2007-11-21 07:47:26</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Sorry to hear about the Caps being at the bottom of the league. Perhaps its time to upgrade to a better team - Let's Go Pens!!  ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Afternoon Coffee 126</title>
		<link>http://devhawk.net/2007/11/23/afternoon-coffee-126/</link>
		<pubDate>Fri, 23 Nov 2007 16:23:19 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://01334951-081a-405a-846e-60bd03683516</guid>
		<description></description>
		<content:encoded><![CDATA[<ul><li>In a surprise to exactly nobody, the Caps <a href="http://sports.espn.go.com/nhl/news/story?id=3123386">let coach Glen Hanlon go</a> yesterday. I gotta say I feel for the guy. I mean, he had to go, but still. The Caps promoted the coach of their minor league team Bruce Boudreau. Makes sense - the farm team is where you develop players, why not coaches to? The team responded by beating the Flyers in overtime, though they did blow a 3 goal lead along the way. 
</li><li>It won't get them back in the national title hunt, but <a href="http://scores.espn.go.com/ncf/recap?gameId=273260009">thrashing ASU</a> may earn USC a ticket to a BCS bowl, or the Rose Bowl if the Ducks can't win without Dennis Dixon. 
</li><li>I finally finished <a href="http://www.xbox.com/games/deadrising">Dead Rising</a> today. A sequel has been <a href="http://blog.wired.com/games/2007/04/capcom_dead_ris.html">rumored</a> and <a href="http://www.eurogamer.net/article.php?article_id=71678">hinted at</a>, but <a href="http://www.xboxic.com/news/3327">not confirmed</a> even though the ending left the door wide open. I really enjoyed it, so here's hoping. I'm going to hold off on starting anything new until I get back from Canada, but it'll probably be <a href="http://www.xbox.com/games/tomclancyrainbowsixvegas/">R6:Vegas</a>. Don't really have time between now and Christmas to finish <a href="http://www.xbox.com/games/bluedragonxbox360/">Blue Dragon</a> and it's 3 DVDs.
</li><li>In more "Screw Turkey Day, we're shipping anyway" news, p&amp;p shipped a new version of the <a href="http://msdn2.microsoft.com/en-us/library/bb931187.aspx">Web Service Software Factory</a>. This one's called the "Modeling Edition". I saw some of this stuff <a href="http://devhawk.net/2007/08/01/Service+Factory+Customization+Workshop+Day+Two.aspx">back in August</a>, and I like what those p&amp;p folks are doing. It's worth a look, just to see how they've integrated DSL and GAT. 
</li><li>My old team shipped a <a href="http://www.codeplex.com/LitwareHR/Release/ProjectReleases.aspx?ReleaseId=8439">new version</a> of their S+S demo app LitwareHR. There's also some <a href="http://www.codeplex.com/LitwareHR/Release/ProjectReleases.aspx?ReleaseId=8440">tools</a> for testing multi-tenant databases. 
</li><li>Quick reminder: I'm @ <a href="http://www.devteach.com/">DevTeach</a> Vancouver next week, so blogging will be light. I've got a series of thoughts on F# ready to post, but we'll see when I get network access to post them. Given that I took a month off from blogging a short while back, I didn't bother asking <a href="http://halfmybrain.spaces.live.com/">Dale</a> to cover for me. </li></ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1055</wp:post_id>
		<wp:post_date>2007-11-23 16:23:19</wp:post_date>
		<wp:post_date_gmt>2007-11-23 16:23:19</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>afternoon-coffee-126</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="blogging"><![CDATA[Blogging]]></category>
		<category domain="post_tag" nicename="college-football"><![CDATA[College Football]]></category>
		<category domain="category" nicename="morning-coffee"><![CDATA[Morning Coffee]]></category>
		<category domain="post_tag" nicename="software-factories"><![CDATA[Software Factories]]></category>
		<category domain="post_tag" nicename="washington-capitals"><![CDATA[Washington Capitals]]></category>
		<category domain="post_tag" nicename="xbox-360"><![CDATA[Xbox 360]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[01334951-081a-405a-846e-60bd03683516]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Afternoon+Coffee+126]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/11/24/Afternoon+Coffee+126]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Fans4Writers</title>
		<link>http://devhawk.net/2007/11/25/fans4writers/</link>
		<pubDate>Sun, 25 Nov 2007 23:25:29 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://bc8d0f7d-8bc6-4b58-bbde-eb7869b3c3d5</guid>
		<description></description>
		<content:encoded><![CDATA[<p><img src="http://s3.amazonaws.com/devhawk_images/wga-support.png" align="right" />Most of my readers get DevHawk via the RSS feed, so I wanted to explicitly call out a new addition to my flair. If you're not aware, the <a href="http://www.wga.org/">Writers Guild of America</a> is on strike. When you buy a $20 DVD, the writer makes a measly 4 cents. When you watch an episode of your favorite show online, the writer makes nothing. <a href="http://www.youtube.com/watch?v=oJ55Ir2jCxk">This video</a> explains the situation pretty well. </p><p>Even though I'm about as <a href="http://devhawk.net/2007/07/03/A+Tough+Fourth.aspx">liberal as you can get</a>, I'm not a big union guy. Neither of my parents were in a union. Neither Julie nor I are in a union. My only exposure to unions growing up was negative, typically when the Washington Opera (where my mother works) was negotiating with the musicians or stagehands. I vividly remember one musician's strike where one of their demands was to increase the minimum call size to be bigger than the size of the orchestra pit. Needless to say, that seemed like an unreasonable demand to me (though to be fair, I only heard the management side of the story). </p><p>In the recent hockey labor dispute, I was <a href="http://devhawk.net/2004/09/10/Long+Cold+Winter+Without+Hockey.aspx">firmly on the side of the owners</a> since day one. And while the teacher's union is one of the strongest bastions of democratic party support, I think the <a href="http://devhawk.net/2006/06/22/Against+School.aspx">modern education system is fundamentally broken</a>. So while I am a liberal, I've never been a big union guy.</p><p>However, I'm firmly with the writers union on this one. I spent several hours tonight reading a bunch of strike-related blogs, like <a href="http://unitedhollywood.blogspot.com/">United Hollywood</a>. Obviously, they're coverage of the strike is pro-writer biased, but it's hard to argue with the idea of a fair wage for Internet delivered content. I particularly like <a href="http://www.youtube.com/watch?v=8a37uqd5vTw">this video</a> which is a series of clips of media CEOs bragging about how much money their companies can make online. Yet - again, according to pro-writer blogs - they <a href="http://unitedhollywood.blogspot.com/2007/10/wga-recently-released-following.html">refuse to even negotiate</a> paying the writers a percentage of the money they make for using the writer's content that way. </p><p>And to add a Media 2.0 spin to all this, there was a fascinating post wondering if Google could/would "<a href="http://unitedhollywood.blogspot.com/2007/11/google-save-us.html">scoop up the entire entertainment industry</a>". I don't think substituting Google for <a href="http://www.amptp.org">AMPTP</a> (which includes among others "big media" like Disney, Fox and Viacom) would be a good idea - new boss, same old problems. However, the idea of bypassing the studios with direct Internet distribution is a good one. One has to wonder how much this strike will accelerate that trend. This strike seems much more risky for the distribution companies &amp; networks than for the writers - even direct distributed content needs to be written, right? </p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1056</wp:post_id>
		<wp:post_date>2007-11-25 23:25:29</wp:post_date>
		<wp:post_date_gmt>2007-11-25 23:25:29</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>fans4writers</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="entertainment"><![CDATA[Entertainment]]></category>
		<category domain="post_tag" nicename="media-2-0"><![CDATA[Media 2.0]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[bc8d0f7d-8bc6-4b58-bbde-eb7869b3c3d5]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Fans4Writers]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/11/26/Fans4Writers]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>F# as a Second .NET Language</title>
		<link>http://devhawk.net/2007/11/28/f-as-a-second-net-language/</link>
		<pubDate>Wed, 28 Nov 2007 08:20:34 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://3807114f-ea98-499d-be6e-0b8165e18a7c</guid>
		<description></description>
		<content:encoded><![CDATA[<p><em>(Harry is @ DevTeach in Vancounver with his family this week. He was hoping to still do Morning Coffee posts, but that's turned out to be infeasible. So instead, you get a series of pre-written posts about F#.)</em></p><p>I've been spending some real quality time with F# of late. I've been getting into parsing again, and it turns out that functional pattern matching languages like F# are really good at text processing. After <a href="http://devhawk.net/2007/01/10/Morning+Coffee+7.aspx">claiming</a> I'd learn F# this year, then <a href="http://devhawk.net/2007/02/06/Morning+Coffee+25.aspx">abandoning the effort</a> to learn Powershell, I went back to F#. Nothing against PowerShell - I've moved over to using it as my primary command line shell and have tricked out my startup script and everything. But I haven't found much need to code in it lately. </p><p>If you're a .NET ninja guru, you owe it to yourself to take a long look at F#, if for no other reason to expand your mind. It takes a while to get used to. <a href="http://blogs.msdn.com/dsyme/">Don Syme</a> (aka father of F#) can attest I've been peppering him with questions (Thanks, Don!). I've also been writing code in C# and F#, and looking at the result in Reflector so I can understand what's happening. I certainly am not an F# expert by any stretch, but I do think I'm getting the hang of it.</p><p>Since I've reached this first plateau of getting it, I thought I'd write out some of the things I like and don't like about the language. This is by no means an introduction to F#. I'd recommend <a href="http://www.strangelights.com/">Robert Pickering's</a><a href="http://www.apress.com/book/view/1590597575">Foundations of F#</a> book as well as Don's <a href="http://www.apress.com/book/view/1590598504">Expert F# book</a> (when it comes out). You should also be reading <a href="http://blogs.msdn.com/lukeh">Luke Hoban</a>'s and <a href="http://blogs.msdn.com/jomo_fisher/">Jomo Fisher</a>'s blogs - they both just joined the F# team. C# MVP Tomas Petricek has written several blog posts introducing F#, which he's brought together in a <a href="http://cs.hubfs.net/blogs/tomasp/archive/2007/11/03/fsharp_introduction.aspx">single post</a>. For an general overview of functional programming (the primary programming paradigm of F#), check out Slava Akhmechet's <a href="http://www.defmacro.org/ramblings/fp.html">Functional Programming For The Rest of Us</a>.</p><p>This turned into a fairly long post, so I split it out into a series that I'll post thru the end of the week. </p><ul><li><a href="http://devhawk.net/2007/11/28/F+Hawkeye+Functional+Programming.aspx">Functional Programming</a></li><li><a href="http://devhawk.net/2007/11/29/F+Hawkeye+Pattern+Matching.aspx">Pattern Matching</a></li><li><a href="http://devhawk.net/2007/11/29/F+Hawkeye+Type+Inference.aspx">Type Inference</a></li><li><a href="http://devhawk.net/2007/11/30/F+Hawkeye+Assorted+Goodness.aspx">Assorted Goodness</a></li><li><a href="http://devhawk.net/2007/11/30/F+Hawkeye+Assorted+NotSoGoodness.aspx">Assorted Not-So-Goodness</a></li></ul><p>UPDATE - added link to Tomas Petricek's <a href="http://cs.hubfs.net/blogs/tomasp/archive/2007/11/03/fsharp_introduction.aspx">F# Introduction</a></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1057</wp:post_id>
		<wp:post_date>2007-11-28 08:20:34</wp:post_date>
		<wp:post_date_gmt>2007-11-28 08:20:34</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>f-as-a-second-net-language</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="f-sharp"><![CDATA[F#]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[3807114f-ea98-499d-be6e-0b8165e18a7c]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[F+As+A+Second+NET+Language]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/11/28/F+As+A+Second+NET+Language]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>F# Hawkeye : Functional Programming</title>
		<link>http://devhawk.net/2007/11/28/f-hawkeye-functional-programming/</link>
		<pubDate>Wed, 28 Nov 2007 08:22:03 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://0c9e8b59-5091-4dd4-9555-8598806a8e7f</guid>
		<description></description>
		<content:encoded><![CDATA[<p><em>(Harry is @ DevTeach in Vancounver with his family this week. He was hoping to still do Morning Coffee posts, but that's turned out to be infeasible. So instead, you get a series of pre-written posts about F#.)</em></p><p>If you're coming from the imperative object-oriented world of C#, Java or VB, functional programming just seems odd at first. But you might as well start getting used to it - functional aspects have been leaking into C# and VB with every version. The way LINQ chains together iterators (Where, Select, Order By, etc) is heavily influenced by FP (aka functional programming). </p><p>It takes a while to get the hang of FP, but I've found that some problems that are hard to solve in C# are easy in F#. For example, in my parsing code, I have a bunch of boilerplate caching and tracing code that I need to execute in each parsing function. How do I do that in C# without having to cut and paste the boilerplate code over and over again? </p><p>In F#, I wrote a function called CacheAndTrace that takes a parsing function as a parameter and returns a new function that adds the caching and tracing code. Since the new function has the same signature as the original parsing function, the caller can't tell the difference but it saves me having to write the boilerplate code over and over again. </p><p>Actually, you can do this type of functional composition with C#. In fact, I first wrote my version of the CacheAndTrace function in C#. But F#'s syntax is much better for functional programming - probably since it was designed for FP, rather than having FP tacked on later.  </p><p>My father once compared functional programming to Aspect Oriented Programming. AOP is about factoring apart cross cutting concerns, which tends to be hard to do in a straight-up OO language. But in an FP language, AOP-esque separation of concern is fairly straightforward. </p><p>F# isn't a pure functional language - it's actually a multi-paradigm language, so you can do imperative and OO stuff if you want to. For example, variables are typically immutable in functional programming. So how do you do something like cache the most recent result from a given function - which is what my CacheAndTrace function does? Frankly, I don't know. But in F#, I can easily mark the cache value as mutable so I can update it on every call. Sort of the best of both worlds, though mixing and matching can get a little tricky.</p><p>F#'s OO support is really useful when you interop with other .NET languages, since they're mostly OO themselves. For example, I'm using NUnit test cases for all my parsing code. My parsing code is F#, so I wanted to write my tests in F# as well. NUnit requires test methods to be grouped into classes known as test fixtures. Frankly, if I were designing a native F# xUnit library, I wouldn't require all the test methods to be grouped into a class. But it's easier to just define an test fixture object in F# rather than build my own xUnit Framework for F#</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1058</wp:post_id>
		<wp:post_date>2007-11-28 08:22:03</wp:post_date>
		<wp:post_date_gmt>2007-11-28 08:22:03</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>f-hawkeye-functional-programming</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="f-sharp"><![CDATA[F#]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[0c9e8b59-5091-4dd4-9555-8598806a8e7f]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[F+Hawkeye+Functional+Programming]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/11/28/F+Hawkeye+Functional+Programming]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>F# Hawkeye : Pattern Matching</title>
		<link>http://devhawk.net/2007/11/29/f-hawkeye-pattern-matching/</link>
		<pubDate>Thu, 29 Nov 2007 07:40:04 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://13219b39-a182-4488-a97d-2dc78e63780e</guid>
		<description></description>
		<content:encoded><![CDATA[<em>(Harry is @ DevTeach in Vancounver with his family this week. He was hoping to still do Morning Coffee posts, but that's turned out to be infeasible. So instead, you get a series of pre-written posts about F#.)</em>

Most FP languages include some type of pattern matching, and F# is no exception. At first blush, pattern matching looks a little like a switch statement, but it's much more powerful. Where switch statements typically only do simple matches such as "does this variable equal this constant?". In F#, you can break apart types, use wildcards even pass the potential match data into a custom function to determines if there's a match. Of course, you can also do your more run-of-the-mill "does value equal constant" comparisons as well.

The problem with most functional language is that while pattern matching is powerful, it's not particularly extensible. As Don pointed out in a <a href="http://blogs.msdn.com/dsyme/archive/2007/04/07/draft-paper-on-f-active-patterns.aspx">recent paper</a>, this becomes a real problem when trying to integrate FP with OO. OO is designed to hide details behind abstractions. Yet those abstractions can't be used in pattern matching. Luckily, Don and the F# Guys (sounds like a band) have invented an extensible pattern matching syntax called Active Patterns to deal with this problem. Basically, in more recent versions of F#, you can adorn functions with special syntax so that you can use them in your pattern matching clauses.

This turns out to be wicked cool for writing parsers. I'm building recursive descent parsers, so each grammar production is implemented as a function. Yet, since I'm using the active pattern syntax, I can use them in pattern matching clauses. This allows me to chain together functions in a single match clause rather than having multiple match statements. And it's very readable. For example, the function to recognize the grammar production "Additive&nbsp; &lt;- Multitive ‘+’ Additive | Multitive" is translated into the following F#:
<pre class="brush: fsharp">and (|Additive|_|) input =
    match input with
    | Multitive(v1,Token '+' (Additive(v2, input))) -&gt; Some(v1+v2,input)
    | Multitive(v,input) -&gt; Some(v,input)
    | _ -&gt; None</pre>
The weird "bananas" around Additive on the first line indicate this is an active pattern. Multitive and Token are also an active patterns. This syntax is a little parens heavy, but otherwise, that translation from grammar to F# is nearly declarative. It almost defeats the need for having a parser generator when building a parser is this straightforward. Almost.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1059</wp:post_id>
		<wp:post_date>2007-11-29 07:40:04</wp:post_date>
		<wp:post_date_gmt>2007-11-29 07:40:04</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>f-hawkeye-pattern-matching</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="f-sharp"><![CDATA[F#]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[13219b39-a182-4488-a97d-2dc78e63780e]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[F+Hawkeye+Pattern+Matching]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/11/29/F+Hawkeye+Pattern+Matching]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>1989</wp:comment_id>
			<wp:comment_author><![CDATA[Alex Hendrson]]></wp:comment_author>
			<wp:comment_author_email>bittercoder@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://blog.bittercoder.com/</wp:comment_author_url>
			<wp:comment_author_IP>60.234.250.81</wp:comment_author_IP>
			<wp:comment_date>2007-12-01 21:05:36</wp:comment_date>
			<wp:comment_date_gmt>2007-12-02 05:05:36</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Out of curiosity, are you able to post any of your parser code? I'm only just getting into F# as and when I have spare time - but I'm interested in if/how you tokenize your input string using F# code before parsing the stream of tokens via pattern matching - I've been attempting to use regex Active Patterns so far, and the results aren't pretty (possibly because I haven't quite "grokked" how best to use Active Patterns to their full potential).

Keep up the good posts on F#!

Chez,

 - Alex]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1990</wp:comment_id>
			<wp:comment_author><![CDATA[DevHawk]]></wp:comment_author>
			<wp:comment_author_email>harry@devhawk.net</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>131.107.0.102</wp:comment_author_IP>
			<wp:comment_date>2007-12-03 11:07:43</wp:comment_date>
			<wp:comment_date_gmt>2007-12-03 19:07:43</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Will do - just let me get caught up at work first!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1991</wp:comment_id>
			<wp:comment_author><![CDATA[Tony Nassar]]></wp:comment_author>
			<wp:comment_author_email>linux@anthonynassar.com</wp:comment_author_email>
			<wp:comment_author_url>http://slideguitarist.blogspot.com/</wp:comment_author_url>
			<wp:comment_author_IP>151.200.150.88</wp:comment_author_IP>
			<wp:comment_date>2007-12-08 07:27:23</wp:comment_date>
			<wp:comment_date_gmt>2007-12-08 15:27:23</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Does your weaponly also comprise such elements as "nice red uniforms"? 

I'd love to see the parser, too, as I'll soon be embarking on one of my own, though I'll be using fslex and fsyacc for practice. I'll post about it. The Active Pattern thing is mind-blowing. ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1992</wp:comment_id>
			<wp:comment_author><![CDATA[DevHawk]]></wp:comment_author>
			<wp:comment_author_email>harry@devhawk.net</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>24.16.13.109</wp:comment_author_IP>
			<wp:comment_date>2007-12-08 15:58:02</wp:comment_date>
			<wp:comment_date_gmt>2007-12-08 23:58:02</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I didn't expect a kind of Spanish Inquisition! :)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1993</wp:comment_id>
			<wp:comment_author><![CDATA[Art Scott]]></wp:comment_author>
			<wp:comment_author_email>art_scott@msn.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>68.127.27.107</wp:comment_author_IP>
			<wp:comment_date>2007-12-10 11:29:03</wp:comment_date>
			<wp:comment_date_gmt>2007-12-10 19:29:03</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I'm interested in generating various classes of pictures using grammars.

I've worked through the included intro fslex fsyacc examples from Microsoft, Foundations of F#, and F# Journal; each has its'differences.

Just ordered F# Expert, and considering geting OCaml book.
I'm always interested in more intelligible code examples.

Glad to find you're a resource.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>F# Hawkeye : Type Inference</title>
		<link>http://devhawk.net/2007/11/29/f-hawkeye-type-inference/</link>
		<pubDate>Thu, 29 Nov 2007 07:41:16 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://2cb86ed8-f847-44e8-8f95-62758e370a45</guid>
		<description></description>
		<content:encoded><![CDATA[<p><em>(Harry is @ DevTeach in Vancounver with his family this week. He was hoping to still do Morning Coffee posts, but that's turned out to be infeasible. So instead, you get a series of pre-written posts about F#.)</em></p><p>For you LINQ early adopters, you may think you know everything about type inference, but F#'s uses it much more extensively. In C#3 , you can write "var o = new SomeObject()" and the compiler is smart enough to figure out the variable o is of type SomeObject. Saves some typing, but it's not exactly brain surgery. F# can not only infer the type of local variables like C#, but it can also infer type of a function's input parameters and return value based on how those variables are used in the function. For example, in the Additive function, F# can infer that the "input" parameter is a char list because Token takes a generic list and '+' is a char. </p><p>F# automatically "generisizes" the functions you write. So if you write a function for traversing a list, by default it will work on a list of any type. You don't have to explicitly declare the generics, F# automatically makes your code as generic as possible, based on your usage of the variables.</p><p>What's really interesting about this approach is that changes to parameter or return types in a low-level function can have a rippling effect up the stack. In my parsing code, I haven't settled on the type I'm going to use to represent the string to be parsed. My tests are all short strings, so F#'s intrinsic char list type is fine. However, I don't know how well that will work for longer strings like a typical input file. F#'s native parsing tools (based on lex &amp; yacc which I dislike) have a special LexBuffer class to represent the parse string. However, I've written my code so I can change the type of the lowest-level functions (NextChar and CheckForToken) and not affect the rest of my code. That's pretty wicked.</p><p>Type inference does have a downside. I guess VS has <a href="http://charlespetzold.com/etc/DoesVisualStudioRotTheMind.html">rotted my mind</a>, but I'm hooked on Intellisense. The BCL is too big to remember all the classes and all the method parameters. Intellisense is kinda like <strike>Google</strike> a web search engine. If you sorta know what you're looking for, Intellisense helps close the gap to find it. Otherwise, it's time to break out the docs. However, if you're inferring type based on usage, Intellisense is out of luck. Honestly, there have been times where I've put in an explicit type declaration to get Intellisense to work, written the code, then removed the type declaration. </p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1060</wp:post_id>
		<wp:post_date>2007-11-29 07:41:16</wp:post_date>
		<wp:post_date_gmt>2007-11-29 07:41:16</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>f-hawkeye-type-inference</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="f-sharp"><![CDATA[F#]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[2cb86ed8-f847-44e8-8f95-62758e370a45]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[F+Hawkeye+Type+Inference]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/11/29/F+Hawkeye+Type+Inference]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>F# Hawkeye : Assorted Goodness</title>
		<link>http://devhawk.net/2007/11/30/f-hawkeye-assorted-goodness/</link>
		<pubDate>Fri, 30 Nov 2007 08:55:39 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://dcca3951-656c-4f23-8b2e-7165d477f985</guid>
		<description></description>
		<content:encoded><![CDATA[<p><em>(Harry is @ DevTeach in Vancounver with his family this week. He was hoping to still do Morning Coffee posts, but that's turned out to be infeasible. So instead, you get a series of pre-written posts about F#.)</em></p><h3>Significant Whitespace</h3><p>If you're a Python programmer, you already know this one. Instead of delineating code blocks explicit with curly braces or begin/end keywords, F# uses whitespace. Code blocks are indented relative to their parent. This enforces readability standards as well as conciseness. You can see that in the code Additive function above. Technically, this is optional in F# if you specify the #light compiler option, but pretty much all the docs and books assume this by default.</p><h3>Custom Operators</h3><p>This is minor, but cool nonetheless. Many languages let you overload existing operators like + and *. However, F# goes a step further and also lets you create custom operators. You just pick a combination of symbols that isn't already being used and define a function for it. For example, in my parsing code I wanted a simple way to adorn my input parse strings in my tests so that I could later easily change their type if I changed the type of NextChar and CheckForToken as described above. I defined the "double bang" operator !!. Currently, double bang converts a string into a character list, but originally it simply returned the string since I had written my Char and Token classes in terms of string. </p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1061</wp:post_id>
		<wp:post_date>2007-11-30 08:55:39</wp:post_date>
		<wp:post_date_gmt>2007-11-30 08:55:39</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>f-hawkeye-assorted-goodness</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="f-sharp"><![CDATA[F#]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[dcca3951-656c-4f23-8b2e-7165d477f985]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[F+Hawkeye+Assorted+Goodness]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/11/30/F+Hawkeye+Assorted+Goodness]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>F# Hawkeye : Assorted Not-So-Goodness</title>
		<link>http://devhawk.net/2007/11/30/f-hawkeye-assorted-not-so-goodness/</link>
		<pubDate>Fri, 30 Nov 2007 08:57:13 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://3222b4dd-df64-4730-8bd9-a140345ca0e0</guid>
		<description></description>
		<content:encoded><![CDATA[<p></p><p><em>(Harry is @ DevTeach in Vancounver with his family this week. He was hoping to still do Morning Coffee posts, but that's turned out to be infeasible. So instead, you get a series of pre-written posts about F#.)</em></p><p>It's not all puppy dogs and ice cream with F#. Here are a few things that I didn't like about the lanugage.</p><h3>Linear Scoping</h3><p>In C#, a given piece of code is able to call any function it wants to (limited by CAS and visibility of course). If I define two functions, the first can call the second even thought the compiler has never seen the second function when it's parsing the first.</p><p>F# has linear scoping like C++ does. You can't call functions that haven't already been defined in the file (or a previous file that's already been fed to the compiler). This makes writing mutually recursive functions (A calls B, B calls C, C calls A) fairly annoying. Typically, in F# we declare functions with "let". But in the Additive function above, we're declaring the function with "and". By using "and", we're basically chaining together function declarations into a logical unit. Then, you mark the first function declaration in the chain as recursive, and now those methods are enabled for mutual recursion. Not exactly intuitive.</p><p>Frankly, I like C#'s ability to bind to methods that haven't been declared yet. I wonder if this is an intrinsic issue with FP or F# scoping rules, or if it's something they could fix if they took the time.</p><h3>No Method Overloading</h3><p>In my CheckForToken method, I use a string type to hold the token I'm looking for, since tokens can often be multi-character. However, for one character tokens, this is over kill. Not just in terms of creating a string object to contain just one character, but also in how I pattern match the token against the input string. If we're only looking for one character, we can skip recursion entirely. Yet there's no way to define two functions called Token that have different signatures. </p><p>Given type inference, this isn't surprising, but it's still a little annoying for folks coming from C# land.</p><h3>Limited VS support</h3><p>More evidence of a rotted brain. F#'s integration into VS is limited at best. It does syntax highlighting and debugging, but that's about it. The problem I keep running into is that I have two projects - my main project and my test project. Even though I've define the test project as being dependent on the main project, it doesn't automatically compile the test project when I change the main project. So I keep doing something like fix a bug, recompile, then run NUnit to see if the light turned green. It doesn't, because I haven't rebuilt the test project and it's still referencing the old version of the main project. Now that it's a <a href="http://blogs.msdn.com/dsyme/archive/2007/10/17/s-somasegar-on-taking-f-forward.aspx">"real" product</a>, I'm hoping to see better integration into VS08. Maybe even an F# Express that leverages the new VS08 shell?</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1062</wp:post_id>
		<wp:post_date>2007-11-30 08:57:13</wp:post_date>
		<wp:post_date_gmt>2007-11-30 08:57:13</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>f-hawkeye-assorted-not-so-goodness</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="f-sharp"><![CDATA[F#]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[3222b4dd-df64-4730-8bd9-a140345ca0e0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[F+Hawkeye+Assorted+NotSoGoodness]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/11/30/F+Hawkeye+Assorted+NotSoGoodness]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Morning Coffee 127</title>
		<link>http://devhawk.net/2007/12/03/morning-coffee-127/</link>
		<pubDate>Mon, 03 Dec 2007 18:12:14 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://58aed908-943d-43c4-a477-8022cbdb313d</guid>
		<description></description>
		<content:encoded><![CDATA[<ul><li>I'm back at the office today after almost two weeks away. So "catch-up" is the official hyphenated word of the day. </li><li>Big news last week was an <a href="http://weblogs.asp.net/scottgu/archive/2007/11/29/net-web-product-roadmap-asp-net-silverlight-iis7.aspx" target="_blank">update on Silverlight</a>. The next version (the one with the embedded cross-platform CLR in it) was rebranded Silverlight 2.0 and will include higher-level UI framework features and richer networking support. Look for a go-live beta Q1 next year. </li><li><a href="http://weblogs.asp.net/scottgu/archive/2007/11/29/net-web-product-roadmap-asp-net-silverlight-iis7.aspx" target="_blank">According to Scott Guthrie</a>, there should be a CTP of the ASP.NET 3.5 Extensions this week, including the new ASP.NET MVC framework that many folks await with baited breath. Scott posted the <a href="http://weblogs.asp.net/scottgu/archive/2007/12/03/asp-net-mvc-framework-part-2-url-routing.aspx" target="_blank">second</a> in new series on this framework, this time covering URL Routing. </li><li>After a long blog silence, <a href="http://blogs.msdn.com/pathelland/">Pat Helland</a> posted four presentations that he delivered @ TechEd Barcelona. They're pretty much required reading as far as I am concerned. Here's hoping the TechEd Barcelona folks recorded at least the audio of these sessions.  <ul><li><a href="http://blogs.msdn.com/pathelland/archive/2007/11/25/presentation-of-metropolis-interchangeability-of-operations-at-teched-emea-in-barcelona.aspx">Metropolis: Interchangeability of Operations</a></li><li><a href="http://blogs.msdn.com/pathelland/archive/2007/11/25/presentation-of-life-beyond-distributed-transactions-an-apostate-s-opinion-at-teched-emea-at-barcelona.aspx">Life Beyond Distributed Transactions: an Apostate's Opinion</a></li><li><a href="http://blogs.msdn.com/pathelland/archive/2007/11/25/presentation-of-data-on-the-inside-versus-data-on-the-outside-at-teched-emea-at-barcelona.aspx">Data on the Inside versus Data on the Outside</a></li><li><a title="The Irresistible Forces Meet the Movable Objects -- Closing General Session at TechEd EMEA in B" href="http://blogs.msdn.com/pathelland/archive/2007/11/25/the-irresistible-forces-meet-the-movable-objects-closing-general-session-at-teched-emea-in-barcelona.aspx">The Irresistible Forces Meet the Movable Objects</a></li></ul></li><li>There's a <a href="http://research.microsoft.com/research/downloads/Details/e8478d6b-49c0-4750-80eb-0e424d1631a3/Details.aspx">new drop of F#</a>, v1.9.3.7. Don Syme <a href="http://blogs.msdn.com/dsyme/archive/2007/11/30/f-1-9-3-candidate-release-now-available.aspx" target="_blank">calls it</a> "a release candidate for F# 1.9.3". Full <a href="http://blogs.msdn.com/dsyme/archive/2007/11/30/full-release-notes-for-f-1-9-3-7.aspx" target="_blank">release notes</a> are over on his blog. </li><li>Speaking of F#, Douglas Stockwell explains how to <a href="http://11011.net/archives/000721.html">roll-your-own F# Express</a> by combining the F# download above &amp; the VS08 shell.  </li><li>Still speaking of F#, Robert Pickering has written an <a href="http://www.infoq.com/articles/Beyond-Foundations-FSharp">article on Active Patterns</a> as well as a series on concurrency in F#. So far he's covered <a href="http://www.strangelights.com/blog/archive/2007/09/29/1597.aspx">Async Workflows</a> (<a href="http://www.strangelights.com/blog/archive/2007/10/15/1599.aspx">twice</a>), <a href="http://www.strangelights.com/blog/archive/2007/10/24/1601.aspx">Erlang style messages</a> and <a href="http://www.strangelights.com/blog/archive/2007/11/02/1604.aspx">message queuing</a>. </li><li>Speaking of concurrency, Soma <a href="http://blogs.msdn.com/somasegar/archive/2007/11/29/parallel-extensions-to-the-net-fx-ctp.aspx" target="_blank">announced</a> the <a href="http://www.microsoft.com/downloads/details.aspx?FamilyID=e848dc1d-5be3-4941-8705-024bc7f180ba&amp;displaylang=en" target="_blank">CTP of ParallelFX</a> last week. This includes <a href="http://blogs.msdn.com/pfxteam/archive/2007/11/29/6558508.aspx" target="_blank">Parallel LINQ</a> (aka PLINQ) and <a href="http://blogs.msdn.com/pfxteam/archive/2007/11/29/6558543.aspx" target="_blank">Task Parallel Library</a> (aka TPL). Also check out their <a href="http://www.microsoft.com/downloads/details.aspx?FamilyId=633F9F08-AAD9-46C4-8CAE-B204472838E1" target="_blank">whitepaper</a>, <a href="http://blogs.msdn.com/pfxteam/" target="_blank">team blog</a> and <a href="http://msdn2.microsoft.com/concurrency" target="_blank">dev center</a>. </li><li>I'm a big fan of the <a href="http://msdn2.microsoft.com/arcjournal/" target="_blank">Architecture Journal</a>. Now you can get all that great content in a <a href="http://www.microsoft.com/downloads/details.aspx?FamilyID=dd466bbb-1b7d-438e-9f9a-954ce2058f15&amp;displaylang=en" target="_blank">great WPF-based app</a>. Simon Guest <a href="http://simonguest.com/blogs/smguest/archive/2007/11/27/Introducing-the-Architecture-Journal-Reader.aspx" target="_blank">has the details</a>.</li></ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1063</wp:post_id>
		<wp:post_date>2007-12-03 10:12:14</wp:post_date>
		<wp:post_date_gmt>2007-12-03 18:12:14</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>morning-coffee-127</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="asp-net"><![CDATA[ASP.NET]]></category>
		<category domain="post_tag" nicename="concurrency"><![CDATA[Concurrency]]></category>
		<category domain="post_tag" nicename="f-sharp"><![CDATA[F#]]></category>
		<category domain="category" nicename="morning-coffee"><![CDATA[Morning Coffee]]></category>
		<category domain="post_tag" nicename="silverlight"><![CDATA[Silverlight]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[58aed908-943d-43c4-a477-8022cbdb313d]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Morning+Coffee+127]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/12/03/Morning+Coffee+127]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Studio Busting</title>
		<link>http://devhawk.net/2007/12/03/studio-busting/</link>
		<pubDate>Mon, 03 Dec 2007 11:25:55 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://054e8f9b-d398-4904-835e-b6586c8a087d</guid>
		<description></description>
		<content:encoded><![CDATA[<p>A week ago, I <a href="http://devhawk.net/2007/11/26/Fans4Writers.aspx" target="_blank">wrote</a> that the ongoing writers strike might accelerate the transition to Media 2.0. Several other folks think the same way and explain why much better than I have. Marc Andreessen (aka <a href="http://en.wikipedia.org/wiki/Marc_Andreessen" target="_blank">creator of Mosaic</a>) has a <a href="http://blog.pmarca.com/2007/11/rebuilding-holl.html" target="_blank">fantastic post</a> that not only explains this transition better than I can, it also helped me understand my views on unions in general.</p><p>In the post, he describes two economic models - the Hollywood model and the Silicon Valley model. The Hollywood model is highly-centralized, with a small number of huge companies (aka "big media") owning practically everything. In contrast, the Silicon Valley model is highly-decentralized, where pretty much anyone can create a company or bring a product to market. Marc believes that the entertainment industry at large is transitioning to the decentralized model. I agree 110% - the general decentralization trend is one I highlight in my "Moving Beyond Industrial Software" presentation that I've been delivering recently.</p><p>Unions are a response to the dramatic power differential between an employer and individual employees. By pooling (aka centralizing) their bargaining power, the union provides a counter-balance to the power wielded by the employer(s). But in a decentralized model, unions aren't really necessary. Marc describes the "alignment of interests between creators and financiers" as "near-perfect". Near-perfect might be a bit on the rosy side, but it's a model I'm much more comfortable with than mega-corporations &amp; unions. </p><p>Some believe that the AMPTP (aka the studios) is trying to <a href="http://unitedhollywood.blogspot.com/2007/12/amptp-union-busting-is-our-middle-name.html" target="_blank">break the entertainment unions</a>. But what if those unions decided to break the studios? I gotta think that while there are lots of quality writers out there, the best in the business are members of the writers guild. What if they just decided to stop writing for the studios and go into business for themselves? Patrick Goldstein of the LA Times <a href="http://www.latimes.com/entertainment/news/movies/la-et-gold20nov20,0,372891.story?coll=la-home-entertainment" target="_blank">wonders the exact same thing</a>. </p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1064</wp:post_id>
		<wp:post_date>2007-12-03 11:25:55</wp:post_date>
		<wp:post_date_gmt>2007-12-03 11:25:55</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>studio-busting</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="entertainment"><![CDATA[Entertainment]]></category>
		<category domain="post_tag" nicename="media-2-0"><![CDATA[Media 2.0]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[054e8f9b-d398-4904-835e-b6586c8a087d]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Studio+Busting]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/12/03/Studio+Busting]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Durable and RESTful</title>
		<link>http://devhawk.net/2007/12/05/durable-and-restful/</link>
		<pubDate>Wed, 05 Dec 2007 10:50:40 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://becd3f0f-5484-4a9e-ae6a-4a61cebc2a4a</guid>
		<description></description>
		<content:encoded><![CDATA[<p>A while back I <a href="http://devhawk.net/2007/06/05/A+REST+Question.aspx">wondered</a> if it's still REST if you don't use HTTP. The reason I wondered that is because like many I've become disillusioned with the WS-* stack over time and see REST as a viable alternative to all that spec-driven complexity. However, just because I'm looking to REST means I'm willing to give up on <a href="http://devhawk.net/2007/05/30/The+Case+For+Durable+Messaging+In+Service+Orientation.aspx">durable messaging</a>. So I shouldn't be asking "can I do REST without HTTP?" I should be asking "what protocol can I use to do durable messaging with REST?"</p><p>It turns out HTTP is just fine for RESTful durable messaging, if you take the time to make your POSTs idempotent. There's even a IETF RFC that builds on HTTP and specifies a mechanism to do it.</p><p>As I wrote last month, <a href="http://devhawk.net/2007/11/09/The+Importance+Of+Idempotence.aspx">idempotence is critically important</a> to ensuring "things" happen exactly once when connecting disparate systems together. At the end of that post, I asked you, dear reader, to contemplate just how durable messaging systems ensures exactly once delivery. They do it by assigning messages to be delivered a unique identifier. Any non-idempotent operations can be made idempotent with unique identifiers and a message ID log.</p><blockquote><p>"<u>Not Idempotent</u>: <br />     Withdrawing $1 Billion. <br /><u>Idempotent</u>: <br />     If Haven’t Yet Done Withdrawal #XYZ for $1 Billion, <br />     Then Withdraw $1 Billion and Label as #XYZ" <br />Pat Helland </p></blockquote><p>For example, when you send a message in MSMQ, it's assigned a <a href="http://msdn2.microsoft.com/en-us/library/ms705091.aspx">20 byte identifier</a> which is "unique within your enterprise." [1] If the destination system receives multiple messages with the same message ID, it knows they are duplicates and can safely toss all but one of the messages with the same ID. Exactly once, no transactions.</p><p>While many operations in REST are naturally idempotent, using REST doesn't magically make all your operations idempotent, contrary to <a href="http://diveintomark.org/archives/2004/09/29/restagra">popular belief</a>. Have you ever seen a message like "please don't press submit order twice" on the checkout page of an e-commerce website? It's there because POST is <u>not</u> naturally idempotent and the site hasn't taken any extra steps to identify duplicate POSTs. If the site embedded a unique ID in a hidden form field, it could use that to identify duplicate orders. </p><p>If you're a RESTifarian, haven't you <a href="http://bitworking.org/projects/atom/rfc5023.html">seen this approach somewhere before</a>?</p><p>Given that POST isn't <u>naturally</u> idempotent, I think it's kinda surprising that new <a href="http://bitworking.org/projects/atom/rfc5023.html#crwp">resources are created in AtomPub</a> by POSTing them to a collection rather than PUTting them to a specific URL. <a href="http://www.oreilly.com/catalog/9780596529260/" target="_blank">RESTful Web Services</a> specifically points out that PUT is idempotent, so I wonder why AtomPub uses POST. I'd guess most AtomPub implementations (aka blogs) aren't much concerned about ensuring Exactly Once. If an blog entry gets posted twice, you delete one and go on with your life. </p><p>However, if you wanted to use AtomPub and ensure Exactly Once, you can use the fact that Atom entries <a href="http://tools.ietf.org/html/rfc4287#section-4.1.2">must contain exactly one ID element</a> which as per the spec <a href="http://tools.ietf.org/html/rfc4287#section-4.2.6">must be universally unique</a>. From reading the Atom spec, the ID element seems primarily designed for Atom feed consumers, but AtomPub servers could also use it as an "idempotence identifier", similar to how MSMQ uses the message ID. If you end up with multiple entries with the same entry ID, discard all but one.</p><p>So by creating a unique identifier on the client side and logging that identifier on the server side, we can make any REST service idempotent. We can make it a durable service if we write the outgoing message - with the message ID we generate - to a durable store before trying to send it. If you write it to a durable store within the scope of a local transaction, you're even closer to duplicating MSMQ's functionality, yet the only protocol requirement beyond vanilla HTTP is having a unique message ID.</p><p>The one problem with the Atom entity ID approach is that it requires cracking the message in order to see if we should process it. For REST services, I would think we'd want to stick the idempotence identifier in an HTTP header. We already headers to implement <a href="http://fishbowl.pastiche.org/2002/10/21/http_conditional_get_for_rss_hackers">conditional GET</a>, why not a header for what amounts to conditional POST?</p><p>Turns out such a header exists in the <a href="http://www.ietf.org/rfc/rfc4130.txt" target="_blank">AS2 spec</a>, i.e. "MIME-Based Secure Peer-to-Peer Business Data Interchange Using HTTP". AS2 defines a <a href="http://tools.ietf.org/html/rfc4130#section-5.3.3" target="_blank">Message-Id HTTP header</a> which "SHOULD be globally unique". In the case of <a href="http://tools.ietf.org/html/rfc4130#section-5.5" target="_blank">an HTTP error</a>, AS2 specifies the "POST operation with identical content, including same Message-ID, SHOULD be repeated" and that "Servers SHOULD be prepared to receive a POST with a repeated Message-ID." I assume this implies a server shouldn't process a message with the same ID twice.</p><p>So what would a durable REST service look like? I think like this:</p><ol><li>Sending system records the intent to send a message by saving it to a local durable store, potentially in the scope of a local transaction. As part of saving the message, a unique message id is generated (I'd use a <a href="http://en.wikipedia.org/wiki/Guid" target="_blank">GUID</a>, but as long as it's unique it doesn't matter.) 
</li><li>A background thread in the sending system monitors the durable message store. When a new to-be-sent message arrives, the thread POSTs it to the destination, setting the Message-Id HTTP header to the unique identifier generated in step 1. 
</li><li>The receiving system stores the Message-Id header value in a log table and processes the received message, potentially in the scope of a local transaction. Optionally, it can store the return message (if there is one) in the durable store as well. 
</li><li>If the sending system doesn't receive a 2xx status code, it rePOSTs the message to the receiving system until it does. 
</li><li>If the receiving system receives a message that's already listed in the log table, it ignores it and returns a success status code. Optionally, if the return message has been saved, the receiving system can resend the return message as long as it doesn't redo the work.</li></ol><p>This seems like a better approach than my original direction of doing REST over a durable protocol like MSMQ or SSB. What do you think? </p><p>UPDATE - <a class="commentPermalinkStyle" href="http://appside.blogspot.com/" rel="nofollow"><font color="#017cbc">Erik Johnson</font></a> <a href="http://devhawk.net/CommentView,guid,becd3f0f-5484-4a9e-ae6a-4a61cebc2a4a.aspx#commentstart">points out</a> that an HTTP POST's idempotency is "left unsaid". So my statement that "POST isn't idempotent" isn't quite correct. POST isn't <em>naturally</em> idempotent. I've updated the post accordingly.</p><p></p><hr /><p></p><p></p><p>[1] Technically, the MSMQ message ID isn't universally unique as it is a 16 byte GUID representing the source system + a 4 byte sequence number. The sequence number can rollover, after sending 2^32 messages. In practice, rolling over the message ID after 4 billion messages is rarely an issue.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1065</wp:post_id>
		<wp:post_date>2007-12-05 10:50:40</wp:post_date>
		<wp:post_date_gmt>2007-12-05 10:50:40</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>durable-and-restful</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="durable-messaging"><![CDATA[Durable Messaging]]></category>
		<category domain="post_tag" nicename="rest"><![CDATA[REST]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[becd3f0f-5484-4a9e-ae6a-4a61cebc2a4a]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Durable+And+RESTful]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/12/05/Durable+And+RESTful]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>1994</wp:comment_id>
			<wp:comment_author><![CDATA[Erik Johnson]]></wp:comment_author>
			<wp:comment_author_email>ejohnson@epicor.com</wp:comment_author_email>
			<wp:comment_author_url>http://appside.blogspot.com</wp:comment_author_url>
			<wp:comment_author_IP>70.181.194.38</wp:comment_author_IP>
			<wp:comment_date>2007-12-05 21:40:18</wp:comment_date>
			<wp:comment_date_gmt>2007-12-06 05:40:18</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[> Given that POST isn't idempotent...

But like you said, idempotency is in the eye of the HTTP implementor.  The HTTP spec says that PUT and GET are meant to be idempotent and leaves the idempotency (is that a word?) of POST lesft unsaid.  It doesn't say POST MUST NOT be idempotent.  

One issue with PUT is that the spec says that I am saving a whole resource (replacing the data rep) which implies a programming model around that semantic.  There's nothing wrong with that, but it might not be the best fit for Pat's withdraw-a-billion-bucks scenario.

POST just says I am handing data to a processor.  Your notion of having the implementing the idempotent behavior using HTTP headers is fine.  So does putting the message ID tags inside the payload.  Since the HTTP spec leaves the implementation of idempotency up to you (for all verbs) both are equally cool for RESTful apps.

Anyway, I just wanted to point out that POST doesn't have to mean non-idempotent -- and then I started rambling as usual.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1995</wp:comment_id>
			<wp:comment_author><![CDATA[DevHawk]]></wp:comment_author>
			<wp:comment_author_email>harry@devhawk.net</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>24.16.13.109</wp:comment_author_IP>
			<wp:comment_date>2007-12-05 23:35:11</wp:comment_date>
			<wp:comment_date_gmt>2007-12-06 07:35:11</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Good point, Erik. POST isn't *naturally* idempotent. I'll change the text to reflect your comment.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1996</wp:comment_id>
			<wp:comment_author><![CDATA[Libor SOUCEK]]></wp:comment_author>
			<wp:comment_author_email>lsoucek@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://lsblog.wordpress.com</wp:comment_author_url>
			<wp:comment_author_IP>81.30.227.92</wp:comment_author_IP>
			<wp:comment_date>2007-12-06 06:02:19</wp:comment_date>
			<wp:comment_date_gmt>2007-12-06 14:02:19</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Wouldn’t be generally safer base idempotent behavior rather on business data then on some kind of communication protocol?

Sure with described approach you will discard all duplicate messages right on transport layer which is perfectly legal and saves recipient service from unnecessary processing but works only for certain scenarios.

Especially this approach works poorly in case message source service makes “failover” to different HW/geo location where it might “rerun” already once processed messages (i.e. source service tries to ensure all data were rely processed) and start with completely different message numbers. This is more highlighted with use of GUID which is not tight to data content what so ever.

With GUID as “Unique ID” you have yet another problem. You would not be able on message recipient side define order in which messages were generated/send. This might be problem not only on UDP based messaging protocol as widely known. Another case is when sending data from two location after service failover. And much less known/mentioned message reordering problem is surprisingly on TCP based connection in certain network configurations as well (e.g. prime example of this behavior is on highly resilient network setup where are routers cross connected to ensure at least one network route cross routers is always available).

I’m not saying is not usable for your scenarios but it could be generalized more. All depends on requirements and environment you are running in.
]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1997</wp:comment_id>
			<wp:comment_author><![CDATA[Mark Baker]]></wp:comment_author>
			<wp:comment_author_email>distobj@acm.org</wp:comment_author_email>
			<wp:comment_author_url>http://www.markbaker.ca</wp:comment_author_url>
			<wp:comment_author_IP>209.161.202.187</wp:comment_author_IP>
			<wp:comment_date>2007-12-06 12:09:25</wp:comment_date>
			<wp:comment_date_gmt>2007-12-06 20:09:25</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[FWIW, POST is idempotent by definition.  Erik's confusing what the server does with the message with what the message means.  It is not inconsistent for the former to be idempotent and the latter to be non-idempotent.

Also, re APP and PUT vs. POST, PUT can only be used for creation when the client knows the URI it is to use.  As it doesn't in the typical scenario, the server has to provide the URI so POST is appropriate.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1998</wp:comment_id>
			<wp:comment_author><![CDATA[Erik Johnson]]></wp:comment_author>
			<wp:comment_author_email>ejohnson@epicor.com</wp:comment_author_email>
			<wp:comment_author_url>http://appside.blogspot.com</wp:comment_author_url>
			<wp:comment_author_IP>70.181.194.38</wp:comment_author_IP>
			<wp:comment_date>2007-12-06 15:53:11</wp:comment_date>
			<wp:comment_date_gmt>2007-12-06 23:53:11</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Mark,  I'm not the guru -- am I looking at the wrong spec (it wouldn't be the first time)?  

RFC-2616 section 9.1.2 (Idempotent Methods) says:  "Methods can also have the property of "idempotence"...The methods GET, HEAD, PUT and DELETE share this property."

Looking further down at the section describing POST, I don't see anything about idempotency.  

]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1999</wp:comment_id>
			<wp:comment_author><![CDATA[Mark Baker]]></wp:comment_author>
			<wp:comment_author_email>distobj@acm.org</wp:comment_author_email>
			<wp:comment_author_url>http://www.markbaker.ca</wp:comment_author_url>
			<wp:comment_author_IP>209.161.202.187</wp:comment_author_IP>
			<wp:comment_date>2007-12-07 04:20:36</wp:comment_date>
			<wp:comment_date_gmt>2007-12-07 12:20:36</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Yes, of course.  I meant POST was *non*-idempotent.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Functional Understanding</title>
		<link>http://devhawk.net/2007/12/04/functional-understanding/</link>
		<pubDate>Tue, 04 Dec 2007 17:25:42 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://f5911927-c440-4f2d-8539-1382021b6ae3</guid>
		<description></description>
		<content:encoded><![CDATA[<p>I was showing some of my cool (well, I think it's cool) F# parsing code to some folks @ DevTeach. I realized very quickly that a) most mainstream developers are fairly unaware of functional programming and b) I suck at explaining why functional programming matters. So I decided to take another stab at it. I probably should have posted this before my <a href="http://devhawk.net/2007/11/28/F+As+A+Second+NET+Language.aspx">recent series on F#</a>, but better late than never I suppose.</p><p>Right off the bat, the term "functional" is confusing. When you say "function" to a mainstream developer, they hear "<a href="http://en.wikipedia.org/wiki/Function_%28computer_science%29">subroutine</a>". But when you say "function" to a mathematician, they hear "<a href="http://en.wikipedia.org/wiki/Function_%28math%29">calculation</a>". Functions in functional programming (aka FP) are closer to the mathematic concept. If you think about math functions, they're very different than subroutines. In particular, math functions have no intrinsic mutable data. If you have a math function like f(x) = x<sup>3</sup>, f(7) always equals 343, no matter how many times you call it. This is very different then a function like String.Length() where the value returned depends on the value of the string. </p><p>Another interesting aspect of math-style functions is that they have no side-effects. When you call StringBuilder.Append(), you're changing the internal state of the StringBuilder object. But FP functions don't work like that. Providing the same input always provides the same output (i.e. the same independent variable always yields the same dependent value). </p><p>If you're a .NET developer, this may sound strange, but you're probably very familiar with the <a href="http://msdn2.microsoft.com/library/system.string.aspx">String class</a> which works exactly the same way.</p><blockquote><p>A <b>String</b> object is a sequential collection of <a href="http://msdn2.microsoft.com/en-us/library/k493b04s.aspx">System.Char</a> objects that represent a string. The value of the <b>String</b> object is the content of the sequential collection, and that value is immutable.  </p><p>A <b>String</b> object is called immutable (read-only) because its value cannot be modified once it has been created. Methods that appear to modify a <b>String</b> object actually return a new <b>String</b> object that contains the modification. </p></blockquote><p>In other words, all variables in FP are a lot like .NET Strings. In fact, in many FP languages, variables are actually called "values" because they don't, in fact, vary.  </p><p>It turns out that this approach to programming has significant upside for unit testing and concurrency. Unit tests typically spend a significant effort getting the objects they're testing into the right state to invoke the function under test. In FP, the result of a function is purely dependent on the values passed into it, which makes unit testing very straight forward. For concurrency, since functions don't share mutable state, there's no need to do complicated locking across multiple processors.  </p><p>But if values don't vary, how to we managed application state? FP apps typically maintain their state on the stack. For example, my F# parser starts with a string input and return an abstract syntax tree. All the data is passed between functions on the stack. However, for most user-oriented non-console applications, keeping all state on the stack isn't realistic.  As Simon Peyton Jones <a href="http://research.microsoft.com/Users/simonpj/papers/marktoberdorf/" target="_blank">points out</a>, "The ultimate purpose of running a program is invariably to cause some side effect: a changed file, some new pixels on the screen, a message sent, or whatever." So all FP languages provide some mechanism for purposefully implementing side effects, some (like Haskell) stricter in their syntax than others. </p><p>One of the nice things about F#'s <a href="http://research.microsoft.com/fsharp/faq.aspx#WhatSortOfLanguage">multi-paradigm nature</a> is that side effects is a breeze. Of course, that's both a blessing and a curse, since the much of the aforementioned upside comes from purposefully building side-effect free functions. But the more I work with F#, the more I appreciate the ability to do both functional as well as imperative object-oriented operations in the same language. For example, my parsing code so far is purely functional - it takes in a string to be parsed and returns an AST. But the logical next step would be to generate output based on that AST. Since F# supports non-functional code - not to mention the rich Base Class Library - generating output should be straightforward.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1066</wp:post_id>
		<wp:post_date>2007-12-04 17:25:42</wp:post_date>
		<wp:post_date_gmt>2007-12-04 17:25:42</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>functional-understanding</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="f-sharp"><![CDATA[F#]]></category>
		<category domain="post_tag" nicename="functional-programming"><![CDATA[Functional Programming]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[f5911927-c440-4f2d-8539-1382021b6ae3]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Functional+Understanding]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/12/05/Functional+Understanding]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>2000</wp:comment_id>
			<wp:comment_author><![CDATA[Naveen]]></wp:comment_author>
			<wp:comment_author_email>naveensrinivasan@yahoo.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>140.188.62.187</wp:comment_author_IP>
			<wp:comment_date>2007-12-05 07:48:45</wp:comment_date>
			<wp:comment_date_gmt>2007-12-05 15:48:45</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Can you post the parsing code? It would be interesting to look at it.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>2001</wp:comment_id>
			<wp:comment_author><![CDATA[Anon]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>131.107.0.102</wp:comment_author_IP>
			<wp:comment_date>2007-12-05 12:04:51</wp:comment_date>
			<wp:comment_date_gmt>2007-12-05 20:04:51</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I think that we FPers commonly introduce our friends to the wrong way. Normally people learn new technologies because they somehow give you more power. I think that eliminating side-effects is only half of the story; and it's the part that feels limiting to non-FP programmers. It's actually not limiting but appreciating that is difficult without working in FP for a while. The powerful part of FP (the other half of the story) is using functions as first-class citizens - composing complex things out of simple already built and working composable pieces. I think it's a lot easier for non-FP programmers to grasp the power of higher order functions first, then later come to realize the value of side-effect-free programming. They see that it gets in the way of the power of composition. But they can't see that until they see the power of composition to begin with.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Blogging F# Code</title>
		<link>http://devhawk.net/2007/12/07/blogging-f-code/</link>
		<pubDate>Fri, 07 Dec 2007 13:47:39 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://597d1f99-a4ca-435b-b3fb-04f9162cfd3c</guid>
		<description></description>
		<content:encoded><![CDATA[<p>I'm going to start posting about my F# parsing code soon. Obviously, I'll make the code directly available, but I'm also going to be writing about it quite a bit. Since I'll be posting lots of F# code snippets, I took the time to build an F# language syntax definition for <a href="http://puzzleware.net/CodeHtmler/default.aspx">CodeHTMLer</a>. Of all the <a href="http://gallery.live.com/results.aspx?bt=9&amp;q=insert%20code">various WL Writer Insert Code plug-ins</a>, CodeHTMLer is my favorite because it can be configured not to use &lt;pre&gt; tags, which many RSS readers handle poorly (in my experience). </p><p>In case anyone else wants it, I've stuck the CodeHTMLer F# language definition up on <a href="http://cid-0d9bc809858885a4.skydrive.live.com/self.aspx/DevHawk%20Content/F%7C3%20CodeHTMLer%20Language%20Definition.xml">my SkyDrive</a>. If you using the <a href="http://puzzleware.net/download.aspx?file=/codehtmler/codehtmler.livewriterplugin.zip">CodeHTMLer WL Writer Plug-in</a>, you can easily add this to your machine. Once you've installed CodeHTMLer and run it once, go to the command line and type "cd %appdata%WindowsLiveWriter" and you'll find the LanguageDefinitions.xml file. Edit that file to insert the add the contents of <a href="http://cid-0d9bc809858885a4.skydrive.live.com/self.aspx/DevHawk%20Content/F%7C3%20CodeHTMLer%20Language%20Definition.xml">my F# language definition</a> after the &lt;CodeLanguages&gt; tag and you're all set. </p><p>BTW, the first language in the file will be the default language in the plug-in, so if you're an occasional F# user, you might want to add the F# definition to the end rather than the beginning of the file. If you don't want to further edit the XML file manually, you can select "Edit Languages" in the plug-in and edit the order of the languages to your heart's content.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1067</wp:post_id>
		<wp:post_date>2007-12-07 13:47:39</wp:post_date>
		<wp:post_date_gmt>2007-12-07 13:47:39</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>blogging-f-code</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="blogging"><![CDATA[Blogging]]></category>
		<category domain="post_tag" nicename="f-sharp"><![CDATA[F#]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[597d1f99-a4ca-435b-b3fb-04f9162cfd3c]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Blogging+F+Code]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/12/07/Blogging+F+Code]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Morning Coffee 128</title>
		<link>http://devhawk.net/2007/12/07/morning-coffee-128/</link>
		<pubDate>Fri, 07 Dec 2007 19:06:02 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://2cfc7028-003e-456f-b8a3-3ba9f25e3a84</guid>
		<description></description>
		<content:encoded><![CDATA[<ul><li>After using Outlook 2007 as my RSS reader for a few months, I've gone back to <a href="http://www.rssbandit.org/">RSS Bandit</a>. I run two work machines (desktop + laptop) and I finally got tired duplicated blog entries because each copy of Outlook downloads the same post. Also, for some reason Outlook downloads the same Technorati posts over and over again.  </li><li>ADO.NET <a href="http://www.microsoft.com/downloads/details.aspx?FamilyId=15DB9989-1621-444D-9B18-D1A04A21B519&amp;displaylang=en">Entity Framework Beta 3</a> was released. The <a href="http://www.microsoft.com/downloads/details.aspx?FamilyId=D8AE4404-8E05-41FC-94C8-C73D9E238F82&amp;displaylang=en">latest CTP of the EF Tools</a> is also available. And as per the <a href="http://www.microsoft.com/presspass/press/2007/dec07/12-06EntityBeta3PR.mspx">press release</a>, EF has gained support from "Core Lab, DataDirect Technologies, Firebird Foundation Inc., IBM Corp., MySQL AB, Npgsql , OpenLink Software Inc., Phoenix Software International, Sybase Inc. and VistaDB Software Inc". I'm not sure what that means, exactly, but I guess you'll be able to LINQ to Entities on a wide variety of DB platforms. Interesting Oracle isn't on that list. Not really surprising, but interesting.  </li><li>Here's a new <a href="http://weblogs.asp.net/scottgu/archive/2007/12/06/asp-net-mvc-framework-part-3-passing-viewdata-from-controllers-to-views.aspx">ASP.NET MVC article</a> from Scott Guthrie, this one on views and how you pass data to one from a controller. Using generics to get strongly-typed ViewData is pretty sweet. But where's the MVC CTP that was supposed to be here this week?  </li><li>In news about web app tool previews that did ship this week, Live Labs announces <a href="http://labs.live.com/Volta.aspx">Volta</a>. Haven't installed or played with it yet, but I did read the <a href="http://labs.live.com/volta/docs/">fundamentals page</a>. It primarily looks like a tool to compile MSIL -&gt; JavaScript, so you can write your code in C# but execute it in the browser. <a href="http://samgentile.com/blogs/samgentile/archive/2007/12/05/microsoft-live-labs-volta.aspx">Sam</a> and <a href="http://weblogs.asp.net/gsusx/archive/2007/12/06/announcing-volta.aspx">Jesus</a> are excited, <a href="http://www.rgoarchitects.com/nblog/2007/12/06/MicrosoftVoltaOhMyOhMy.aspx">Arnon</a> not so much. Arnon's argument that being able to postponing architectural decisions is to good to be true is fairly compelling, and not just because he <a href="http://www.devhawk.net/2007/08/14/Retire+The+Tenets.aspx">quotes me</a> to support his argument. But I'll download it and provide further comment after I experiment with it myself.  </li><li>Simple Sharing Extensions is now <a href="http://dev.live.com/feedsync">FeedSync</a>. Not sure what else is new about it, other than it's been blessed with "1.0" status. The Live FeedSync Dev Center has an <a href="http://dev.live.com/feedsync/intro.aspx">introduction</a>, a <a href="http://dev.live.com/feedsync/tutorial/">tutorial</a> and the <a href="http://dev.live.com/feedsync/spec/v1.htm">spec</a>. (via <a href="http://www.liveside.net/blogs/main/archive/2007/12/05/microsoft-launches-feedsync-for-data-synchronization-via-feeds-previously-known-as-sse.aspx">LiveSide</a>)  </li><li>Dare <a href="http://www.25hoursaday.com/weblog/2007/12/05/TuplesAreMyFavoritePythonFeature.aspx">likes tuples</a>. <a href="http://devhawk.net/2006/08/22/Language+Features+I+Wish+C+Had+Tuples.aspx">Me too</a>. I <a href="http://devhawk.net/2006/08/22/Language+Features+I+Wish+C+Had+Symbols.aspx">also like symbols</a>. </li></ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1068</wp:post_id>
		<wp:post_date>2007-12-07 11:06:02</wp:post_date>
		<wp:post_date_gmt>2007-12-07 19:06:02</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>morning-coffee-128</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="ado-net"><![CDATA[ADO.NET]]></category>
		<category domain="post_tag" nicename="asp-net"><![CDATA[ASP.NET]]></category>
		<category domain="post_tag" nicename="blogging"><![CDATA[Blogging]]></category>
		<category domain="category" nicename="morning-coffee"><![CDATA[Morning Coffee]]></category>
		<category domain="post_tag" nicename="office"><![CDATA[Office]]></category>
		<category domain="post_tag" nicename="volta"><![CDATA[Volta]]></category>
		<category domain="post_tag" nicename="windows-live"><![CDATA[Windows Live]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[2cfc7028-003e-456f-b8a3-3ba9f25e3a84]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Morning+Coffee+128]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/12/07/Morning+Coffee+128]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>2002</wp:comment_id>
			<wp:comment_author><![CDATA[Jack]]></wp:comment_author>
			<wp:comment_author_email>kostik_y3k@yahoo.de</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>87.234.196.124</wp:comment_author_IP>
			<wp:comment_date>2007-12-07 11:31:44</wp:comment_date>
			<wp:comment_date_gmt>2007-12-07 19:31:44</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[about rss bandit: did you already tried the new rss client - www.mindity.com? It's an .net app as well]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>2003</wp:comment_id>
			<wp:comment_author><![CDATA[Omar Qadan]]></wp:comment_author>
			<wp:comment_author_email>omar.qadan@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://ohq82.blogspot.com</wp:comment_author_url>
			<wp:comment_author_IP>212.33.190.77</wp:comment_author_IP>
			<wp:comment_date>2007-12-08 07:57:13</wp:comment_date>
			<wp:comment_date_gmt>2007-12-08 15:57:13</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[i've tried JetBrains Omea Reder 2.2 it's so cool you can try it
http://www.jetbrains.com/omea/reader/index.html]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Morning Coffee 129</title>
		<link>http://devhawk.net/2007/12/10/morning-coffee-129/</link>
		<pubDate>Mon, 10 Dec 2007 09:56:50 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://f7d43851-7121-49fb-8aa2-367ecc6b07f7</guid>
		<description></description>
		<content:encoded><![CDATA[<ul><li>Short coffee this morning, as I'm home with a tweaked ankle.  </li><li>I started playing <a href="http://www.xbox.com/games/indigoprophecy" target="_blank">Indigo Prophecy</a> over the weekend. It's an original Xbox game, released as part of the new Xbox Originals program. It has a <a href="http://www.metacritic.com/games/platforms/xbx/fahrenheit" target="_blank">good metacritic score</a> (84), though apparently it wasn't much of a retail success. I'm enjoying it, though it's not very challenging. It's more an interactive movie than a game. Good story, though.  </li><li>The ASP.NET MVC preview dropped today, Scott Guthrie <a href="http://weblogs.asp.net/scottgu/archive/2007/12/09/asp-net-3-5-extensions-ctp-preview-released.aspx" target="_blank">has the details</a>. Scott Hanselman has a <a href="http://www.hanselman.com/blog/ASPNET35ExtensionsPlusMVCHowToScreencast.aspx" target="_blank">40 minute how-to video</a> and Phil Haack has <a href="http://haacked.com/archive/2007/12/09/writing-unit-tests-for-controller-actions.aspx" target="_blank">several</a><a href="http://haacked.com/archive/2007/12/09/extending-asp.net-mvc-to-add-conventions.aspx" target="_blank">articles</a> up <a href="http://haacked.com/archive/2007/12/07/tdd-and-dependency-injection-with-asp.net-mvc.aspx" target="_blank">already</a>.  </li><li>Speaking of ASP.NET MVC and Scott Guthrie, he's got another post in his series on ASP.NET MVC. This time, he's covering <a href="http://weblogs.asp.net/scottgu/archive/2007/12/09/asp-net-mvc-framework-part-4-handling-form-edit-and-post-scenarios.aspx" target="_blank">how to handle form input / POST data</a>.  </li><li>Erik Meijer <a href="http://lambda-the-ultimate.org/node/2563" target="_blank">has posted</a> some of his thoughts on <a href="http://labs.live.com/volta/" target="_blank">Volta</a>. He's one of the guys behind Volta, so it's worth a good look. (<a href="http://www.25hoursaday.com/weblog/2007/12/09/MicrosoftVoltaTurningTraditionalWebDevelopmentOnItsHead.aspx" target="_blank">via Dare Obasanjo</a>) </li><li>Late Addition - the ASP.NET Extensions is more than just the MVC stuff. It also includes AJAX improvements, Silverlight support, <a href="http://blogs.msdn.com/astoriateam/archive/2007/12/10/ado-net-data-services-project-astoria-ctp-is-released.aspx" target="_blank">ADO.NET Data Services</a> and ASP.NET Dynamic Data Support. <a href="http://astoria.mslivelabs.com/" target="_blank">Data Services</a> (formerly Astoria) let's you easily expose your database via RESTful services. I think Dynamic Data Support used to be code named <a href="http://blogs.msdn.com/adonet/archive/2007/04/30/project-codename-jasper-announced-at-mix-07.aspx" target="_blank">Jasper</a>. It's a "rich scaffolding framework" for ASP.NET. I assume that's to compete w/ Ruby on Rails.</li></ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1069</wp:post_id>
		<wp:post_date>2007-12-10 09:56:50</wp:post_date>
		<wp:post_date_gmt>2007-12-10 09:56:50</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>morning-coffee-129</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="ado-net"><![CDATA[ADO.NET]]></category>
		<category domain="post_tag" nicename="asp-net"><![CDATA[ASP.NET]]></category>
		<category domain="category" nicename="morning-coffee"><![CDATA[Morning Coffee]]></category>
		<category domain="post_tag" nicename="xbox-360"><![CDATA[Xbox 360]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[f7d43851-7121-49fb-8aa2-367ecc6b07f7]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Morning+Coffee+129]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/12/10/Morning+Coffee+129]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Practical Parsing in F#</title>
		<link>http://devhawk.net/2007/12/10/practical-parsing-in-f/</link>
		<pubDate>Mon, 10 Dec 2007 14:40:10 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://e65ad3ba-088c-4b8b-88e6-e3d273fb7711</guid>
		<description></description>
		<content:encoded><![CDATA[I'm interested in parsing because I'm interested in Domain Specific Languages. F# is <a href="http://tomasp.net/blog/fsharp-iv-lang.aspx">pretty good for internal DSLs</a>, but internal DSLs are obviously limited by the syntax of the host language. If you want complete control over the language, you've got to build your own parser.

The defacto standard for parser development is <a href="http://en.wikipedia.org/wiki/Yacc">Yet Another Compiler Compiler</a>, or yacc. There's a version of <a href="http://devhawk.net/2006/09/17/Managed+Lex+And+Yacc.aspx">yacc for .NET</a> as well as one <a href="http://research.microsoft.com/fsharp/manual/parsing.aspx">specifically for F#</a>. However, I'm not a fan of yacc. Yacc parsers are specified using <a href="http://en.wikipedia.org/wiki/Context-free_grammar">context-free grammar</a> (aka CFG). But CFG's can be ambiguous - actually, it's <a href="http://en.wikipedia.org/wiki/Dangling_else">nearly impossible</a> to build an unambiguous CFG. Personally, I'm a big fan of <a href="http://pdos.csail.mit.edu/~baford/packrat/">Parsing Expression Grammars</a> (or PEGs) which among other advantages makes it impossible to develop ambiguous grammars. Furthermore, PEGs don't require a separate lexical analyzer like <a href="http://en.wikipedia.org/wiki/Lex_programming_tool">lex</a>, so I think they're more suitable for building <a href="http://devhawk.net/2006/08/15/Modular+Compilers.aspx">modular compilers</a>.

Since I like PEGs and F# so much, I developed a parser for the PEG grammar from the <a href="http://pdos.csail.mit.edu/~baford/packrat/popl04/">original PEG whitepaper</a> using F#. The grammar is much simpler than a language like C#, but with twenty nine grammar productions it's certainly not trivial. The F# implementation is fairly straightforward backtracking recursive decent parser, which makes it easy to understand even if you're not a parser guru. It's also small - around 400 lines of code including comments. But I think the code illustrates both the general value of Functional Programming as well as the specific value of F#. Here's how the series is shaping up (though this is subject to change):
<ul>
	<li><a href="http://devhawk.net/2007/12/11/Practical+F+Parsing+The+Parse+Buffer.aspx" target="_blank">The Parse Buffer</a></li>
	<li><a href="http://devhawk.net/2007/12/12/Practical+F+Parsing+Unit+Testing.aspx" target="_blank">Unit Testing</a></li>
	<li><a href="http://devhawk.net/2007/12/13/Practical+F+Parsing+Syntactical+Productions+1.aspx" target="_blank">Syntactical Productions (1)</a></li>
	<li><a href="http://devhawk.net/2007/12/14/Practical+F+Parsing+Active+Patterns.aspx">Active Patterns</a></li>
	<li><a href="http://devhawk.net/2007/12/17/Practical+F+Parsing+Syntactical+Productions+2.aspx" target="_blank">Syntactical Productions (2)</a></li>
	<li><a href="http://devhawk.net/2007/12/18/Practical+F+Parsing+Semantic+Productions+1.aspx" target="_blank">Semantic Productions (1)</a></li>
	<li><a href="http://devhawk.net/2007/12/18/Practical+F+Parsing+Semantic+Productions+1.aspx" target="_blank"></a><a href="http://devhawk.net/2007/12/19/Practical+F+Parsing+The+Abstract+Syntax+Tree.aspx" target="_blank">The Abstract Syntax Tree</a></li>
	<li><a href="http://devhawk.net/2007/12/20/Practical+F+Parsing+Semantic+Productions+2.aspx" target="_blank">Semantic Productions (2)</a></li>
	<li><a class="TitleLinkStyle" rel="bookmark" href="http://devhawk.net/2008/01/29/Practical+F+Parsing+Recursion+And+Predicate+Functions.aspx"><span style="color: #017cbc;">Recursion and Predicate Functions</span></a></li>
	<li>Caching and Tracing</li>
	<li>C# Interop</li>
</ul>
I was originally planning to post the code for the parser itself with this post. However, i find that I'm revising the code as I write the articles in this series, so I'm going to hold off for now. If you're really desperate, <a href="mailto:harry@devhawk.net" target="_blank">drop me a line</a> and I'll see what I can do.

Update - Almost forgot, if you're going to follow along at home, I'm using the <a href="http://research.microsoft.com/research/downloads/Details/e8478d6b-49c0-4750-80eb-0e424d1631a3/Details.aspx">latest version of F#, v1.9.3.7</a>. Note, the <a href="http://research.microsoft.com/fsharp/release.aspx">F# Downloads page</a> on the MS Research is woefully out of date, so go to the <a href="http://research.microsoft.com/research/downloads/Browse.aspx?categoryID=0&amp;sortCriteria=releaseDate&amp;sortOrder=descending">MS Research Downloads page</a>. Currently, it's the most recent release. It snaps into VS 2005 and 2008 plus has command line tools. If you're an VS Express user, Douglas Stockwell <a href="http://11011.net/archives/000721.html">explained</a> how to roll your own F# Express.

Much Later Update - The code is now available <a href="http://cid-0d9bc809858885a4.skydrive.live.com/browse.aspx/DevHawk%20Content/Projects/Practical%20Parsing%20in%20F%7C3" target="_blank">on my Skydrive</a>.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1070</wp:post_id>
		<wp:post_date>2007-12-10 14:40:10</wp:post_date>
		<wp:post_date_gmt>2007-12-10 14:40:10</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>practical-parsing-in-f</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="development"><![CDATA[Development]]></category>
		<category domain="post_tag" nicename="domain-specific-languages"><![CDATA[Domain Specific Languages]]></category>
		<category domain="post_tag" nicename="f-sharp"><![CDATA[F#]]></category>
		<category domain="post_tag" nicename="parsing-expression-grammar"><![CDATA[Parsing Expression Grammar]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[e65ad3ba-088c-4b8b-88e6-e3d273fb7711]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Practical+Parsing+In+F]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/12/10/Practical+Parsing+In+F]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>2004</wp:comment_id>
			<wp:comment_author><![CDATA[Tomas Restrepo]]></wp:comment_author>
			<wp:comment_author_email>tomas@winterdom.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.winterdom.com/weblog/</wp:comment_author_url>
			<wp:comment_author_IP>200.116.141.224</wp:comment_author_IP>
			<wp:comment_date>2007-12-10 15:38:24</wp:comment_date>
			<wp:comment_date_gmt>2007-12-10 23:38:24</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Pretty cool Harry, looking forward to the rest of the posts and the code!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>ADO.NET Data Services and Idempotence</title>
		<link>http://devhawk.net/2007/12/10/ado-net-data-services-and-idempotence/</link>
		<pubDate>Mon, 10 Dec 2007 16:44:38 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://d2e3f3cb-e0c1-4444-b8cd-16cc663b6404</guid>
		<description></description>
		<content:encoded><![CDATA[I was reading thru the <a href="http://quickstarts.asp.net/3-5-extensions/adonetdataservice/default.aspx" target="_blank">ADO.NET Data Services Quickstart</a>, because I wanted to understand how it support data updates. The quickstart uses the <a href="http://msdn2.microsoft.com/en-us/library/aa276837(SQL.80).aspx" target="_blank">Customers table</a> from the <a href="http://msdn2.microsoft.com/en-us/library/aa276825(SQL.80).aspx" target="_blank">Northwind sample database</a>, which unlike most of the other tables uses an nchar(5) value as the primary key. <a href="http://msdn2.microsoft.com/en-us/library/aa276832(SQL.80).aspx" target="_blank">Categories</a>, <a href="http://msdn2.microsoft.com/en-us/library/aa276833(SQL.80).aspx" target="_blank">Employees</a>, <a href="http://msdn2.microsoft.com/en-us/library/aa276828(SQL.80).aspx" target="_blank">Orders</a>, <a href="http://msdn2.microsoft.com/en-us/library/aa276824(SQL.80).aspx" target="_blank">Products</a>, <a href="http://msdn2.microsoft.com/en-us/library/aa276831(SQL.80).aspx" target="_blank">Shippers</a> and <a href="http://msdn2.microsoft.com/en-us/library/aa276826(SQL.80).aspx" target="_blank">Suppliers</a> all use an auto-increment integer field for their primary keys.

I only point this out because inserting into Customers is idempotent, while inserting into those other listed tables is not. Is it a coincidence that the ADO.NET data services team chose the Customers table for their quickstart? Maybe, but I doubt it. Regardless, making a non-idempotent <a href="http://quickstarts.asp.net/3-5-extensions/reference/adoref/M_Sys_Data_DataService_insert.aspx" target="_blank">insert</a> call from the browser is a bad idea, if you care about <a href="http://devhawk.net/2007/11/09/The+Importance+Of+Idempotence.aspx" target="_blank">Exactly Once</a>.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1071</wp:post_id>
		<wp:post_date>2007-12-10 16:44:38</wp:post_date>
		<wp:post_date_gmt>2007-12-10 16:44:38</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>ado-net-data-services-and-idempotence</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="ado-net"><![CDATA[ADO.NET]]></category>
		<category domain="category" nicename="architecture"><![CDATA[Architecture]]></category>
		<category domain="post_tag" nicename="idempotence"><![CDATA[Idempotence]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[d2e3f3cb-e0c1-4444-b8cd-16cc663b6404]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[ADONET+Data+Services+And+Idempotence]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/12/11/ADONET+Data+Services+And+Idempotence]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Practical F# Parsing: The Parse Buffer</title>
		<link>http://devhawk.net/2007/12/11/practical-f-parsing-the-parse-buffer/</link>
		<pubDate>Tue, 11 Dec 2007 13:18:05 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://543a281a-570c-4560-996f-5b550e480c76</guid>
		<description></description>
		<content:encoded><![CDATA[The first thing I need for my F# parser is a type to represent the buffer of characters being parsed. For now, I'm using the <a href="http://www.artima.com/intv/simplest.html">simplest thing that could possibly work</a>: an intrinsic F# character list. Lists are heavily used in functional languages, so they tend to have very efficient native list types. F# is no exception. Along with a native list type, F# has a native operation for retrieving the head of a list. For example, If you execute the following code, head will be bound to '1' and tail will be bound to the list ['2';'3';'4']
<pre class="brush: fsharp">let head :: tail = ['1';'2';'3';'4']</pre>
The problem using the native list head operator is that my parsing code will be explicitly bound to work on character lists only. However, I'm not sure an in-memory character list is the best way to read long files of text off the disk for processing, so I'd rather not limit future options like this. So instead, I'll define my own function to retrieve the head of the parsing buffer.
<pre class="brush: fsharp">let NC input =
    match input with
    | head :: tail -&gt; Some(head, tail)
    | _ -&gt; None</pre>
Note, in all my F# code I use the <a href="http://blogs.msdn.com/dsyme/archive/2006/08/24/715626.aspx">#light syntax</a> which means code blocks are indicated by significant whitespace indentation similar to Python.

NC stands for Next Character, though I gave it a short name since it's used often. It's basically wraps the native list head operator. If there's at least one element in the list, the first clause matches and the function returns Some(head,tail). If the list is empty, the second clause matches and the function returns None. The use of Some and None means this function returns an F# option type, which is similar to .NET's <a href="http://msdn2.microsoft.com/en-us/library/system.nullable.aspx" target="_blank">Nullable</a> type. (head,tail) is a tuple - in this case, combining the head and the tail of the list together. Finally, the underscore in the second match clause is a wildcard, so that clause matches anything. I'm using it here like the default clause of a switch statement in C#.

The F# type for this function is 'a list -&gt; ('a * 'a list) option. The 'a is a generic type parameter and the asterisk indicates a tuple. So NC takes a generic list, and returns an option tuple with a single generic element and a generic list. Even though the function is named Next Character, it would work with a list of any type.

Now that I have my own list head function, the rest of my parsing code can it. If I later decide to change the type of the parse buffer, I can change the implementation of NC - including the input and return types - without having to change the parsing functions that use NC. For example, here's a different implementation where the input parameter is a .NET string instead of a char list.
<pre class="brush: fsharp">let NC (input : string) =
    if input.Length &gt; 0
        then Some(input.Chars(0), input.Substring(1))
        else None</pre>
Since I'm calling methods on the input parameter, I need to explicitly tell F# what type it is. The F# type for this function is string -&gt; (char * string) option, which is obviously different from the type definition of the original NC version. But F#'s <a href="http://devhawk.net/2007/11/29/F+Hawkeye+Type+Inference.aspx">type inference</a> automatically adjusts to handle the change in the type so functions that call NC don't have to change. FP languages like F# handle list operations extremely efficiently, so this version of NC is probably a step in the wrong direction. However, it's good to know I can easily encapsulate the details our the parse buffer type away from the rest of my parsing code.

Here's another function I'll use in parsing, defined entirely in terms of NC.
<pre class="brush:fsharp">let TOKEN token input =
    let rec ParseToken token input =
        match token, NC input with
        | t :: [], Some(i, input) when i = t -&gt;
            Some(input)
        | t :: token, Some(i, input) when i = t -&gt;
            ParseToken token input
        | _ -&gt; None
    ParseToken (List.of_seq token) input</pre>
The TOKEN function checks to see if the token string is at the front of the input parse buffer. If so, it returns the remainder of the buffer after the token. If not, it returns None. It's defined entirely in terms of NC, so it works the same with both the versions of NC I've written so far. However, depending on the implementation of NC, I might rewrite TOKEN. For example, if I was using the string version of NC, I'd probably rewrite this function to use <a href="http://msdn2.microsoft.com/en-us/library/system.string.startswith.aspx" target="_blank">String.StartsWith</a> instead of recursion.

TOKEN defines a local recursive function called ParseToken. It's very common to see local functions defined inside other functions in FP, similar to how classes can define local classes in OO languages like C#. ParseToken recursively compares the characters in the token string with the characters in the input buffer, finishing when either it reaches the end of the token string or there's a mismatch. By default, functions in F# can't call themselves recursively by default, so ParseToken is declared to be recursive by using "let rec" instead of simply "let".

ParseToken shows off something interesting about the way symbols are used in F#. Remember that F# values are immutable by default. Yet, the symbols "token" and "input" appear to change. In the match statement, token and input represent the values passed into the function. However, in the match clauses, token and input represent the tail of those two lists. Technically, the values didn't change, F# allows you to reuse the symbols. If I wanted to avoid reusing symbols, I could define ParseToken this way (though I find this much less readable):
<pre class="brush:fsharp">let rec ParseToken token input =
    match token, NC input with
    | t :: [], Some(i, itail) when i = t -&gt;
        Some(itail)
    | t :: ttail, Some(i, itail) when i = t -&gt;
        ParseToken ttail itail
    | _ -&gt; None</pre>
Other than declaring ParseToken, the TOKEN function is a single line of code. It simply calls ParseToken, converting the token parameter into a char list along the way. While lists are very efficient, which would you rather type?
<pre class="brush: fsharp">let token = TOKEN ['f';'o';'o'] input
let token = TOKEN "foo" input</pre>
Personally, I like the second version. I'm sure there's a slight perf hit to convert from a string to a list, but frankly I value readability over performance so I used strings for tokens. TOKEN uses the List.of_seq function to do the conversion. Seq is F#'s name for IEnumerable. Technically, TOKEN would work with any IEnumerable type. However, in my source code, it's always going to be a string.

I also used List.of_seq to define a helper function String to Parse Buffer (aka S2PB) that converts a string into a character list. I use function often in the test code.
<pre class="brush:fsharp">let S2PB input = List.of_seq input</pre>
If I were to change the input type of NC, I'd also change the implementation of S2PB so that it still took in a string but returned whatever the correct input type for NC.

The one problem with S2PB function is that you have to use it with parentheses almost all the time. If I write NC S2PB "foo", F# can't tell if I'm calling NC with two parameters or passing the result of S2PB "foo" to NC. Since NC is strongly typed to have only one input parameter, you might have thought it could automatically determine the calling order, but it doesn't.

I could make the function calls explicit with parenthesis by writing NC (S2PB "foo"). F# also provides a pipe operator, so I could pipe the result of S2PB into NC by writing S2PB "foo" |&gt; NC. I didn't like either of those solutions, so instead I defined a custom unary operator !! as an alias. The parameter binding rules are different for custom operators because I can write NC !! "foo" without piping or parenthesis.
<pre class="brush: fsharp">let (!!) input = S2PB input</pre>
So now I've got three functions and a custom operator that completely abstract away the parse buffer type. As long a my parsing functions only uses these functions to access the parse buffer, I'll be able to later change the buffer type without affecting my parsing code at all.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1072</wp:post_id>
		<wp:post_date>2007-12-11 13:18:05</wp:post_date>
		<wp:post_date_gmt>2007-12-11 13:18:05</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>practical-f-parsing-the-parse-buffer</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="development"><![CDATA[Development]]></category>
		<category domain="post_tag" nicename="f-sharp"><![CDATA[F#]]></category>
		<category domain="post_tag" nicename="functional-programming"><![CDATA[Functional Programming]]></category>
		<category domain="post_tag" nicename="parsing-expression-grammar"><![CDATA[Parsing Expression Grammar]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[543a281a-570c-4560-996f-5b550e480c76]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Practical+F+Parsing+The+Parse+Buffer]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/12/11/Practical+F+Parsing+The+Parse+Buffer]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Practical F# Parsing: Unit Testing</title>
		<link>http://devhawk.net/2007/12/12/practical-f-parsing-unit-testing/</link>
		<pubDate>Wed, 12 Dec 2007 11:40:37 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://c195cf67-9986-4b53-863a-6e4897517809</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Now that I have <a href="http://devhawk.net/2007/12/11/Practical+F+Parsing+The+Parse+Buffer.aspx" target="_blank">functions to access the parse buffer</a>, I better write some tests for them. Yes, I realize I should have written the tests first, but the articles flow better this way.</p><p>I've written before that one of the benefits to side-effect free functional programming is that it makes unit testing a breeze. But I still need some type of <a href="http://en.wikipedia.org/wiki/XUnit" target="_blank">xUnit testing framework</a>. I could write my own native F# xUnit framework, but given the availability of mature xUnit frameworks on .NET, I'd really rather just use one of them. </p><p>Traditionally, I've used <a href="http://nunit.com" target="_blank">NUnit</a> or <a href="http://msdn2.microsoft.com/library/ms243147.aspx" target="_blank">Visual Studio's unit testing framework</a>, but they're designed to work with OO languages like C#. In order to use them from F#, we have to use the OO features of F#. Here's an example of some F# unit tests using NUnit.</p><pre class="brush: fsharp">
type [&lt;TestFixture&gt;] parser_tests =    
    class    
        new () = {}    
           
        [&lt;Test&gt;]   
        member this.test_NC() =    
            let Some(c,text) = NC !!"test"  
            Assert.Equal(c, 't')    
            Assert.Equal(text, !!"est")

        [&lt;Test&gt;]   
        member this.test_NC_empty_string() =    
            let ret = NC !!""  
            Assert.Equal(None, ret)
    end
</pre><p>While this works, there's an awful lot of extraneous text needed to make this work. Test functions need to be methods on a Test Fixture class (note, F# uses [&lt; &gt;] to indicate attributes) and that class needs a default constructor. F# doesn't add one by default, so we have to do so manually. And every test function needs to be marked with "member this".</p><p>I'd really rather write tests that looks like this:</p><pre class="brush: fsharp">
[&lt;Test&gt;]    
let test_NC =     
    let Some(c,text) = NC !!"test"  
    Assert.Equal(c, 't')    
    Assert.Equal(text, !!"est")

[&lt;Test&gt;]    
let test_NC_empty_string =     
    let ret = NC !!""  
    Assert.Equal(None, ret)
</pre><p>That's a lot more straightforward. If only I could write my test code like that...</p><p>It turns out there's a new kid on the .NET unit testing block. <a href="http://www.codeplex.com/xunit" target="_blank">xUnit.net</a> is the brainchild of <a href="http://jamesnewkirk.typepad.com/posts/" target="_blank">Jim Newkirk</a> (one of the original NUnit developers) and <a href="http://www.agileprogrammer.com/dotnetguy/" target="_blank">Brad Wilson</a> (aka the .NET Guy). Among other things, xUnit.net does away with the TestFixture attribute. All public methods in all public classes are checked for tests in xUnit.net. </p><p>Since we don't need the TestFixture, does that mean I can write the tests as F# functions if I use xUnit.net? Not quite. xUnit.net only checks for public <em>instance </em>methods on the public classes in a test assembly. But F# functions get compiled as <em>static </em>methods. Luckily, xUnit.net is simple enough to change. I submitted a patch to xUnit.net that enables it to find both static and instance test methods (and to skip creating and disposing an object instance for static test methods). I'm hoping it will be accepted and ship as part of their next release. Until then, I'm running my own private build with those changes included.</p><p>Now that I've settled on a unit test framework, let's look at some tests. For my parser solution, I have two projects: PegParser and PegParser.Tests. The tests project depends both on the PegParser assembly as well as xunit.dll, so I need to set a reference to both in my project. F# projects in VS don't have the References node in the project tree, you have to either add the references on the project property page or directly within the code. Not sure which is better, but it's easier to show the code syntax:</p><pre class="brush: fsharp">
#R @"....xUnit.netMainxunitbinDebugxunit.dll"
#R @"..PegParserpegparser.dll"

open Xunit 
open Parser
</pre><p>The #R compiler directive is used to reference an external assembly. F#'s open statement acts like C#'s using statement, so I can reference types without specifying their full namespace. You'll notice that the parser is implemented in a dll called pegparser.dll while the namespace is simply Parser. Actually, it's not really a namespace. If you open PegParser.dll in Reflector, you'll notice that Parser is actually a type, and the functions are all implemented as static methods. F# hides that from you, though you'd have to know that if you wanted to invoke the parser from C# or VB.net. By default, F# uses the filename as the namespace/class name and I haven't changed that default in my parser code (though I probably should).  </p><p>Once we've referenced the correct assemblies, I need to write the tests. Here are two tests for NC (aka Next Char) function I wrote in the <a href="http://devhawk.net/2007/12/11/Practical+F+Parsing+The+Parse+Buffer.aspx" target="_blank">last post</a>.</p><pre class="brush: fsharp">
[&lt;Fact&gt;]    
let test_NC_empty_string () =     
    let ret = NC !!""   
    Assert.Equal(None, ret)  

[&lt;Fact&gt;]    
let test_NC_simple_string () =     
    let Some(c,text) = NC !!"test"   
    Assert.Equal(c, 't')     
    Assert.Equal(text, !!"est")
</pre><p>You'll notice this code is almost identical to my wish test code above. Almost. There are a few syntax changes - In xUnit.net, tests are called facts and Assert.AreEqual is simply Assert.Equal. I've also had to add empty parentheses after each test function name. Remember that functions in FP are like math functions. If there's no independent value to pass in, the result of a math function is is constant. F# compiles parameter-less functions as static properties instead of a static methods. In order to make the test functions compile as static methods, we have to pass in at least one parameter. In F#, the unit type is the equivalent of the void type in C#. Unit has exactly one valid value - the empty parens. Adding the empty parens to the parameter list of the test functions ensures they get compiled into static methods. </p><p>Note, it's really really easy to forget to add those empty parens. If you don't add them, the code will still compile, but the tests won't be found or run. I've been bit by that once already, so if you have a bunch of tests not running, make sure they have the empty parens!</p><p>So each test method feeds a parse buffer (converted from a string with the custom !! operator) into the NC function and makes assertions about the result. In the first test, NC should return None if the parse buffer is empty, so I simply compare the function result to None via Assert.Equals. In the second test, I use F#'s pattern matching capability to assign the result of NC to the value Some(c,text). Basically, this is doing simple pattern matching to bind the two value names to the two parts of the tuple returned from NC. Those two values are then asserted to be a specific values as you would expect.</p><p>Note, in the current version of F#, the line let Some(c,text) = NC !!"test" yields two warnings. The first (FS0062) warns that a future version of the language will require parens around Some(c,text). I sure hope they change their minds on this, since active patterns are already so parens-heavy. The second (FS0025) warns that this is an incomplete pattern match. If NC returns None, the pattern wont match and the function will throw a MatchFailureException. Of course, since these are unit tests, that's exactly the behavior I want! Given the nature of these warnings, personally, I turn them both off (only in my unit tests, mind you). This is done via the #nowarn compiler directives at the top of the file.</p><pre class="brush: fsharp">
#nowarn "25" //Turn off Incomplete Pattern Match warning
#nowarn "62" //Turn off Some contruct needs parens warning
</pre><p>Obviously, there are more tests than just these (though my total code coverage is pretty poor, shame on me) but they're all pretty similar. As you can see, there's tests are very straight forward. The nature of FP functions makes them fairly simple to test, and xUnit.net (with a couple of minor changes) makes it easy to write your unit tests in F#.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1073</wp:post_id>
		<wp:post_date>2007-12-12 11:40:37</wp:post_date>
		<wp:post_date_gmt>2007-12-12 11:40:37</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>practical-f-parsing-unit-testing</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="development"><![CDATA[Development]]></category>
		<category domain="post_tag" nicename="f-sharp"><![CDATA[F#]]></category>
		<category domain="post_tag" nicename="functional-programming"><![CDATA[Functional Programming]]></category>
		<category domain="post_tag" nicename="parsing-expression-grammar"><![CDATA[Parsing Expression Grammar]]></category>
		<category domain="post_tag" nicename="unit-testing"><![CDATA[Unit Testing]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[c195cf67-9986-4b53-863a-6e4897517809]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Practical+F+Parsing+Unit+Testing]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/12/12/Practical+F+Parsing+Unit+Testing]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>2005</wp:comment_id>
			<wp:comment_author><![CDATA[James]]></wp:comment_author>
			<wp:comment_author_email>jayhugard@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>65.200.4.130</wp:comment_author_IP>
			<wp:comment_date>2007-12-18 10:53:19</wp:comment_date>
			<wp:comment_date_gmt>2007-12-18 18:53:19</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Using the implicit class construction syntax reduces things by a few lines, but still retains a stable fixture object which gets recreated for each test (fixup the indenting as appropriate)...

type [<TestFixture>] parser_tests() =    

        [<Test>]   
        member x.test_NC() =    
            let Some(c,text) = NC !!"test"  
            Assert.Equal(c, 't')    
            Assert.Equal(text, !!"est") 

        [<Test>]   
        member x.test_NC_empty_string() =    
            let ret = NC !!""  
            Assert.Equal(None, ret) 
]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Morning Coffee 130</title>
		<link>http://devhawk.net/2007/12/13/morning-coffee-130/</link>
		<pubDate>Thu, 13 Dec 2007 18:58:17 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://8d6e82c6-2e64-43fd-bde1-0a983ba9a2f3</guid>
		<description></description>
		<content:encoded><![CDATA[<ul><li>Michael Klucher <a href="http://blogs.msdn.com/xna/archive/2007/12/13/xna-game-studio-2-0-released.aspx" target="_blank">announces</a> the release of XNA Game Studio 2.0 and Major Nelson <a href="http://www.xbox.com/en-US/community/news/2007/1212-xnasupportslive.htm" target="_blank">points to</a> the <a href="http://www.xbox.com/en-US/community/news/2007/1212-xnasupportslive.htm" target="_blank">press release</a> announcing the release. You can get <a href="http://creators.xna.com/Education/GettingStarted.aspx" target="_blank">the bits</a> from XNA Creators Club Online (the <a href="http://msdn2.microsoft.com/xna/" target="_blank">XNA dev center</a> has yet to be updated). </li><li>Speaking of XNA, David Weller <a href="http://letskilldave.com/archive/2007/12/10/dream-build-play-2-0-warmup-challenge-kicking-off-soon.aspx" target="_blank">points out</a> the warm-up challenge for <a href="http://dreambuildplay.com/" target="_blank">Dream-Build-Play 2008</a>. I assume networking will be a big part of this years' entries, but the warm-up challenge is to "Create a new and innovative use of Artificial Intelligence in a game".  </li><li>Still speaking of XNA, Gamasutra has an <a href="http://www.gamasutra.com/php-bin/news_index.php?story=16618" target="_blank">interview</a> with XNA GM Chris Satchell where he hints at a publishing channel for XNA games on the Xbox 360, with "full details" coming sometime in the new year.  </li><li>The Capitals <a href="http://www.nhl.com/nhl/app?service=page&amp;page=Recap&amp;gameNumber=447&amp;season=20072008&amp;gameType=2" target="_blank">beat the Rangers in overtime</a> last night. Since changing coaches on Thanksgiving, they're 6-3-1. That's great, but they're still five games under .500. The good news is that even though the Caps tied for last in the league, they're only six points out of a playoff spot with about fifty games left in the season.  </li><li>My old team puts on an event every year called the Strategic Architects Forum. It's invite-only, but they've posted some of the <a href="http://msdn2.microsoft.com/en-us/architecture/bb267380.aspx" target="_blank">videos, slides and transcripts</a> from this year's event.  </li><li>J.D. Meier <a href="http://blogs.msdn.com/jmeier/archive/2007/12/12/new-release-guidance-explorer-is-now-on-msdn.aspx" target="_blank">discusses</a> the new Guidance Explorer release. They're now up to 3,000 "nuggets" of guidance and they've moved the guidance store to MSDN. (via <a href="http://samgentile.com/blogs/samgentile/archive/2007/12/13/new-and-notable-211.aspx" target="_blank">Sam Gentle</a>) </li><li>Arnon Rotem-Gal-Oz <a href="http://feeds.feedburner.com/~r/CirrusMinor/~3/198879813/WhyArbitraryTiersplittingIsBad.aspx" target="_blank">explains further</a> why arbitrary tier-splitting is bad. I'd also suggest reading Chapter 7 of <a href="http://www.martinfowler.com/books.html#eaa" target="_blank">PoEAA</a> which provides another version of the same story: You can't take an object that's designed for fine-grained local access and make it remote without really screwing yourself up.  </li><li>Eric Lippert <a href="http://blogs.msdn.com/ericlippert/archive/2007/10/04/path-finding-using-a-in-c-3-0-part-two.aspx" target="_blank">thinks</a> immutable data structures are "the way of the future in C#" so he's written a series on immutability. Posts include <a href="http://blogs.msdn.com/ericlippert/archive/2007/11/13/immutability-in-c-part-one-kinds-of-immutability.aspx" target="_blank">kinds of immutability</a>, an <a href="http://blogs.msdn.com/ericlippert/archive/2007/12/04/immutability-in-c-part-two-a-simple-immutable-stack.aspx" target="_blank">immutable stack</a>, an <a href="http://blogs.msdn.com/ericlippert/archive/2007/12/06/immutability-in-c-part-three-a-covariant-immutable-stack.aspx" target="_blank">immutable covariant stack</a> and an <a href="http://blogs.msdn.com/ericlippert/archive/2007/12/10/immutability-in-c-part-four-an-immutable-queue.aspx" target="_blank">immutable queue</a>. As <a href="http://devhawk.net/2007/12/05/Functional+Understanding.aspx" target="_blank">I've discussed</a>, immutable data structures are HUGE in functional programming. Eric's immutable stacks and queues are similar to F#'s <a href="http://research.microsoft.com/fsharp/manual/quicktour.aspx#QuickTourLists" target="_blank">native list type</a>. (via <a href="http://blogs.msdn.com/jomo_fisher/archive/2007/12/12/strange-confluence-an-immutable-queue-in-f.aspx" target="_blank">Jomo Fisher</a>)</li></ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1074</wp:post_id>
		<wp:post_date>2007-12-13 10:58:17</wp:post_date>
		<wp:post_date_gmt>2007-12-13 18:58:17</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>morning-coffee-130</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="functional-programming"><![CDATA[Functional Programming]]></category>
		<category domain="post_tag" nicename="guidance-automation"><![CDATA[Guidance Automation]]></category>
		<category domain="category" nicename="morning-coffee"><![CDATA[Morning Coffee]]></category>
		<category domain="post_tag" nicename="washington-capitals"><![CDATA[Washington Capitals]]></category>
		<category domain="post_tag" nicename="xna"><![CDATA[XNA]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[8d6e82c6-2e64-43fd-bde1-0a983ba9a2f3]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Morning+Coffee+130]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/12/13/Morning+Coffee+130]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Practical F# Parsing: Syntactical Productions (1)</title>
		<link>http://devhawk.net/2007/12/13/practical-f-parsing-syntactical-productions-1/</link>
		<pubDate>Thu, 13 Dec 2007 19:08:13 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://86444fb7-507c-4a5c-b3c3-350fc44f616e</guid>
		<description></description>
		<content:encoded><![CDATA[Now that I have my <a href="http://devhawk.net/2007/12/11/Practical+F+Parsing+The+Parse+Buffer.aspx" target="_blank">parse buffer functions</a> and <a href="http://devhawk.net/2007/12/12/Practical+F+Parsing+Unit+Testing.aspx" target="_blank">unit test framework</a> taken care of, it's time to write some parsing expression grammar productions [1]. In any grammar, there are productions that have semantic meaning and productions that are only used to specify syntax. For example, in C# statements end with a semicolon and code blocks are delineated with curly braces. Syntactical elements don't end up in the abstract syntax tree, so they're easier to implement.

Most of PEG's grammar productions are syntactical in nature. Let's start with the simplest production, EndOfFile.
<pre class="brush:fsharp">///EndOfFile &lt;- !.
let EndOfFile input =
    match NC input with
    | None -&gt; Some()
    | _ -&gt; None</pre>
Similar to the underscore in F#, the period represents any character In the PEG grammar and the exclamation point is a backtracking not. In other words, EndOfFile succeeds if NC fails, which only happens when the parse buffer is empty. Since the parse buffer is empty on a successful match, there's no value to return so Ireturn Some(). Some() is kinda like Nullable, which doesn't make much sense in C#. But here it means I have a successful match but no data to pass back to the caller.

Here's a slightly more complex grammar production, EndOfLine:
<pre class="brush:fsharp">///EndOfLine &lt;- ‘rn’ / ‘n’ / ‘r’
let EndOfLine input =
    match NC input with
    | Some(‘r’, input) -&gt;
        match NC input with
        | Some (‘n’, input) -&gt; Some(input)
        | _ -&gt; Some(input)
    | Some(‘n’, input) -&gt; Some(input)
    | _ -&gt; None</pre>
EndOfLine has three possible matches: rn, n and r. Here, you see the use of nested match statements in the r match clause. If the top character is r, the function checks the top of the remaining text buffer for n. F#'s ability to reuse symbols comes in very handy here.

Unfortunately, this isn't code very readable. In particular, the match priority order, which matters in PEGs, is totally lost. For this production, it's no big deal, but that won't always be the case. I'm also not using the handy TOKEN function I wrote in <a href="http://devhawk.net/2007/12/11/Practical+F+Parsing+The+Parse+Buffer.aspx" target="_blank">a few posts ago</a>. Here's an alternative version that uses TOKEN and preserves the match priority order.
<pre class="brush:fsharp">///EndOfLine &lt;- ‘rn’ / ‘n’ / ‘r’
let EndOfLine input =
    match TOKEN “rn” input with
    | Some(input) -&gt; Some(input)
    | _ -&gt;
        match TOKEN “n” input with
        | Some(input) -&gt; Some(input)
        | _ -&gt;
            match TOKEN “r” input with
            | Some(input) -&gt; Some(input)
            | _ -&gt; None</pre>
This time, I use the TOKEN function and nested match statements to chain the results together. The previous method is probably faster, but this approach is more readable and explicitly preserves the match order. However, it sure is a pain to type. Wouldn't it be great if we could write something like this:
<pre class="brush: fsharp">///EndOfLine &lt;- 'rn' / 'n' / 'r'
let EndOfLine input =
    match input with
    | TOKEN "rn" (input) -&gt; Some(input)
    | TOKEN "n" (input) -&gt; Some(input)
    | TOKEN "r" (input) -&gt; Some(input)
    | _ -&gt; None</pre>
Turns out, F#'s <a href="http://devhawk.net/2007/11/29/F+Hawkeye+Pattern+Matching.aspx" target="_blank">Active Patterns feature</a> let's me implement EndOfLine exactly like this. We'll look at how it works in the next post.

<hr />

[1] The full PEG grammar is listed in "<a href="http://pdos.csail.mit.edu/~baford/packrat/popl04/" target="_blank">Parsing Expression Grammars: A Recognition-Based Syntactic Foundation</a>" by <a href="http://www.brynosaurus.com/" target="_blank">Brian Ford</a>.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1075</wp:post_id>
		<wp:post_date>2007-12-13 11:08:13</wp:post_date>
		<wp:post_date_gmt>2007-12-13 19:08:13</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>practical-f-parsing-syntactical-productions-1</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="development"><![CDATA[Development]]></category>
		<category domain="post_tag" nicename="f-sharp"><![CDATA[F#]]></category>
		<category domain="post_tag" nicename="functional-programming"><![CDATA[Functional Programming]]></category>
		<category domain="post_tag" nicename="parsing-expression-grammar"><![CDATA[Parsing Expression Grammar]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[86444fb7-507c-4a5c-b3c3-350fc44f616e]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Practical+F+Parsing+Syntactical+Productions+1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/12/13/Practical+F+Parsing+Syntactical+Productions+1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Practical F# Parsing: Active Patterns</title>
		<link>http://devhawk.net/2007/12/14/practical-f-parsing-active-patterns/</link>
		<pubDate>Fri, 14 Dec 2007 18:11:03 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://7de99b32-179f-4e17-9478-be16febc4bec</guid>
		<description></description>
		<content:encoded><![CDATA[In the <a href="http://devhawk.net/2007/12/13/Practical+F+Parsing+Syntactical+Productions+1.aspx" target="_blank">last post</a>, I gave you a sneak preview of what the EndOfLine production would look like using Active Patterns. But before we get to how to build that, let me give you a little background on why. If you want the full explanation, check out <a href="http://blogs.msdn.com/dsyme/archive/2007/04/07/draft-paper-on-f-active-patterns.aspx" target="_blank">the whitepaper</a>.

Basically, Active Patterns (aka AP) are a way to use the pattern matching of functional languages with abstractions rather than native language types. If you'll recall, I <a href="http://devhawk.net/2007/12/11/Practical+F+Parsing+The+Parse+Buffer.aspx" target="_blank">built functions to abstract the parse buffer</a> so I could later change it's implementation if I needed to. The problem is that since the parse buffer is an abstraction, you can't use it in the match clauses. For example, here's a version of EndOfLine that uses a native char list.
<pre class="brush:fsharp">///EndOfLine &lt;- ‘rn’ / ‘n’ / ‘r’
let EndOfLine input =
    match input with
    | ‘r’ :: ‘n’ :: input -&gt; Some(input)
    | ‘n’ :: input -&gt; Some(input)
    | ‘r’ :: input -&gt; Some(input)
    | _ -&gt; None</pre>
That's straightforward like the AP preview at the end of the last post, but I've lost the benefit of the parse buffer abstraction. In other words, if I wanted to change the implementaiton of the parse buffer to a string, or some other type, I'd be screwed if I wrote EndOfLine this way. Traditionally, functional language developers had an either/or choice when it came to abstractions vs. pattern matching. AP let's you use both.

Using a special syntax, you can indicate that an F# function is an AP by surrounding the name in what Don calls "bananas". Here's the AP version of NC:
<pre class="brush: fsharp">let (|NC|_|) input =
    match input with
    | i :: input -&gt; Some(i, input)
    | [] -&gt; None</pre>
This function is identical to the one defined in <a href="http://devhawk.net/2007/12/11/Practical+F+Parsing+The+Parse+Buffer.aspx" target="_blank">the first post</a>, except for the name. By surrounding the actual name in paren/pipe "bananas", you're indicating the function can be used in match clauses, not just the match input. The trailing underscore in the name indicates this is a partial pattern, which means it returns an option value (aka Some(_) or None).

There's no reason why you can't use an AP function like any other function. I find I do this often in my unit tests. Here's an updated version of an NC unit test.
<pre class="brush: fsharp">[&lt;Fact&gt;]
let test_NC_empty_string () =
    let ret = (|NC|_|) !!""
    Assert.Equal(None, ret)</pre>
While you can still call the function like this, the primary benefit of using Active Patterns is so you can use the function in pattern match clauses directly. This allows the production clauses to mirror the actual grammar rules directly. For simple productions like EndOfFile and EndOfLine, the AP F# implementation isn't much more complex than the grammar rule itself:
<pre class="brush: fsharp">///EndOfFile &lt;- !.
let (|EndOfFile|_|) input =
    match input with
    | NC (_) -&gt; None
    | _ -&gt; Some()  

///EndOfLine &lt;- 'rn' / 'n' / 'r'
let (|EndOfLine|_|) input =
    match input with
    | TOKEN "rn" (input) -&gt; Some(input)
    | TOKEN "n" (input) -&gt; Some(input)
    | TOKEN "r" (input) -&gt; Some(input)
    | _ -&gt; None</pre>
You see in these functions, the calls to NC and TOKEN are used in the match clauses (i.e. after the pipe) rather than the match input (i.e. between match and with). Note, when used in a match clause, you just use the name directly without the bananas.

You'll notice that for TOKEN, the token string to match goes outside the parentheses. This is because "rn" is an input parameter to the TOKEN AP function. Alternatively, I could have written EndOfLine using only the NC function, though I find TOKEN version easier to read.
<pre class="brush: fsharp">///EndOfLine &lt;- 'rn' / 'n' / 'r'
let (|EndOfLine|_|) input =
    match input with
    | NC ('r', NC ('n', (input))) -&gt; Some(input)
    | NC ('n', input) -&gt; Some(input)
    | NC ('r', input) -&gt; Some(input)
    | _ -&gt; None</pre>
In this version, the values of 'r' and 'n' are pattern matched against the result of calling NC, so they go inside the parentheses. In other words, the TOKEN clauses are matched if TOKEN returns some value. However, the NC clauses are only matched if the returned result matches the value specified in the match clause. inside the parentheses. TOKEN has two parameters, the token string and the parse buffer, while NC only has the parse buffer. When you write an AP function, the last parameter gets bound to the match clause input. Additional parameters, like TOKEN's token, much be specified in the match clause.

Notice I've defined these grammar productions as active patterns as well, which will make them compose nicely with higher-order productions. For example, here's the Space grammar production, which reuses EndOfLine:
<pre class="brush: fsharp">///Space &lt;- ' ' / 't' / EndOfLine
let (|Space|_|) input =
    match input with
    | TOKEN " " (input) -&gt; Some(input)
    | TOKEN "t" (input) -&gt; Some(input)
    | EndOfLine (input) -&gt; Some(input)
    | _ -&gt; None</pre>
It's DSL-esque, wouldn't you say? Active Patterns is a little parens-heavy - the NC version of EndOfLine has three nested APs which isn't exactly easy on the eyes. However, the concept is very solid and it make the parsing code almost easier to write by hand than it would be to use a parser generator like yacc. Almost.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1076</wp:post_id>
		<wp:post_date>2007-12-14 10:11:03</wp:post_date>
		<wp:post_date_gmt>2007-12-14 18:11:03</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>practical-f-parsing-active-patterns</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="development"><![CDATA[Development]]></category>
		<category domain="post_tag" nicename="f-sharp"><![CDATA[F#]]></category>
		<category domain="post_tag" nicename="parsing-expression-grammar"><![CDATA[Parsing Expression Grammar]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[7de99b32-179f-4e17-9478-be16febc4bec]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Practical+F+Parsing+Active+Patterns]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/12/14/Practical+F+Parsing+Active+Patterns]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>2006</wp:comment_id>
			<wp:comment_author><![CDATA[addendum]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>213.244.12.100</wp:comment_author_IP>
			<wp:comment_date>2007-12-17 07:19:56</wp:comment_date>
			<wp:comment_date_gmt>2007-12-17 15:19:56</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[let (|TOKEN|_|) token input =
  let rec f token input =
    match token, input with
    | hd::[], NC (i, itail) when hd = i -> Some itail
    | hd::tl, NC (i, itail) when hd = i -> f tl itail
    | _ -> None
  f !!token !!input]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>2007</wp:comment_id>
			<wp:comment_author><![CDATA[Jon Harrop]]></wp:comment_author>
			<wp:comment_author_email>jon@ffconsultancy.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.ffconsultancy.com</wp:comment_author_url>
			<wp:comment_author_IP>80.229.56.224</wp:comment_author_IP>
			<wp:comment_date>2007-12-20 12:20:32</wp:comment_date>
			<wp:comment_date_gmt>2007-12-20 20:20:32</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Have you tried using parser combinators? A recent F#.NET Journal article described them in detail and they should be a lot faster but just as extensible as active patterns...
]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Morning Coffee 131</title>
		<link>http://devhawk.net/2007/12/17/morning-coffee-131/</link>
		<pubDate>Mon, 17 Dec 2007 11:13:46 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://8bd2e365-24c1-4492-b110-abdd70a5ed71</guid>
		<description></description>
		<content:encoded><![CDATA[<ul><li>On a recommendation from my mother-in-law, I've been watching <a href="http://www.bbcamerica.com/content/262/index.jsp" target="_blank">Torchwood</a>. Sort of Men in Black, the series and set in Cardiff. Since it's made in England, it'll be one of the few shows still running in the new year due to the WGA strike.  </li><li>A while back I pointed out that many DotNetKicks articles <a href="http://devhawk.net/2007/01/31/Morning+Coffee+21.aspx" target="_blank">were submitted by their authors</a>. I submitted a <a href="http://devhawk.net/2007/02/01/Morning+Coffee+22.aspx" target="_blank">few of my own</a>, just for kicks (har har), with <a href="http://devhawk.net/2007/02/02/Morning+Coffee+23.aspx" target="_blank">mixed results</a>. Today, I discovered that the <a href="http://devhawk.net/2007/12/11/Practical+F+Parsing+The+Parse+Buffer.aspx" target="_blank">parse buffer post</a> from my <a href="http://devhawk.net/2007/12/10/Practical+Parsing+In+F.aspx" target="_blank">Practical Parsing in F#</a> series was <a href="http://www.dotnetkicks.com/other/Practical_F_Parsing_Part_1_the_Parse_Buffer" target="_blank">submitted</a>, picked up some kicks, and made it to the home page. That's pretty cool. I guess writing more dev-focused articles is the way to go to get attention on DNK.  </li><li>Amazon has rolled out a limited beta of <a href="http://www.amazon.com/b/ref=sc_fe_l_2?ie=UTF8&amp;node=342335011&amp;no=3435361&amp;me=A36L942TSJ2AJA" target="_blank">SimpleDB</a>, which appears to be <a href="http://www.amazon.com/S3-AWS-home-page-Money/b/ref=sc_fe_l_2?ie=UTF8&amp;node=16427261&amp;no=3435361&amp;me=A36L942TSJ2AJA" target="_blank">S3</a> + query support. Cost is based on usage: 14¢/hour for machine utilization, 10¢/GB upload, 13-18¢/GB download and $1.50/GB storage/month. I'd love to see SimpleDB software that I could download and install, rather than hosted only. Even if I was going to use the hosted service, I'd like to develop against a non-hosted instance. </li><li>Research for sale! I was checking out the MS Research download feed and discovered a link to the <a href="http://research.microsoft.com/research/msagl" target="_blank">Automatic Graph Layout</a> (MSAGL) library. This was previously called GLEE (Graph Layout Execution Engine) and was "free for non-commercial use". Now, you can buy it for $295 <a href="http://www.windowsmarketplace.com/details.aspx?view=info&amp;itemid=6002737" target="_blank">from Windows Marketplace</a> (though the previous free version is <a href="http://research.microsoft.com/research/downloads/Details/0bbe180c-93c8-43f0-80fb-96e20d85a573/Details.aspx?0sr=d" target="_blank">still available</a>). The idea of directly commercializing research like this strikes me as pretty unusual. It must be a really good library.  </li><li>Scott Guthrie <a href="http://weblogs.asp.net/scottgu/archive/2007/12/14/new-asp-net-dynamic-data-support.aspx" target="_blank">shows off</a> the new Dynamic Data Support that will ship as part of the ASP.NET Extensions. I'm like, whatever. Scaffolding wasn't that that interesting to me in RoR, so it's no surprise that it's not that interesting in ASP.NET.  </li><li>Jeff "<a href="http://www.partywithpalermo.com" target="_blank">Party With</a>" Palermo <a href="http://codebetter.com/blogs/jeffrey.palermo/archive/2007/12/11/mvccontrib-now-has-ioc-container-support-for-quot-the-big-3-quot.aspx" target="_blank">blogs about the IoC support</a> in the new <a href="http://mvccontrib.org" target="_blank">MVC Contrib</a> project. Also looks like they're <a href="http://mvccontrib.googlecode.com/svn/trunk/src/MVCContrib/SimplyRestful/" target="_blank">porting</a> RoR's <a href="http://weblog.rubyonrails.com/2006/8/1/simply-restful-in-rails-edge" target="_blank">simply_restful</a>. (via <a href="http://weblogs.asp.net/scottgu/archive/2007/12/16/december-16th-links-asp-net-asp-net-ajax-asp-net-mvc-vs-net-iis7-wpf.aspx" target="_blank">Scott Guthrie</a>)  </li><li>I need to try out some of Tomas Respro's <a href="http://www.winterdom.com/weblog/CategoryView,category,VS%2BColor%2BScheme.aspx" target="_blank">VS color schemes</a> (also via <a href="http://weblogs.asp.net/scottgu/archive/2007/12/16/december-16th-links-asp-net-asp-net-ajax-asp-net-mvc-vs-net-iis7-wpf.aspx" target="_blank">Scott Guthrie</a>)</li></ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1077</wp:post_id>
		<wp:post_date>2007-12-17 11:13:46</wp:post_date>
		<wp:post_date_gmt>2007-12-17 11:13:46</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>morning-coffee-131</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="asp-net"><![CDATA[ASP.NET]]></category>
		<category domain="post_tag" nicename="community"><![CDATA[Community]]></category>
		<category domain="post_tag" nicename="database"><![CDATA[Database]]></category>
		<category domain="post_tag" nicename="entertainment"><![CDATA[Entertainment]]></category>
		<category domain="category" nicename="morning-coffee"><![CDATA[Morning Coffee]]></category>
		<category domain="post_tag" nicename="visual-studio"><![CDATA[Visual Studio]]></category>
		<category domain="post_tag" nicename="web-2-0"><![CDATA[Web 2.0]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[8bd2e365-24c1-4492-b110-abdd70a5ed71]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Morning+Coffee+131]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/12/17/Morning+Coffee+131]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Practical F# Parsing : Syntactical Productions (2)</title>
		<link>http://devhawk.net/2007/12/17/practical-f-parsing-syntactical-productions-2/</link>
		<pubDate>Mon, 17 Dec 2007 19:38:42 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://4e0fb8db-ee03-4d19-a87b-42d5c7796a3e</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Now that I've moved over to <a href="http://devhawk.net/2007/12/14/Practical+F+Parsing+Active+Patterns.aspx" target="_blank">Active Patterns</a>, I want to go back and finish the syntactic productions for my PEG parser. Most of the syntactic productions are very straightforward when implemented in AP. We've seen EndOfFile, EndOfLine and Space already. There is also a series of symbol identifiers that have only a single match clause. For example, here's DOT:</p><pre class="brush: fsharp">
///DOT &lt;- '.' Spacing
let (|DOT|_|) input = 
    match input with
    | TOKEN "." (Spacing(input)) -&gt; Some(input)
    | _ -&gt; None
</pre><p>I'm not going to go thru all the symbol AP functions since their all basically like this one. However, you'll notice that this function references an AP we haven't seen yet - Spacing. I want to close out the section on Syntactical Productions by looking at the Spacing and Comment productions. Since Spacing depends on Comment, I'll start with Comment.</p><p>Comments in PEG grammars are single lines that start with a # symbol, similar to the // line comments in F# and C#. This is the PEG grammar rule for Comment:</p><pre class="brush: fsharp">
///Comment &lt;- '#' (!EndOfLine .)* EndOfLine
</pre><p>Basically, this says that a comment starts with a #, then matches zero or more characters that are not EndOfLine, and ends with an EndOfLine. The exclamation point is a <em>syntactic predicate</em>, which means that we unconditionally backtrack after attempting to match. PEG has both a success and failure syntactic predicate - the ! is the failure predicate while &amp; is the success predicate. So inside the parens, this production rule says to test the current point in the parse buffer for EndOfLine. If it finds it, the match fails and we exit out of the parens (where we match EndOfLine again without backtracking it this time). If it doesn't find it, the parser backtracks, consumes the next character regardless what it is, then repeats. </p><p>Unfortunately, there's a bug in this production. If the parse buffer ends in a comment, the production will fail since it hasn't reached the EndOfLine and there are no more characters to consume. So I changed the production to:</p><pre class="brush: fsharp">
///Comment &lt;- '#' ((!EndOfLine / !EndOfFile) .)* EndOfLine?
</pre><p>This rule now ends the comment if it reaches an EndOfLine or EndOfFile. Additionally, it makes the final EndOfLine match optional. So if the comment ends with a new line, the new line is consumed as part of the grammar production. If the comment ends with the end of file, the EndOfFile is not consumed as part of the production. If you'll recall, EndOfFile returns Some(unit) rather than Some(char list). In F#, the various branches of a match clause have to have the same return type, so you can't return Some() from one branch and Some(input) from another. It's no big deal - you use the EndOfFile production at the top-level grammar to ensure you've consumed the entire file anyway.</p><p>Here's the F# implementation of Comment:</p><p>Comment defines a local AP function called CommentContent, which implements the part of the grammar production inside the parens. </p><pre class="brush: fsharp">
///Comment &lt;- '#' ((!EndOfLine / !EndOfFile) .)* EndOfLine?
let (|Comment|_|) input =  
    let rec (|CommentContent|_|) input =  
        match input with
        | EndOfLine (input) -&gt; Some(input)
        | EndOfFile -&gt; Some(input)
        | NC (_,input) -&gt; (|CommentContent|_|) input 
        | _ -&gt; None 
    match input with
    | TOKEN "#" (CommentContent (input)) -&gt; Some(input)
    | _ -&gt; None
</pre><p>Local AP function CommentContent recurses thru the input buffer after the pound sign, looking for  EndOfLine or EndOfFile. This function should never match the final default clause, but I put it in to keep the compiler from complaining. Notice that I use symbol redefinition here so both EndOf match clauses return Some(input). For EndOfLine, I'm re-defining input to mean what is returned by EndOfLine. For EndOfFile, I'm not re-defining, so input still means the list that is passed into the pattern match statement. </p><p>Compared to Comment, Spacing is pretty trivial:</p><pre class="brush: fsharp">
///Spacing &lt;- (Space / Comment)*
let rec (|Spacing|) input =  
    match input with
    | Space (input) -&gt; (|Spacing|) input 
    | Comment (input) -&gt; (|Spacing|) input 
    | _ -&gt; input
</pre><p>There are two things I want to call out about spacing. First, it's a recursive function, so it's defined with let rec. AP functions can be recursive, just like normal functions. Also, note the lack of an underscore in the name of this AP function. Spacing is defined as zero or more spaces or comments, so it's perfectly valid to match nothing. Thus, Spacing is always a successful match. In this case, we don't put the underscore in the AP function name and we don't wrap the return result in Some(). You'll notice the last match clause simply returns input, rather than Some(input). </p><p>That's all the syntactic predicates. Next up, the meat of the grammar: semantic predicates.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1078</wp:post_id>
		<wp:post_date>2007-12-17 11:38:42</wp:post_date>
		<wp:post_date_gmt>2007-12-17 19:38:42</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>practical-f-parsing-syntactical-productions-2</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="development"><![CDATA[Development]]></category>
		<category domain="post_tag" nicename="f-sharp"><![CDATA[F#]]></category>
		<category domain="post_tag" nicename="parsing-expression-grammar"><![CDATA[Parsing Expression Grammar]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[4e0fb8db-ee03-4d19-a87b-42d5c7796a3e]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Practical+F+Parsing+Syntactical+Productions+2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/12/17/Practical+F+Parsing+Syntactical+Productions+2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Practical F# Parsing: Semantic Productions (1)</title>
		<link>http://devhawk.net/2007/12/18/practical-f-parsing-semantic-productions-1/</link>
		<pubDate>Tue, 18 Dec 2007 20:53:10 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://fcd1d45b-ef40-4907-b4cf-5b9c000c2411</guid>
		<description></description>
		<content:encoded><![CDATA[<p></p><p>All the <a href="http://devhawk.net/2007/12/17/Practical+F+Parsing+Syntactical+Productions+2.aspx" target="_blank">syntactic productions</a> in my PEG parser, save one, have the exact same signature. They take in a char list and return a char list option. Which is to say, they take a parse buffer in and return either the remaining parse buffer on a successful match or nothing on a failed match. The only exception is EndOfFile which doesn't return the remaining parse buffer because there isn't any buffer left to parse.</p><p>Now we're moving on to look at the productions with semantic implications. In Parsing Expression Grammars, there are eleven: Char, Range, Class, Literal, Identifier, Primary, Sequence Item, Sequence, Expression, Definition and Grammar. Like their syntactic brethren, these semantic productions will all have a single char list input parameter. However, they will all return some semantic value along with the remaining parse buffer. </p><p>We'll start with Char, since it's the only semantic production that doesn't return a custom type:</p><pre class="brush: fsharp">
///Char &lt;- '\' [nrt'"[]\]
/// / '\' [0-2][0-7][0-7]
/// / '\' [0-7][0-7]
/// / '\' [0-7]
/// / !'\' .    
let (|Char|_|) input =  
        
    let (|InRange|_|) upper input = 
        let i2c value = Char.chr(Char.code '0' + value)
        let c2i value = Char.code value - Char.code '0'
         
        match input with
        | NC (c, input) when (i2c 0) &lt;= c &amp;&amp; c &lt;= (i2c upper) -&gt;
            Some((c2i c), input)
        | _ -&gt; None 
         
    match input with
    | TOKEN @"" (NC(c, input))  
    when List.exists (fun x -&gt; x=c) ['n';'r';'t';''';'"';'[';']';'\'] -&gt;  
        match c with
        | 'n' -&gt; Some('n', input)
        | 'r' -&gt; Some('r', input)
        | 't' -&gt; Some('t', input)
        | _ -&gt; Some(c, input)
    | TOKEN @"" (InRange 2 (i1, InRange 7 (i2, InRange 7 (i3, input)))) -&gt;
        Some(Char.chr (i1 * 64 + i2 * 8 + i3), input)
    | TOKEN @"" (InRange 7 (i1, InRange 7 (i2, input))) -&gt;
        Some(Char.chr (i1 * 8 + i2), input)
    | TOKEN @"" (InRange 7 (i1, input)) -&gt;
        Some(Char.chr (i1), input)

    | NC(c, input) when c &lt;&gt; '\' -&gt; Some(c, input)
    | _ -&gt; None
</pre><p>Note, this production is slightly different from the one in the PEG whitepaper. This way was easier to pattern match. Also, I typically don't wrap my when guards onto the next line, but this way it doesn't wrap funny on my blog.</p><p>While long, Char is fairly straight-forward. There are five ordered choices that can match this production. The first is for escaped characters, the next three are for character codes, and the last one is matching any character except the backslash escape character. Note, tracking F#'s escape characters and PEG's escape characters can get tricky. I've used verbatim strings for all my TOKEN parameters in order to help try and keep it straight.</p><p>The escape character match clause uses a when guard to narrow down the selection criteria. I use the built-in List.exists method to see if the character is in a hard-coded list of special characters. List.exists takes in a function parameter, and returns true if that function returns true for any of the value is the list. Since I'm just matching a value, my function parameter is a trivial equality test. If List.exists returns true, I return that special character as part of the return tuple. Of all the escape characters in PEG, only three are also escape characters in F#, so I use a second match clause to return the correct char value. There's probably a way to do that more elegantly, but since there were just three clauses, I figured it was easier to type them out manually.</p><p>For the character code clauses, I wrote a special local AP function called InRange to determine if the specified character was within a specified range and to convert it from a char to an int. Note, the way the production is written, the largest character code you can specify is 277, which means you can encode slightly more than the standard UTF-8 character set. Honestly, this should be updated to support full UTF-16, but I'm not here to critique the grammar, so I didn't try to fix this issue. </p><p>Note, all the results (save None) return a tuple of the matched character value and the remaining input buffer. Again, all the remaining productions will work like that. For example, here's the Range production:</p><pre class="brush: fsharp">
///Range &lt;- Char '-' Char / Char
let (|Range|_|) input = 
    match input with
    | Char (c1, TOKEN "-" (Char (c2, input))) -&gt;  
        Some(Range.Dual (c1, c2), input)
    | Char (c1, input) -&gt;  
        Some(Range.Single (c1), input)
    | _ -&gt; None
</pre><p>Compared to Char, Range is fairly simple. It's either two chars, separated by a hyphen (for example: a-z) or it's a single char. Again, being able to use Active Patterns to build on lower level productions is a huge helper. </p><p>But what does this function return? What does Range.Single and Range.Dual mean? Those are refer to a special F# construct called a discriminated union. Before we can continue writing semantic productions, we need to define these types to hold the results of these productions.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1079</wp:post_id>
		<wp:post_date>2007-12-18 12:53:10</wp:post_date>
		<wp:post_date_gmt>2007-12-18 20:53:10</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>practical-f-parsing-semantic-productions-1</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="development"><![CDATA[Development]]></category>
		<category domain="post_tag" nicename="f-sharp"><![CDATA[F#]]></category>
		<category domain="post_tag" nicename="parsing-expression-grammar"><![CDATA[Parsing Expression Grammar]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[fcd1d45b-ef40-4907-b4cf-5b9c000c2411]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Practical+F+Parsing+Semantic+Productions+1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/12/18/Practical+F+Parsing+Semantic+Productions+1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Practical F# Parsing: The Abstract Syntax Tree</title>
		<link>http://devhawk.net/2007/12/19/practical-f-parsing-the-abstract-syntax-tree/</link>
		<pubDate>Wed, 19 Dec 2007 19:00:57 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://5769c547-ec8f-438e-a34c-08508b3e8bde</guid>
		<description></description>
		<content:encoded><![CDATA[<p>In the last post, I showed two semantic productions, Char and Range. Char returns an option tuple of a native char and the parse buffer. Range returns a tuple of either a single character or a character range and the parse buffer. Certainly, I could have written Range to always return a char * char tuple, passing in the same character for both in the case of a single character range. However, this provides an opportunity to introduce F#'s <a href="http://research.microsoft.com/fsharp/manual/quicktour.aspx#QuickTourDiscriminatedUnions" target="_blank">discriminated unions</a> (or simply union for short).</p><p>The F# Manual describes a discriminated union as "a new type composed of a fixed number of distinct alternatives". Many of the semantic productions return "a fixed number of distinct alternatives" so I find a union is a good way to model the return value of semantic production functions. Here's the definition of Range:</p><pre class="brush: fsharp">
///AST Type for Range production
type Range = 
| Single of char
| Dual of char * char
    with
    override this.ToString() =  
        match this with
        | Single x -&gt; sprintf "Range.Single (%A)" x 
        | Dual (x,y) -&gt; sprintf "Range.Dual (%A,%A)" x y
</pre><p>So Range is either a single character, or a tuple of two characters. As you saw in the last post, you create an instance of a union with the type.alternative syntax. You can also use simply the alternative name, assuming F# can determine the correct union type. Personally, I like using the full name - it helps me remember what the type really is. </p><p>Notice that the AP function and the union type appear to have the same name. Actually, they don't since the name of the AP function's name includes the bananas - i.e. (|Range|_). However, if you want you can define a function called simply Range and still have a type named Range as well - as long as you're not interested in language interop. F# can tell the difference between the Range function and the Range union, but C# can't. So I'd say we're best off avoiding overloading the names entirely. </p><p>If you look at the compiled union in Reflector, you'll see the Range type, with public internal classes named _Single and _Dual that inherit from Range. In other words, F# implements union types as an inheritance tree.  Range also provides static constructors for the various disparate types in the union. </p><p>One last thing I want to point out about the Range type is how I overrode ToString. This is primarily for unit testing - if you don't override ToString, you only get the type name which isn't very useful when trying to figure out why a given unit test failed. I'm using the F# native sprintf function rather than string.Format, so the <a href="http://research.microsoft.com/fsharp/manual/fslib/Microsoft.FSharp.Text.Printf.html" target="_blank">format string is a little different</a>. </p><p>The other major F# type we'll use in the AST are <a href="http://research.microsoft.com/fsharp/manual/quicktour.aspx#QuickTourRecords" target="_blank">record types</a>. These are similar conceptually to structs in C#. Basically, they're a tuple with names. For example, here's the Definition record type (though we haven't seen any functions that use this type yet). </p><pre class="brush: fsharp">
///AST Type for Definition production 
type Definition =   
    {  
        name: string;  
        exp: Expression;  
    }  
    with  
    override this.ToString() =   
        sprintf "Definition (name: %A, exp: %A)" this.name (Primary.Exp2Str this.exp)
</pre><p>I could have simply defined this type as (string * Expression), but having the fields named makes it crystal clear what the semantic meaning of each field is. The only place where I used an anonymous tuple in the AST instead of a record is in the Range union above - I figured that was simple enough not to warrant named fields. </p><p>I also have a couple of <a href="http://research.microsoft.com/fsharp/manual/quicktour.aspx#QuickTourTypeAbbreviations" target="_blank">type aliases</a>. For example, I have a record type called SequenceItem. An array of SequenceItems is a Sequence and an array of Sequences is an Expression (which we saw in the Definition type above). </p><pre class="brush: fsharp">
///AST Type for Sequence Item production
let SequenceItem = 
    {  
        primaryItem: Primary; 
        itemPrefix: Prefix option;      
        itemSuffix: Suffix option; 
    }

///AST Type for Sequence production
let Sequence = SequenceItem list 

///AST Type for Expression production
let Expression = Sequence list
</pre><p>Note, unlike unions and records, type aliases can't override base class methods like ToString. This is because there is no actual Sequence or Expression types in the compiled code - F# compiles away type aliases completely. Looking at the implementaiton of Definition in reflector confirms that the exp member is of type List&lt;List&lt;SequenceItem&gt;&gt;. Since I need to convert Expressions to strings in two different places, I wrote a static Exp2Str method on the Primary type (not shown). It feels a bit hacky to stick Expression's ToString implementation on the Primary type, but I had little choice given F#'s scoping rules. </p><p>Technically, since they get compiled away anyway, I could have skipped the Sequence and Expression declarations and simply defined the exp field of Definition as "SequenceItem list list". But the "list list" syntax throws me a bit. I mean, I understand it, but I found using the terms Sequence and Expression far more readable. Also, I used the definition of Expression in the definition of Primary, so it makes sense for it to have it's own name.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1080</wp:post_id>
		<wp:post_date>2007-12-19 11:00:57</wp:post_date>
		<wp:post_date_gmt>2007-12-19 19:00:57</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>practical-f-parsing-the-abstract-syntax-tree</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="development"><![CDATA[Development]]></category>
		<category domain="post_tag" nicename="f-sharp"><![CDATA[F#]]></category>
		<category domain="post_tag" nicename="parsing-expression-grammar"><![CDATA[Parsing Expression Grammar]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[5769c547-ec8f-438e-a34c-08508b3e8bde]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Practical+F+Parsing+The+Abstract+Syntax+Tree]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/12/19/Practical+F+Parsing+The+Abstract+Syntax+Tree]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>F# PEG Parser Next Steps</title>
		<link>http://devhawk.net/2007/12/20/f-peg-parser-next-steps/</link>
		<pubDate>Thu, 20 Dec 2007 18:03:52 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://07c9070d-657a-4699-85fe-2494b3c6f51a</guid>
		<description></description>
		<content:encoded><![CDATA[<p>There are still a couple of posts to go in my <a href="http://devhawk.net/2007/12/10/Practical+Parsing+In+F.aspx" target="_blank">Practical Parsing in F# series</a>. But with Christmas and my parents on their way, I'm taking the rest of the year off.</p><p>I've stuck the code as it currently stands <a href="http://cid-0d9bc809858885a4.skydrive.live.com/browse.aspx/DevHawk%20Content/Projects/Practical%20Parsing%20in%20F%7C3" target="_blank">up on my SkyDrive</a>. Conveniently enough, <a href="http://www.codeplex.com/xunit" target="_blank">xUnit.net</a> released <a href="http://www.codeplex.com/xunit/Release/ProjectReleases.aspx?ReleaseId=8080" target="_blank">their RC1 build</a> yesterday, which includes supports for static test methods. I've included the RC1 build in the zip file on SkyDrive, as well as simple batch file so you can run the tests yourself.</p><p>Taking a break from this project will give me a good opportunity to figure out where to take it next. As the code stands, it's not very useful - it simply builds a PEG AST from a PEG grammar. That's just the first phase of a typical compiler. Without those other phases (you know, like "generate binary code") this is just an interesting sample. </p><p>Since I'm in the "future pondering" phase, now's the time to make your opinion known. What do you, dear reader, think I should do with this code? Bonus points for wanting to get involved.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1081</wp:post_id>
		<wp:post_date>2007-12-20 10:03:52</wp:post_date>
		<wp:post_date_gmt>2007-12-20 18:03:52</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>f-peg-parser-next-steps</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="development"><![CDATA[Development]]></category>
		<category domain="post_tag" nicename="f-sharp"><![CDATA[F#]]></category>
		<category domain="post_tag" nicename="parsing-expression-grammar"><![CDATA[Parsing Expression Grammar]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[07c9070d-657a-4699-85fe-2494b3c6f51a]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[F+PEG+Parser+Next+Steps]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/12/20/F+PEG+Parser+Next+Steps]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Morning Eggnog 132</title>
		<link>http://devhawk.net/2007/12/20/morning-eggnog-132/</link>
		<pubDate>Thu, 20 Dec 2007 12:18:12 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://f5bd9a40-08ae-4411-9a2a-f7bec0a0c348</guid>
		<description></description>
		<content:encoded><![CDATA[<ul><li>My parents are coming into town tomorrow so I'm off for the remaining week or so of the year. Blogging will likely be non-existent, unless I blog something I come up with while geeking out with my dad.  </li><li>Juergen van Gael <a href="http://mlg.eng.cam.ac.uk/jurgen/blog/?p=6" target="_blank">demonstrates</a> how to use <a href="http://blogs.msdn.com/dsyme/archive/2007/12/18/using-parallel-extensions-from-f.aspx" target="_blank">TPL</a> from F#. He wrote this <a href="http://cs.hubfs.net/blogs/f_team/archive/2007/10/18/3774.aspx" target="_blank">once before</a> using F#'s async workflows feature. I like the TPL version, though the "new Action&lt;int&gt;(RowTask)" is a little wordy. I'm guessing the eventual F# syntax will probably become something compact like "action RowTask". (via <a href="http://blogs.msdn.com/dsyme/archive/2007/12/18/using-parallel-extensions-from-f.aspx" target="_blank">Don Syme</a>)  </li><li>Andrew Peter ported RoR's <a href="http://haml.hamptoncatlin.com/" target="_blank">Haml view engine</a> to ASP.NET MVC, calling the result <a href="http://andrewpeters.net/2007/12/19/introducing-nhaml-an-aspnet-mvc-view-engine/" target="_blank">NHaml</a>. I haven't played around with the new MVC stuff much, but I'm guessing ASP.NET's control-based approach doesn't work well when you separate out the controller code. If I'm manually authoring view templates, I'd much rather type NHaml's syntax than the standard ASP.NET &lt;% ...%&gt; syntax. On the other hand, there aren't any design tools out there today handle the NHaml syntax. Also, I wonder if Andrew is working on a <a href="http://haml.hamptoncatlin.com/docs/sass" target="_blank">Sass</a> port. (via <a href="http://www.dotnetkicks.com/aspnet/Introducing_NHaml_An_ASP_NET_MVC_View_Engine" target="_blank">DNK</a>)</li></ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1082</wp:post_id>
		<wp:post_date>2007-12-20 12:18:12</wp:post_date>
		<wp:post_date_gmt>2007-12-20 12:18:12</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>morning-eggnog-132</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="asp-net"><![CDATA[ASP.NET]]></category>
		<category domain="post_tag" nicename="concurrency"><![CDATA[Concurrency]]></category>
		<category domain="post_tag" nicename="f-sharp"><![CDATA[F#]]></category>
		<category domain="category" nicename="morning-coffee"><![CDATA[Morning Coffee]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[f5bd9a40-08ae-4411-9a2a-f7bec0a0c348]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Morning+Eggnog+132]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/12/20/Morning+Eggnog+132]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Practical F# Parsing: Semantic Productions (2)</title>
		<link>http://devhawk.net/2007/12/20/practical-f-parsing-semantic-productions-2/</link>
		<pubDate>Thu, 20 Dec 2007 18:00:50 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://01f3a3c9-30ce-4a3c-81fa-f495e8dccab0</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Now that I've <a href="http://devhawk.net/2007/12/19/Practical+F+Parsing+The+Abstract+Syntax+Tree.aspx" target="_blank">explained the AST</a>, there are several more semantic productions to go. I'm not going to describe them all in detail, just hit a few important highlights. </p><p>Many of the semantic productions return lists of other productions. Class returns a list of Ranges, Literal and Identifier returns lists of characters, etc. As you would expect, these multiples are encoded in the grammar. For example, here's the implementation of Literal:</p><pre class="brush: fsharp">
///Literal &lt;- ['] (!['] Char)* ['] Spacing
///         / ["] (!["] Char)* ["] Spacing
let (|Literal|_|) input = 

    let rec (|LitChars|_|) delimiter chars input = 
        match input with
        | TOKEN delimiter (_) -&gt; Some(L2S chars, input)
        | Char (c, input) -&gt;  
            (|LitChars|_|) delimiter (chars @ [c]) input 
        | _ -&gt; None 
     
    match input with
    | TOKEN "'"  (LitChars "'"  [] (lit, TOKEN "'"  (Spacing(input)))) -&gt;  
        Some(lit, input)
    | TOKEN """ (LitChars """ [] (lit, TOKEN """ (Spacing(input)))) -&gt;  
        Some(lit, input)
    | _ -&gt; None
</pre><p>I'm using a local recursive function LitChars to retrieve the characters between the quote delimiters. The quote parameter - i.e. single or double quote - is passed in as a parameter. I also pass in an empty list of chars as a parameter. Remember that functional programs keep their data on the stack, a list parameter is a common way to keep state in a recursive function. When I match a single non-delimiter character, I add it to the list with the chars @ [c] expression. [c] converts a single value c into a list of one element while the @ operator concatenates to lists. I'm not sure adding the value to he end like that is a good idea perf wise. <a href="http://www.pragprog.com/titles/jaerlang/" target="_blank">Programming Erlang</a> recommends only adding items to the head then reversing the list when you're done matching. But F# isn't Erlang, so I'm not sure what the guidance is here.</p><p>Another thing you find in productions is the backtracking syntactic predicates. We saw an example of them in the <a href="http://devhawk.net/2007/12/17/Practical+F+Parsing+Syntactical+Productions+2.aspx" target="_blank">implementation of Comment</a>. Often, their used to indicate the end of a list of other productions, such as Literal, above. However, sometimes, they're used to ensure the correct production is matched. For example, a Primary can be an Identifier, as long as it's not followed by a left arrow. An identifier followed by a left arrow indicates a Definition. </p><pre class="brush: fsharp">
///Primary &lt;- Identifier !LEFTARROW
///         / OPEN Expression CLOSE
///         / Literal / Class / DOT
let rec (|Primary|_|) input = 

    let (|NotLEFTARROW|_|) input = 
        match input with
        | LEFTARROW (_) -&gt; None 
        | _ -&gt; Some(input)

    match input with
    | Identifier (id, NotLEFTARROW (input)) -&gt;  
        Some(Primary.Identifier(id), input)
    | OPEN ( Expression (exp, CLOSE (input))) -&gt; 
        Some(Primary.Expression(exp), input)
    | Literal (lit, input) -&gt; Some(Primary.Literal(lit), input)
    | Class (cls, input) -&gt; Some(Primary.Class(cls), input)
    | DOT (input) -&gt; Some(Primary.Dot, input)
    | _ -&gt; None
</pre><p>Here, I need a way to match the absence of LEFTARROW, so I've build a simple local function called NotLEFTARROW. This isn't very clean IMO - I'd rather have a used a custom operator like !!! and &amp;&amp;&amp; for my backtracking predicates. But I haven't figured out how to use custom operators as Active Patterns. I was able to write a standard non-operator AP function, but then I have to use the full AP function name. Here's a version of Primary written that way:</p><pre class="brush: fsharp">
///Backtracking failure predicate
let (|NotPred|_|) f input = 
    match f input with
    | Some (_) -&gt; None 
    | _ -&gt; Some(input) 
     
let rec (|Primary|_|) input = 
    match input with
    | Identifier (id, NotPred (|LEFTARROW|_|) (input)) -&gt;  
        Some(Primary.Identifier(id), input) 
    //Other matches omited
</pre><p>Frankly, I don't think that's very readable, so I didn't implement it that way. If I can figure out how to use custom operators and pass around AP functions without using their full ugly name, I'll change it.</p><p>Finally, there are a few things about F#'s scoping rules that you need to understand. F# uses linear scoping, which is to say there's no way to use a type or function that hasn't been declared, sort of like C/C++. The difference is that while C/C++ have a way to declare a type or function separately from its implementation, F# has no such capacity. This becomes an issue when you have circular references. For example, Primary can be an Expression, which is a list of SequenceItems, each of which is a Primary with an optional prefix and suffix. In order to declare those in F#, you have to use a special "and" syntax to link the types/functions together.</p><pre class="brush: fsharp">
//ToString and Exp2Str omitted for clarity
type Primary = 
| Identifier of string
| Expression of Expression 
| Literal of string
| Class of Range list 
| Dot  

//ToString omitted for clarity
and SequenceItem = 
    {  
        primaryItem: Primary; 
        itemPrefix: Prefix option;      
        itemSuffix: Suffix option; 
    }

and Sequence = SequenceItem list 

and Expression = Sequence list
</pre><p>Likewise, the AP functions to recognize Primary, SequenceItem, Sequence and Expression are anded together. For me, this is one of the hardest things to get used to about F#. But as you can see from the expressiveness of the code, it's well worth the trouble</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1083</wp:post_id>
		<wp:post_date>2007-12-20 10:00:50</wp:post_date>
		<wp:post_date_gmt>2007-12-20 18:00:50</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>practical-f-parsing-semantic-productions-2</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="development"><![CDATA[Development]]></category>
		<category domain="post_tag" nicename="f-sharp"><![CDATA[F#]]></category>
		<category domain="post_tag" nicename="parsing-expression-grammar"><![CDATA[Parsing Expression Grammar]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[01f3a3c9-30ce-4a3c-81fa-f495e8dccab0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Practical+F+Parsing+Semantic+Productions+2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2007/12/20/Practical+F+Parsing+Semantic+Productions+2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
</channel>
</rss>
