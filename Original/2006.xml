<?xml version="1.0" encoding="UTF-8" ?>
<!-- This is a WordPress eXtended RSS file generated by WordPress as an export of your site. -->
<!-- It contains information about your site's posts, pages, comments, categories, and other content. -->
<!-- You may use this file to transfer that content from one site to another. -->
<!-- This file is not intended to serve as a complete backup of your site. -->

<!-- To import this information into a WordPress site follow these steps: -->
<!-- 1. Log in to that site as an administrator. -->
<!-- 2. Go to Tools: Import in the WordPress admin panel. -->
<!-- 3. Install the "WordPress" importer from the list. -->
<!-- 4. Activate & Run Importer. -->
<!-- 5. Upload this file using the form provided on that page. -->
<!-- 6. You will first be asked to map the authors in this export file to users -->
<!--    on the site. For each author, you may choose to map to an -->
<!--    existing user on the site or to create a new user. -->
<!-- 7. WordPress will then import each of the posts, pages, comments, categories, etc. -->
<!--    contained in this file into your site. -->


<rss version="2.0"
	xmlns:excerpt="http://wordpress.org/export/1.2/excerpt/"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:wp="http://wordpress.org/export/1.2/"
>

<channel>
	<title>DevHawk</title>
	<link>http://devhawk.net</link>
	<description>Passion * Technology * Ruthless Competence</description>
	<pubDate>Fri, 18 Oct 2013 06:05:57 +0000</pubDate>
	<language>en-US</language>
	<wp:wxr_version>1.2</wp:wxr_version>
	<wp:base_site_url>http://devhawk.net</wp:base_site_url>
	<wp:base_blog_url>http://devhawk.net</wp:base_blog_url>

	<wp:author><wp:author_id>1</wp:author_id><wp:author_login>devhawk</wp:author_login><wp:author_email>harry@devhawk.net</wp:author_email><wp:author_display_name><![CDATA[DevHawk]]></wp:author_display_name><wp:author_first_name><![CDATA[Harry]]></wp:author_first_name><wp:author_last_name><![CDATA[Pierson]]></wp:author_last_name></wp:author>
	<wp:author><wp:author_id>2</wp:author_id><wp:author_login>dale</wp:author_login><wp:author_email>dale@microsoft.com</wp:author_email><wp:author_display_name><![CDATA[Dale Churchward]]></wp:author_display_name><wp:author_first_name><![CDATA[Dale]]></wp:author_first_name><wp:author_last_name><![CDATA[Churchward]]></wp:author_last_name></wp:author>


	

	<item>
		<title>Hi-Fi Models</title>
		<link>http://devhawk.net/2006/01/03/hi-fi-models/</link>
		<pubDate>Tue, 03 Jan 2006 14:11:48 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://5c003efe-76e3-4c3d-a7d2-a6587f04339b</guid>
		<description></description>
		<content:encoded><![CDATA[<p>I'm slowly but surely working through my holiday backlog of email and weblogs. Slowly being the operative word here.</p><p>Anyway, <a href="http://blogs.msdn.com/stuart_kent/">Stuart</a> has a <a href="http://blogs.msdn.com/stuart_kent/archive/2005/12/22/506687.aspx">great post</a> on the process by which we build models. And he's not talking theoretically here, he's working on a model for the designer definition file in the DSL toolkit. (Which is good news in and of itself as hand-writing the XML dsldd file is a pain in the butt. Though until then there's the great <a href="http://www.modelisoft.com/Dmd2dd.aspx">Dm2Dd tool</a> from Modelisoft). The iterative process he describes certainly looks a lot like development, in the same way that C# development looks like C development. Similar steps taken on different concepts. Additionally, he's working bottom up - the output of the model will eventually be a working program (a designer in this case) which is the point I made in <a href="http://devhawk.net/2005/12/20/Abstraction+Gap+Leapfrog.aspx">Abstraction Gap Leapfrog</a>. There are existing abstractions that work now (i.e. the code generated from the existing dsldd file) and he's trying to building something one level up from there. </p><p>I also like Stuart's use of "fidelity" instead of my use of "complete". Stuart uses it as an indication of how correct a given model is. That's what I was implying when I said "complete" but "fidelity" captures the idea much better. I could imagine both lo-fidelity and hi-fidelity models for a given domain, though I would imagine you would always want to use the highest fidelity model available. The difference would be the amount of custom code you have to write - the higher the model fidelity, the less code you write by hand. And I would imagine the model's fidelity would evolve over time, which introduces interesting questions regarding language evolution as well as the evolution of projects built with those languages.</p><p>I hope Stuart keeps blogging about this project.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>665</wp:post_id>
		<wp:post_date>2006-01-03 14:11:48</wp:post_date>
		<wp:post_date_gmt>2006-01-03 14:11:48</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>hi-fi-models</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="architecture"><![CDATA[Architecture]]></category>
		<category domain="post_tag" nicename="modelling"><![CDATA[Modelling]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[5c003efe-76e3-4c3d-a7d2-a6587f04339b]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[HiFi+Models]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2006/01/03/HiFi+Models]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Architecture Forums</title>
		<link>http://devhawk.net/2006/01/04/architecture-forums/</link>
		<pubDate>Wed, 04 Jan 2006 14:14:06 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://6ee6775c-cc01-4296-b51f-ae0ac080dd83</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Simon just emailed a bunch of internal architects about the new <a href="http://forums.microsoft.com/MSDN/default.aspx?ForumGroupID=58&amp;SiteID=1">Architecture Forums</a> on Microsoft.com. So far there's a <a href="http://forums.microsoft.com/MSDN/ShowForum.aspx?ForumID=228&amp;SiteID=1">general architecture forum</a> as well as one for <a href="http://forums.microsoft.com/MSDN/ShowForum.aspx?ForumID=229&amp;SiteID=1">modeling and tools</a>, with more to come I would guess. </p><p>What other forums do you think we need?</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>666</wp:post_id>
		<wp:post_date>2006-01-04 14:14:06</wp:post_date>
		<wp:post_date_gmt>2006-01-04 14:14:06</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>architecture-forums</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="architecture"><![CDATA[Architecture]]></category>
		<category domain="post_tag" nicename="community"><![CDATA[Community]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[6ee6775c-cc01-4296-b51f-ae0ac080dd83]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Architecture+Forums]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2006/01/04/Architecture+Forums]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>2874</wp:comment_id>
			<wp:comment_author><![CDATA[Andrei Kossoroukov]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.andreiko.com</wp:comment_author_url>
			<wp:comment_author_IP>24.85.224.196</wp:comment_author_IP>
			<wp:comment_date>2006-01-05 12:12:18</wp:comment_date>
			<wp:comment_date_gmt>2006-01-05 20:12:18</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I think that Design Patterns (or Patterns and Practices) forum would be very helpful.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>My New Boss is Blogging</title>
		<link>http://devhawk.net/2006/01/04/my-new-boss-is-blogging/</link>
		<pubDate>Wed, 04 Jan 2006 14:22:38 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://3723c219-6ea8-4a87-99e4-265ce85bdbcc</guid>
		<description></description>
		<content:encoded><![CDATA[<p><a href="http://blogs.msdn.com/gianpaolo">Gianpaolo</a> took over the Solution Architecture team a few months ago and he <a href="http://blogs.msdn.com/gianpaolo/archive/2005/12/26/507489.aspx">rebooted his blog</a> a couple of weeks ago. And <a href="http://forums.microsoft.com/MSDN/Search/Search.aspx?words=&amp;CSVUserID=NjQyNTU=&amp;SiteID=1">he's active</a> on the afore mentioned Architecture Forums. Subscribed.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>667</wp:post_id>
		<wp:post_date>2006-01-04 14:22:38</wp:post_date>
		<wp:post_date_gmt>2006-01-04 14:22:38</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>my-new-boss-is-blogging</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="architecture"><![CDATA[Architecture]]></category>
		<category domain="post_tag" nicename="community"><![CDATA[Community]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[3723c219-6ea8-4a87-99e4-265ce85bdbcc]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[My+New+Boss+Is+Blogging]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2006/01/04/My+New+Boss+Is+Blogging]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>CNET Picks Up Outlook Integration Sample News</title>
		<link>http://devhawk.net/2006/01/10/cnet-picks-up-outlook-integration-sample-news/</link>
		<pubDate>Tue, 10 Jan 2006 09:19:39 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://1876afe5-5a8d-43fd-a6dd-08b5bd0eb25e</guid>
		<description></description>
		<content:encoded><![CDATA[<p>I couldn't blog about the <a href="http://devhawk.net/2006/01/10/Outlook+Integration+Sample.aspx">Outlook Integration Sample</a> last week because we were waiting to see if the mainstream media would pick up the news. CNET ran an <a href="http://news.com.com/Microsoft+shares+tools+for+unlocking+customer+data/2100-1012_3-6024821.html">article about the sample</a> today. There's also a link to the <a href="https://members.microsoft.com/customerevidence/search/EvidenceDetails.aspx?EvidenceID=13848&amp;LanguageID=1">Customer Explorer case study</a> that was the original inspiration for the Outlook Integration Sample and VSTO Outlook in the first place.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>668</wp:post_id>
		<wp:post_date>2006-01-10 09:19:39</wp:post_date>
		<wp:post_date_gmt>2006-01-10 09:19:39</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>cnet-picks-up-outlook-integration-sample-news</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="architecture"><![CDATA[Architecture]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[1876afe5-5a8d-43fd-a6dd-08b5bd0eb25e]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[CNET+Picks+Up+Outlook+Integration+Sample+News]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2006/01/10/CNET+Picks+Up+Outlook+Integration+Sample+News]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Evolving Language Fidelity</title>
		<link>http://devhawk.net/2006/01/10/evolving-language-fidelity/</link>
		<pubDate>Tue, 10 Jan 2006 07:45:34 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://8252ee81-88dc-49a6-95e1-36a6c348dab5</guid>
		<description></description>
		<content:encoded><![CDATA[<p>I haven't seen much in the way of response to my <a href="http://devhawk.net/2006/01/03/HiFi+Models.aspx">Hi-Fi Models</a> post, but I did come across this <a href="http://msdn.microsoft.com/netframework/default.aspx?pull=/library/en-us/dndotnet/html/linqcomparisons.asp">great article</a> by <a href="http://blogs.tedneward.com/">Ted Neward</a> on the history of the tumultuous marriage of objects and relational databases, primarily in the context of <a href="http://msdn.microsoft.com/netframework/future/linq/default.aspx">LINQ</a>. In the context of <a href="http://devhawk.net/2005/10/05/Code+Is+Model.aspx">Code is Model</a>, the following passage from the summary was the most interesting:</p><blockquote><p>While Project LINQ doesn't purport to be the "final answer" to all of the world's object-relational mismatch problems, it does represent a significant shift in direction to solving the problem; instead of taking an approach that centers around code generation, or automated mapping based around metadata and type inference, both of which are exercises in slaving the relational model to an object-oriented one, Project LINQ instead chooses to elevate relations and queries as a first-class concept within language semantics and library-based extensions.<br />[<a href="http://msdn.microsoft.com/netframework/default.aspx?pull=/library/en-us/dndotnet/html/linqcomparisons.asp">Comparing LINQ and Its Contemporaries</a> - <a href="http://blogs.tedneward.com/">Ted Neward</a>]</p></blockquote><p>When Ted says relations and queries are elevated to "first class concepts" within the language, it makes me think of <a href="http://blogs.msdn.com/stuart_kent/">Stuart's</a><a href="http://blogs.msdn.com/stuart_kent/archive/2005/12/22/506687.aspx">comment</a> about language fidelity. I'm not sure I would say C# 3.0 is at a higher level of abstraction than 2.0, but I would say that the inclusion of these new abstractions does improve the language's fidelity. This fidelity improvement does come at the cost of complexity (<a href="http://en.wikipedia.org/wiki/TANSTAAFL">TANSTAAFL</a>) but compared to the current alternatives, I'm willing to pay that price.</p><p>The problem with increasing the language fidelity like this is dealing with the outdated code it leaves behind. You see this today with the addition of generics in the 2.0 CLR. How many hand-coded or <a href="http://www.sellsbrothers.com/tools/#collectionGen">generated</a> strongly typed collections are floating around out there from the 1.x days? Lots. (As if 1.x was so long ago!) How much database access code is floating around out there today? An astronomical amount. Every app that touches a database or processes XML will be outdated with the arrival of C# 3.0 and VB 9.0. But the price of converting this outdated code to use the new abstractions probably won't be worth the time or risk. That means you're left with maintaining the outdated code while also writing any new functionality with the new language features. </p><p>I wonder how DSLs will be impacted by this evolving language fidelity issue? On the one hand, the nature of DSLs is that they have much narrower usage (i.e. one domain) than something like generics or LINQ. On the other hand, I expect DSLs to evolve faster than general mainstream languages like C# can. So I'm thinking the impact will be about the same. </p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>669</wp:post_id>
		<wp:post_date>2006-01-10 07:45:34</wp:post_date>
		<wp:post_date_gmt>2006-01-10 07:45:34</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>evolving-language-fidelity</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="architecture"><![CDATA[Architecture]]></category>
		<category domain="post_tag" nicename="modelling"><![CDATA[Modelling]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[8252ee81-88dc-49a6-95e1-36a6c348dab5]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Evolving+Language+Fidelity]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2006/01/10/Evolving+Language+Fidelity]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Outlook Integration Sample</title>
		<link>http://devhawk.net/2006/01/09/outlook-integration-sample/</link>
		<pubDate>Mon, 09 Jan 2006 23:51:09 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://bc361aff-7651-46c6-9003-027486707695</guid>
		<description></description>
		<content:encoded><![CDATA[<p>For the past few months, I've been heavily involved in a project but I wasn't allowed to blog about it. Last week, it went live on MSDN so finally the gag is off.</p><p>About a year ago, word <a href="http://news.com.com/Microsoft+turns+to+Elixir+for+Office+boost/2100-1012_3-5545640.html">started to surface</a> about something called <a href="http://news.com.com/Gates+pours+Elixir+for+Office+developers/2100-1012_3-5563873.html">Project Elixir</a> which aimed to integrate back end CRM systems with Microsoft Outlook. Part of that effort resulted in the addition of <a href="http://msdn.microsoft.com/office/understanding/vsto/default.aspx?pull=/library/en-us/odc_vsto2005_ta/html/officewhatsnewinvsto2005.asp#officewhatsnewinvsto2005_outlookmanagedaddins">Outlook Managed Add-ins</a> to <a href="http://msdn.microsoft.com/office/understanding/vsto/default.aspx?pull=/library/en-us/odc_vsto2005_ta/html/officewhatsnewinvsto2005.asp">Visual Studio 2005 Tools for Office</a>. However, the VSTO team's primary deliverable was an add-in loader that enforced security, enabled shutdown unloading and provided a better startup/shutdown developer experience that IDTExtensibility2. (Check out the <a href="http://msdn.microsoft.com/library/en-us/odc_vsto2005_ta/html/Office_VSTOOutlookAdd-inArchitecture.asp">VSTO Outlook Architecture document</a> for more details.) While those are important fundamentals that needed to be gotten right, VSTO Outlook doesn't provide much in the way of tools or guidance for building Outlook add-ins that leverage managed forms and controls or integrate with your back end systems. That's where the <a href="http://www.microsoft.com/downloads/details.aspx?familyid=078124E9-1E88-4F51-8C98-3C1999CFE743&amp;displaylang=en">CRM Integration for Outlook sample</a> comes in.</p><p>What we've built is a sample application that surfaces CRM style data inside of Outlook. Outlook is the natural home for your calendar and your personal contacts. Why not make it the natural home for your customer contacts, activities and opportunities as well? As part of the demo project we've implemented:</p><ul><li>Using Windows Forms for editing custom items. Check out this <a href="http://msdn.microsoft.com/library/en-us/dnbda/html/otlklobcrm10.gif">screenshot</a>. The Activity form is a standard managed Windows Forms form, not an Outlook custom form. 
</li><li>Using a Windows Forms user control as a folder home page. Here's a <a href="http://msdn.microsoft.com/library/en-us/dnbda/html/otlklobcrm09.gif">screenshot</a> of the "CRM Today" page. Again, that's a standard managed Windows Forms user control. 
</li><li>A framework for adding menu items and toolbars. In Outlook, the developer has to manage adding the custom toolbars and menu to each explorer and inspector window themselves. With our sample, we built a framework to handle that for you. 
</li><li>Using SQL Express as a local cache of CRM data. It turns out that for many scenarios, storing a copy of all the back-end data directly in Outlook is a bad idea. First, it increases the size of the users mailbox, requiring more storage on the Exchange server. Furthermore, any custom data in Outlook has to be synced twice - once from the back end system to Outlook on the desktop, then from Outlook back to Exchange. By minimizing the amount of back-end data stored in Outlook proper, we reduce the mailbox size and sync bandwidth needs. In both the above screenshots, the displayed data is coming out of the local SQL Express instance, not Outlook. 
</li><li>Having two separate storage locations (Outlook &amp; SQL Express) means having to sync between them. We've built a local sync engine that can sync both individual items between Outlook and SQL Express as well as a collection of items between SQL Express and a given Outlook folder. 
</li><li>Finally, there are some utility classes to make it easier to deal with Outlook folders and items. Of primary note is the ItemAdapter class which provides a pseudo base class for Outlook items (appointments, emails, tasks, etc). Those items all have a set of similar properties and methods, but don't have a common base class so they can't be treated polymorphicaly. ItemAdapter uses runtime reflection to implement those common operations without needing to cast to the concrete Outlook item type. </li></ul><p>Check out the <a href="http://msdn.microsoft.com/architecture/default.aspx?pull=/library/en-us/dnbda/html/OtlkLOBCRM.asp">Architecture Design Guide</a>, as well as the <a href="http://msdn.microsoft.com/architecture/default.aspx?pull=/library/en-us/dnbda/html/OtlkCustInEntApp.asp">Outlook Customization Guide</a> and the <a href="http://msdn.microsoft.com/architecture/default.aspx?pull=/library/en-us/dnbda/html/OtlkLDSSynch.asp">Local Sync Engine Guide</a> up on the Solution Architecture Center. You can also pick up the <a href="http://www.microsoft.com/downloads/details.aspx?familyid=078124E9-1E88-4F51-8C98-3C1999CFE743&amp;displaylang=en">source code</a>. Also, I spun up a <a href="http://workspaces.gotdotnet.com/outlookintegration">GDN Workspace</a> so we can have a <a href="http://www.gotdotnet.com/workspaces/messageboard/home.aspx?id=ccecaaa6-88a8-43c0-8880-a491fcf7396e">discussion forum</a> and to <a href="http://www.gotdotnet.com/workspaces/bugtracker/home.aspx?id=ccecaaa6-88a8-43c0-8880-a491fcf7396e">track bugs and requests</a>. </p><p>Going forward, I'm going to be focusing on the remote data sync story for this scenario. Among other responsibilities, I "own" the Data pillar of our <a href="http://blogs.msdn.com/gianpaolo/archive/2005/06/07/426609.aspx">Connected Systems model</a> so this dovetails nicely. You'll note above that while we have a local sync engine in the sample, we don't have any way to move the data back and forth between the local copy in SQL Express and the remote copy in the CRM back-end. We are working on some guidance around this right now, but we didn't want to hold up publishing the rest of the sample. </p><p>Frankly, it's been nice to be involved with something so technical after spending time on the marketing team. I'm pretty proud of the project and I look forward to your feedback. </p><p><strong>Update</strong>: Removed the link to the running demo as it's been taken off the download site for reasons I am not aware of. If you want the binary and you don't know how to compile it, drop me a mail.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>670</wp:post_id>
		<wp:post_date>2006-01-09 23:51:09</wp:post_date>
		<wp:post_date_gmt>2006-01-09 23:51:09</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>outlook-integration-sample</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="architecture"><![CDATA[Architecture]]></category>
		<category domain="post_tag" nicename="community"><![CDATA[Community]]></category>
		<category domain="category" nicename="development"><![CDATA[Development]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[bc361aff-7651-46c6-9003-027486707695]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Outlook+Integration+Sample]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2006/01/10/Outlook+Integration+Sample]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>2875</wp:comment_id>
			<wp:comment_author><![CDATA[T.Parker]]></wp:comment_author>
			<wp:comment_author_email>tparker@microlinkllc.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>70.184.245.22</wp:comment_author_IP>
			<wp:comment_date>2006-03-15 10:50:50</wp:comment_date>
			<wp:comment_date_gmt>2006-03-15 17:50:50</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I am curious about the explorer_close and inspector_close events.  I have noticed that the code throws all sorts of "first chance exceptions" during runtime and shutdown.  The problem I see is that there is no way to integrate custom images or position information(loaded at instantiation,saved at shutdown).  The concept is very good, but I think it needs more tweaking to become a true Utility class.

Still it is a very good piece of work, and an awesome accelerator for Outlook Smart Client creation.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Architect on the Edge</title>
		<link>http://devhawk.net/2006/01/24/architect-on-the-edge/</link>
		<pubDate>Tue, 24 Jan 2006 14:49:55 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://6deaa854-eaa8-42e8-8d94-3e616040cfc3</guid>
		<description></description>
		<content:encoded><![CDATA[<p>So for the fourth time in seven months, I have a new manager. Way way way back and the end of June, I <a href="http://devhawk.net/2005/06/24/My+Next+Job.aspx">left marketing to be a solution architect</a>. In doing so, I traded in <a href="http://atlasbrandview.blogspot.com/">Norman</a> for <a href="http://blogs.msdn.com/jdevados/">John</a> as my manager. Things were looking shiny but then Microsoft had a <a href="http://seattlepi.nwsource.com/business/241469_msftdivide21ww.html">major reorg</a> back in September. These big reorgs often cause small ripples, like the director of Architecture Strategy deciding to move back to a product group. John was promoted to head the team and <a href="http://blogs.msdn.com/gianpaolo">Gianpaolo</a> was hired to take over John's previous role as head of solution architecture. Finally, it seemed like things were calming down on the management front, so I was caught off-guard by what happened next.</p><p>Last Monday, John offered me a chance to switch roles. We have spun up an Edge Architecture team to focus on the architectural impact of the next generation of computing - what some call "Web 2.0" - and he thought I would be a perfect fit for the team. I agreed and jumped at the chance. So now I work for Michael Platt. Don't let the infrastructure focus of <a href="http://blogs.technet.com/michael_platt">Michael's blog</a> fool you - he incredibly deep on Edge Architecture and I am currently playing catch-up. The strangest thing so far is having to re-orient my thinking for consumer focused systems and away from the enterprise world where I have I've gotten the vast majority of my experience and where I have spent my entire Microsoft career to date.</p><p>In the immediate future, I'm been dumped into the <a href="http://www.mix06.com/">MIX06</a> planning process. We have other stuff going on in the MIX timeframe that I'll get to soon enough. I'm also re-thinking my personal presence. As my career progresses, the moniker "DevHawk" seems more and more outdated. Is it?</p><p></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>671</wp:post_id>
		<wp:post_date>2006-01-24 14:49:55</wp:post_date>
		<wp:post_date_gmt>2006-01-24 14:49:55</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>architect-on-the-edge</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="architecture"><![CDATA[Architecture]]></category>
		<category domain="post_tag" nicename="web-2-0"><![CDATA[Web 2.0]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[6deaa854-eaa8-42e8-8d94-3e616040cfc3]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Architect+On+The+Edge]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2006/01/24/Architect+On+The+Edge]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>2876</wp:comment_id>
			<wp:comment_author><![CDATA[John Cavnar-Johnson]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.pluralsight.com/blogs/johncj</wp:comment_author_url>
			<wp:comment_author_IP>24.206.188.192</wp:comment_author_IP>
			<wp:comment_date>2006-01-24 17:45:10</wp:comment_date>
			<wp:comment_date_gmt>2006-01-25 01:45:10</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[No.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>2877</wp:comment_id>
			<wp:comment_author><![CDATA[John deVadoss]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>71.112.36.171</wp:comment_author_IP>
			<wp:comment_date>2006-01-25 21:13:09</wp:comment_date>
			<wp:comment_date_gmt>2006-01-26 05:13:09</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[no]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>2878</wp:comment_id>
			<wp:comment_author><![CDATA[David Ing]]></wp:comment_author>
			<wp:comment_author_email>david.ing@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://from9till2.com</wp:comment_author_url>
			<wp:comment_author_IP>81.151.39.122</wp:comment_author_IP>
			<wp:comment_date>2006-01-27 06:49:40</wp:comment_date>
			<wp:comment_date_gmt>2006-01-27 14:49:40</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[DevHawk 2.0?

(ducks)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>2879</wp:comment_id>
			<wp:comment_author><![CDATA[DevHawk]]></wp:comment_author>
			<wp:comment_author_email>harry@devhawk.net</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>67.183.15.9</wp:comment_author_IP>
			<wp:comment_date>2006-01-29 23:49:34</wp:comment_date>
			<wp:comment_date_gmt>2006-01-30 07:49:34</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[You better duck David. :)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>TechieWife Back Online</title>
		<link>http://devhawk.net/2006/01/25/techiewife-back-online/</link>
		<pubDate>Wed, 25 Jan 2006 00:14:25 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://6ef41d9e-7806-4f24-a93a-2173073b0c97</guid>
		<description></description>
		<content:encoded><![CDATA[<p>The hardware failure that caused <a href="http://devhawk.net/2005/12/16/Back+In+Business.aspx">DevHawk to be down</a> in early December also took out my wife's blog TechieWife. But she just started up a <a href="http://spaces.msn.com/members/techiewife/">new TechieWife MSN Space</a>. <a href="http://spaces.msn.com/members/techiewife/feed.rss">Subscribed</a> (of course).</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>672</wp:post_id>
		<wp:post_date>2006-01-25 00:14:25</wp:post_date>
		<wp:post_date_gmt>2006-01-25 00:14:25</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>techiewife-back-online</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="blogging"><![CDATA[Blogging]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[6ef41d9e-7806-4f24-a93a-2173073b0c97]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[TechieWife+Back+Online]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2006/01/25/TechieWife+Back+Online]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>EdgeHawk?</title>
		<link>http://devhawk.net/2006/01/26/edgehawk/</link>
		<pubDate>Thu, 26 Jan 2006 08:46:30 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://c9af7b7c-ba9d-4123-8fa4-ea766e746e3d</guid>
		<description></description>
		<content:encoded><![CDATA[<p>I got an email this morning from <a href="http://www.users.globalnet.co.uk/~rxv/so/soapbox.htm">Richard Veryard</a> wondering if I should now be called EdgeHawk. That's funny. Alas, <a href="http://www.edgehawk.com/">EdgeHawk.com</a> is "Your #1 internet Hoosier Racing Tire source" so I think I'm going to stick with DevHawk...at least for now.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>673</wp:post_id>
		<wp:post_date>2006-01-26 08:46:30</wp:post_date>
		<wp:post_date_gmt>2006-01-26 08:46:30</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>edgehawk</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="blogging"><![CDATA[Blogging]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[c9af7b7c-ba9d-4123-8fa4-ea766e746e3d]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[EdgeHawk]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2006/01/26/EdgeHawk]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>2880</wp:comment_id>
			<wp:comment_author><![CDATA[Lee &quot;Edge Hawk&quot; Meadows]]></wp:comment_author>
			<wp:comment_author_email>lmeadows@leggmason.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.edgehawk.comwww.blackfirehawk.com</wp:comment_author_url>
			<wp:comment_author_IP>216.251.209.109</wp:comment_author_IP>
			<wp:comment_date>2006-02-15 12:23:30</wp:comment_date>
			<wp:comment_date_gmt>2006-02-15 20:23:30</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I'm Edge Hawk, so I think you should keep DevHawk. :)

Funny how when you google your name looking for something, the things you find.

Lee.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>2881</wp:comment_id>
			<wp:comment_author><![CDATA[干燥剂]]></wp:comment_author>
			<wp:comment_author_email>desiccant@aauu.net</wp:comment_author_email>
			<wp:comment_author_url>http://www.aauu.net</wp:comment_author_url>
			<wp:comment_author_IP>218.2.39.20</wp:comment_author_IP>
			<wp:comment_date>2006-05-19 15:03:01</wp:comment_date>
			<wp:comment_date_gmt>2006-05-19 22:03:01</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[专业生产干燥剂，　http://www.aauu.net]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Hating the Term Web 2.0</title>
		<link>http://devhawk.net/2006/01/25/hating-the-term-web-2-0/</link>
		<pubDate>Wed, 25 Jan 2006 22:23:09 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://a638a792-763f-4087-b13a-aaf5ce780c72</guid>
		<description></description>
		<content:encoded><![CDATA[<p __designer:dtid="281474976710660" xmlns:__designer="#unknown">Now that I’m an <a href="http://devhawk.net/2006/01/24/Architect+On+The+Edge.aspx" __designer:dtid="281474976710661">Architect on the Edge</a> (I’m thinking of putting that on my business card. Good idea or bad idea?) of course the first order of business is taking a closer look at “Web 2.0”. One thing leaps out at me right away – I hate the name “Web 2.0”. </p><p __designer:dtid="281474976710662" xmlns:__designer="#unknown">First off, it’s a pure marketing buzzword. It was originally coined as a <a href="http://www.web2con.com/" __designer:dtid="281474976710663">conference name</a>. In a way, the fact that is has no underlying meaning is a good thing, because it gives people <a href="http://www.crunchnotes.com/?p=88" __designer:dtid="281474976710664">argue</a> whether it <a href="http://blogs.zdnet.com/ip-telephony/?p=805" __designer:dtid="281474976710665">really</a><a href="http://www.scripting.com/2005/12/19.html#busted" __designer:dtid="281474976710666">exists</a> or <a href="http://www.readwriteweb.com/archives/web_20_is_dead.php/" __designer:dtid="281474976710667">not</a>. In a way, it’s like the word “multimedia” back when we were first putting CD-ROMs into computers. There used to be lots of discussion if one thing or another truly was “multimedia”. Now, we don’t really worry about categorizing it as the marketing buzz around the term is long gone.</p><p __designer:dtid="281474976710668" xmlns:__designer="#unknown">Secondly, I think it’s wildly arrogant to claim we’re only on version 2.0. The Internet has been around for 36 years. So everything before mid 2004 was Web 1.0 or earlier? And people are already talking about <a href="http://en.wikipedia.org/wiki/Web_3.0" __designer:dtid="281474976710669">Web 3.0</a>. Come on, let’s get real. The technologies that are driving the current revolution have been percolating for more than one major version of the underlying technology.</p><p __designer:dtid="281474976710670" xmlns:__designer="#unknown">Finally, what’s with the version number anyway? One of the core principles Tim O’Reilly <a href="http://www.oreillynet.com/pub/a/oreilly/tim/news/2005/09/30/what-is-web-20.html" __designer:dtid="281474976710671">outlined</a> was the “End of the Software Release Cycle”. Why are we using a holdover from the software release cycle days to indicate the end of the software release cycle? </p><p __designer:dtid="281474976710672" xmlns:__designer="#unknown">Don’t get me wrong, I strongly believe that there is dramatic change happening in this industry. The way I explain my new job is to consider that one of the most basic axioms of distributed computing has been overturned. </p><p __designer:dtid="281474976710673" xmlns:__designer="#unknown">From day one, all the computing power has been focused in the center. At first, the machines on the edge had no power at all – they were just dumb terminals. Slowly but surely, those machines at the edge started to become powerful in their own right. However, it’s only in the last seven to ten years that commodity hardware that was pervasive on the edge grew powerful enough to power the center. And it’s only in the last two or three years that the connection between the center and the edge grew fast and pervasive enough to make that edge power relevant. </p><p __designer:dtid="281474976710674" xmlns:__designer="#unknown">The rules have changed. The power has shifted from the center to the edge. And we’re only just beginning to see the effects. </p><p __designer:dtid="281474976710675" xmlns:__designer="#unknown">Maybe we should call it WebNT? :)</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>674</wp:post_id>
		<wp:post_date>2006-01-25 22:23:09</wp:post_date>
		<wp:post_date_gmt>2006-01-25 22:23:09</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>hating-the-term-web-2-0</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="architecture"><![CDATA[Architecture]]></category>
		<category domain="post_tag" nicename="web-2-0"><![CDATA[Web 2.0]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[a638a792-763f-4087-b13a-aaf5ce780c72]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Hating+The+Term+Web+20]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2006/01/26/Hating+The+Term+Web+20]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>2882</wp:comment_id>
			<wp:comment_author><![CDATA[Brant]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>204.50.3.86</wp:comment_author_IP>
			<wp:comment_date>2006-01-26 10:15:37</wp:comment_date>
			<wp:comment_date_gmt>2006-01-26 18:15:37</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Typical Microsoft response.  You didn't invent the term thus you need to come up with your own.  Did the same with AJAX (ATLAS??) *sigh*  Web 2.0 is a great term because it well known in the industry and it tells you that things are changing.  

b]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>2883</wp:comment_id>
			<wp:comment_author><![CDATA[Sean Chase]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.unboxedsolutions.com/sean</wp:comment_author_url>
			<wp:comment_author_IP>209.234.182.134</wp:comment_author_IP>
			<wp:comment_date>2006-01-26 11:20:53</wp:comment_date>
			<wp:comment_date_gmt>2006-01-26 19:20:53</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Totally agree. Sounds like the name of a B movie.   "Web 2.0: The Revenge of Ajax"]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>2884</wp:comment_id>
			<wp:comment_author><![CDATA[DevHawk]]></wp:comment_author>
			<wp:comment_author_email>harry@devhawk.net</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>67.183.15.9</wp:comment_author_IP>
			<wp:comment_date>2006-01-27 22:28:41</wp:comment_date>
			<wp:comment_date_gmt>2006-01-28 06:28:41</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Brant, my dislike for the term "Web 2.0" has nothing to do with working for Microsoft. While I find it funny to invent a new term for technology that has been around for years (and invented by Microsoft I might point out) I like the name AJAX since it actually means something. 

As for Atlas, it's just a product code name, like Longhorn and Whidbey. ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Happy Belated Birthday to DevHawk</title>
		<link>http://devhawk.net/2006/01/27/happy-belated-birthday-to-devhawk/</link>
		<pubDate>Fri, 27 Jan 2006 16:17:32 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://9e1e21cc-86e4-482a-8477-4ce22aea3945</guid>
		<description></description>
		<content:encoded><![CDATA[<p>I was just talking to <a href="http://www.techcrunch.com/about-michael-arrington/">Michael Arrington</a> about some Web 2.0 stuff when I realized I've been blogging for <a title="three years now" href="http://devhawk.net/default,date,2003-01-14.aspx">three years now</a>. I started blogging three years and two weeks ago. Doesn't seem that long ago I was sitting in a Phoenix hotel room putting the finishing touches on the blog engine that powered the first version of DevHawk. (I <a title="moved over" href="http://devhawk.net/2003/10/06/Back+In+Blog.aspx">moved over</a>to <a title="DasBlog" href="http://www.dasblog.info/">DasBlog</a> just under a year later.) But in reality, there's been two kids, a new house, four roles, five managers and a move to campus since I launched my DevHawk Blog. Quite a ride!</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>675</wp:post_id>
		<wp:post_date>2006-01-27 16:17:32</wp:post_date>
		<wp:post_date_gmt>2006-01-27 16:17:32</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>happy-belated-birthday-to-devhawk</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="blogging"><![CDATA[Blogging]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[9e1e21cc-86e4-482a-8477-4ce22aea3945]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Happy+Belated+Birthday+To+DevHawk]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2006/01/28/Happy+Belated+Birthday+To+DevHawk]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Developer 2.0 ARCast</title>
		<link>http://devhawk.net/2006/01/29/developer-2-0-arcast/</link>
		<pubDate>Sun, 29 Jan 2006 13:19:47 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://55e305c1-09f0-4f32-a07f-808a547186b7</guid>
		<description></description>
		<content:encoded><![CDATA[<p>FYI, I sat down for an <a href="http://channel9.msdn.com/shows/ARCast_with_Ron_Jacobs">ARCast with Ron Jacobs</a> last month to talk about Developer 2.0. It's not he full presentation I did at the p&amp;p summit, but it covers much of the same ground. Catch the <a href="http://channel9.msdn.com/ShowPost.aspx?PostID=153382">show over on Channel 9</a>.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>676</wp:post_id>
		<wp:post_date>2006-01-29 13:19:47</wp:post_date>
		<wp:post_date_gmt>2006-01-29 13:19:47</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>developer-2-0-arcast</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="architecture"><![CDATA[Architecture]]></category>
		<category domain="post_tag" nicename="blogging"><![CDATA[Blogging]]></category>
		<category domain="post_tag" nicename="podcasting"><![CDATA[Podcasting]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[55e305c1-09f0-4f32-a07f-808a547186b7]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Developer+20+ARCast]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2006/01/29/Developer+20+ARCast]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Developer 2.0 at VSLive!</title>
		<link>http://devhawk.net/2006/01/29/developer-2-0-at-vslive/</link>
		<pubDate>Sun, 29 Jan 2006 13:14:37 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://fbcef8e4-d3ad-4625-8eec-544d75d17dba</guid>
		<description></description>
		<content:encoded><![CDATA[<p>FYI, for those going to <a title="VSLive! in San Francisco" href="http://www.ftponline.com/conferences/vslive/2006/sf/"><span class="misspell">VSLive</span>! in San Francisco</a>, I'm a last minute addition to the schedule. I'm presenting a talk titled <a id="transformationbest" name="transformationbest"></a><a title="Developer 2.0: Finding Your Way in the Future of Software Development" href="http://www.ftponline.com/conferences/vslive/2006/sf/sas-sessions.aspx#transformationbest">Developer 2.0: Finding Your Way in the Future of Software Development</a>. I wrote and delivered this presentation originally for the <a title="patterns &amp;amp; practices Summit" href="http://www.pnpsummit.com/west2005X.aspx">patterns &amp; practices Summit</a> back in December. It was the second-highest rated talk of the summit (after Anders' LINQ keynote) so I'm excited to be delivering it again. I'm hoping to get a high-quality recording so I can publish it (I recorded the p&amp;p summit version with my laptop. You can hear it but I wouldn't say it's "high quality"). The session is at 5:45pm on Tuesday. I've been told it's in room 2016/2018, but you should double check when you get there if you're interested in going. </p><p></p><p>There's a solid showing from the Architecture Strategy Team at the VSLive! <a title="Software Architecture Summit" href="http://www.ftponline.com/conferences/vslive/2006/sf/sasummit.aspx">Software Architecture Summit</a> this year. In addition to my last minute addition:</p><ul><li>John <span class="misspell">deVadoss's</span> day two keynote on <a id="theedge" name="theedge"></a><a title="Software Architecture on the Edge: Moving Beyond SOA." href="http://www.ftponline.com/conferences/vslive/2006/sf/sas-sessions.aspx#theedge">Software Architecture on the Edge: Moving Beyond SOA</a>. </li><li>Ron Jacobs on <a id="integrationservice" name="integrationservice"></a><a title="Integration, Service Orientation and Pattern Driven Design" href="http://www.ftponline.com/conferences/vslive/2006/sf/sas-sessions.aspx#integrationservice">Integration, Service Orientation and Pattern Driven Design</a> . </li><li>John Evdemon on <a title="Workflow Enabled Services" href="http://www.ftponline.com/conferences/vslive/2006/sf/sas-sessions.aspx#workflowenabled"><span class="misspell">Workflow</span> Enabled Services</a>. </li><li>Mauro Regio on <a id="collaborationsoftware" name="collaborationsoftware"></a><a title="Collaboration Software Factory" href="http://www.ftponline.com/conferences/vslive/2006/sf/sas-sessions.aspx#collaborationsoftware">Collaboration Software Factory</a>. </li></ul><p>See you in San Fran!</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>677</wp:post_id>
		<wp:post_date>2006-01-29 13:14:37</wp:post_date>
		<wp:post_date_gmt>2006-01-29 13:14:37</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>developer-2-0-at-vslive</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="architecture"><![CDATA[Architecture]]></category>
		<category domain="post_tag" nicename="community"><![CDATA[Community]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[fbcef8e4-d3ad-4625-8eec-544d75d17dba]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Developer+20+At+VSLive]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2006/01/29/Developer+20+At+VSLive]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Browser as Virtual Machine</title>
		<link>http://devhawk.net/2006/02/02/browser-as-virtual-machine/</link>
		<pubDate>Thu, 02 Feb 2006 16:05:36 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://565f1aec-0de9-4fef-880d-a363823e7b3e</guid>
		<description></description>
		<content:encoded><![CDATA[<p><i>Note: this is the first in a series of Web 2.0 entries. I know I’m <a href="http://devhawk.net/2006/01/26/Hating+The+Term+Web+20.aspx">on record as hating the term Web 2.0</a>, but as I wrote in that post, I do belief there is a fundamental shift underway in computing. The industry is calling this Web 2.0, and I can either spit in the wind or go with the flow. Furthermore, for the more Web 2.0 savvy among my readership, much of what I write about in this series may be old news. But I want to blog what I learn as I learn it, so bear with me.</i></p><p>Just as the dumb terminal was eventually replaced with more sophisticated personal computers, the dumb browser has been replaced on the modern desktop by something significantly more versatile. When the ability to process arbitrary script code was added to the browser, it became a virtual machine in its own right. Perhaps unique and special-purpose when compared to environments such as the .NET CLR, but a VM all the same. And while its unique nature makes the browser unusable for entire genres of applications – you’d never use the browser to build a server application for example – it makes it well tailored for user-centric, software as a service style applications that have become commonplace. While the browser’s scripting capabilities have been around since the mid 90s, the industry has only recently started to leverage those capabilities to build applications that run on the client inside the browser. Jesse James Garrett <a style="COLOR: blue; TEXT-DECORATION: underline; text-underline: single" href="http://www.adaptivepath.com/publications/essays/archives/000385.php">coined</a> the term “AJAX” – Asynchronous JavaScript and XML – to describe this style of application.</p><p>If the browser is a virtual machine, that makes JavaScript the “assembly language” of the browser. That is, JavaScript is the lowest level of abstraction you can program the browser with.  This has pretty dramatic implications on the applications you build for the browser VM. For one, JavaScript is at a sufficiently high level of abstraction that you can use it directly and be productive. Writing an entire application in IL or Java byte code is unthinkable, but isn’t really a big deal for JavaScript. Furthermore, Because JavaScript is a text-based scripting language, protecting your code as intellectual property is extremely difficult. While obfuscators exist, in the end they can only delay the reverse engineering of your code, not prevent it. This encourages business models where the in-browser code has little if any value.</p><p>For example, the big mashup functionality these days is mapping. There are three big mapping services out there: <a href="http://www.google.com/apis/maps/">Google Maps</a>, <a href="http://viavirtualearth.com/">Microsoft Virtual Earth</a> and <a href="http://developer.yahoo.net/maps/">Yahoo! Maps</a>. 266 of the 368 mashups listed on <a href="http://www.programmableweb.com/">ProgrammableWeb</a> as I write this include mapping functionality from one of those services. That's nearly three out of four. Mapping is interesting because of the sheer amount of data involved. In fact, the code is pretty useless without the back-end data. So while I can get the code for Google Maps, it does me no good without access to the data for which I need the API key. Contrast this with the complete lack of market for browser-based rich text editors. Sure, there are various open-source script libraries like <a href="http://dojotoolkit.org/docs/rich_text.html">Dojo</a>, <a href="http://www.richtexteditor.org/">Web Wiz RTE</a> and <a href="http://www.kevinroth.com/rte/demo.htm">Kevin Roth's RTE</a>. But no companies offering a rich text editor service like they offer map services. Why is that? I would think the value of rich text editing would be even more widely applicable than mapping. The problem is that, unlike the map service, there's no back end associated with a rich text editor. There's no way to protect a client-side-only solution such as these rich text editors. The only people who do sell rich text editor components are ones who have integrated into some back-end programming environment such as Richer Components' <a href="http://www.richercomponents.com/asp-net-components/rich-text-box-wysiwyg-editor.html">RichTextBox for ASP.NET</a>. </p><p>The browser as a VM also has broad implications with regard to extensibility. Similar capabilities are delivered by the four major browsers (IE, Firefox, Opera and Safari) across the major operating systems (Windows, MacOS, Linux, FreeBSD). So the question is, how will new capability evolve in the browser? Will the growing number of <a href="http://www.techcrunch.com/company-index/">Web 2.0 companies</a> looking to provide compelling features and differentiate themselves in the marketplace demand new functionality in the browser VM? Will one of the browser vendors be willing to take the heat of building proprietary extensions to their browser? I realize that many people have a dim view of proprietary extensions, but many features we take for granted today are de facto standards that arose from Microsoft's proprietary extensions to IE. Most notable of these of course is XMLHttpRequest, without which "AJAX" would just be "J". And JavaScript itself started life as a proprietary extension to Netscape before eventually being turned over to ECMA for standardization.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>678</wp:post_id>
		<wp:post_date>2006-02-02 16:05:36</wp:post_date>
		<wp:post_date_gmt>2006-02-02 16:05:36</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>browser-as-virtual-machine</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="architecture"><![CDATA[Architecture]]></category>
		<category domain="post_tag" nicename="web-2-0"><![CDATA[Web 2.0]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[565f1aec-0de9-4fef-880d-a363823e7b3e]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Browser+As+Virtual+Machine]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2006/02/03/Browser+As+Virtual+Machine]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>No Go on Developer 2.0</title>
		<link>http://devhawk.net/2006/02/02/no-go-on-developer-2-0/</link>
		<pubDate>Thu, 02 Feb 2006 16:04:33 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://344a3a06-8beb-4c1f-8ac2-8ca7148b81a8</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Well that was the most annoying business trip of my life. The short version of the story is that my flight to San Francisco sat at the gate for over two hours before they decided to offload everyone and rebook them. I ended up taking a flight into Oakland which was itself thirty minutes late. Combined with the longest AirBART bus trip from Oakland Airport in the history of mankind and I ended up being 20 minutes late for my session, which they had canceled when it became clear I wouldn't make it. Mucho apologies to the FTP staff, though I was in contact with them thru the day so they are well aware of the effort I made to be there on time. </p><p>The most annoying part was the airplane crew who continuously assured me that I'd make it because the repairs we were waiting on would be finished any minutes. Two hours later the damage was done. </p><p>I guess if I go to <a href="http://www.ftponline.com/conferences/vslive/2006/toronto/">Toronto</a> or <a href="http://www.ftponline.com/conferences/vslive/2006/orlando/">Orlando</a>, I'll go in the day before to avoid this happening again. I didn't want to be gone from home the extra night since both my <a href="http://spaces.msn.com/techiewife/blog/cns!3DAECC033B88329C!142.entry">kids are sick</a>. But instead, I ended up going to SFO for nothing which is worse. </p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>679</wp:post_id>
		<wp:post_date>2006-02-02 16:04:33</wp:post_date>
		<wp:post_date_gmt>2006-02-02 16:04:33</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>no-go-on-developer-2-0</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[344a3a06-8beb-4c1f-8ac2-8ca7148b81a8]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[No+Go+On+Developer+20]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2006/02/03/No+Go+On+Developer+20]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Flash, the Other White Meat</title>
		<link>http://devhawk.net/2006/02/03/flash-the-other-white-meat/</link>
		<pubDate>Fri, 03 Feb 2006 17:01:30 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://5653ae31-0380-4b9a-9b81-a14476d048fd</guid>
		<description></description>
		<content:encoded><![CDATA[<p>When I wrote yesterday about the <a href="http://devhawk.net/2006/02/03/Browser+As+Virtual+Machine.aspx">Browser as VM</a>, I made the point that extensibility is difficult as we have four major browsers and multiple OSes to deal with. What Web 2.0 company is going to be willing to bet on a proprietary extension implemented in only one of those combinations? Not many if any I would guess. However, there is one option that works across all those browsers and OSes: Macromedia (now Adobe) <a href="http://www.macromedia.com/software/flashplayer/">Flash Player</a>.</p><p>Unlike the browser, where AJAX is a relatively new idea, Flash has been positioning itself as a <a href="http://www.macromedia.com/platform/">platform</a> for <a href="http://download.macromedia.com/pub/flash/whitepapers/richclient.pdf">nearly four years</a>. Instead of AJAX, Macromedia coined the term Rich Internet Application or RIA. RIAs share a lot in common with AJAX in that they are downloaded on demand, execute arbitrary script code and can retrieve data across the network. But the most interesting commonality that Flash has with the browser is that runs across multiple browsers and OSes. </p><p>In platform portability, Flash has succeeded where Java failed. I haven't done enough research to know exactly why yet, but I suspect that it's because Java tried to be a complete portable environment on day one where Flash focused on specific functionality that weren't possible any other way - so called "skip intros" - and grew up from there. In other words, Java tried the top-down approach and Flash tried the bottom-up approach. I'm not surprised bottom-up worked and top-down crashed and burned.</p><p>While the modern browser has evolved to make it a capable platform, it still lacks some capabilities that Flash has. Most notably support for rich media. Thus, sites like <a href="http://www.pandora.com/">Pandora</a>, <a href="http://video.google.com/">Google Video</a> and <a href="http://mtv.com/overdrive">MTV Overdrive</a> need the capabilities provided by Flash.</p><p>While it's hard to imagine enhancements to the browser due to the difficulties across four browsers and multiple OSes, improvements to Flash are easy to imagine. <a href="http://www.macromedia.com/platform/whitepapers/platform_overview.pdf">According to Macromedia</a>, Flash has 98% penetration. Even more impressive is that Flash reaches 80% penetration with new versions of the player within 12 months.</p><p>Check out <a href="http://www.klynch.com/archives/000082.html">this post</a> from Kevin Lynch for more on Flash for Web 2.0 companies. So far, the only Web 2.0 company I know about (which is to say I'm sure there are more out there) is <a href="http://www.goowy.com/">Goowy</a>. Which ones am I missing?</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>680</wp:post_id>
		<wp:post_date>2006-02-03 17:01:30</wp:post_date>
		<wp:post_date_gmt>2006-02-03 17:01:30</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>flash-the-other-white-meat</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="architecture"><![CDATA[Architecture]]></category>
		<category domain="post_tag" nicename="web-2-0"><![CDATA[Web 2.0]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[5653ae31-0380-4b9a-9b81-a14476d048fd]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Flash+The+Other+White+Meat]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2006/02/04/Flash+The+Other+White+Meat]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>2885</wp:comment_id>
			<wp:comment_author><![CDATA[David Ing]]></wp:comment_author>
			<wp:comment_author_email>david.ing@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://from9till2.com</wp:comment_author_url>
			<wp:comment_author_IP>81.151.39.122</wp:comment_author_IP>
			<wp:comment_date>2006-02-04 03:02:48</wp:comment_date>
			<wp:comment_date_gmt>2006-02-04 11:02:48</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hell Harry,

Laszlo (http://www.laszlosystems.com) is an interesting flash/platform hybrid, I see it used more and more, a little more programmer-centric than all that flash movie object stuff. Obvious overlaps with WPF/Everywhere to come, but open-source and dependant on the flash player.

If you like Web 2.0 lists, there's a big one here:  http://virtualkarma.blogspot.com/2006/01/complete-list-of-web-20-applications.html 

- David (1.0)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>DevHawk Pulling for Seahawks</title>
		<link>http://devhawk.net/2006/02/05/devhawk-pulling-for-seahawks/</link>
		<pubDate>Sun, 05 Feb 2006 13:29:19 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://08dcc3de-474c-4e1f-bb78-d6d7e9dbbb75</guid>
		<description></description>
		<content:encoded><![CDATA[<p>It's been a <a href="http://www.superbowl.com/history/recaps/game/sbxxvi">long time</a> since I cared who won the Super Bowl. But I've got to give it up for my adopted <a href="http://www.seahawks.com/">home team</a>. Go Hawks!</p><p>Update: :(</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>681</wp:post_id>
		<wp:post_date>2006-02-05 13:29:19</wp:post_date>
		<wp:post_date_gmt>2006-02-05 13:29:19</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>devhawk-pulling-for-seahawks</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="sports"><![CDATA[Sports]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[08dcc3de-474c-4e1f-bb78-d6d7e9dbbb75]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[DevHawk+Pulling+For+Seahawks]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2006/02/05/DevHawk+Pulling+For+Seahawks]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>2886</wp:comment_id>
			<wp:comment_author><![CDATA[John]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://blogs.msdn.com/jevdemon</wp:comment_author_url>
			<wp:comment_author_IP>131.107.0.75</wp:comment_author_IP>
			<wp:comment_date>2006-02-09 16:12:25</wp:comment_date>
			<wp:comment_date_gmt>2006-02-10 00:12:25</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Not all of us are originally from Seattle.  Being born and raised in Pittsburgh - this game was win/win for me.

Now if only the poor Penguins could do as well.  :(]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>New DSL Toolkit Drop</title>
		<link>http://devhawk.net/2006/02/07/new-dsl-toolkit-drop/</link>
		<pubDate>Tue, 07 Feb 2006 13:01:25 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://927e400c-d23b-41b5-848d-101feb4e6371</guid>
		<description></description>
		<content:encoded><![CDATA[<p>I have been so focused on Web 2.0 stuff that I've been reading a bunch of new blogs and disregarding the old ones I used to read. So I didn't realize until today that the <a href="http://msdn.microsoft.com/vstudio/DSLTools/">DSL Tools</a> team released a <a href="http://affiliate.vsipmembers.com/affiliate/downloadfiles.aspx">new drop</a> last week. According to <a href="http://blogs.msdn.com/garethj/">Gareth</a>, the highlights include:</p><ul><li>Integration into the <a href="http://msdn.microsoft.com/vstudio/extend/">Visual Studio SDK</a>. According to the site, they are shooting for an April release for v2 of the VS2005 SDK, so does that mean the DSL Tools will be done in April? 
</li><li>Single file format and complete visual designer for all aspects of a DSL. I'm guessing this mean we no longer have to edit the designer definition by hand. That's a good thing. But I liked the seperation of domain model and designer, so I'll be interested to see how I like what they've built. 
</li><li>Domain-specifiic model serialization. This is huge - previously, the domain model dictated the XML serialization format. Now, if you can customize this, you can provide a clean model syntax and even possibly read in other syntaxes as well 
</li><li>Port Shapes and a revised modeling API</li></ul><p>Update: Apparently, <a href="http://devhawk.net/CommentView,guid,927e400c-d23b-41b5-848d-101feb4e6371.aspx">I can't read</a>. Only the VS SDK integration is done in this build. improvements to the file format and model serialization will be in the next drop.<br /></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>682</wp:post_id>
		<wp:post_date>2006-02-07 13:01:25</wp:post_date>
		<wp:post_date_gmt>2006-02-07 13:01:25</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>new-dsl-toolkit-drop</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="architecture"><![CDATA[Architecture]]></category>
		<category domain="post_tag" nicename="modelling"><![CDATA[Modelling]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[927e400c-d23b-41b5-848d-101feb4e6371]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[New+DSL+Toolkit+Drop]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2006/02/07/New+DSL+Toolkit+Drop]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>2887</wp:comment_id>
			<wp:comment_author><![CDATA[Gareth Jones]]></wp:comment_author>
			<wp:comment_author_email>gareth.jones@microsoft.com</wp:comment_author_email>
			<wp:comment_author_url>http://blogs.msdn.com/garethj</wp:comment_author_url>
			<wp:comment_author_IP>213.199.128.177</wp:comment_author_IP>
			<wp:comment_date>2006-02-07 15:09:36</wp:comment_date>
			<wp:comment_date_gmt>2006-02-07 23:09:36</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I obviously wasn't quite as clear in my separation of converns as I'd wished.

The new build is your first bullet only.
The NEXT build will be the other bullets.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>SPARK is Out of the Bag</title>
		<link>http://devhawk.net/2006/02/09/spark-is-out-of-the-bag/</link>
		<pubDate>Thu, 09 Feb 2006 15:51:24 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://cbf8dd75-0c21-4fe2-ba6d-56fd4a108bf6</guid>
		<description></description>
		<content:encoded><![CDATA[<p>As part of the <a href="http://devhawk.net/2006/01/24/Architect+On+The+Edge.aspx">new job</a>, I'm involved in the planning a workshop called SPARK, which <a href="http://hinchcliffe.org/">Dion Hinchcliffe</a><a href="http://blogs.zdnet.com/Hinchcliffe/?p=5">blogged about</a> this morning. (Dion also writes a <a href="http://web2.wsj2.com/">blog here</a> - bringing the total to three - so I created a <a href="http://feedjumbler.com/88756a0/rss.xml">combined feed</a> just to keep track of all the places he writes). My new boss <a href="http://blogs.technet.com/michael_platt/default.aspx">Mike</a> also <a href="http://blogs.technet.com/michael_platt/archive/2006/02/09/419148.aspx">mentioned SPARK this morning</a>. In the hopes of sparking futher interest (pun intended), here's the overview of SPARK:</p><blockquote dir="ltr" style="MARGIN-RIGHT: 0px"><p><strong>SPARK</strong> is the first in a series of high-level forums hosted by Microsoft that use a workshop setting to examine “the issues that matter most” in the practice of strategic architecture and produce guidance for the industry as a whole.</p><p>Today, new social movements, advances in technology, and forces within business are overlapping to create a landscape glutted with challenges and opportunities. In many cases, these forces have driven the deployment of new technologies and the adoption of new behaviors, adding multiple layers to an already complex set of issues that must be navigated. Architects are searching for a solution that helps manage this complexity.</p><p>SOA, Software as a Service, Web 2.0, and Edge are all elements of the solution, but are they the complete picture? Are they a sufficient answer to the issues?  Can they be used together in a productive and efficient fashion? What matters most?</p></blockquote>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>683</wp:post_id>
		<wp:post_date>2006-02-09 15:51:24</wp:post_date>
		<wp:post_date_gmt>2006-02-09 15:51:24</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>spark-is-out-of-the-bag</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="architecture"><![CDATA[Architecture]]></category>
		<category domain="post_tag" nicename="web-2-0"><![CDATA[Web 2.0]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[cbf8dd75-0c21-4fe2-ba6d-56fd4a108bf6]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[SPARK+Is+Out+Of+The+Bag]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2006/02/09/SPARK+Is+Out+Of+The+Bag]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Atlas Transparency</title>
		<link>http://devhawk.net/2006/02/10/atlas-transparency/</link>
		<pubDate>Fri, 10 Feb 2006 14:13:11 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://6d9d0832-e0d9-4b0c-9c04-ec940f4d9a5e</guid>
		<description></description>
		<content:encoded><![CDATA[<p>I went to a brownbag today on <a href="http://atlas.asp.net/">Atlas</a>, though since it was at 10am there was no one eating lunch or any brownbags to be seen. As cool as the Atlas project is, the coolest thing is that when I asked where their internal web site was, <a href="http://blogs.msdn.com/jhawk/default.aspx">Johnathan</a> said they didn't have one - just the public <a href="http://atlas.asp.net/">http://atlas.asp.net/</a> site. How about that for transparency! More of that, please!</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>684</wp:post_id>
		<wp:post_date>2006-02-10 14:13:11</wp:post_date>
		<wp:post_date_gmt>2006-02-10 14:13:11</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>atlas-transparency</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="community"><![CDATA[Community]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[6d9d0832-e0d9-4b0c-9c04-ec940f4d9a5e]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Atlas+Transparency]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2006/02/10/Atlas+Transparency]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>New Devhawk Design</title>
		<link>http://devhawk.net/2006/02/11/new-devhawk-design/</link>
		<pubDate>Sat, 11 Feb 2006 08:26:14 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://e71af7c8-a3ec-4c9a-8548-ad71d0158e85</guid>
		<description></description>
		<content:encoded><![CDATA[<p>For those of you reading this via the syndication feed, I rolled out a new site design last night. I figured that after <a href="http://devhawk.net/2006/01/28/Happy+Belated+Birthday+To+DevHawk.aspx">three years</a> it was high time for a new site design. Not being much of a designer, I started with the <a href="http://download.microsoft.com/download/7/8/0/7802dbf0-d500-41a7-b635-5bd3131229be/Rounded%20VS%20Design%20Templates.msi">Rounded design template</a> from the <a href="http://msdn.microsoft.com/asp.net/reference/design/templates/">ASP.NET Design Template Gallery</a>. It's much cleaner and more readable than my old deisgn, as I've removed all my blogrolls and fixed the width for 1024x768 screens. </p><p>As part of the switch, I moved from using a table-based layout to a CSS-based layout. I even wrote custom dasBlog macros that render my naviagation menu and date archive as unordered lists. The default dasBlog macros for those are rendered using tables. (Note, I didn't rewrite the category list, so I'm not completely table free). If there's interest from the dasBlog community, I'll post the code.</p><p>I gotta say, I'm not sure I see what the big deal about CSS over tables is. I mean, I'm as impressed as the next guy with <a href="http://www.csszengarden.com/">CSS Zen Garden</a>, but honestly I don't get it. Maybe it's because I'm a developer, not a designer at heart. But CSS seems like hard-coded voodoo to me. This site has a simple fixed-width two-column layout, but it took a great deal of experimentation to get the floats coded correctly to render in both IE and FireFox. In fact, there's a small issue with the new deisgn in IE that I didn't bother to fix. But if I had just used tables, it would have taken five minutes. </p><p>Please let me know what you think of the new design.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>685</wp:post_id>
		<wp:post_date>2006-02-11 08:26:14</wp:post_date>
		<wp:post_date_gmt>2006-02-11 08:26:14</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>new-devhawk-design</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="blogging"><![CDATA[Blogging]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[e71af7c8-a3ec-4c9a-8548-ad71d0158e85]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[New+Devhawk+Design]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2006/02/11/New+Devhawk+Design]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>2888</wp:comment_id>
			<wp:comment_author><![CDATA[Tomas Restrepo]]></wp:comment_author>
			<wp:comment_author_email>tomasr@mvps.org</wp:comment_author_email>
			<wp:comment_author_url>http://www.winterdom.com/weblog/</wp:comment_author_url>
			<wp:comment_author_IP>201.232.44.63</wp:comment_author_IP>
			<wp:comment_date>2006-02-11 10:30:26</wp:comment_date>
			<wp:comment_date_gmt>2006-02-11 18:30:26</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Well, you seem to do better than me at this damn thing :)

Looks good to me.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>2889</wp:comment_id>
			<wp:comment_author><![CDATA[Chris Slatt]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://devauthority.com/blogs/chrisslatt/</wp:comment_author_url>
			<wp:comment_author_IP>66.92.162.211</wp:comment_author_IP>
			<wp:comment_date>2006-02-13 11:33:11</wp:comment_date>
			<wp:comment_date_gmt>2006-02-13 19:33:11</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Well I don't know how the old design would have looked, but the new one renders fantastically in Pocket IE on my Pocket PC Phone.  Generally that is one of the best things about using CSS vs. Table Based layouts.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Dennis Miller Has Jumped the Shark</title>
		<link>http://devhawk.net/2006/02/11/dennis-miller-has-jumped-the-shark/</link>
		<pubDate>Sat, 11 Feb 2006 23:36:21 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://1a9e0102-c263-4226-b1cb-e076c94cf6bc</guid>
		<description></description>
		<content:encoded><![CDATA[<p>I was so excited to see the Dennis Miller's <a href="http://www.hbo.com/events/dmiller/">latest HBO special</a>, but it was such let down. He spent the first half sucking wind and the second half sucking up to the Republicans. I mean, he used to have such a sharp policital wit, but now he's just another partisan hack. It's pretty sad. </p><p>At least <a href="http://www.hbo.com/billmaher/">Bill Maher</a> is back next week. </p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>686</wp:post_id>
		<wp:post_date>2006-02-11 23:36:21</wp:post_date>
		<wp:post_date_gmt>2006-02-11 23:36:21</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>dennis-miller-has-jumped-the-shark</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="politics"><![CDATA[Politics]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[1a9e0102-c263-4226-b1cb-e076c94cf6bc]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Dennis+Miller+Has+Jumped+The+Shark]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2006/02/12/Dennis+Miller+Has+Jumped+The+Shark]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>2890</wp:comment_id>
			<wp:comment_author><![CDATA[Matt T.]]></wp:comment_author>
			<wp:comment_author_email>noone@youknow.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>198.203.192.166</wp:comment_author_IP>
			<wp:comment_date>2006-02-13 06:52:31</wp:comment_date>
			<wp:comment_date_gmt>2006-02-13 14:52:31</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Because Bill Maher isn't another partisan hack. :rollseyes:]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>2891</wp:comment_id>
			<wp:comment_author><![CDATA[CJ]]></wp:comment_author>
			<wp:comment_author_email>nospamthanks@blah.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>12.10.147.122</wp:comment_author_IP>
			<wp:comment_date>2006-02-13 11:13:23</wp:comment_date>
			<wp:comment_date_gmt>2006-02-13 19:13:23</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Would you still consider Dennis Miller to be a partisan hack if you agreed with him?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>2892</wp:comment_id>
			<wp:comment_author><![CDATA[DevHawk]]></wp:comment_author>
			<wp:comment_author_email>harry@devhawk.net</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>131.107.0.102</wp:comment_author_IP>
			<wp:comment_date>2006-02-13 12:49:20</wp:comment_date>
			<wp:comment_date_gmt>2006-02-13 20:49:20</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[If Dennis Miller was critical of both democrats and republicans, then I wouldn't consider him a partisan hack. But when you repurpose Karl Rove's talking points into unfunny jokes, that makes you a partisan hack in my book. Even with the massive amount of corruption and ineptitude in this administration as fodder, the best Dennis could come up with was to make fun of John Kerry and Howard Dean in the presidential election from two years ago. Calling President "Sit For Seven Minutes While My Country Is Under Attack" Bush "decisive might be funny, if it wasn't so sad.

However, I do have to give Dennis small props for coming out in favor of gay marriage. 

As for Bill Maher, one of the reasons I like him is because he frequently criticizes both sides of the aisle. Of course, if you watched him, you'd know that. 
]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>2893</wp:comment_id>
			<wp:comment_author><![CDATA[Steve]]></wp:comment_author>
			<wp:comment_author_email>spamhole@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>64.220.215.146</wp:comment_author_IP>
			<wp:comment_date>2006-02-14 12:25:34</wp:comment_date>
			<wp:comment_date_gmt>2006-02-14 20:25:34</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I used to watch Bill Maher's show occasionally and I certainly don't think anyone is going to accuse him of being ballanced.  I might agree that he occasionally makes jokes about liberals there are far more times that he trashes conservatives and/or Christians.

We're all more sensitive to jokes about things we hold dear.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>2894</wp:comment_id>
			<wp:comment_author><![CDATA[CJ]]></wp:comment_author>
			<wp:comment_author_email>nospamplease@somewhere.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>12.10.147.122</wp:comment_author_IP>
			<wp:comment_date>2006-02-15 11:23:52</wp:comment_date>
			<wp:comment_date_gmt>2006-02-15 19:23:52</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I don't watch Bill Maher because he strikes me as rather pompous, all politics aside.  

I remember Miller going after Reagan and Bush Sr. in the 80s -- not exactly the m.o. of a diehard Republican.  What changed?  Miller claims that his turning point was 9/11; if so, how can a man so previously "sharp witted" become such a dunce?

This sounds just like the charges leveled at Bush: he's a moron and a rube...but he's the most SINISTER and BRILLIANT simpleton in the world, who managed to lead a massive conspiracy to steal at least one U.S. election and lead the country into war.

Hey, you can't have it both ways.

And since we're on the topic of 9/11 and you mentioned Bush sitting in that classroom: what ELSE was he supposed to do?  Dive into a coat closet, throw on his Superman costume, and fly to the rescue?  Stand up, race out of the classroom and alarm the kids?  Or assume that the first reponders and the military are on it and that ten more minutes in a school won't change a thing?

What could have Bush done on that day that would have changed ANYTHING?

Kerry and Dean are easy targets for comedians like Miller: the former is a cold, robotic relic from the 60s who spends more time posing and talking about his few months in Vietnam than in the Senate, and the second is a delusional windbag who currently is spending more of the Democratic party's money than they can raise.

Steve is right: we're all more sensitive to jokes about things we hold dear.  But that doesn't mean we can't recognize our own partisan preferences and admit that the other side is right once in a while.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>2895</wp:comment_id>
			<wp:comment_author><![CDATA[DevHawk]]></wp:comment_author>
			<wp:comment_author_email>harry@devhawk.net</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>131.107.0.102</wp:comment_author_IP>
			<wp:comment_date>2006-02-16 10:41:46</wp:comment_date>
			<wp:comment_date_gmt>2006-02-16 18:41:46</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[As soon as the other side is right again, I'll be sure to admit it! :)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Latest Architecture Journal </title>
		<link>http://devhawk.net/2006/02/11/latest-architecture-journal/</link>
		<pubDate>Sat, 11 Feb 2006 16:57:53 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://54873fe0-a9d7-453b-90e9-28b6cd5369ab</guid>
		<description></description>
		<content:encoded><![CDATA[<p>It's been a while coming, but the print subscriptions of <a href="http://architecturejournal.net">The Architecture Journal</a> are underway. I got my copy of Journal 6 in the mail today. It's not online yet, but you can get the <a href="http://architecturejournal.net/2005/issue4/">back issues</a> and sign up for your <a href="https://www.msarchitecturejournal.com">own free print subscription</a> on the website. </p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>687</wp:post_id>
		<wp:post_date>2006-02-11 16:57:53</wp:post_date>
		<wp:post_date_gmt>2006-02-11 16:57:53</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>latest-architecture-journal</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="architecture"><![CDATA[Architecture]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[54873fe0-a9d7-453b-90e9-28b6cd5369ab]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Latest+Architecture+Journal]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2006/02/12/Latest+Architecture+Journal]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>The Next Mainstream Programming Language</title>
		<link>http://devhawk.net/2006/02/13/the-next-mainstream-programming-language/</link>
		<pubDate>Mon, 13 Feb 2006 15:07:02 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://ec844f4d-fed3-488c-a16d-96c108bf6a0b</guid>
		<description></description>
		<content:encoded><![CDATA[<p><a href="http://terranova.blogs.com/">Terra Nova</a> is not the usual place I go to get news around programming language improvements. But <a href="http://terranova.blogs.com/terra_nova/2006/02/troubles_with_t.html">they linked</a> to a great presentation from <a href="http://www.cs.princeton.edu/~dpw/popl/06/">POPL 2006</a> by Tim Sweeney of <a href="http://epicgames.com/">Epic Games</a>. Tim's talk is called <a href="http://www.cs.princeton.edu/~dpw/popl/06/Tim-POPL.ppt">The Next Mainstream Programming Language: A Game Developer's Perspective</a> and it talks at great length the major issues facing game developers today. As Nate Combs at Terra Nova remarked, most of these issues are not specific to the game industry, but will likely be seen there first.</p><p>Most interesting (to me) was the issue of concurrency. Tim uses <a href="http://www.xbox.com/en-US/games/g/gearsofwar/">Gears of War</a> for all his examples. Of course, Gears of War is an Xbox 360 exclusive. Xbox 360, as many of you probably know, has three hyper-threaded CPUs for a total capactiy of six hardware threads. Herb Sutter talked about this in his DDJ article <a href="http://www.gotw.ca/publications/concurrency-ddj.htm">The Free Lunch Is Over</a>. Tim points out - rightly so - that "C++ is ill-equipped for concurrency". C#, Java and VB aren't much better. Tim conculdes that we'll need a combination of effects-free non-imperative code (which can safely be executed in parallel) and software transactional memory (to manage parallel modifications to system state). 
</p><p>Tim also touches on topics of performance, modularity and reliability. And he has an eye on the practical at all times. For example, he points out that even a four times performance overhead of software transactional memory is acceptable, if it allows the code to scale to many threads. 
</p><p>Anyway, it's a great read so check it out. Also, MS Research has a <a href="http://www.cs.brown.edu/~mph/sxm.htm">software transactional memory project</a> you can download if you're so inclined. </p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>688</wp:post_id>
		<wp:post_date>2006-02-13 15:07:02</wp:post_date>
		<wp:post_date_gmt>2006-02-13 15:07:02</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>the-next-mainstream-programming-language</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="development"><![CDATA[Development]]></category>
		<category domain="post_tag" nicename="lanugages"><![CDATA[Lanugages]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[ec844f4d-fed3-488c-a16d-96c108bf6a0b]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[The+Next+Mainstream+Programming+Language]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2006/02/13/The+Next+Mainstream+Programming+Language]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>2896</wp:comment_id>
			<wp:comment_author><![CDATA[Matt Dotson]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://blogs.msdn.com/mattdotson/</wp:comment_author_url>
			<wp:comment_author_IP>68.235.202.147</wp:comment_author_IP>
			<wp:comment_date>2006-02-21 21:42:52</wp:comment_date>
			<wp:comment_date_gmt>2006-02-22 05:42:52</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Interesting stuff.  I wonder if it would catch on with the "write to the metal" approach of most game devs.  I could see this sort of thing catching on much better with windows devs where abstraction is everywhere.  I'd like to see this built into existing languages with language extensions to C# (or others) enabled by the phoenix compiler project?

Even if the languages were better equipped to deal with concurrency, we are stuck with so many libraries that don't do concurrency well.  How long will we be bound by windows' single UI thread concept, which is unfortunately not resolved with WPF?

Finally, I'm excited to see a bunch of C++ people saying that the future is garbage collected!!  It makes sense that once you get a bunch of hardware threads (they talked of 20+ hardware threads), giving up 5% processing power would mean the gc could run all of the time and not add any latency to the apps.  With our single threaded apps now, the whole app has to freeze while GC takes place.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Web 2.0 Evolution</title>
		<link>http://devhawk.net/2006/02/13/web-2-0-evolution/</link>
		<pubDate>Mon, 13 Feb 2006 11:39:21 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://0e02c2eb-c4c1-471c-aa30-f86a22bcfe07</guid>
		<description></description>
		<content:encoded><![CDATA[In his <a href="http://www.identity20.com/">now-famous talk</a>, <a href="http://blame.ca/dick/">Dick Hardt</a> describes <a href="http://www.identity20.com/">Identity 2.0</a> as inevitable. As in "coming for sure, but not here yet". I wonder how much of Web 2.0 is here now, and how much is inevitable? And furthermore, how much can we generalize about the future of Web 2.0 from what is happening now? As in many things, I think the answer isn't black and white. 
<p>For example, I think we can generalize about the bright future of peer-to-peer based technologies from looking at systems like <a href="http://www.skype.com/">Skype</a> and <a href="https://www.foldershare.com/">FolderShare</a>. Naturally, with the power shifting to the edge, I believe it's inevitable for more edge machines to communicate directly with each other rather than being mediated by a service in the center. In fact, in many cases I believe were going to want to shift a significant percentage of social computing to the peer-to-peer model. It scales better and doesn't have centralized privacy concerns. Furthermore, I think there may be be specific peer-to-peer capabilities that are difficult or impossible to replicate with a centralized model, though so far, I haven't them yet. </p><p>However, I'm not sure we can generalize about the future of mashups the same way. This isn't to say I think mashups are going away - far from it. I just think that mashups a year from now will look very different than they do today. </p><p>First off, I don't think we can  generalize the success of Google Maps. In the <a href="http://www.programmableweb.com/howto">Programmable Web how to guide</a>, they mention that "Plotting markers on maps is probably the easiest place to start". Apparently, many people are taking that advice because 297 of the <a href="http://www.programmableweb.com/mashups">411 mashups listed</a> use one of the three major (i.e. GYM) mapping services. However, maps are unique because of the massive amount of data, the extremely simple API and the ubiquity of location information. They are also one of the few mashup API's that runs in the browser - the vast majority of mashup API's are back end data type services like <a href="http://www.amazon.com/gp/browse.html/ref=sc_fe_l_2/102-5580662-4480110?_encoding=UTF8&amp;node=12738641&amp;no=14256891&amp;me=A36L942TSJ2AJA">Amazon's E-Commerce Service</a>. How many more in-browser <a href="http://www.programmableweb.com/apis">mashup API's</a> are out there waiting to be built? I'm not sure, but as I wrote in <a href="http://devhawk.net/2006/02/03/Browser+As+Virtual+Machine.aspx">Browser as VM</a>, the problem with these in-browser mashup API's is that you can't protect your IP. </p><p>As for back-end service mashup APIs, there needs to be a way for these service providers to make money. Even if the software they use to build the service is free, things like hardware and bandwidth are not. For an Amazon or Ebay, making money on thier services is relatively easy since they are facilitating sales transactions. In the end, they probably won't care much if a sales transaction originated on their site or on a site leveraging their APIs. However, if the service provider is ad-funded, the service API effectively routes around the site's revenue mechanism. Take, for example, a site for tracking events like <a href="http://www.zvents.com/">Zvents</a>, <a href="http://eventful.com/">Eventful</a> or <a href="http://upcoming.org/">Upcoming</a>. They need to drive users to the actual site in order to drive revenue. So it remains to be seen exactly how the API based access is going to work out. Today, these API's are specifically provided for "non-commercial use only" so one way would be to charge for access via the API (either flat-rate subscription, a per-use charge or a combination of the two). Alternatively, they could be bought up by a larger company who could then afford to run the business at a loss. Yahoo already bought Upcoming and Google Base already has an event item type, but the other big companies in this space (I'd guess Microsoft, Amazon, Ebay and maybe Apple) might be interested. Again, I'm not sure how this evolves either, but it's got to evolve beyond "non-commercial access".</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>689</wp:post_id>
		<wp:post_date>2006-02-13 11:39:21</wp:post_date>
		<wp:post_date_gmt>2006-02-13 11:39:21</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>web-2-0-evolution</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="architecture"><![CDATA[Architecture]]></category>
		<category domain="post_tag" nicename="web-2-0"><![CDATA[Web 2.0]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[0e02c2eb-c4c1-471c-aa30-f86a22bcfe07]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Web+20+Evolution]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2006/02/13/Web+20+Evolution]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Reinventing the List</title>
		<link>http://devhawk.net/2006/02/14/reinventing-the-list/</link>
		<pubDate>Tue, 14 Feb 2006 11:50:50 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://32bca2ee-e564-4151-af30-e1d23e7f517e</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Marc Canter seems pretty excited that Songbird is going to support XSPF. While Marc has written about it many times, I had no idea what it was. It's the <a href="http://www.xspf.org/">XML Shareable Playlist Format</a> (pronounced "spiff"). It's designed to be simple and open and built on XML. Typically, that's coolness but while reading the <a href="http://www.xspf.org/xspf-v1.html">spec</a>, I had a strong sense of deja-vu. XSPF defines a list of songs for a playlist, much the same way that <a href="http://www.rssboard.org/rss-2-0">RSS</a> defines a list of blog entries. </p><p>So that begs the question, why didn't XSPF just use RSS instead of starting from scratch? RSS is simple, open, built on XML and is massively popular? Remember when Adam Bosworth that <a href="http://acmqueue.com/modules.php?name=Content&amp;pa=showpage&amp;pid=337&amp;page=4">pointed out</a> that RSS and Atom are "both support a base schema that provides a model for sets". I'm all for a simple, open and extensible playlist format, but I'm not excited that XSPF has gone of an reinvented the concept of "list" in order to do it. </p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>690</wp:post_id>
		<wp:post_date>2006-02-14 11:50:50</wp:post_date>
		<wp:post_date_gmt>2006-02-14 11:50:50</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>reinventing-the-list</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="music"><![CDATA[Music]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<category domain="post_tag" nicename="web-2-0"><![CDATA[Web 2.0]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[32bca2ee-e564-4151-af30-e1d23e7f517e]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Reinventing+The+List]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2006/02/14/Reinventing+The+List]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>2897</wp:comment_id>
			<wp:comment_author><![CDATA[Lucas Gonze]]></wp:comment_author>
			<wp:comment_author_email>lucas@gonze.com</wp:comment_author_email>
			<wp:comment_author_url>http://gonze.com</wp:comment_author_url>
			<wp:comment_author_IP>67.72.118.244</wp:comment_author_IP>
			<wp:comment_date>2006-02-14 13:22:07</wp:comment_date>
			<wp:comment_date_gmt>2006-02-14 21:22:07</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Along with a study of existing playlist formats (at http://gonze.com/playlists/playlist-format-survey.html), there was a preliminary study on RSS for this purpose:
http://gonze.com/rss_plus_time.html .

RSS didn't make sense for a lot of reasons.  We were paving cowpaths, and RSS for playlists was very much not a cowpath.  Playlists are about sequence, while RSS has no concept of sequence except reverse chronological order.  We needed abstractions to deal with the fact that music and movies frequently don't have URLs, and RSS didn't have them.  If not starting from scratch was critical, HTML preceded RSS and would be the default to work from.

That said, I would have liked for XSPF to be a lot closer to feed formats, even though it didn't work out that way.  Maybe in the long run that's the direction it will go.
]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>2898</wp:comment_id>
			<wp:comment_author><![CDATA[Online-Poker]]></wp:comment_author>
			<wp:comment_author_email>bien@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://online-poker.30mb.com</wp:comment_author_url>
			<wp:comment_author_IP>212.193.63.1</wp:comment_author_IP>
			<wp:comment_date>2006-03-09 07:26:04</wp:comment_date>
			<wp:comment_date_gmt>2006-03-09 15:26:04</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Along with a study of existing playlist formats (at http://gonze.com/playlists/playlist-format-survey.html), there was a preliminary study on RSS for this purpose:
http://gonze.com/rss_plus_time.html . ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>2899</wp:comment_id>
			<wp:comment_author><![CDATA[Online Poker]]></wp:comment_author>
			<wp:comment_author_email>bien@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://online-poker.30mb.com</wp:comment_author_url>
			<wp:comment_author_IP>212.193.63.1</wp:comment_author_IP>
			<wp:comment_date>2006-03-09 07:27:11</wp:comment_date>
			<wp:comment_date_gmt>2006-03-09 15:27:11</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[RSS didn't make sense for a lot of reasons. We were paving cowpaths, and RSS for playlists was very much not a cowpath. Playlists are about sequence, while RSS has no concept of sequence except reverse chronological order. We needed abstractions to deal with the fact that music and movies frequently don't have URLs, and RSS didn't have them. If not starting from scratch was critical, HTML preceded RSS and would be the default to work from. ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Thoughts on the AJAX Toolkit Spectrum</title>
		<link>http://devhawk.net/2006/02/13/thoughts-on-the-ajax-toolkit-spectrum/</link>
		<pubDate>Mon, 13 Feb 2006 17:13:53 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://58c50049-f42d-4b2d-9dd7-7dc9c5117cc0</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Last week, <a href="http://web2.wsj2.com/">Dion</a> wrote about the <a href="http://web2.wsj2.com/web_20_design_the_ajax_spectrum.htm">spectrum of AJAX tookits</a>. He ended with a question, wondering which end of the spectrum will dominate? Will it be lightweight composable toolkits like <a href="http://prototype.conio.net/">prototype</a>, <a href="http://script.aculo.us/">script.aculo.us</a> or <a href="http://dojotoolkit.org/">Dojo</a>? Or a more comprehensive toolkit like <a href="http://atlas.asp.net/">Atlas</a>?</p><p>This came up in a chat I had w/ <a href="http://www.jnsk.se/weblog/">Jimmy Nilsson</a> today. Well, not specifically about AJAX toolkits. Rather, we were talking about <a href="http://www.jnsk.se/weblog/posts/SemanticsLater.htm">what he called</a> technicalities vs. semantics:</p><blockquote><p>I have noticed that there seems to be a focus first on the technicalities and then on the semantics. Take Indigo (or WCF) for example. There has been sooo much talk about its technical aspects, but very little talk about how to design for it. I'm pretty sure that when the technicalities have been sorted, it's time for the semantic side. I'm not thinking about technical semantics, but rather business semantics. </p></blockquote><p>On more than one occasion, I've had a head-beating-wall conversations with WCF folks who are completely obsessed with the secure, reliable and transactional delivery of messages, but have given exactly zero thought to the actual contents of said message. So I know where Jimmy is coming from. </p><p>With respect to AJAX toolkits, the question becomes just how easy will these lightweight toolkits compose? Because while Dion describes Google Maps as "a simple JavaScript include", that's just the technicalities, it doesn't begin to deal with the semantics. For example, Dojo has <a href="http://manual.dojotoolkit.org/collections/Dictionary.html">Dictionary object</a>, prototype has a <a href="http://www.sergiopereira.com/articles/prototype.js.html#Reference.Hash">Hash object</a>. Dojo <a href="http://manual.dojotoolkit.org/collections/ArrayList.html">extends the Javascript Array</a>, so <a href="http://www.sergiopereira.com/articles/prototype.js.html#Reference.Array">does prototype</a>. Both libraries wrap the XmlHttpRequest object. In each of these cases, it appears to me that the library authors have focused on the technicalities, but not thought about the semantics. These implementations are all semantically similar, but incompatible. So I don't buy that these lightweight toolkits will compose well. What do I do if I'm using prototype but want the rich text editor in Dojo? </p><p>The network effect that Dion doesn't consider is the component ecosystem phenomenon that Microsoft has a ton of experience with. Old school VB, COM/ActiveX and .NET have all had large ecosystems of components and controls evolve that extend the functionality of the baseline development platform. There's no reason to believe that won't happen with Atlas. I think it's wrong to describe Atlas as a monolith or self-contained or enclosing. It's an extensible baseline platform - i.e. the baseline functionality is set down once at the development platform and the ecosystem can extend it from there. Sure, overlapping extensions happen (how many rich text editor components are there for ASP.NET?) but at least they all have basic compatibility.</p><p><strong>Update</strong> - Fixed link to Dojo Toolkit in the first paragraph.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>691</wp:post_id>
		<wp:post_date>2006-02-13 17:13:53</wp:post_date>
		<wp:post_date_gmt>2006-02-13 17:13:53</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>thoughts-on-the-ajax-toolkit-spectrum</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="architecture"><![CDATA[Architecture]]></category>
		<category domain="post_tag" nicename="web-2-0"><![CDATA[Web 2.0]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[58c50049-f42d-4b2d-9dd7-7dc9c5117cc0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Thoughts+On+The+AJAX+Toolkit+Spectrum]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2006/02/14/Thoughts+On+The+AJAX+Toolkit+Spectrum]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>2900</wp:comment_id>
			<wp:comment_author><![CDATA[Tom Trenka]]></wp:comment_author>
			<wp:comment_author_email>ttrenka@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://dojotoolkit.org</wp:comment_author_url>
			<wp:comment_author_IP>24.118.178.68</wp:comment_author_IP>
			<wp:comment_date>2006-02-16 11:12:56</wp:comment_date>
			<wp:comment_date_gmt>2006-02-16 19:12:56</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi,

Just a couple of Dojo clarifications: 
a. the URL is http://dojotoolkit.org (I think you've got .com there).
b. The Dojo Dictionary and ArrayList classes are actually derived from/influenced by the .NET framework (with adjustments); ArrayList doesn't extend the Javascript array as much as wraps it and imparts .NET ArrayList type functionality on it.

As far as technicalities vs. semantics, I have to agree with you :)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>2901</wp:comment_id>
			<wp:comment_author><![CDATA[Rob Sanheim]]></wp:comment_author>
			<wp:comment_author_email>rsanheim@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.robsanheim.com</wp:comment_author_url>
			<wp:comment_author_IP>24.196.130.128</wp:comment_author_IP>
			<wp:comment_date>2006-05-08 12:56:57</wp:comment_date>
			<wp:comment_date_gmt>2006-05-08 19:56:57</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[To answer your question about using prototype and also using the dojo rich text editor - you just use prototype, and require the dojo widget package.  They work fine together.  Dojo plays in its own namespace, and Prototype works in its own.  There could be issues if Dojo uses the for..in construct with objects that Prototype extends, but besides that there they should be fine together.  

So in the real world, you see these libraries used together when appropriate, and they work fine.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Yet Another AJAX Toolkit</title>
		<link>http://devhawk.net/2006/02/13/yet-another-ajax-toolkit/</link>
		<pubDate>Mon, 13 Feb 2006 23:13:25 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://7c7c2f20-e6f0-4f82-8ffa-e27b798bcf85</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Hot on the heels of my post about the <a href="http://devhawk.net/2006/02/14/Thoughts+On+The+AJAX+Toolkit+Spectrum.aspx">AJAX toolkit spectrum</a> comes news that Yahoo! has released their own <a href="http://developer.yahoo.net/yui">AJAX toolkit</a> as well as a very cool <a href="http://developer.yahoo.net/ypatterns/index.php">web page design pattern catalog</a>.</p><p>Some non-surprises:</p><ul><li>The Yahoo! toolkit has it's own animation library, it's own drag and drop library and it's own XmlHttpRequest wrapper, just like other libraries like Dojo and prototype.</li><li>The Yahoo! <a href="http://developer.yahoo.net/yui/#elements">UI Controls</a> depend on Yahoo's <a href="http://developer.yahoo.net/yui/#utilities">Core Utilities</a>. The libraries are modular, but not polymorphic with other these libraries. </li><li>The code was released under an open source license (BSD). </li></ul><p>All these different implementations of the same core set of capabilities at best means learning lots of ways of doing the same thing and at worst means incompatibility between components from different libraries.</p><p>BTW, <a href="http://devhawk.net/2006/02/03/Browser+As+Virtual+Machine.aspx">last week I wrote</a> that using a text-based high-level scripting language like Javascript in the browser "encourages business models where the in-browser code has little if any value." This release from Yahoo! supports that point. While their mapping component is subject a strict <a href="http://developer.yahoo.net/maps/mapsTerms.html">Terms of Use</a>, their UI components were released with a liberal open source licence. I doubt that's a coincidence.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>692</wp:post_id>
		<wp:post_date>2006-02-13 23:13:25</wp:post_date>
		<wp:post_date_gmt>2006-02-13 23:13:25</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>yet-another-ajax-toolkit</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="architecture"><![CDATA[Architecture]]></category>
		<category domain="post_tag" nicename="web-2-0"><![CDATA[Web 2.0]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[7c7c2f20-e6f0-4f82-8ffa-e27b798bcf85]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Yet+Another+AJAX+Toolkit]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2006/02/14/Yet+Another+AJAX+Toolkit]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>More on XSFP</title>
		<link>http://devhawk.net/2006/02/14/more-on-xsfp/</link>
		<pubDate>Tue, 14 Feb 2006 16:09:57 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://72f184eb-d99a-47f3-b395-182314447338</guid>
		<description></description>
		<content:encoded><![CDATA[<p><a href="http://gonze.com/weblog/">Lucas Gonze</a> left me a <a href="http://devhawk.net/CommentView,guid,32bca2ee-e564-4151-af30-e1d23e7f517e.aspx#85758f3a-8ba4-431e-8efe-77370dc7d4a9">comment</a> indicating they had in fact <a href="http://gonze.com/rss_plus_time.html">investigated using RSS</a> for XSFP instead of starting from scratch. Good to know they considered the possibility. Unfortunately, it looks like they were using RSS 1.0 so it has all the extra RDF stuff which really hasn't caught on. The document doesn't really go into the reasons they chose to go a different way, though Lucas does say the following:</p><blockquote><p>RSS didn't make sense for a lot of reasons. We were paving cowpaths, and RSS for playlists was very much not a cowpath. Playlists are about sequence, while RSS has no concept of sequence except reverse chronological order. We needed abstractions to deal with the fact that music and movies frequently don't have URLs, and RSS didn't have them. If not starting from scratch was critical, HTML preceded RSS and would be the default to work from. </p></blockquote><p>I'm not sure I get Lucas' point about sequence. Both RSS and XSFP have sequence. Sure, RSS is typically describing web site content, thus it's a reverse chronological order. But the RSS spec doesn't mandate and specific meaning to the items in the feed. In fact, the items typically have a pubDate element making the order in the feed somewhat irrelevant. According to the <a href="http://www.xspf.org/xspf-v1.html">spec</a>, XSFP uses the order of the tracks in the file as the implicit playback order. Why that wouldn't work with RSS is a mystery to me. </p><p>As for the "needed abstractions" missing from RSS, I'd be curious to know what those are and why they couldn't be added via <a href="http://www.rssboard.org/rss-2-0#extendingRss">RSS extensions</a>. </p><p>Lucas, please don't take these comments as criticisms. I'm new in this space and I'm trying to get my head around stuff. Furthermore, if the success of RSS proves anything, it's that number of users matters a lot more than the perceived technical merit of a given approach.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>693</wp:post_id>
		<wp:post_date>2006-02-14 16:09:57</wp:post_date>
		<wp:post_date_gmt>2006-02-14 16:09:57</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>more-on-xsfp</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="music"><![CDATA[Music]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<category domain="post_tag" nicename="web-2-0"><![CDATA[Web 2.0]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[72f184eb-d99a-47f3-b395-182314447338]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[More+On+XSFP]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2006/02/15/More+On+XSFP]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>2902</wp:comment_id>
			<wp:comment_author><![CDATA[Lucas Gonze]]></wp:comment_author>
			<wp:comment_author_email>lucas@gonze.com</wp:comment_author_email>
			<wp:comment_author_url>http://gonze.com</wp:comment_author_url>
			<wp:comment_author_IP>67.72.118.244</wp:comment_author_IP>
			<wp:comment_date>2006-02-15 18:26:56</wp:comment_date>
			<wp:comment_date_gmt>2006-02-16 02:26:56</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[RSS is not about lists so much as it's about reverse-chronological journals.  There are assumptions about the weblog form buried deep in the format, for example the idea that all entries would have some sensible reason to have a pubDate.

We could indeed do playlists as an RSS extension, and at the time we started on XSPF some people were experimenting with that.  Those experiments didn't work out for three reasons.  One, many RSS features just weren't applicable to playlists and would create needless verbosity.  Two, many playlist features weren't already in RSS and would have to be invented no matter what we did.  Three, our target user base was developers of MP3 players, who would be actively turned off by having to deal with RSS.  XSPF is much much much simpler than RSS.  On the whole, an RSS-based approach would have been buggier, harder, and hard to sell.  

Now my question for you: why are you looking at multimedia through RSS-colored glasses?  Why should web logs be the model for playlists?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>2903</wp:comment_id>
			<wp:comment_author><![CDATA[DevHawk]]></wp:comment_author>
			<wp:comment_author_email>harry@devhawk.net</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>131.107.0.102</wp:comment_author_IP>
			<wp:comment_date>2006-02-16 10:39:41</wp:comment_date>
			<wp:comment_date_gmt>2006-02-16 18:39:41</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I believe your understanding of RSS to be flawed. If you read the 2.0 spec, you'll notice that there are no assumptions baked into the spec. Sure, it's primarily used for weblogs, but RSS doesn't mandate weblogs. For example, your point about pubDate is incorrect. PubDate, like all other defined item elements, is optional. 

From the link you left in your last post, it's pretty clear you were looking at the 1.0 version of the RSS spec which was significantly more verbose. Have you looked at the 2.0 spec?

I'm not looking at multimedia through RSS-colored glasses. I'm seeing yet another list format that is semantically similar but syntactically different from RSS. That means that instead of using well known (and well tested) RSS libraries to process playlist feeds, I have to write everything from scratch. That creates more bugs, not less.

Given the popularity of podcasting - which of course uses RSS as the feed format - RSS for multimedia seems to be working well already. From my reading of the spec, an XPSF feed is basically an RSS feed without some of the elements that are optional in RSS anyway. ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>2904</wp:comment_id>
			<wp:comment_author><![CDATA[Lucas Gonze]]></wp:comment_author>
			<wp:comment_author_email>lucas@gonze.com</wp:comment_author_email>
			<wp:comment_author_url>http://gonze.com</wp:comment_author_url>
			<wp:comment_author_IP>67.72.118.244</wp:comment_author_IP>
			<wp:comment_date>2006-02-16 11:54:34</wp:comment_date>
			<wp:comment_date_gmt>2006-02-16 19:54:34</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[That's XSPF, not XPSF.

It is silly to say that there are no assumptions baked into the spec.

]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Introducting DevHawk Designs</title>
		<link>http://devhawk.net/2006/02/16/introducting-devhawk-designs/</link>
		<pubDate>Thu, 16 Feb 2006 14:45:16 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://305062a6-ae5a-4bba-96f9-ff0cf317b81f</guid>
		<description></description>
		<content:encoded><![CDATA[<a href="http://www.zazzle.com/link.asp?associate_id=238197950402547873&amp;redirect=product&amp;product_id=235848130425737882"><img height="278" src="http://s3.amazonaws.com/devhawk_images/archelp.png" width="311" align="right" border="0" /></a><p>A while ago, I made a sign for my door that reads "Architecture Help 5¢" (in homage to <a href="http://www.snoopy.com/comics/peanuts/fun_and_games/images/lucy_800x600.jpg">Lucy's psychiatry stand</a> in <a href="http://www.snoopy.com/">Peanuts</a> of course.) I get the occasional comment on it, so I decided to experiment and make a t-shirt out of it. These days, making your own t-shirt is cake with online services such as <a href="http://www.cafepress.com/">CafePress</a>, <a href="http://www.tshirtjunkie.com/">T-Shirt Junky</a> and <a href="http://www.zazzle.com/">Zazzle</a>. I like Zazzle's pricing structure the best - they have a flat fee and pay you a royalty on sales. CafePress has a baseline fee and you can then charge whatever you want on top of that. I didn't want to be mucking around with pricing, so I went with Zazzle. Also, Zazzle has more choices and options for t-shirts than CafePress did.</p><p>My Zazzle gallery is named <a href="http://www.zazzle.com/harrypierson*">DevHawk Designs</a>. So far, I have two products - the Architecture Help 5¢ shirt in <a href="http://www.zazzle.com/link.asp?associate_id=238197950402547873&amp;redirect=product&amp;product_id=235848130425737882">black</a> and in <a href="http://www.zazzle.com/link.asp?associate_id=238197950402547873&amp;redirect=product&amp;product_id=235459386023641151">white</a>, though Zazzle allows you to customize the shirt so you can get it on pink or navy blue if you really want it. I made it with <a href="http://www.microsoft.com/products/expression/en/graphic_designer">Expression Graphic Designer</a>, though it's such a simple design I'm sure I didn't really exercise its capabilities at all.</p><p>Other than me, I'm not sure who's going to buy one of these. Believe me, I have no vision of being the next <a href="http://www.thinkgeek.com/tshirts/">ThinkGeek</a>. But let me know what you think, good or bad.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>694</wp:post_id>
		<wp:post_date>2006-02-16 14:45:16</wp:post_date>
		<wp:post_date_gmt>2006-02-16 14:45:16</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>introducting-devhawk-designs</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<category domain="post_tag" nicename="web-2-0"><![CDATA[Web 2.0]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[305062a6-ae5a-4bba-96f9-ff0cf317b81f]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Introducting+DevHawk+Designs]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2006/02/16/Introducting+DevHawk+Designs]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>2905</wp:comment_id>
			<wp:comment_author><![CDATA[Bil Simser]]></wp:comment_author>
			<wp:comment_author_email>bsimser@shaw.ca</wp:comment_author_email>
			<wp:comment_author_url>http://weblogs.asp.net/bsimser</wp:comment_author_url>
			<wp:comment_author_IP>24.64.226.237</wp:comment_author_IP>
			<wp:comment_date>2006-02-17 10:16:09</wp:comment_date>
			<wp:comment_date_gmt>2006-02-17 18:16:09</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Cool! I actually got turned onto Zazzle by Scott Hanselman with custom stamps, but I love this shirt. Although I'm stealing your design now and building one for SharePoint ;)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>2906</wp:comment_id>
			<wp:comment_author><![CDATA[DevHawk]]></wp:comment_author>
			<wp:comment_author_email>harry@devhawk.net</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>67.183.15.9</wp:comment_author_IP>
			<wp:comment_date>2006-02-17 13:29:00</wp:comment_date>
			<wp:comment_date_gmt>2006-02-17 21:29:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Send me the link to the shirt when you're done!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>2907</wp:comment_id>
			<wp:comment_author><![CDATA[William]]></wp:comment_author>
			<wp:comment_author_email>support@mootif.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.mootif.com</wp:comment_author_url>
			<wp:comment_author_IP>66.159.230.199</wp:comment_author_IP>
			<wp:comment_date>2006-06-07 20:44:35</wp:comment_date>
			<wp:comment_date_gmt>2006-06-08 03:44:35</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[We build a website to allow you to design for free. The site is at http://www.mootif.com. Give it a try and send us feedback. This is pretty new. Thanks.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Redundant Specifications</title>
		<link>http://devhawk.net/2006/02/16/redundant-specifications/</link>
		<pubDate>Thu, 16 Feb 2006 15:31:28 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://93a0f86c-28e8-40dc-a5ef-8b9a99f79f46</guid>
		<description></description>
		<content:encoded><![CDATA[So after my <a href="http://devhawk.net/2006/02/14/Reinventing+The+List.aspx">two</a><a href="http://devhawk.net/2006/02/15/More+On+XSFP.aspx">posts</a> on XSPF&nbsp;and some public discussion in the comments, I took the conversation with Lucas offline in hopes of getting a better understanding about the thought process that went into the spec. Unfortunately, Lucas has reacted as if I called his baby ugly and we got nowhere. Needless to say, I still believe that XSPF is completely redundant because it is nearly semantically identical to RSS.

To demonstrate, here's a list of every <a href="http://www.xspf.org/xspf-v1.html#rfc.section.4.1.1.2">playlist element</a> from the <a href="http://www.xspf.org/xspf-v1.html">XSPF version 1 spec</a> and how it maps to <a href="http://www.rssboard.org/rss-2-0#requiredChannelElements">channel elements</a> from <a href="http://www.rssboard.org/rss-2-0">RSS version 2</a>.
<ul>
	<li>/playlist/title -&gt; /rss/channel/title</li>
	<li>/playlist/creator -&gt; /rss/channel/managingEditor</li>
	<li>/playlist/annotation -&gt; /rss/channel/description</li>
	<li>/playlist/info -&gt; /rss/channel/link</li>
	<li>/playlist/image -&gt; /rss/channel/image</li>
	<li>/playlist/date -&gt; /rss/channel/pubDate</li>
	<li>/playlist/license -&gt; /rss/channel/copyright</li>
	<li>/playlist/location -&gt; create custom element</li>
	<li>/playlist/identifier -&gt; create custom element</li>
	<li>/playlist/attribution -&gt; create custom element</li>
	<li>/playlist/link -&gt; No need in RSS</li>
	<li>/playlist/meta -&gt; No need in RSS</li>
	<li>/playlist/extension -&gt; No need in RSS</li>
</ul>
That's a pretty close match. There are a few things we need extensions for to represent in RSS, but nothing major. BTW, from what I can tell, the reason XSPF has link, meta and extension elements is for extensibility purposes. RSS supports an extremely <a href="http://www.rssboard.org/rss-2-0#extendingRss">flexible extensibility model</a> already, so there's no need for the XSPF specific extensibility elements.

Here's the mapping of <a href="http://www.xspf.org/xspf-v1.html#rfc.section.4.1.1.2.14.1.1.1">track elements</a> in XSPF to <a href="http://www.rssboard.org/rss-2-0#hrelementsOfLtitemgt">item elements</a> in RSS.
<ul>
	<li>/playlist/trackList/track/location -&gt; /rss/channel/item/enclosure</li>
	<li>/playlist/trackList/track/identifier -&gt; /rss/channel/item/guid</li>
	<li>/playlist/trackList/track/title -&gt; /rss/channel/item/title</li>
	<li>/playlist/trackList/track/creator -&gt; /rss/channel/item/author</li>
	<li>/playlist/trackList/track/annotation -&gt; /rss/channel/item/description</li>
	<li>/playlist/trackList/track/info -&gt; /rss/channel/item/link</li>
	<li>/playlist/trackList/track/image -&gt; create custom element</li>
	<li>/playlist/trackList/track/album -&gt; create custom element</li>
	<li>/playlist/trackList/track/trackNum -&gt; create custom element</li>
	<li>/playlist/trackList/track/duration -&gt; create custom element</li>
	<li>/playlist/trackList/track/link -&gt; No need in RSS</li>
	<li>/playlist/trackList/track/meta -&gt; No need in RSS</li>
	<li>/playlist/trackList/track/extension -&gt; No need in RSS</li>
</ul>
Again, pretty close match. As you can see, the majority of the XSPF&nbsp;elements have a direct equivalent on the RSS side. Certainly, the most important elements (playlist title, list of tracks, track location) have a direct equivalent. For the remaining XSPF elements that have no RSS equivalent, you could easily extend RSS to support those elements. In fact, you can easily encode the <a href="http://www.xspf.org/xspf-v1.html#rfc.section.1.1">sample playlists</a> from the XSPF spec in RSS without any extensions whatsoever:
<pre class="brush:xml">&lt;rss version="2.0"&gt;
  &lt;channel&gt;
    &lt;title&gt;My Playlist&lt;/title&gt;
    &lt;link&gt;http://devhawk.net/playlists/myplaylist&lt;/link&gt;
    &lt;description&gt;Here's my playlist&lt;/description&gt;
    &lt;item&gt;
        &lt;enclosure length="..." type="audio/mpeg" url="http://example.com/song_1.mp3"/&gt;
    &lt;/item&gt;
    &lt;item&gt;
        &lt;enclosure length="..." type="audio/mpeg" url="http://example.com/song_2.mp3"/&gt;
    &lt;/item&gt;
    &lt;item&gt;
        &lt;enclosure length="..." type="audio/mpeg" url=http://example.com/song_3.mp3/&gt;
    &lt;/item&gt;
  &lt;/channel&gt;
&lt;/rss&gt;</pre>
So you may be wondering why I'm taken so much time on this topic. Frankly, I don't really care one way or the other about XPSF. As I wrote in my last post, I'm just trying to understand this space better. The reason this specific example interests me is because it is so obviously a duplication of effort with little discernable upside. And furthermore it's <a href="http://blog.broadbandmechanics.com/2006/02/rob-lord-replies-correctly-songbird-will-support-xspf">being touted by Marc Canter</a> who I know is <a href="http://www.broadbandmechanics.com/openstandards.htm">all about open standards</a>. Why is the XSPF open standard better than the RSS open standard? Or Atom for that matter? Atom's creators <a href="http://www.atomenabled.org/developers/syndication/">explicitly describe</a> Atom's syndication format as "an XML-based Web content and metadata syndication format". How is XSPF different from that, other than narrowing the scope down to multimedia content and metadata? What's the value of the narrow scope specification when the wider scope specification is so widely adopted?

As you might guess, my opinion is that the narrow scope specification has no value. I assume that's why Lucas responded so negatively. But the root issue doesn't go away. XSPF&nbsp;and RSS both describe lists of stuff. XSPF is specific to lists of media while RSS is typically used for lists of weblog entries but can be used for lists of anything - including media. What's a podcast feed but an RSS encoded playlist?

The problem is that by introduced yet another syntax for basically the same semantics, XSPF can't take advantage of the existing tools and platforms around RSS. And I'm not just talking about the <a href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/feedsapi/rss/overviews/msfeeds_ovw.asp">Windows Feed API</a>, I'm talking about every implementation of RSS on every website and in every news reader or podcatcher around. Why wouldn't you want to ride that wave?]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>695</wp:post_id>
		<wp:post_date>2006-02-16 15:31:28</wp:post_date>
		<wp:post_date_gmt>2006-02-16 15:31:28</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>redundant-specifications</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="architecture"><![CDATA[Architecture]]></category>
		<category domain="post_tag" nicename="web-2-0"><![CDATA[Web 2.0]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[93a0f86c-28e8-40dc-a5ef-8b9a99f79f46]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Redundant+Specifications]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2006/02/16/Redundant+Specifications]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>enclosure</wp:meta_key>
			<wp:meta_value><![CDATA[http://example.com/song_1.mp3
1635
audio/mpeg
]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>enclosure</wp:meta_key>
			<wp:meta_value><![CDATA[http://example.com/song_2.mp3
39
audio/mpeg
]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>First T-Shirt Sale</title>
		<link>http://devhawk.net/2006/02/17/first-t-shirt-sale/</link>
		<pubDate>Fri, 17 Feb 2006 13:34:48 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://9b14227c-0afc-4cf5-b0f6-0c7eace41ea2</guid>
		<description></description>
		<content:encoded><![CDATA[<p>So I've already sold two of my <a href="http://www.zazzle.com/harrypierson*">new t-shirts</a>. Not quite enough to retire on, but it's a start! :)</p><p>If nothing else, this has helped me realize just how popular Zazzle is. As I type this, my shirts are on page 20 of Zazzle's <a href="http://www.zazzle.com/products/gallery/browse_results.asp?general_product_type=235">most recent shirt list</a>. That's 304 new shirt designs since yesterday. That's pretty impressive. </p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>696</wp:post_id>
		<wp:post_date>2006-02-17 13:34:48</wp:post_date>
		<wp:post_date_gmt>2006-02-17 13:34:48</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>first-t-shirt-sale</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<category domain="post_tag" nicename="web-2-0"><![CDATA[Web 2.0]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[9b14227c-0afc-4cf5-b0f6-0c7eace41ea2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[First+TShirt+Sale]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2006/02/17/First+TShirt+Sale]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>2908</wp:comment_id>
			<wp:comment_author><![CDATA[orcmid]]></wp:comment_author>
			<wp:comment_author_email>dennis.hamilton@acm.org</wp:comment_author_email>
			<wp:comment_author_url>http://nfocentrale.net/orcmid/blog/</wp:comment_author_url>
			<wp:comment_author_IP>216.160.65.145</wp:comment_author_IP>
			<wp:comment_date>2006-02-17 14:21:21</wp:comment_date>
			<wp:comment_date_gmt>2006-02-17 22:21:21</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[No, actually it shows how popular your blog and RSS feed are [;<).  I got them in dark blue.  One is as a gift for a colleague.

And I'm a firm believer that code is rarely the model.  Heh.  I'm much more aligned with your dad on "What Is a Model?"]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>2909</wp:comment_id>
			<wp:comment_author><![CDATA[DevHawk]]></wp:comment_author>
			<wp:comment_author_email>harry@devhawk.net</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>67.183.15.9</wp:comment_author_IP>
			<wp:comment_date>2006-02-17 18:20:24</wp:comment_date>
			<wp:comment_date_gmt>2006-02-18 02:20:24</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Nice of you to say! Maybe something related to modeling should be my next shirt. :)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>2910</wp:comment_id>
			<wp:comment_author><![CDATA[orcmid]]></wp:comment_author>
			<wp:comment_author_email>dennis.hamilton@acm.org</wp:comment_author_email>
			<wp:comment_author_url>http://nfocentrale.net/orcmid/blog/</wp:comment_author_url>
			<wp:comment_author_IP>216.160.65.145</wp:comment_author_IP>
			<wp:comment_date>2006-02-17 19:04:41</wp:comment_date>
			<wp:comment_date_gmt>2006-02-18 03:04:41</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I like your new site design too.  Although when I come to the comments page I get a "Caution: This website contains suspicious content" banner from the Phishing Filter."  

So, I just retrieved an e-mail from DHL Express confirming that the shirts were shipped today with estimated delivery of Tuesday (assuming the Menlo Park pickup came off as planned).

Hmm, modeling on a T-shirt.  I suppose so.  I was given one like that as a going-away present (in 1992 on taking a transfer to another organization) that has a printing-system architecture printed on it.  

Modeling.  That would be interesting. Now you've got me wondering what T-shirt I would want to wear at OOPSLA this year.  Hmm.  I need to do one that bridges between "What Computers Know" and "What Programmers Know," perhaps.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>2911</wp:comment_id>
			<wp:comment_author><![CDATA[orcmid]]></wp:comment_author>
			<wp:comment_author_email>dennis.hamilton@acm.org</wp:comment_author_email>
			<wp:comment_author_url>http://nfocentrale.net/orcmid/blog/</wp:comment_author_url>
			<wp:comment_author_IP>216.160.65.145</wp:comment_author_IP>
			<wp:comment_date>2006-02-21 07:47:57</wp:comment_date>
			<wp:comment_date_gmt>2006-02-21 15:47:57</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Well, I found the T-Shirt delivery on my front porch as I was leaving to go to the SEASPIN meeting and David Anderson's presentation on the MSF Agile CMMI approach.  I was afraid of missing the bus, so I didn't wear it.  That would have been fun.

The cool thing is that the T-shirt shipped earlier than their promise and arrived a day earlier than the expected delivery as well.  It would be interesting to see how Zazzle works their just-in-time and delight the customer process so beautifully.

I'm still thinking about the model case for a T-shirt, and David's talk reminded me that I already have a design that would make for an interesting T-shirt at http://nfocentrale.net/TROST/info/2005/06/i050601.htm]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>2912</wp:comment_id>
			<wp:comment_author><![CDATA[DevHawk]]></wp:comment_author>
			<wp:comment_author_email>harry@devhawk.net</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>12.108.168.215</wp:comment_author_IP>
			<wp:comment_date>2006-02-21 08:14:51</wp:comment_date>
			<wp:comment_date_gmt>2006-02-21 16:14:51</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[That's a cool symbol. And it's a great use for Zazzle - to promote something. That and humorous comments.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Off to Mashup Camp</title>
		<link>http://devhawk.net/2006/02/19/off-to-mashup-camp/</link>
		<pubDate>Sun, 19 Feb 2006 20:42:42 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://28c37ebc-e7ad-4f0b-88b2-2f875ed0f506</guid>
		<description></description>
		<content:encoded><![CDATA[<p>In direct contrast with my <a href="http://devhawk.net/2006/02/03/No+Go+On+Developer+20.aspx">last trip to the Bay Area</a>, this one is going well so far. I'm in Mountain View for <a href="http://mashupcamp.com/">Mashup Camp</a>. The flight down was actually early and nearly empty - I had my side of the bulkhead row to myself. On the other side of the aisle was <a href="http://spaces.msn.com/biggs/blog/">Todd Biggs</a> from MSN, who was the one who <a href="http://forums.microsoft.com/MSDN/ShowPost.aspx?PostID=228548&amp;SiteID=1http://forums.microsoft.com/MSDN/ShowPost.aspx?PostID=228548&amp;SiteID=1">announced the availability</a> of <a href="https://buddyscript.conversagent.com/msnoffer.html">free tools</a> for building IM bots and <a href="http://msdn.microsoft.com/library/en-us/messengerp2p/introduction.asp">MSN Messenger Activities</a> with <a href="http://www.conversagent.com/">Conversagent</a>. Long time readers of this blog might remember that I've been involved with <a href="http://devhawk.net/prj_messenger.aspx">programming to MSN Messenger</a> in the past, so it was great to spend some time with someone from the product (service?) team.</p><p>To top it off, Avis was out of normal cars, so I ended up with a red convertible Mustang. Yes, I can hear your pity coming my way now.</p><p>Of course, no trip is all early arrivals and convertibles. As my wife wrote a week ago, ours is the <a href="http://spaces.msn.com/techiewife/blog/cns!3DAECC033B88329C!158.entry">House of Plague</a>. Everyone back home is still sick to some degree. And to top it off, today is Patrick's birthday. We had his party yesterday morning, so really the celebration was all weekend, but it's hard enough to be gone much less when my boy is turning three. </p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>697</wp:post_id>
		<wp:post_date>2006-02-19 20:42:42</wp:post_date>
		<wp:post_date_gmt>2006-02-19 20:42:42</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>off-to-mashup-camp</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[28c37ebc-e7ad-4f0b-88b2-2f875ed0f506]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Off+To+Mashup+Camp]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2006/02/20/Off+To+Mashup+Camp]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Thoughts from Mashup Camp Day 1</title>
		<link>http://devhawk.net/2006/02/20/thoughts-from-mashup-camp-day-1/</link>
		<pubDate>Mon, 20 Feb 2006 23:12:28 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://17ba7fac-8599-4b71-8aa8-995045f8b4f8</guid>
		<description></description>
		<content:encoded><![CDATA[<p>I don’t sleep well on the road so I’m exhausted. I’m going to post a couple of quick thoughts and then hit the sack. </p><ul><li>It was great to see <a href="http://c2.com/cgi/wiki?WardCunningham">Ward</a>. When he got up to suggest a session topic he got a round of applause. 
</li><li>I went to the morning session on <a href="http://www.mashupcamp.com/index.cgi?BusinessModelsInMashups">Business Models for Mashups</a>. Most interesting to me was the number of mashup developers not looking for funding. Either they don’t care much (it’s a hobby) or they think they can succeed w/o the extra cash. Otherwise, the session was lots of questions and not many answers. 
</li><li>I spent lunch hanging out with <a href="http://www.yoz.com/">Yoz</a> from <a href="http://www.ning.com/">Ning</a>. Ning is fascinating. Not sure I understand the business model (I think it’s ad-funded, but there aren’t many ads) but it’s definitely something I need to look into further. 
</li><li>Session after lunch was on <a href="http://www.microsoftgadgets.com/">gadgets</a>, <a href="http://widgets.yahoo.com/">widgets</a> and <a href="http://www.google.com/apis/homepage/">modules</a>. Interesting to see the major differences in each of the approaches. <a href="http://spaces.msn.com/siteexperts">Scott Isaacs</a> made some interesting points about the lack of an application model in the browser. But several folks seemed to imply that a web based application hitting a local web server was a good approach to offline apps. Why wouldn’t you just build a smart client app? The productivity of Windows Forms blows AJAX away (for now). 
</li><li>I wanted to see <a href="http://www.lessig.org/">Lawrence Lessig’s</a> session on Creative Commons, but the room was too crowded. Similar problem to the Business Models for Mashups session, but even more so. I went and read email. 
</li><li>Last session was about architecture patterns for AJAX applications, hosted by Scott Isaacs. It was more of a presentation than a discussion, but very interesting. 
</li><li>Evening reception was sponsored by Yahoo! They had a cool ice sculpture and branded drinks – Yahootinis – with <a href="http://www.litecubes.com/">litecubes</a> in them. My son Patrick is going to love these. 
</li><li>I got to meet <a href="http://www.ebizq.net/blogs/column2/">Sandy Kemsley</a>, who is friends with my friend <a href="http://www.blahgkarma.com/wp/">Chris Church</a> who helped me get into Mashup Camp. I was instructed to buy Sandy a drink or three, but Yahoo! sprung for an open bar, so there was no buying. But we did have an interesting chat about workflow, business process and Office as a platform. </li></ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>698</wp:post_id>
		<wp:post_date>2006-02-20 23:12:28</wp:post_date>
		<wp:post_date_gmt>2006-02-20 23:12:28</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>thoughts-from-mashup-camp-day-1</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<category domain="post_tag" nicename="web-2-0"><![CDATA[Web 2.0]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[17ba7fac-8599-4b71-8aa8-995045f8b4f8]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Thoughts+From+Mashup+Camp+Day+1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2006/02/21/Thoughts+From+Mashup+Camp+Day+1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Thoughts on Mashup Camp Day 2</title>
		<link>http://devhawk.net/2006/02/22/thoughts-on-mashup-camp-day-2/</link>
		<pubDate>Wed, 22 Feb 2006 17:42:36 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://8bb83d3f-78a5-41eb-8112-f080d611d9b0</guid>
		<description></description>
		<content:encoded><![CDATA[<p>I was able to catch an earlier flight home last night (which was itself delayed, but still got me home an hour and a half earlier than expected). Combined with the work that piled up while I was gone and I haven't gotten around to the rest of my thoughts on Mashup Camp. Until now...</p><ul><li>This should have been in the <a href="http://devhawk.net/2006/02/21/Thoughts+From+Mashup+Camp+Day+1.aspx">day one update</a>, but we had a great presentation Monday night on the History of Computer Marketing. Very interesting and very entertaining. </li><li>It was good to see <a href="http://blog.broadbandmechanics.com/2006/02/making-the-scene-at-mashup-camp">Marc Canter</a>.</li><li>There were fewer sessions on Tuesday because a significant amount of time was taken up on "speed geeking". Supposedly similar to speed dating, but with mashup demos instead of dates. In actuality, it was more like demo anarchy with loud annoying buzzing. </li><li>I spent a significant time with the folks from <a href="http://www.bungeelabs.com/">Bungee Labs</a> (no relation to the <a href="http://www.bungie.net/">makers of Halo</a>). Like Ning, they are a web / mashup development site. However, where Ning appears to be going after the hobbyist, Bungee Labs is going after the enterprise. They had a cool demo of a SalesForce.com &amp; Exchange mashup with maps. </li><li>I was very impressed with <a href="http://www.weatherbonk.com/">WeatherBonk</a>. In particular, the way they overlay the map with radar and fog information. They also make <a href="http://www.skibonk.com/">SkiBonk</a>.</li><li>I sat in on the <a href="http://www.mashupcamp.com/index.cgi?HAtomFinalization">Microformats Specification Work</a> session, but didn't get much out of it as it was a face-to-face meeting of core microformats folks rather than the "What are <a href="http://www.mashupcamp.com/index.cgi?MicroFormats">Microformats" session</a> that I didn't make the first day (conflict with <a href="http://www.mashupcamp.com/index.cgi?MonetizationBizModels">Mashup Business Model session</a>) </li><li>There was a session on Firefox futures, but it was lame. You can get more from just reading the <a href="http://wiki.mozilla.org/Firefox:2.0_Product_Planning">Firefox 2 product planning</a> wiki page. Interestingly enough, if you look at their <a href="http://wiki.mozilla.org/Firefox2/Features">list of features</a> for Firefox 2, only one is of any use to the web developer: In-line Spell Check. Everything else improves the chrome. Their priority one features are: <a href="http://wiki.mozilla.org/Places">new bookmark and history system</a>, <a href="http://wiki.mozilla.org/Tabbed_Browsing">tabbed browsing UI improvements</a>, extension manager enhancements, <a href="http://wiki.mozilla.org/Search_Service">search engine UI improvements</a>, and an update to the  browser appearance. As I wrote in <a href="http://devhawk.net/2006/02/03/Browser+As+Virtual+Machine.aspx">Browser as VM</a>, we've reached an inertia point where it's hard for a browser vendor to add new proprietary capabilities that only work on their browser. Same goes for Microsoft - read the <a href="http://www.microsoft.com/downloads/details.aspx?FamilyId=B2AC8F30-2D88-45B6-90AE-ED266161F463&amp;displaylang=en">IE7 Technology Overview</a> and while there is great work on things like security and the RSS platform, there are no new web developer feature, just bug fixes, better standards support and a native XmlHttpRequest object. I wonder what it's going to take to get new capabilities added to arguably the most important virtual machine platform in the world.</li><li><a href="http://podbop.org/">Podbop</a> won the mashup contest. <a href="http://www.chicagocrime.org/">Chicago Crime</a> came in second. Frankly, I was much more impressed with Chicago Crime.</li><li>As the winner of the mashup contest, the guy that wrote Podbop got a Sun server. Second prize was a new intel-based Mac. And ten third place finishers got copies of Visual Studio Pro. Given that none of the mashup content entrants were built on Microsoft technology, I'd be interested to know how excited the third place finishers were about getting a copy of VS.</li><li>I met a lot of great people at Mashup Camp (which is the primary reason I went) but above all I really got a lot out of hanging out with the MS folks who were there. We're such a big company that it's hard to keep abreast of what's going on, so this kind of face-to-face time is invaluable. </li></ul><p>That's it, at least until <a href="http://www.mashupcamp.com/index.cgi?MashupCamp2">Mashup Camp 2</a>.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>699</wp:post_id>
		<wp:post_date>2006-02-22 17:42:36</wp:post_date>
		<wp:post_date_gmt>2006-02-22 17:42:36</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>thoughts-on-mashup-camp-day-2</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<category domain="post_tag" nicename="web-2-0"><![CDATA[Web 2.0]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[8bb83d3f-78a5-41eb-8112-f080d611d9b0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Thoughts+On+Mashup+Camp+Day+2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2006/02/23/Thoughts+On+Mashup+Camp+Day+2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Tim&#039;s Wannabe Five</title>
		<link>http://devhawk.net/2006/02/23/tims-wannabe-five/</link>
		<pubDate>Thu, 23 Feb 2006 10:40:52 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://cf496d2a-4358-4922-9e50-a4f0c653ee59</guid>
		<description></description>
		<content:encoded><![CDATA[<p>I don't know how I missed this before, but <a href="http://www.tbray.org/ongoing">Tim Bray</a> blogged about <a href="http://www.tbray.org/ongoing/When/200x/2006/01/08/No-New-XML-Languages">not inventing XML languages</a> over a month ago. This comment is right on the money: "The value of a markup language is proportional approximately to the square of the number of different software implementations that can process it." Conceptually, I agree with him - my <a href="http://devhawk.net/2006/02/16/Redundant+Specifications.aspx">primary argument against XSPF</a> is that it has the same basic semantics as RSS, but RSS is much more widely used. But his list of the "big five" markup lanugages seems more like the "wannabe five". How many different siftware implementations process any of the things on his list? </p><p>I'm not arguing the technical quality of these lanugages - frankly I'm not that familiar with any of them but Atom. But if you're arguing the network effect, none of these formats Tim lists qualify. I'm sure he <em>wants</em> them to be popular, but wishing doesn't make it so.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>700</wp:post_id>
		<wp:post_date>2006-02-23 10:40:52</wp:post_date>
		<wp:post_date_gmt>2006-02-23 10:40:52</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>tims-wannabe-five</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="architecture"><![CDATA[Architecture]]></category>
		<category domain="post_tag" nicename="web-2-0"><![CDATA[Web 2.0]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[cf496d2a-4358-4922-9e50-a4f0c653ee59]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Tims+Wannabe+Five]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2006/02/23/Tims+Wannabe+Five]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>ASP.NET Trust Levels</title>
		<link>http://devhawk.net/2006/02/23/asp-net-trust-levels/</link>
		<pubDate>Thu, 23 Feb 2006 18:27:39 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://04804785-fe5f-40c1-83b5-7d1c1c50d3c5</guid>
		<description></description>
		<content:encoded><![CDATA[<p>For reasons to be named later, I'm experimenting with the various trust levels of ASP.NET. While "most things" work fine when you ratchet down the security, if finding that the things that break aren't well documented. For example, at anything other than Full Trust you can't use the Response.OutputStream.Write() method to write binary information to the response buffer. So that means that using <a href="http://devhawk.net/art_imagehandler.aspx">ASHX Handlers for images</a> doesn't work. That means that, among others, the <a href="http://msdn.microsoft.com/vstudio/express/vwd/starterkit/#personal">Personal Web Site starter kit</a> breaks on any photo related features.</p><p>Also, does anyone know what happened to <a href="http://msdn2.microsoft.com/en-us/library/06251f13.aspx">permview</a> in .NET 2.0?</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>701</wp:post_id>
		<wp:post_date>2006-02-23 18:27:39</wp:post_date>
		<wp:post_date_gmt>2006-02-23 18:27:39</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>asp-net-trust-levels</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="development"><![CDATA[Development]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[04804785-fe5f-40c1-83b5-7d1c1c50d3c5]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[ASPNET+Trust+Levels]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2006/02/24/ASPNET+Trust+Levels]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Partisan Hackery</title>
		<link>http://devhawk.net/2006/02/24/partisan-hackery/</link>
		<pubDate>Fri, 24 Feb 2006 10:26:11 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://14073e54-4bae-4c0a-9f97-c60ca4ecf4b1</guid>
		<description></description>
		<content:encoded><![CDATA[<p>A few people <a href="http://devhawk.net/CommentView,guid,1a9e0102-c263-4226-b1cb-e076c94cf6bc.aspx">took issue</a> with me calling <a href="http://devhawk.net/2006/02/12/Dennis+Miller+Has+Jumped+The+Shark.aspx">Dennis Miller a partisan hack</a> while also expressing relief that the new season of <a href="http://www.hbo.com/billmaher">Real Time with Bill Maher</a> was starting. I finally got to watch <a href="http://www.hbo.com/billmaher/episode/2006_02_17_ep67.html">last Friday's episode</a>. Sure, they made fun of Dick Cheney's hunting accident and had a round of negative things to say about this administrations handling of Iraq (one of the guests was <a href="http://www.whitehouse.gov/government/senor-bio.html">Dan Senor</a>, Advisor to the U.S. Presidential Envoy in Iraq) but he also grilled Democratic <a href="http://www.russfeingold.org/">Senator Russ Feingold</a> on the effectiveness of <a href="http://www.russfeingold.org/cfr.php">campain finance reform</a> and came out as pro-wiretapping:</p><blockquote dir="ltr" style="MARGIN-RIGHT: 0px"><p>[I]f they need to listen to keep a dirty bomb from going off in Long Beach, then I say, "Listen away." </p><p>&lt;snip&gt;</p><p>Oh, please, Americans don't want privacy. They want attention! They'll put a camera in their shower and show it on the Internet! To get on television, they'll marry strangers and eat a cow's rectum, and ice dance with Todd Bridges. They're trying to get on a show called "Big Brother"! <br /><br />We are a nation of exhibitionists from "me" to shining "me." And what we really fear isn't that someone's listening; it's that no one's listening. This whole country is one big desperate cry for somebody to listen to "listen to me, photograph me, Google me, read my blog! Read my diary; read my memoir. It's not interesting enough? I'll make shit up!" </p><p>&lt;snip&gt;</p><p>I tell you, this country gave the finger to privacy a long time ago.</p><p>[<a href="http://www.hbo.com/billmaher/new_rules/20060217.html">Bill Maher's New Rules for 2/17/2006</a>]</p></blockquote><p dir="ltr">Seems like quite a difference to Dennis Miller calling out John Kerry and Howard Dean a year after the election and having nothing at all negative to say about the Bush administration.</p><p dir="ltr">Out of curiosity, I'm wondering what people think of Jon Stewart of <a href="http://www.comedycentral.com/shows/the_daily_show/index.jhtml">The Daily Show</a> fame. Partisan Hack or Not?</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>702</wp:post_id>
		<wp:post_date>2006-02-24 10:26:11</wp:post_date>
		<wp:post_date_gmt>2006-02-24 10:26:11</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>partisan-hackery</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="politics"><![CDATA[Politics]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[14073e54-4bae-4c0a-9f97-c60ca4ecf4b1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Partisan+Hackery]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2006/02/24/Partisan+Hackery]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Experimenting with Ning</title>
		<link>http://devhawk.net/2006/02/27/experimenting-with-ning/</link>
		<pubDate>Mon, 27 Feb 2006 15:54:47 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://ae4a9726-d96d-476c-963c-16c4ef6791f7</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Last week at Mashup Camp, <a href="http://cheerleader.yoz.com">Yoz</a> showed me <a href="http://www.ning.com/">Ning</a>. I had heard about Ning, Ning is a social software enabler...I guess enabler is the best word...with a fascinating approach to building software. Well, getting started building software at any rate. While they provide other more basic functions like hosting, Ning provides the ability to clone almost <a href="http://browse.ning.com/application/any">all of the apps</a> running on their site (over 6500 as I write this). When you clone an app, Ning makes a copy of all the files from that app on your own domain (typically appname.ning.com, though you can pay to have your own domain name). They also provide a set of <a href="http://www.ning.com/?view=xapps">basic starter apps</a> that you can clone to get started.</p><p>I decided to try it myself. Behold <a href="http://partisanhacks.ning.com/">Partisan Hacks</a>. </p><p>Partisan Hacks is a clone of Ning's <a href="http://doirock.ning.com/">Do I Rock?</a> starter app, which is itself basically a copy of <a href="http://www.hotornot.com/">Hot or Not</a>. The difference is that you rate how big a partisan hack the individuals are. As I wrote for the About page, I was basically inspired by <a href="http://en.wikipedia.org/wiki/Jon_Stewart">Jon Stewart's</a> now <a href="http://www.ifilm.com/ifilmdetail/2652831">famous appearance</a> on the now cancelled <a href="http://en.wikipedia.org/wiki/Crossfire_(TV_series)">CNN Crossfire</a>. Of course, I've been <a href="http://devhawk.net/2006/02/12/Dennis+Miller+Has+Jumped+The+Shark.aspx">throwing the term around</a> myself a bit lately, hence the reason why the topic was top of mind for me. </p><p>From a technical perspective, I added two features to the basic Do I Rock template code. First, I modified the detail page to include a link to Wikipedia as well as to pull in search results from MSN. Second, I added an RSS feed to the <a href="http://partisanhacks.ning.com/list.php?sort=winner">most partisan</a>, <a href="http://partisanhacks.ning.com/list.php?sort=loser">least partisan</a> and <a href="http://partisanhacks.ning.com/list.php?sort=new">newest additions</a> to the site. I'd never used PHP before, so it took me a bit longer that I would have expected to make the changes, but still it only took me a couple hours to make those as well as other minor cosmetic changes to the site. </p><p>While hacking PHP was somewhat tedious (back to my ASP days of the mid 90's), one area that is both compelling and productive is the <a href="http://documentation.ning.com/sections/basics.php#contentstore">Ning Content Store</a>. It's the shared database on the back end of any Ning application. I didn't really make any changes to my content, but it appears to dead simple to add new info to content objects. I was thinking about how I would build this app w/ ASP.NET, and realized that having to build a custom database would offset most of the productivity I would gain from using ASP.NET instead of PHP. According to <a href="http://documentation.ning.com/sections/roadmap.php">Ning's Roadmap</a>, they'll be bringing <a href="http://www.ruby-lang.org/en/">Ruby</a> and <a href="http://www.rubyonrails.com/">Rails</a> support online soon. I'll have to see how much better an experience that is than their current PHP based approach.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>703</wp:post_id>
		<wp:post_date>2006-02-27 15:54:47</wp:post_date>
		<wp:post_date_gmt>2006-02-27 15:54:47</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>experimenting-with-ning</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<category domain="post_tag" nicename="web-2-0"><![CDATA[Web 2.0]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[ae4a9726-d96d-476c-963c-16c4ef6791f7]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Experimenting+With+Ning]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2006/02/27/Experimenting+With+Ning]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Arcitecture Help Shirts Arrived</title>
		<link>http://devhawk.net/2006/02/27/arcitecture-help-shirts-arrived/</link>
		<pubDate>Mon, 27 Feb 2006 16:02:45 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://dcd484fe-3f66-46a7-ab11-7502780d6622</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Last week, I ordered a couple of <a href="http://devhawk.net/2006/02/16/Introducting+DevHawk+Designs.aspx">my shirts from Zazzle</a> and they arrived over the weekend. I got one each black and white and I wore the black one to work today. I'm pretty impressed with the quality of the shirts and the printing job. </p><p>Of course the coolest part was being asked where I got the shirt and being able to reply "I made it". </p><p>BTW, I met a couple of folks from Zazzle at Mashup Camp. They told me about a couple things working that I'm not sure are public yet which is why I left them out of my daily roundups. They told me the <a href="http://devhawk.net/2006/02/17/First+TShirt+Sale.aspx">304 shirts</a> was actually a kinda slow day. </p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>704</wp:post_id>
		<wp:post_date>2006-02-27 16:02:45</wp:post_date>
		<wp:post_date_gmt>2006-02-27 16:02:45</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>arcitecture-help-shirts-arrived</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<category domain="post_tag" nicename="web-2-0"><![CDATA[Web 2.0]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[dcd484fe-3f66-46a7-ab11-7502780d6622]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Arcitecture+Help+Shirts+Arrived]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2006/02/28/Arcitecture+Help+Shirts+Arrived]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>SPARK Weblog</title>
		<link>http://devhawk.net/2006/03/01/spark-weblog/</link>
		<pubDate>Wed, 01 Mar 2006 10:40:32 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://72ec9be0-f50b-4c31-aa44-f438d7881ba0</guid>
		<description></description>
		<content:encoded><![CDATA[<p>In preperation for SPARK later this month, we (i.e. the Architecture Strategy Team) has set up a <a href="http://sparklasvegas.wordpress.com/">SPARK Blog</a>. So far it's mostly links to a <a href="http://www.blogjava.net/hopeshared/archive/2006/02/13/30447.html">few</a><a href="http://www.25hoursaday.com/weblog/PermaLink.aspx?guid=645ab6fc-6211-4209-adb2-7561153656c7">people</a><a href="http://blogs.zdnet.com/Hinchcliffe/?p=5">talking</a> about SPARK, but it's also appears to be an opportunity to use the work "SPARK" whenever possible, such as "<a href="http://sparklasvegas.wordpress.com/2006/02/27/sparks-fly/">SPARKs Fly</a>". </p><p>I'm just waiting for someone to blog about SPARKitecture. :)</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>705</wp:post_id>
		<wp:post_date>2006-03-01 10:40:32</wp:post_date>
		<wp:post_date_gmt>2006-03-01 10:40:32</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>spark-weblog</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="architecture"><![CDATA[Architecture]]></category>
		<category domain="post_tag" nicename="web-2-0"><![CDATA[Web 2.0]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[72ec9be0-f50b-4c31-aa44-f438d7881ba0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[SPARK+Weblog]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2006/03/01/SPARK+Weblog]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>2325</wp:comment_id>
			<wp:comment_author><![CDATA[lb]]></wp:comment_author>
			<wp:comment_author_email>leonNOSPAMbambrick@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://secretGeek.net</wp:comment_author_url>
			<wp:comment_author_IP>203.213.7.133</wp:comment_author_IP>
			<wp:comment_date>2006-03-07 14:31:01</wp:comment_date>
			<wp:comment_date_gmt>2006-03-07 22:31:01</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[>I'm just waiting for someone to blog about SPARKitecture. :)

hang about... i think you just did!

]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>2326</wp:comment_id>
			<wp:comment_author><![CDATA[DevHawk]]></wp:comment_author>
			<wp:comment_author_email>harry@devhawk.net</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>67.111.116.10</wp:comment_author_IP>
			<wp:comment_date>2006-03-07 23:33:19</wp:comment_date>
			<wp:comment_date_gmt>2006-03-08 07:33:19</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[:)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Off to Emerging Tech</title>
		<link>http://devhawk.net/2006/03/06/off-to-emerging-tech/</link>
		<pubDate>Mon, 06 Mar 2006 18:42:40 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://0f50f506-4416-4da4-b023-9262363f107e</guid>
		<description></description>
		<content:encoded><![CDATA[<p>I flew down to San Diego for the <a href="http://conferences.oreillynet.com/cs/et2006">Emerging Technology Conference</a> today. I'm here thru Thursday which is the longest I've been gone from home since TechEd last year. And I'm only home eight days before heading off to SPARK and MIX for an even longer trip. Well, the SPARK/MIX trip is just one day longer than ETech. But a day can seem like an eternity to my three year old son who was predicting "Daddy come home in one minute" as I was pulling out of the driveway.</p><p>I skipped the <a href="http://conferences.oreillynet.com/pub/w/43/tutorials.html">pre-confernece tutorials</a>, though several looked interesting. I'm really looking forward to hearing <a href="http://conferences.oreillynet.com/cs/et2006/view/e_sess/8466">Bruce Sterling</a> speak tonight.</p><p>And for those keeping track of my travel shenanigans with Alaska Airlines, no problems with the flight today. Apparently they only screw up when I'm in a hurry. And even better news is that I've re-earned my MVP status. I used to fly with them all the time, but then with the new role and new baby I just didn't fly much last year. But they had some "quick earning" program that let me re-earn my status. They even gave me MVP status for the flight today, so I got to sit in first class. Crowded flight too, so it was nice. Of course, in what has become true Alaska Air style, I had to wait on hold and deal with a subordanant flunky for twenty minutes before I could talk to a supervisor who could get me registered into the quick MVP program, but it turned out OK so I guess I shouldn't complain.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>706</wp:post_id>
		<wp:post_date>2006-03-06 18:42:40</wp:post_date>
		<wp:post_date_gmt>2006-03-06 18:42:40</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>off-to-emerging-tech</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="etech"><![CDATA[ETech]]></category>
		<category domain="post_tag" nicename="travel"><![CDATA[Travel]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<category domain="post_tag" nicename="web-2-0"><![CDATA[Web 2.0]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[0f50f506-4416-4da4-b023-9262363f107e]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Off+To+Emerging+Tech]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2006/03/07/Off+To+Emerging+Tech]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Assorted Remaining ETech Day Two Keynotes &amp; Sessions</title>
		<link>http://devhawk.net/2006/03/08/assorted-remaining-etech-day-two-keynotes-sessions/</link>
		<pubDate>Wed, 08 Mar 2006 00:08:14 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://be7f5439-3202-42f0-95ee-83765d72fcf2</guid>
		<description></description>
		<content:encoded><![CDATA[<p><strong><u>Jeff Han on Multi-Touch Interfaces <br /></u></strong>This was a cool demo, but was basically a live version of the <a href="http://mrl.nyu.edu/~jhan/ftirtouch/">associated video</a> that made the rounds on the web a few weeks ago. There’s huge potential here, but he kept doing the same zoom in and out demo over an over. Can’t wait to see practical availability of this type of device.</p><p><strong><u>Cory Ondrejka on Second Life<br /></u></strong>I’d heard of <a href="http://secondlife.com">Second Life</a> before, but I had never really seen it before today. Wow. I hacked around with <a href="http://en.wikipedia.org/wiki/MUSH">MUSHes</a> back in college, so it was a little familiar. But I didn’t realize there were people <a href="http://www.wired.com/news/technology/0,70153-0.html">making real livings</a> in Second Life. Who knew you could make $150k a year <a href="http://www.anshechung.com/">prospecting virtual real estate</a>? Cory only had 15 minutes to talk, so we only got a taste of Second Life. He’s got a full session tomorrow, so I’ll post more then.</p><p><strong><u>Linda Stone on Attention, the “Real” Aphrodisiac<br /></u></strong>Unlike the other talks on attention, this one didn’t try and frame it as an economy, so that’s a good start. Linda talked about this state of “constant partial attention” that we’re all pretty much in all the time these days. Her meta point is to value technology based on how it improves the quality of your life – which of course most technology doesn’t do today. She also had a great quote: “Email is an attention chipper shredder. Think <a href="http://www.imdb.com/title/tt0116282/">Fargo</a>”. Heh.</p><p><strong><u>Mark Pilgrim on GreaseMonkey<br /></u></strong>Maybe I’ve been living under a rock, but I’ve never used <a href="http://greasemonkey.mozdev.org">GreaseMonkey</a> so I wanted to see what it was all about. Mark’s a great presenter, so it was a fun session though it wasn’t as much about GreaseMonkey as you might expect. Mark spent a significant amount of time on how to become an expert and when to write (while you’re still filled with wonder and before you become an expert). Great advice, but at best tangentially related to the topic at hand. He also spent a bunch of time on how they dealt with some security issues he discovered. That did lead to some discussion about how GreaseMonkey works with respect to sandboxing and the like. I guess I’ll just need to download it and play with it.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>707</wp:post_id>
		<wp:post_date>2006-03-08 00:08:14</wp:post_date>
		<wp:post_date_gmt>2006-03-08 00:08:14</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>assorted-remaining-etech-day-two-keynotes-sessions</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="etech"><![CDATA[ETech]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<category domain="post_tag" nicename="web-2-0"><![CDATA[Web 2.0]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[be7f5439-3202-42f0-95ee-83765d72fcf2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Assorted+Remaining+ETech+Day+Two+Keynotes+Sessions]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2006/03/08/Assorted+Remaining+ETech+Day+Two+Keynotes+Sessions]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Dick Hardt on Who is the Dick on My Site</title>
		<link>http://devhawk.net/2006/03/07/dick-hardt-on-who-is-the-dick-on-my-site/</link>
		<pubDate>Tue, 07 Mar 2006 23:55:32 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://c45aa876-fcbc-45fb-b6df-147f79b1e013</guid>
		<description></description>
		<content:encoded><![CDATA[<p>This is a sequel to Dick’s now-famous <a href="http://www.identity20.com/media/WEB2_2005/">Identity 2.0</a> talk. He’s definitely had an influence on this crowd – the two speakers after Dick used a similar presentation style. However, what I didn’t realize from watching the Identity 2.0 talk is that it’s much more effective on video than in the audience because he’s spending so much time looking at the screen (though that may be an artifact of a new presentation). </p><p>The other thing about this talk is that it’s basically a product pitch for <a href="http://www.sxip.com/sxip">SXIP 2.0</a>. That – for me anyway – was much less interesting than the more conceptual Identity 2.0 talk. However, I will be trying out the new SXIP stuff when I get back home next week.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>708</wp:post_id>
		<wp:post_date>2006-03-07 23:55:32</wp:post_date>
		<wp:post_date_gmt>2006-03-07 23:55:32</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>dick-hardt-on-who-is-the-dick-on-my-site</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="etech"><![CDATA[ETech]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<category domain="post_tag" nicename="web-2-0"><![CDATA[Web 2.0]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[c45aa876-fcbc-45fb-b6df-147f79b1e013]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Dick+Hardt+On+Who+Is+The+Dick+On+My+Site]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2006/03/08/Dick+Hardt+On+Who+Is+The+Dick+On+My+Site]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>ETech Day One</title>
		<link>http://devhawk.net/2006/03/07/etech-day-one/</link>
		<pubDate>Tue, 07 Mar 2006 20:31:45 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://49a936d6-e997-4edc-8bee-f958c024cbef</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Of course, I my copious notes are on my dead laptop, so this is all from memory. Granted, it was only yesterday and my memory isn't THAT bad (yet).</p><p><strong><u>Rael Dornfest on the Attention Economy</u><br /></strong>You know the old saying if you can't say something nice, don't say anything at all? The one thing I will say is that it felt like a sales pitch to come to the conference. Given that we we're already there, it seemed like an odd choice. I'll have more about Attention Economy with my post on today's sessions.</p><p><strong><u>Tim O'Reilly on O'Reilly Radar</u><br /></strong>Tim had (not surprisingly) a bunch of interesting things to talk about. Probably the most interesting was the stuff about <a href="http://radar.oreilly.com/archives/2006/03/bionic_software_1.html">Bionic Software</a> which Tim describes as a system "that combines the biological and mechanical systems to create an enhanced system that is more powerful than either alone." He described this as Intelligence Augmentation, instead of Artificial Intelligence. Bruce Sterling later talked about the importance of how things are named, and IA over AI is a great example of that. </p><p>However, Tim also went on at great length about the <a href="http://www.oreillynet.com/pub/a/oreilly/tim/articles/architecture_of_participation.html">architecture of participation</a> and <a href="http://www.oreillynet.com/pub/a/oreilly/tim/news/2005/09/30/what-is-web-20.html?page=2">harnessing collective intelligence</a>. He's given many examples of these, however I'm wondering if he's over generalizing based on a few success stories. Companies like Amazon and Ebay are successful because they're in the middle of financial transactions. Google's been able to monetize the long tail of search to an amazing degree, but the growth of that market is slowing and Google has been unable to significantly monetize any of their other efforts (so far, though I doubt that trend will continue). Sites like del.icio.us and Flickr are great, but I don't see evidence of a business plan outside of "get acquired". On the <a href="http://del.icio.us/about/info">del.icio.us about page</a>, it specifically says that del.icio.us started as a hobby. Granted, hosting costs these days are such that you can run a hobby site for nearly nothing and cover that cost with Google Ads. But as a business, if there's only a few business success stories, why place the importance on the crowd's wisdom?</p><p><strong><u>Bruce Sterling on The Internet of Things<br /></u></strong>I couldn't do this talk justice even with my notes, so here are a couple of things that stood out:</p><ul><li>The guy introducing Bruce was a little to lavish with his praise. It was actually a little creepy. Bruce even remarked on it. 
</li><li>I wish Bruce hadn't read so many quotes from other people. It was hard to follow when he was providing his own opinions or someone else's. He didn't use many slides (yeah!) and the ones he did use didn't have bullets (even better!) but when he's quoting someone else, I think it makes sense to put the words up on a slide. 
</li><li>He seemed to alternate between praising and disrespecting the crowd in the room. For example, he commented that "hype is an attention interrupt" which seems validate the work of many Web 2.0 companies even though so many people dismiss it as hype. However, he also made the comment that Web 2.0 was an effort by alpha geeks to wrest control of the web back. 
</li><li>The main thrust of his talk was about applying Internet concepts like sorting and searching to the real world by creating links between real-world items and virtual counterparts. So you would never lose your keys again because you could easily Google them. I need to pick up his latest book "Shaping Things" for the flight home - it's not like I'll be using my computer. </li></ul><p>Stick around, I'll be posting my thoughts on today's session a little later.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>709</wp:post_id>
		<wp:post_date>2006-03-07 20:31:45</wp:post_date>
		<wp:post_date_gmt>2006-03-07 20:31:45</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>etech-day-one</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="etech"><![CDATA[ETech]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<category domain="post_tag" nicename="web-2-0"><![CDATA[Web 2.0]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[49a936d6-e997-4edc-8bee-f958c024cbef]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[ETech+Day+One]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2006/03/08/ETech+Day+One]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>2327</wp:comment_id>
			<wp:comment_author><![CDATA[Norman]]></wp:comment_author>
			<wp:comment_author_email>norman@thinktone.com</wp:comment_author_email>
			<wp:comment_author_url>http://thinktone.wordpress.com</wp:comment_author_url>
			<wp:comment_author_IP>67.111.116.10</wp:comment_author_IP>
			<wp:comment_date>2006-03-07 22:21:28</wp:comment_date>
			<wp:comment_date_gmt>2006-03-08 06:21:28</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Borders in the Gaslamp area (about 4 blks from hotel) appears to have at least one copy of the Shaping Things book in stock.

I will admit a certain degree of disappointment in ETECH. It feels like a conference that is more impressed with itself than actually illuminating ideas for the attendees. The overall staging is pretty poor as well. Not free-for-all as an unconference but not nearly at the standards I would expect for the amount of money paid.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>ETech Day Two</title>
		<link>http://devhawk.net/2006/03/07/etech-day-two/</link>
		<pubDate>Tue, 07 Mar 2006 23:36:24 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://d566a6e3-5f51-49bc-910b-e2d8fd8f2496</guid>
		<description></description>
		<content:encoded><![CDATA[<p>So I ended up writing four and a half pages of thoughts on day two, so instead of one big-ass post, I'm going to break it up. Of course, I was distracted by the death of my laptop during the morning keynotes. Plus, any notes I have of the session up until the first break are on said dead laptop (I picked up a pad of paper to tide me over until the rental laptop showed up). So your quality may vary.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>710</wp:post_id>
		<wp:post_date>2006-03-07 23:36:24</wp:post_date>
		<wp:post_date_gmt>2006-03-07 23:36:24</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>etech-day-two</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="etech"><![CDATA[ETech]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<category domain="post_tag" nicename="web-2-0"><![CDATA[Web 2.0]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[d566a6e3-5f51-49bc-910b-e2d8fd8f2496]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[ETech+Day+Two]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2006/03/08/ETech+Day+Two]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Felipe Cabrera on Amazon&#039;s Mechanical Turk</title>
		<link>http://devhawk.net/2006/03/07/felipe-cabrera-on-amazons-mechanical-turk/</link>
		<pubDate>Tue, 07 Mar 2006 23:51:51 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://92db8d0d-cff5-40a6-b038-be1f1d251582</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Felipe’s a good guy (I knew him when he was at MSFT) but this session wasn’t anything exciting because it’s all old news. There are some things humans are better at than computers, typically things involving judgment such as “which is the best picture of this store?” Yes, I saw that when Amazon first released <a href="http://www.mturk.com">Mechanical Turk</a>.</p><p>They did have a partner on stage, a company called <a href="http://castingwords.com/">Casting Words</a> that offers podcast transcription services for 42 cents a minute. But how is that a business? I’m not sure what kind of percentage Casting Words is making out of that 42 cents a minute, but couldn’t I go directly to Mechanical Turk and ask for transcription services myself? There are no Casting Words tasks <a href="http://www.mturk.com/mturk/findhits">currently on the site</a> as I type this, but I imagine if I watch a while I'll see a Casting Words task. Then I could simply use a site like <a href="http://www.hit-builder.com/">HIT Builder</a> to farm out my own transcription tasks. What’s my incentive to use Casting Words at all? </p><p>Furthermore, there’s not really a business model behind Mechanical Turk itself. If Microsoft launched its own version, there would be plenty of takers for that work as well – the workers will gravitate to where the best paying and most interesting work they can do is. There’s no incentive to provide your artificial artificial intelligence services exclusively to one company. So Mechanical Turk wouldn’t work as a stand alone business. But as a feature of Amazon it works great. In fact, when the service first launched the only tasks came from <a href="http://a9.com">A9</a>. I’m guessing it would be worth it to Amazon to run the service even if they were the only ones using it.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>711</wp:post_id>
		<wp:post_date>2006-03-07 23:51:51</wp:post_date>
		<wp:post_date_gmt>2006-03-07 23:51:51</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>felipe-cabrera-on-amazons-mechanical-turk</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="architecture"><![CDATA[Architecture]]></category>
		<category domain="post_tag" nicename="etech"><![CDATA[ETech]]></category>
		<category domain="post_tag" nicename="web-2-0"><![CDATA[Web 2.0]]></category>
		<category domain="post_tag" nicename="web-services"><![CDATA[Web Services]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[92db8d0d-cff5-40a6-b038-be1f1d251582]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Felipe+Cabrera+On+Amazons+Mechanical+Turk]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2006/03/08/Felipe+Cabrera+On+Amazons+Mechanical+Turk]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>2328</wp:comment_id>
			<wp:comment_author><![CDATA[Brian]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>82.43.202.24</wp:comment_author_IP>
			<wp:comment_date>2006-03-30 20:30:59</wp:comment_date>
			<wp:comment_date_gmt>2006-03-31 03:30:59</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Casting Words adds no value whatsoever if you happen to be a software developer who values their time at zero. For everyone else, it's a pretty good deal.

42c per minute is so cheap for almost any customer that there's really no point in undercutting it.

Mechanical Turk isn't accessible for the general public to request tasks, even with Hit Builder. There is a complex process of signing up for a developer's key, prepaying into the MTurk account, constructing a HIT that complies with the TOS, etc.

Then when your HIT is built, you're throwing the job out there to an arbitrary bunch of people that might do a good job of transcription, but might not. So you'd have to do quality control yourself and either correct errors or resubmit another HIT to have the job redone (at extra cost).

Casting Words works like an agency: they put in the effort and take the risk to run some kind of system that gives work to people and guarantees quality to the end customer. 

They create a customer-friendly interface on top of MTurk and PayPal.

They return the transcriptions in various useful formats.

That has value, and that's what they're charging for.

To do this, they take various risks and have various overheads and expenses.

This is frankly a classic business mistake: accounting for the direct costs of a service but not the startup costs, the overheads and the risk. The true margin on this service is much smaller than you realise. (I don't know exactly because it's not my service, but I can estimate.)

If you're still not sure, go the empirical method and try it. Submit a podcast for transcription through Casting Words, then the same one "directly" via MTurk. Value your time at a reasonable rate and see which comes out ahead.

Casting Words could definitely be improved and competed against, but probably not on price.

Now, does MTurk have a business model? Sure. Provide something of value and then charge for it. Sounds good to me. While it's very early days for this kind of service, being the middleman between a huge potential pool of work and a huge potential pool of workers has significant scope for profitability.

When it takes off, as I'm sure it will, there will be competition. Being first to market doesn't necessarily confer a long-term advantage. While the concept is a simple one, the details of the implementation are complex. This means that there is scope for meaningful differentiation. I predict that Amazon and a few competitors in this market will be able to resist commodification and a race to the bottom and operate profitably.

There is a huge disincentive for companies trying to put work through a system like this to keep switching between services or use several simultaneously. It's a lot of hassle and the market prices will be constantly volatile.

Competition isn't the enemy, commodification is. I can see no natural monopoly in this kind of business. But I do see massive economies of scale, so the market will support several large players, but not just one, or none.

]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Felix Miller on The Musical myware</title>
		<link>http://devhawk.net/2006/03/07/felix-miller-on-the-musical-myware/</link>
		<pubDate>Tue, 07 Mar 2006 23:57:45 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://b0e57a87-e999-481a-b48a-a433163bc317</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Felix is from <a href="http://www.last.fm/">last.fm</a>, which I haven’t used. However, I’m definitely going to give it a try after seeing Felix’s talk. Last.fm is all about harnessing collective intelligence for music. The basic idea is that you install a plugin to your music player and it uploads everything you listen to the central server. Then they can do analysis of the collective data to make associations and recommendations. Sounds cool. Gotta try it out.</p><p>Felix was also making a more meta point which was where the name of the talk came from. He’s talking about myware as a play on spyware. The idea is to “spy” on yourself in an unobtrusive manner and then use that collected information to help you sometime in the future – in this case help you find new music by spying on your music playing habits. There’s major privacy concerns of course, but the idea is pretty interesting. Something to noodle on at any rate.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>712</wp:post_id>
		<wp:post_date>2006-03-07 23:57:45</wp:post_date>
		<wp:post_date_gmt>2006-03-07 23:57:45</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>felix-miller-on-the-musical-myware</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="etech"><![CDATA[ETech]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<category domain="post_tag" nicename="web-2-0"><![CDATA[Web 2.0]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[b0e57a87-e999-481a-b48a-a433163bc317]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Felix+Miller+On+The+Musical+Myware]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2006/03/08/Felix+Miller+On+The+Musical+Myware]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Michael Kunivsky and Matt Cottam on Sketching in Hardware</title>
		<link>http://devhawk.net/2006/03/08/michael-kunivsky-and-matt-cottam-on-sketching-in-hardware/</link>
		<pubDate>Wed, 08 Mar 2006 00:19:23 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://4b539ab8-aea4-4d6a-bd93-eaedbd2069c2</guid>
		<description></description>
		<content:encoded><![CDATA[<p>For a while, I really didn’t understand where this session was going. Michael spent a bunch of time on the issues of user experience design that I’m not familiar with. I still don’t know why he was talking about the <a href="http://www.amazon.com/exec/obidos/tg/detail/-/B0009351ES/103-0060861-4573421">Cuddle Chimp</a>. But then he started talking about the importance of the sketching process to the practice of design. His meta point is that sketching is the root design tool, and different mediums are better or worse at supporting sketching. Drawing, as you might expect, is the best medium for sketching. Hardware is the worst. Michael rated a variety of sketching mediums based on Speed, Provisionality and History Preservation. By this time I figured out they were talking about enabling sketching of hardware.</p><p>Then Matt got up. I didn’t get his bio written down, but he is a professor of experience design. And he was talking about a product he’s been involved in to enable rapid sketching of hardware user experiences using simple sensors and motors. The product is called <a href="http://www.sketchtools.com/index.php?option=com_content&amp;task=blogcategory&amp;id=35&amp;Itemid=91">Nada</a> and it supports Flash and Java. No .NET? Nope, but I spoke to Matt after the session about it. The demos were pretty cool. He controlled the opacity of an element in Flash with a hardware potentiometer. He controlled the speed of a fan based on the current temperature reported via a website. He showed a variety of other sensors like light sensors and flex resiststors. These demos weren’t that compelling, but the potential is huge. It can connect to variety of hardware systems including serial port devices, MIDI devices, plus kits like <a href="http://www.makingthings.com/">Teleo</a> and <a href="http://www.phidgets.com/">Phidgets</a>. I’m thinking <a href="http://www.hanselman.com/blog/">Scott</a> needs to check this out for a future installment of <a href="http://msdn.microsoft.com/coding4fun/someassemblyrequired">Some Assembly Required</a>.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>713</wp:post_id>
		<wp:post_date>2006-03-08 00:19:23</wp:post_date>
		<wp:post_date_gmt>2006-03-08 00:19:23</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>michael-kunivsky-and-matt-cottam-on-sketching-in-hardware</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="etech"><![CDATA[ETech]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<category domain="post_tag" nicename="web-2-0"><![CDATA[Web 2.0]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[4b539ab8-aea4-4d6a-bd93-eaedbd2069c2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Michael+Kunivsky+And+Matt+Cottam+On+Sketching+In+Hardware]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2006/03/08/Michael+Kunivsky+And+Matt+Cottam+On+Sketching+In+Hardware]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Microformats Panel</title>
		<link>http://devhawk.net/2006/03/08/microformats-panel/</link>
		<pubDate>Wed, 08 Mar 2006 00:26:16 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://e126a16c-e9f4-4b59-b261-f2b581840e59</guid>
		<description></description>
		<content:encoded><![CDATA[I still haven’t seen a good general session on <a href="http://microformats.org/">microformats</a>. I’m thinking it’s because any one given microformat is so simple that you can’t really fill more than about ten minutes talking about it. So this panel was about six or seven different microformats. The format of the panel stunk – I lost track of what was being discussed pretty quickly so I spent the time surfing the microformats website.

The idea of microformats is to adorn visual markup (i.e. xhtml) with semantic information about the data underneath. Probably the best example of this is <a href="http://microformats.org/wiki/hcard">hCard</a>, the microformat version of vCard. Here’s my hCard (as produced by the <a href="http://microformats.org/code/hcard/creator">hCard Creator</a>)
<blockquote style="margin-right: 0px;" dir="ltr">
<div class="vcard"><a class="url fn" href="http://devhawk.net/">Harry Pierson</a></div>
<div class="org">Microsoft</div>
<div class="adr">
<div class="street-address">One Microsoft Way, 18/2194</div>
<span class="locality">Redmond</span>, <span class="region">WA</span><span class="postal-code">98052</span>

</div>
<div class="tel">425/705-6045</div></blockquote>
And here’s the markup:
<pre class="brush:xml">&lt;div class="vcard"&gt;
    &lt;a class="url fn" href="harry/'&gt;http://devhawk.net"&gt;Harry Pierson&lt;/a&gt;
    &lt;div class="org"&gt;Microsoft&lt;/div&gt;
    &lt;div class="adr"&gt;
        &lt;div class="street-address"&gt;One Microsoft Way, 18/2194&lt;/div&gt;
        &lt;span class="locality"&gt;Redmond&lt;/span&gt;, 
        &lt;span class="region"&gt;WA&lt;/span&gt;
        &lt;span class="postal-code"&gt;98052&lt;/span&gt;
    &lt;/div&gt;
    &lt;div class="tel"&gt;425/705-6045&lt;/div&gt;
&lt;/div&gt;</pre>
See how the class attributes provide the semantics for the underlying text? Cool.

I’m beginning to get microformats. At first, I was bothered because I thought they were hijacking the semantics of the class attribute. But I didn’t realize the <a href="http://www.w3.org/TR/html4/struct/global.html#adef-class">class attribute</a> could be used for “general purpose processing by user agents”. And the link microformats like <a href="http://gmpg.org/xfn/">XFN</a> and <a href="http://www.microformats.com/wiki/rel-tag">rel-tag</a> are even simpler than hCard.

So again, bad session but cool concept. I really see potential for mashing up <a href="http://devhawk.net/2006/03/08/Ray+Ozzie+On+Simple+Bridge+Building.aspx">Ray Ozzie’s Live Clipboard</a> with microformats.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>714</wp:post_id>
		<wp:post_date>2006-03-08 00:26:16</wp:post_date>
		<wp:post_date_gmt>2006-03-08 00:26:16</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>microformats-panel</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="etech"><![CDATA[ETech]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<category domain="post_tag" nicename="web-2-0"><![CDATA[Web 2.0]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[e126a16c-e9f4-4b59-b261-f2b581840e59]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Microformats+Panel]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2006/03/08/Microformats+Panel]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>My Dead Laptop</title>
		<link>http://devhawk.net/2006/03/07/my-dead-laptop/</link>
		<pubDate>Tue, 07 Mar 2006 16:47:54 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://384d66ca-c499-4339-8199-7f6275f5b7d7</guid>
		<description></description>
		<content:encoded><![CDATA[<p>So between this mornings <a title="multi-touch interface demo" href="http://conferences.oreillynet.com/cs/et2006/view/e_sess/9091">multi-touch interface demo</a> and the session on <a title="Amazon's Mechanical Turk service" href="http://conferences.oreillynet.com/cs/et2006/view/e_sess/8267">Amazon's Mechanical Turk service</a>, my laptop died. At least, the display did. Sometimes I can get it to work for a short time by closing and re-opening the lid. But in the constant jostling environment of a confernce audience, getting it to keep working has proved impossible.</p><p>Of course this couldn't happen while I'm at home with convienent access to the help desk. I'm at the Emerging Tech conferences for pete sake! </p><p>I would have just bought a laptop at CompUSA or something, but that qualifies as a captial expenditure and my boss wouldn't sign off on it (primarily because of the paperwork he'd have to fill out). Luckily, <a title="CRE Rentals" href="http://www.computerrentals.com/">CRE Rentals</a> was able to get a machine over to me in a few hours so I'm back online. I guess I won't be doing any more coding this trip, but I guess I'll survive. </p><p>More from ETech later. In the meantime, check out Ray Ozzie's blog entry on <a href="http://spaces.msn.com/rayozzie/blog/cns!FB3017FBB9B2E142!285.entry">Wiring the Web</a>. I may be biased, but it's the coolest new thing I've seen here so far (though the multi-touch interface is pretty awesome too)</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>715</wp:post_id>
		<wp:post_date>2006-03-07 16:47:54</wp:post_date>
		<wp:post_date_gmt>2006-03-07 16:47:54</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>my-dead-laptop</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="etech"><![CDATA[ETech]]></category>
		<category domain="post_tag" nicename="hardware"><![CDATA[Hardware]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[384d66ca-c499-4339-8199-7f6275f5b7d7]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[My+Dead+Laptop]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2006/03/08/My+Dead+Laptop]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Ray Ozzie on Simple Bridge Building</title>
		<link>http://devhawk.net/2006/03/07/ray-ozzie-on-simple-bridge-building/</link>
		<pubDate>Tue, 07 Mar 2006 23:44:59 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://cc1f65f1-3b1e-423e-b79e-2aa76c5ba6de</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Ray has <a href="http://spaces.msn.com/rayozzie/blog/cns!FB3017FBB9B2E142!285.entry">posted extensively</a> about his session this morning, but if you haven’t read it the basic idea is “How do we bring the copy and paste paradigm to the web?” Sure, for this crowd he might have been better off saying “the UNIX pipe paradigm”, but the result is the same. How do have a simple way of letting an end user connect systems together? The idea of using the clipboard paradigm is brilliant in its simplicity.</p><p>The coolest part of the demo IMO was the integration between the Live Clipboard (of course, it’s branded <a href="http://www.live.com">Live</a>) and the desktop. Copy an event out of <a href="http://eventful.com/">Eventful</a>, paste into <a href="http://office.microsoft.com/en-us/FX010857931033.aspx">Outlook</a>. Copy an image out of <a href="http://www.flickr.com">Flickr</a>, paste into the file system. Even cooler: Paste an image feed out of Flickr and paste into a folder in the file system with integration into the <a href="http://msdn.microsoft.com/library/en-us/FeedsAPI/rss/rss_entry.asp">Feeds API</a> to keep the local folder in sync with the Flickr feed (OK, the Feed API integration wasn’t done in time to demo). This was the best demo of the all the keynotes.</p><p>I need to think more about the implications of this. First off is the importance of data formats. I’ve written about <a href="http://devhawk.net/2006/02/14/Reinventing+The+List.aspx">RSS as the generic list</a> semantics on top of XML, but I’m thinking <a href="http://www.microformats.com">microformats</a> will be huge when combined with Live Clipboard. Also, there’s the implication of user driven integration. <a href="http://pathelland.com">Pat Helland</a> derides the clipboard in <a href="http://msdn.microsoft.com/library/en-us/dnmaj/html/aj2metrop.asp">Metropolis</a>, but the support for structured data eliminates the Pat’s primary issues with the clipboard as an integration medium. Finally, there’s huge implication in the enterprise for this, but I’m not sure how positive it is. IT shops are already struggling with thousands of shadow applications built on Office running in the wild. If I can copy structured data out of an enterprise app and paste it into Excel without losing the schema, it will encourage still more of these shadow apps. IT will hate it, but users will love it. </p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>716</wp:post_id>
		<wp:post_date>2006-03-07 23:44:59</wp:post_date>
		<wp:post_date_gmt>2006-03-07 23:44:59</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>ray-ozzie-on-simple-bridge-building</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="etech"><![CDATA[ETech]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<category domain="post_tag" nicename="web-2-0"><![CDATA[Web 2.0]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[cc1f65f1-3b1e-423e-b79e-2aa76c5ba6de]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Ray+Ozzie+On+Simple+Bridge+Building]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2006/03/08/Ray+Ozzie+On+Simple+Bridge+Building]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Rod Smith on Do It Yourself IT</title>
		<link>http://devhawk.net/2006/03/08/rod-smith-on-do-it-yourself-it/</link>
		<pubDate>Wed, 08 Mar 2006 00:14:50 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://038bbfcf-f5b4-4b41-8ca8-994f3c4ff56c</guid>
		<description></description>
		<content:encoded><![CDATA[<p>This post is a combination of Rod’s short keynote and his breakout session I went to right after lunch. Rod’s meta point is that lots of enterprise applications don’t get built because they aren’t affordable to write. <a href="http://www.thelongtail.com/">Chris Anderson</a> would call this the <a href="http://bnoopy.typepad.com/bnoopy/2005/03/the_long_tail_o.html">long tail of software</a>. Rod introduced the idea of “situational applications” – something you build for a specific situation then you throw it away. I actually prefer the term “disposable application” since it focuses on the fact you will throw it away.</p><p>He demoed a proof of concept called QEDWiki. QED == Quick and Easily Done. It seems a lot like <a href="http://www.jot.com/">JotSpot</a>. You have a palette of components that you can drag onto the page and wire together quickly. They built a slightly interesting application to mashup store locations with weather data in under five minutes. </p><p>In the breakout, they got into much more detail on QEDWiki. There’s a wiki programming language - I'm guessing conceptually similar to <a href="http://www.flexwiki.com/default.aspx/FlexWiki/WikiTalk.html">WikiTalk</a> -and a AJAX-y drag and drop authoring environment that sits on top of it. Pretty cool, but as he got under the hood it seemed pretty complex. The amount of wiki code the visual authoring environment spits out is significant and the implementation of one of the reusable components is massive. Building a wrapper component for the <a href="http://developer.yahoo.com/traffic/index.html">Yahoo Traffic</a> service took “around a day”. That seem large to you?</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>717</wp:post_id>
		<wp:post_date>2006-03-08 00:14:50</wp:post_date>
		<wp:post_date_gmt>2006-03-08 00:14:50</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>rod-smith-on-do-it-yourself-it</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="etech"><![CDATA[ETech]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<category domain="post_tag" nicename="web-2-0"><![CDATA[Web 2.0]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[038bbfcf-f5b4-4b41-8ca8-994f3c4ff56c]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Rod+Smith+On+Do+It+Yourself+IT]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2006/03/08/Rod+Smith+On+Do+It+Yourself+IT]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>The So-Called Attention Economy</title>
		<link>http://devhawk.net/2006/03/08/the-so-called-attention-economy/</link>
		<pubDate>Wed, 08 Mar 2006 00:02:41 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://476cdd3e-fa4b-46d8-b3e5-5d801bd4c9e9</guid>
		<description></description>
		<content:encoded><![CDATA[<p>I’m just going to come right out and say I don’t “get” this attention economy. I mean, I understand the problem of information overload which seems to be at the root of this attention stuff. But is it an economy? Whenever someone gets going on attention economy, I think back to the .com days and wonder if anyone ever called that a “traffic economy”. It’s more like the next generation of productivity – Productivity 2.0 if you will. If Productivity 1.0 was about information at your fingertips (to steal an old piece of Microsoft marketing hype), then Productivity 2.0 is about noise filtration. It’s a natural outgrowth of making so much information digitally available. But it’s not an economy.</p><p>Today there were to keynotes explicitly about the attention economy. Seth Goldstein is from a company called <a href="http://root.net/">Root</a>, which is one of these so called attention economy applications. It actually seems to have a lot in common with <a href="http://devhawk.net/2006/03/08/Felix+Miller+On+The+Musical+Myware.aspx">Felix’s myware idea</a>. Basically, it tracks what you pay attention to and uploads it to a central server. I get why <a href="http://last.fm">last.fm</a> wants my music attention data, because there’s value in aggregating it with other users. But I don’t get how general purpose attention data can be aggregated in such a way that I would consider posting it to some server some where. If I spent two hours surfing Flickr last week, shouldn’t that data be local on my machine (where said surfing occurred) and not up on some server that’s out of my control.</p><p>Later we had David Sifry on the Economic Model of Attention. Most of what David talked about I agree with, but I again I don’t appear to draw the same conclusions. Sure, time is scarce and perishable. But I don’t buy that it’s currency. Besides, any economic “model” that claims money isn’t scarce seems fishy to me.</p><p>As I said, I don’t get this attention economy stuff.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>718</wp:post_id>
		<wp:post_date>2006-03-08 00:02:41</wp:post_date>
		<wp:post_date_gmt>2006-03-08 00:02:41</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>the-so-called-attention-economy</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="etech"><![CDATA[ETech]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<category domain="post_tag" nicename="web-2-0"><![CDATA[Web 2.0]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[476cdd3e-fa4b-46d8-b3e5-5d801bd4c9e9]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[The+SoCalled+Attention+Economy]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2006/03/08/The+SoCalled+Attention+Economy]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>2329</wp:comment_id>
			<wp:comment_author><![CDATA[Alex Barnett]]></wp:comment_author>
			<wp:comment_author_email>alexbarn@microsoft.com</wp:comment_author_email>
			<wp:comment_author_url>http://blogs.msdn.com/alexbarn</wp:comment_author_url>
			<wp:comment_author_IP>131.107.0.102</wp:comment_author_IP>
			<wp:comment_date>2006-03-08 12:40:29</wp:comment_date>
			<wp:comment_date_gmt>2006-03-08 20:40:29</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I agree with you Harry, that the 'Attention Economy' is not an economy.  My opinion is that users aren't interested is selling their data to customers for $. I wrote more on this here: http://blogs.msdn.com/alexbarn/archive/2006/01/11/511690.aspx

On the point you make re: having stuff on a server: there is one advantage to this - I roam. Having email in the cloud (and on local client) rather than *just* on the client is better, no? Having my attention data out in the cloud makes like easier. The question you raise re: data privacy / and management of subsets of this data by the user should be in the users control is a key point. But do they care where this data 'lives'? If it works, is secure and is in their control, do they care?

Re: other forms of 'attention data' that may be useful to have services key off: one powerful type attention data is my OPML file. Services such as Megite.com, Findory and others are starting to provide personalized views based on this data. They are more than just RSS aggreagtors they're really becoming attention filters. If you've got 5 mins before you rush out of the door and want a quick, relevant snapshot of whats going being going on, this is a great tool. Think: Personalized Memeorandum. I did a screencast to show: http://blogs.msdn.com/alexbarn/archive/2006/02/17/533949.aspx

What other types of attention data will these services be able to refer to to provide yet more relevant experierences?

Any way, more of my attention throughts here: http://blogs.msdn.com/alexbarn/articles/510483.aspx

Alex.

]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>ETech Day Three Quick Thoughts</title>
		<link>http://devhawk.net/2006/03/08/etech-day-three-quick-thoughts/</link>
		<pubDate>Wed, 08 Mar 2006 18:42:20 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://cb2db63b-11c8-4a87-9eb1-f1915cac386e</guid>
		<description></description>
		<content:encoded><![CDATA[<p>After my marathon blogging session last night and taking notes all day, I'm a bit burnt out on writing. But here are a few quick thoughts. More details to follow.</p><ul><li>I'm digging the <a href="http://www.live.com/">Live.com home page</a> and the integrated Live Search. Since I'm on a rented laptop, <a href="http://toolbar.live.com/">Live Toolbar</a> will have to wait. Coolest new feature IMO is the <a href="http://microsoftgadgets.com/Macros">Search Macros</a>, though it's a tight race with the new image search interface. 
</li><li>Jon Udell and Michael Goldhaber spoke about attention economy today. I still don't get it, though Jon had some interesting ideas about metadata. I'll believe that attention is a currency when I can buy a car with it. 
</li><li>I liked the session on the <a href="http://developer.yahoo.com/ypatterns">Yahoo! Design Patterns</a>, though the title and abstract of the session were awful. The title was "<a href="http://conferences.oreillynet.com/cs/et2006/view/e_sess/8602">The Language of Attention: A Pattern Approach</a>". The inclusion of attention just confused the issue. Why couldn't they just call it "A Pattern Language for User Experience"? Because it doesn't have the concept of attention shoehorned into it. 
</li><li>I really like <a href="http://eventful.com/">Eventful</a>, even though I'm <a href="http://devhawk.net/2006/02/13/Web+20+Evolution.aspx">on record</a> as thinking their business model doesn't work. Their new <a href="http://eventful.com/demand">demand feature</a> is pretty cool, though it doesn't really help their business model any. 
</li><li>George Dyson's session on "<a href="http://conferences.oreillynet.com/cs/et2006/view/e_sess/8035">Turing's Cathedral</a>" was fascinating, though he tried to cover too much ground in the time alloted. 
</li><li>I'm not sure what the point of Joel Spolsky's <a href="http://conferences.oreillynet.com/cs/et2006/view/e_sess/8323">Blue Chip Report Card</a> was. Apparently the alien from <a href="http://www.reddit.com">Reddit</a> is cute and Motorola newer cell phones (RAZR and PEBL) are taking Joel's advice on becoming "blue chip". This is somewhat related to points the folks from Adobe (previously Macromedia) made, except much more obtuse. 
</li><li>I have no idea what the point or business model of Plum is, even though it was <a href="http://conferences.oreillynet.com/cs/et2006/view/e_sess/9004">featured</a> as a keynote (a last minute promotion it appears from the conference guide). Seems too complex and centralized to actually work. 
</li><li>I <a href="http://devhawk.net/2006/03/08/Felipe+Cabrera+On+Amazons+Mechanical+Turk.aspx">wrote last night</a> that Casting Words isn't really a business because nothing stops me from going directly to Mechanical Turk and getting the transcription services myself. Today, I found a Casting Words task on Mechanical Turk so I decided to figure out how much they're making. The task I found was to transcribe about 28 minute podcast and they were offering $5.41 for anyone willing to do it. That's about 19.5 cents per minute. Tack on Amazon's 10% charge brings the total to around 21.5 cents a minute that Casting Words is paying for transcription services. Given that they're charging 42 cents a minute, that's just under a 49% profit margin. Exactly what are they doing to earn that profit? What's their value add and is really worth a 100% markup? 
</li><li>Anyone want to start "Cheap Casting Words" with me? We'll pay 22 cents a minute (11% more than Casting Words) and charge 36 cents a minute (14% less than Casting Words) and keep the 12 cents a minute markup (a 33% markup). :)</li></ul><p>UPDATE (8:45pm) - Added Quick Thoughts on Yahoo!, Eventful, George Dyson, Joel Spolsky and Plum. Added more detail about the attention economy sessions from today.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>719</wp:post_id>
		<wp:post_date>2006-03-08 18:42:20</wp:post_date>
		<wp:post_date_gmt>2006-03-08 18:42:20</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>etech-day-three-quick-thoughts</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="etech"><![CDATA[ETech]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<category domain="post_tag" nicename="web-2-0"><![CDATA[Web 2.0]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[cb2db63b-11c8-4a87-9eb1-f1915cac386e]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[ETech+Day+Three+Quick+Thoughts]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2006/03/09/ETech+Day+Three+Quick+Thoughts]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Hawk Eye on Live Toolbar First Run Experience</title>
		<link>http://devhawk.net/2006/03/10/hawk-eye-on-live-toolbar-first-run-experience/</link>
		<pubDate>Fri, 10 Mar 2006 12:23:39 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://2b357a79-a081-46fc-8269-30c5038536df</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Now that I'm back in the office with an external monitor, I'm able to use my laptop again. While I was waiting for the help desk tech to show up, I installed the new Live Toolbar. I was immediately thrown however, because it comes with basically no default installed features. It was strange to have to install basic features like tabbed browsing and desktop search. On the other hand, it was nice not to have the previously default features that I don't use uninstalled (i.e. popup blocker, form fill, msn extensions). There needs to be a better first-run experience that presents the user a list of options to install (along with the standard ones pre-selected). Otherwise, so far so good.<br /></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>720</wp:post_id>
		<wp:post_date>2006-03-10 12:23:39</wp:post_date>
		<wp:post_date_gmt>2006-03-10 12:23:39</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>hawk-eye-on-live-toolbar-first-run-experience</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<category domain="post_tag" nicename="windows-live"><![CDATA[Windows Live]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[2b357a79-a081-46fc-8269-30c5038536df]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Hawk+Eye+On+Live+Toolbar+First+Run+Experience]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2006/03/10/Hawk+Eye+On+Live+Toolbar+First+Run+Experience]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Hawk Eye on Windows Live Favorites</title>
		<link>http://devhawk.net/2006/03/10/hawk-eye-on-windows-live-favorites/</link>
		<pubDate>Fri, 10 Mar 2006 12:49:05 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://b7029bb5-39fd-40b3-9f07-eb4c15421216</guid>
		<description></description>
		<content:encoded><![CDATA[<p>After installing the new Windows Live Toolbar, I installed some of the add-ins that I usually wouldn't. Things like the Phishing Filter, Games and the Windows Live Favorites. I'm not sure when Live Favorites was refreshed, but the new version is much better. It support both folders and tags - previously it just supported folders. There's a reason why tagging has taken off - it makes sense to people. I started using Live Favorites but gave up because the folder approach is so much less flexible. </p><p>The other new feature is that the Live Favorites Add-in now sync's your local favorites with your Live Favorites. Not sure how that will work if you primarily use tags on Live Favorites, but I guess I'll see. </p><p>Finally, Live Favorites can be shared, but there doesn't appear to be any way to search shared favorites. Am I missing something?</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>721</wp:post_id>
		<wp:post_date>2006-03-10 12:49:05</wp:post_date>
		<wp:post_date_gmt>2006-03-10 12:49:05</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>hawk-eye-on-windows-live-favorites</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<category domain="post_tag" nicename="windows-live"><![CDATA[Windows Live]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[b7029bb5-39fd-40b3-9f07-eb4c15421216]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Hawk+Eye+On+Windows+Live+Favorites]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2006/03/10/Hawk+Eye+On+Windows+Live+Favorites]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Compiler Dev Lab - LINQ</title>
		<link>http://devhawk.net/2006/03/14/compiler-dev-lab-linq/</link>
		<pubDate>Tue, 14 Mar 2006 11:33:14 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://d8d60ca8-7b41-4d46-9cc6-e6a4cc05dfc3</guid>
		<description></description>
		<content:encoded><![CDATA[<p></p><p>Even though I haven't finished my ETech postings, I'm already onto another event. This week, thanks to an invite from <a href="http://blogs.msdn.com/mglehman/">Michael Lehman</a>, I'm sitting in on a Compiler Lab discussing implementing other languages for CLR. The first day was about <a href="http://msdn.microsoft.com/netframework/future/linq/">LINQ</a>. Much of the info is rehashed from PDC or the docs up on MSDN. However, I have learned a few new things.</p><ul><li>One of the standard features of LINQ is Extension Methods. That enables you to declare a static method like "static void Foo(this string source)" and then use it like "stringvar.Foo()". Apparently, they are considering adding other types of extension members including properties and fields. The idea of extension fields is somewhat scary but powerful. </li><li>LINQ uses something Anders called deferred query execution. The query isn't executed until the values are asked for (typically by calling foreach on the query). That means you can compose queries to your hearts content with no perf impact until you actually invoke the query. </li><li><a href="http://msdn.microsoft.com/vbasic/Future/default.aspx?pull=/library/en-us/dnvs05/html/vb9overview.asp#vb9overview_topic7">Query Comprehensions</a> in C# and VB is a pattern implementation in a similar vein to foreach. Foreach is relatively simple shorthand for iterating through an collection by calling IEnumerator.MoveNext until it returns false. While LINQ enables arbitrary composition of queries, there is obvious gravitational pull towards the SELECT / FROM / WHERE / ORDER BY / GROUP BY approach favored by SQL. So if you build your own query operator, you can include it in a LINQ query, but C# and VB won't be able to include it in the Query Comprehension syntax. Probably not a big deal, given the breadth of standard query operators as well as the deferred query execution, but it's good to understand how the abstraction works.</li><li>I want to know more about how <a href="http://download.microsoft.com/download/c/f/b/cfbbc093-f3b3-4fdb-a170-604db2e29e99/DLinq%20Overview.doc">DLinq</a> is implemented. I've been refining my thinking about data since <a href="http://devhawk.net/2006/02/27/Experimenting+With+Ning.aspx">working with Ning's content store</a> and I'm convinced of the need for a simplified datastore. SQL is designed for significantly complex database schemas, which means a significantly complex development environment. </li><li>I'm looking much more closely at VB, given the new features in <a href="http://msdn.microsoft.com/vbasic/Future/default.aspx?pull=/library/en-us/dnvs05/html/vb9overview.asp">VB 9.0</a>. Not only the LINQ stuff from C# like type inference, extension methods and anonymous types but also VB specific stuff like <a href="http://msdn.microsoft.com/vbasic/Future/default.aspx?pull=/library/en-us/dnvs05/html/vb9overview.asp#vb9overview_topic6">XML Literals</a> and <a href="http://msdn.microsoft.com/vbasic/Future/default.aspx?pull=/library/en-us/dnvs05/html/vb9overview.asp#vb9overview_topic12">Duck Typing</a>. Combined with VB's existing support for late binding, there are compelling features to make VB attractive over C#. </li><li>I've been hanging out with <a href="http://weblogs.asp.net/brianbec">Brian Beckman</a>. He's a hoot. </li><li>I think I need to take a deeper look at <a href="http://research.microsoft.com/fsharp/">F#</a>.</li></ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>722</wp:post_id>
		<wp:post_date>2006-03-14 11:33:14</wp:post_date>
		<wp:post_date_gmt>2006-03-14 11:33:14</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>compiler-dev-lab-linq</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="development"><![CDATA[Development]]></category>
		<category domain="post_tag" nicename="lanugages"><![CDATA[Lanugages]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[d8d60ca8-7b41-4d46-9cc6-e6a4cc05dfc3]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Compiler+Dev+Lab+LINQ]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2006/03/14/Compiler+Dev+Lab+LINQ]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>2330</wp:comment_id>
			<wp:comment_author><![CDATA[Sam Gentile]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://codebetter.com/blogs/sam.gentile/</wp:comment_author_url>
			<wp:comment_author_IP>131.107.167.9</wp:comment_author_IP>
			<wp:comment_date>2006-03-14 17:18:01</wp:comment_date>
			<wp:comment_date_gmt>2006-03-15 00:18:01</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[What, no mention of hanging out with me today at the F# thing? -))]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>2331</wp:comment_id>
			<wp:comment_author><![CDATA[Keith J. Farmer]]></wp:comment_author>
			<wp:comment_author_email>kfarmer@microsoft.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>70.89.126.54</wp:comment_author_IP>
			<wp:comment_date>2006-03-15 00:20:13</wp:comment_date>
			<wp:comment_date_gmt>2006-03-15 07:20:13</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Well, it's not like us DLinq devs are exactly hiding.. ;)
]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Compiler Dev Lab - Scripting</title>
		<link>http://devhawk.net/2006/03/15/compiler-dev-lab-scripting/</link>
		<pubDate>Wed, 15 Mar 2006 11:25:22 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://866fb4d2-37de-4f84-b8ba-66b9f1c9b27b</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Day Two of the Compiler Dev Lab was all about scripting. <a href="http://www.gotdotnet.com/workspaces/workspace.aspx?id=ad7acff7-ab1e-4bcb-99c0-57ac5a3a9742">Iron Python</a> was the primary focus of the day, but they also had <a href="http://www.php-compiler.net/">Phalanger</a> (Managed <a href="http://www.php.net/">PHP</a>) and <a href="http://blogs.msdn.com/monad/">Monad</a> folks there as well. </p><ul><li>I hadn't realized just how performant these dynamic languages are on the CLR when compared to their native versions. The <a href="http://www.ironpython.com/">original version</a> of Iron Python was 1.7x faster than the standard C implementation back in the summer of '04. Now with CLR 2.0, that version is now 2x faster with out any code changes. The Phalanger folks said they are 2.5x faster than the native version of PHP (1.7x faster than PHP + the <a href="http://www.zend.com/products/zend_optimizer">Zend Optimizer</a>). That's pretty impressive performance. 
</li><li>The IronPython folks are heavy users of the new <a href="http://msdn2.microsoft.com/en-us/library/system.reflection.emit.dynamicmethod(VS.80).aspx">DynamicMethod class</a> from .NET 2.0. Otherwise known as Lightweight Code Generation, DynamicMethod allows you emit a static function but have it get garbage collected when it's no longer needed. IP almost never generates new classes, since new types can't be garbage collected. The only times they generate actual classes are when you inherit from an existing .NET class or when you generate a new delegate type. 
</li><li>It's really hard to serve the dual masters of both the existing language community and the .NET community. <a href="http://blogs.msdn.com/hugunin/default.aspx">Jim Hugunin</a> used the example of String.Trim(). A .NET developer would expect String.Trim() to "just work". A Python developer would expect that to throw an AttributeError exception (the Python equivalent of Trim is strip). How do you handle this? In IP, it defaults to pure Python mode, but if you enter "import clr", you move into .NET hybrid mode. 
</li><li>One of the typical features of dynamic languages is the ability to change the base class of an object on the fly. Jim demoed this with WPF. He created a class that inherited from one type of panel and then set the __class__ property of the object to a different panel and the display changed immediately. Freaky, but cool. 
</li><li>Jim showed a demo of a WPF app that hosted Python for extensibility. One of the scripts in turn hosted Python to create an interactive console for the app. Having a scripting engine that can host itself is awesome. 
</li><li>The <a href="http://affiliate.vsipmembers.com/affiliate/downloadfiles.aspx">VSIP SDK CTP</a> (reg required) includes an sample lanugage integration project for Iron Python. So you can get both the source into IP language itself as well as the source to the integration into Visual Studio. 
</li><li>I got an email yesterday from someone asking about the possibility of Visual Ruby.NET. I haven't heard anything about it, but it would be cool to see <a href="http://www.rubyonrails.com/">Ruby on Rails</a> runing under CLR. <a href="http://www.iunknown.com/">John Lam</a> is working on <a href="http://www.iunknown.com/articles/2006/02/20/second-drop-of-rubyclr">RubyCLR</a>, but my understanding is that is a bridge between the CLR and the Ruby runtime, not a CLR implemenation of the Ruby runtime. (IP is a CLR implementation of the Python runtime.) I'm thinking that there are some similarities between Ruby and Python, so having the source of IronPython would be a huge help in building a Visual Ruby implementation. For example, both Ruby and Python have <a href="http://martinfowler.com/bliki/Closure.html">closures</a>. IP has a <font size="2">FunctionEnvironment </font>class which is used to lift stack variables onto the heap in a variety of scenarios, including closures. So if I was building Visual Ruby, having access to the FunctionEnvironment class would be a good start. 
</li><li>I said yesterday that I need to learn more about F#. They showed a video of an internal F# presentation, but I spent most of my time cracking jokes with <a href="http://codebetter.com/blogs/sam.gentile/default.aspx">Sam Gentile</a> who's in town for an <a href="http://www.gotdotnet.com/codegallery/codegallery.aspx?id=941d2228-3bb5-42fd-8004-c08595821170">SC-BAT</a> workshop. 
</li><li>I didn't pay enough attention to the Monad presentation. :(</li></ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>723</wp:post_id>
		<wp:post_date>2006-03-15 11:25:22</wp:post_date>
		<wp:post_date_gmt>2006-03-15 11:25:22</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>compiler-dev-lab-scripting</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="development"><![CDATA[Development]]></category>
		<category domain="post_tag" nicename="lanugages"><![CDATA[Lanugages]]></category>
		<category domain="post_tag" nicename="scripting"><![CDATA[Scripting]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[866fb4d2-37de-4f84-b8ba-66b9f1c9b27b]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Compiler+Dev+Lab+Scripting]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2006/03/15/Compiler+Dev+Lab+Scripting]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>2332</wp:comment_id>
			<wp:comment_author><![CDATA[John Lam]]></wp:comment_author>
			<wp:comment_author_email>jlam@iunknown.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.iunknown.com</wp:comment_author_url>
			<wp:comment_author_IP>67.69.151.82</wp:comment_author_IP>
			<wp:comment_date>2006-03-17 14:58:16</wp:comment_date>
			<wp:comment_date_gmt>2006-03-17 21:58:16</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[RubyCLR is a bridge, although I do generate a lot of CIL on the fly for my proxies. The next release will let me implement arbitrary CLR interfaces on Ruby objects (I already support delegates today). So I can get most of the way there; and without having to compromise the semantics of Ruby itself (the JRuby guys are having a heck of a time doing just that).

A bigger blocking issue in the short term is adding support for OS native threads to Ruby itself. Since the Ruby interpreter is *not* safe for concurrent access, this limits the kinds of things that you can do with Ruby talking to .NET (ASP.NET just ain't gonna happen). This might be the reason to drive to a native Ruby.NET implementation. But that's a lot more work :)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>The SQL Complexity Problem</title>
		<link>http://devhawk.net/2006/03/16/the-sql-complexity-problem/</link>
		<pubDate>Thu, 16 Mar 2006 00:51:32 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://dc8da217-b67e-4aa0-9cb9-fe57d0ad28c1</guid>
		<description></description>
		<content:encoded><![CDATA[<p>I mentioned on the <a href="http://devhawk.net/2006/03/14/Compiler+Dev+Lab++LINQ.aspx">first day of the Compiler Dev Lab</a> that <a href="http://weblogs.asp.net/brianbec">Brian Beckman</a> is a hoot. He's also wicked smart. He <a href="http://weblogs.asp.net/brianbec/archive/2006/03/15/440293.aspx">posted</a> about his demo from Monday where he demonstrates building indexes for use in LINQ queries. In his words:</p><blockquote dir="ltr" style="MARGIN-RIGHT: 0px"><p>In the terminology of relational databases, a “join” is, semantically, like a nested loop over a pair of lists (or tables) of records, saving only those where some certain fields match. Unless we do something smart, this could be very expensive. Imagine searching a database of a million DNA profiles for the closest match to a sample that has 10,000 DNA features (I have no idea whether those are real numbers: I just made them up, but they sound ballpark to me). A dumb join would search all 1 million profiles for each of the 10,000 features, resulting in 10 billion match tests, almost all of which will fail – by design, of course. That’s going to hurt. </p><p>The “something smart” is to build an index and search through that. Your database doesn’t have to be large at all for this to pay off. In fact, even with just a few records, it’s cheaper to build an index, use it, and throw it away than it is to do a nested loop. </p></blockquote><p dir="ltr">He goes on to prove out his point about building an index. For his full dataset (joining 3053 cities with 195 countries) it is literally 65x slower not to build a one-off index. Even for smaller datasets, the time difference is less dramatic but still significant. For example, with 89 cities instead of 3053, it's 3x slower not to build the index. </p><p dir="ltr">The reason I'm so interested in Brian's post is because of my <a href="http://devhawk.net/2006/02/27/Experimenting+With+Ning.aspx">experiments with Ning</a>. As you might recall, in trying to build a .NET version of <a href="http://partisanhacks.ning.com/">Partisan Hacks</a>, I found ASP.NET 2.0 to be significantly simpler than PHP (which Ning uses). However, building even the trivial SQL Express database for Partisan Hacks was a non-trivial exercise. Sure, I've done it many times before, but it seems strange that ASP.NET makes it so easy to build a site while SQL Server makes it so complex to build a database. If I was a novice user, I would never be able to build a database for my web site.</p><p dir="ltr">Why is this? I think that the simple app or amateur developer is simply not the target audience for SQL Server (even SQL Express). If you don't know the difference between nvarchar(100) and varchar(max) you're pretty much out in the cold when it comes to SQL Server. Their target audience appears to be enterprise databases that are cared for by enterprise database administrators. Databases with scores of tables and millions of rows. Great for them, bad for novice users who just want to persist their data somewhere quickly and easily.</p><p dir="ltr">Why can't building my database be as simple as building my site?</p><p dir="ltr">Ning makes it easy to use their <a href="http://documentation.ning.com/post.php?Post:slug=XN-XN_Content">Content Store</a>. You create an instance of a content object, you set properties (dynamic ones), you hit save. No fuss, no muss, no db schema. Sure is an easier model to understand and program to. In that regard, it blows away everything, even <a href="http://www.rubyonrails.com/">Ruby on Rails</a>. RoR is pretty sweet, but it needs a real database schema on the back end in order to drive RoR's guiding principle of "convention over configuration<em>"</em>. If there's no DB schema to discover, I think much of the RoR model would break down. (but that may just be my lack of RoR experience talking)</p><p dir="ltr">I not sure what a simpler database system would look like, but one idea of mine is to use a schemaless database. Much of the complexity comes from having to define both an in memory as well as perseistant schema, as well as the translation between them. If you just stored managed .NET objects, you would eliminate the redundant schema specification. It's not a fully fleshed out concept, but it is a start of an idea.</p><p dir="ltr">What other ideas would make persistant data significantly easier to work with?</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>724</wp:post_id>
		<wp:post_date>2006-03-16 00:51:32</wp:post_date>
		<wp:post_date_gmt>2006-03-16 00:51:32</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>the-sql-complexity-problem</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="database"><![CDATA[Database]]></category>
		<category domain="category" nicename="development"><![CDATA[Development]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[dc8da217-b67e-4aa0-9cb9-fe57d0ad28c1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[The+SQL+Complexity+Problem]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2006/03/16/The+SQL+Complexity+Problem]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>2333</wp:comment_id>
			<wp:comment_author><![CDATA[Jonathan Aquino]]></wp:comment_author>
			<wp:comment_author_email>jon@ninginc.com</wp:comment_author_email>
			<wp:comment_author_url>http://jonathanaquino.com</wp:comment_author_url>
			<wp:comment_author_IP>24.68.122.80</wp:comment_author_IP>
			<wp:comment_date>2006-03-16 22:56:24</wp:comment_date>
			<wp:comment_date_gmt>2006-03-17 05:56:24</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi Harry - Thanks for highlighting the beauty of the Ning content store. Right on!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>2334</wp:comment_id>
			<wp:comment_author><![CDATA[Bob English]]></wp:comment_author>
			<wp:comment_author_email>bob_english@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>82.121.48.19</wp:comment_author_IP>
			<wp:comment_date>2006-03-17 15:01:09</wp:comment_date>
			<wp:comment_date_gmt>2006-03-17 22:01:09</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Well, it seems you've just discovered the language impedence mismatch (between databases and programming) C#3 is all about?
Solutions of diverse kinds have been around for some time, and a some interest into the Java community would help you grasp the ideas...
Have a look at db4objects and see for yourself!

To me, and to the knowledge I have so far with C#3 and LINQ, these are just going back to the goo' ol' days of Visual FoxPro and embedded SQL. If its true, then it's a backwards step. Forward step is, as you reckon, into direct object graphs persistence.

Cheers,
Bob]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>2335</wp:comment_id>
			<wp:comment_author><![CDATA[Chris Sterling]]></wp:comment_author>
			<wp:comment_author_email>csterling@solutionsiq.com</wp:comment_author_email>
			<wp:comment_author_url>http://jroller.com/page/csterwa</wp:comment_author_url>
			<wp:comment_author_IP>67.183.212.122</wp:comment_author_IP>
			<wp:comment_date>2006-03-26 22:58:21</wp:comment_date>
			<wp:comment_date_gmt>2006-03-27 05:58:21</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[This subject is probably what I find to be the most interesting problem we are dealing with today.  Ruby, Python, C#3, and other models for dealing with this problem don't seem to be solutions in my opinion.  I tend to agree with your second comenter, Bob, in regards to direct object graph persistence but I also see that we must deal with the duplication and communication channels within our organizations, as well.  This will take more than a better persistence mechanism.  It will take systems which can merge data and dynamically relate data based upon context.  My current understanding of this would be done using agents and well defined heuristics.

I posted my thoughts on this subject with a link back to this entry at http://jroller.com/page/csterwa?entry=data_our_technological_debt.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Update on Live Toolbar</title>
		<link>http://devhawk.net/2006/03/16/update-on-live-toolbar/</link>
		<pubDate>Thu, 16 Mar 2006 10:59:38 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://86aafd1d-3ae2-428f-aa47-ccb31985b0e2</guid>
		<description></description>
		<content:encoded><![CDATA[<p>I <a href="http://devhawk.net/2006/03/10/Hawk+Eye+On+Live+Toolbar+First+Run+Experience.aspx">wrote last week</a> about the need for a better first run expereince for the new <a href="http://toolbar.live.com">Live Toolbar</a>. I just went to install the toolbar on my dev partition and lo and behold, the first run experience is fixed! It now presents a list of installable components with the most popular ones preselected. Much better.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>725</wp:post_id>
		<wp:post_date>2006-03-16 10:59:38</wp:post_date>
		<wp:post_date_gmt>2006-03-16 10:59:38</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>update-on-live-toolbar</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<category domain="post_tag" nicename="windows-live"><![CDATA[Windows Live]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[86aafd1d-3ae2-428f-aa47-ccb31985b0e2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Update+On+Live+Toolbar]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2006/03/16/Update+On+Live+Toolbar]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>The Annoying C# 3.0 &quot;Unsupported Version&quot; Dialog</title>
		<link>http://devhawk.net/2006/03/17/the-annoying-c-3-0-unsupported-version-dialog/</link>
		<pubDate>Fri, 17 Mar 2006 14:41:45 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://1f3ac744-fd2b-435b-b379-3d98a451ecb7</guid>
		<description></description>
		<content:encoded><![CDATA[<p>I am sick and tired of the warning dialog box for the <a href="http://download.microsoft.com/download/4/7/0/4703eba2-78c4-4b09-8912-69f6c38d3a56/linq%20preview.msi">C# 3.0 preview</a>. Every time you launch VS it pops up a dialog reading "This is an unsupported version of Microsoft Visual C# 3.0. As such many features may not work as expected." You know, this isn't my first time working with alpha or beta quality software. I'm also running <a href="http://msdn.microsoft.com/windowsvista/downloads/getthebeta/default.aspx">WinFX Feb CTP</a>, <a href="http://download.microsoft.com/download/b/3/1/b3141ee3-4a13-4061-a96e-4ae3c37ea0e0/LINQ%20VB%20Preview%20(Jan%202006).msi">VB 9.0 Jan CTP</a> and the <a href="http://www.microsoft.com/products/expression/en/interactive_designer/id_free_trial.aspx">Expression Interactive Designer March CTP</a>. None of them feel the need to constantly remind me that they're unsupported. </p><p>Who suddenly thought C# developers need hand holding?</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>726</wp:post_id>
		<wp:post_date>2006-03-17 14:41:45</wp:post_date>
		<wp:post_date_gmt>2006-03-17 14:41:45</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>the-annoying-c-3-0-unsupported-version-dialog</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="development"><![CDATA[Development]]></category>
		<category domain="post_tag" nicename="lanugages"><![CDATA[Lanugages]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[1f3ac744-fd2b-435b-b379-3d98a451ecb7]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[The+Annoying+C+30+Unsupported+Version+Dialog]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2006/03/17/The+Annoying+C+30+Unsupported+Version+Dialog]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>2336</wp:comment_id>
			<wp:comment_author><![CDATA[Cyrus Najmabadi]]></wp:comment_author>
			<wp:comment_author_email>cyrusn@microsoft.com</wp:comment_author_email>
			<wp:comment_author_url>http://blogs.msdn.com/cyrusn</wp:comment_author_url>
			<wp:comment_author_IP>24.18.158.57</wp:comment_author_IP>
			<wp:comment_date>2006-03-25 23:20:23</wp:comment_date>
			<wp:comment_date_gmt>2006-03-26 06:20:23</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi Devhawk!  I'm Cyrus, a developer on the C# team primarily responsible for IntelliSense.  I wanted to explain why you're getting this dialog and what our reasoning was for designing the preview this way.

You brought up some counter examples of preview software that doesn't behave the same way, however there's a subtle distinction i see between them and the preview we've released.  Simply put, it all comes down to support and "version numbers".  What do i mean by that?  Well, when you're running the WinFX February CTP there's absolutely no confusion for you or Product Support Services as to what you're running and what the support policy is for it.  If you contact PSS and say "i'm having a problem with the [insert product name]", they'll say "please go to [some location] and get the version number by looking at [something]".  This method works with all the many preview releases.  However, with the C# 3.0 preview we did things slightly different.  Notice that you're not pulling down an entirely new version of VS.  Instead, we're providing the preview "in place".  And, in actuality, all that happens is that exactly one dll on your machine is replaced with one of ours.  

As it turns out, this can lead to quite a support nightmare.  To both the user and the support teams this "frankenbuild" scenario is practically indistinguishable from the actual RTM release of Visual Studio 2005 (version 50727.42).  And, while you might remember that this is preview software for a while, after using it for several months will you still remember?  And, once you've forgotten, and you later on experience a crash (due to the highly alpha nature of this release) will you realize what's up?  Or will you contact PSS and go through a bunch of expensive rigamarole until, weeks later, someone finally realizes what's going on and why something is only happening on your machine and not on any others. 

Of course, when i say "you" i'm actually referring to the larger developer community out there.  *You* may actually be fine without the prompt, however we have to consider the larger group of developers out there that we're targetting.

We may consider removing the prompt in the future (or making it user configurable).  However, i have a distinct worry that people will download the preview, install it and later on totally forget that they've done this.  And when that happens and the user experiences crashes, instability, and data loss in a product that looks virtually indistinguishable from VS2005 then there can be a lot of angst and anger that can easily be avoided with just a simple dialog.

If you'd like to talk more about this, feel free to contact me through my blog (there's a "contact" link on that page).

In short, there was a conscious decision made around this and we did feel that this behavior was warrented since our preview was sufficiently different from others that MS has released.

Thanks for the feedback!

             -- Cyrus]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Overheard at SPARK</title>
		<link>http://devhawk.net/2006/03/19/overheard-at-spark/</link>
		<pubDate>Sun, 19 Mar 2006 20:48:24 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://319acb6e-a925-4501-aaf7-9a9df7defe0a</guid>
		<description></description>
		<content:encoded><![CDATA[<p>"Web 3.0 is Web 2.0 without the duct tape"   </p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>727</wp:post_id>
		<wp:post_date>2006-03-19 20:48:24</wp:post_date>
		<wp:post_date_gmt>2006-03-19 20:48:24</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>overheard-at-spark</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="spark"><![CDATA[Spark]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[319acb6e-a925-4501-aaf7-9a9df7defe0a]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Overheard+At+SPARK]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2006/03/20/Overheard+At+SPARK]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>2337</wp:comment_id>
			<wp:comment_author><![CDATA[Mike Sax]]></wp:comment_author>
			<wp:comment_author_email>mike@sax.net</wp:comment_author_email>
			<wp:comment_author_url>http://www.Sax.net/live/</wp:comment_author_url>
			<wp:comment_author_IP>67.171.157.234</wp:comment_author_IP>
			<wp:comment_date>2006-03-19 21:24:55</wp:comment_date>
			<wp:comment_date_gmt>2006-03-20 04:24:55</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Ah, you mean XAML! :)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>2338</wp:comment_id>
			<wp:comment_author><![CDATA[Keith J. Farmer]]></wp:comment_author>
			<wp:comment_author_email>kfarmer@microsoft.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>70.89.126.54</wp:comment_author_IP>
			<wp:comment_date>2006-03-25 12:36:51</wp:comment_date>
			<wp:comment_date_gmt>2006-03-25 19:36:51</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[No.. they mean Javascript.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Overheard at MIX</title>
		<link>http://devhawk.net/2006/03/20/overheard-at-mix/</link>
		<pubDate>Mon, 20 Mar 2006 19:22:20 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://564b4953-ccc2-48c2-9762-fc1df7fc86fe</guid>
		<description></description>
		<content:encoded><![CDATA[<p>"We would be happy if Firefox included WPF/e in their distro" and "There will be a version of WPF/e for Linux"</p><p>- Michael Wallent, <a href="https://content.mix06.com/content/SessionView.aspx?TopicID=e56fcd22-f22a-4efc-a031-15329248c68b">Windows Presentation Foundation (WPF): The Opportunity for WPF Applications in the Browser and Beyond session</a></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>728</wp:post_id>
		<wp:post_date>2006-03-20 19:22:20</wp:post_date>
		<wp:post_date_gmt>2006-03-20 19:22:20</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>overheard-at-mix</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="mix06"><![CDATA[MIX06]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[564b4953-ccc2-48c2-9762-fc1df7fc86fe]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Overheard+At+MIX]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2006/03/21/Overheard+At+MIX]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>CLR Everywhere</title>
		<link>http://devhawk.net/2006/03/22/clr-everywhere/</link>
		<pubDate>Wed, 22 Mar 2006 08:51:53 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://c1015410-a97c-415c-876c-e8ac9ac52515</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Big news from the Game Developers Conference this week is the XNA Framework. From the <a href="http://www.microsoft.com/XNA/3.20.2006.aspx">press release</a>:</p><blockquote dir="ltr" style="MARGIN-RIGHT: 0px"><p>The XNA Framework contains a custom implementation of the Microsoft® .NET Framework and new game-development-specific libraries designed to help game developers more easily create cross-platform games on Windows® and Xbox 360 using the highly productive C# programming language. Using the XNA Framework, game developers will benefit from the ability to re-use code and game assets in developing multiplatform titles, without sacrificing performance or flexibility. </p></blockquote><p dir="ltr">So now I can the Xbox to the list of personal technology I can program, joining my <a href="http://msdn.microsoft.com/netframework/programming/netcf/default.aspx">phone</a>, my <a href="http://msdn.microsoft.com/mce">TV</a>, my <a href="http://asp.net">server</a> and my <a href="http://msdn.microsoft.com/winfx/">laptop</a> all with C# or VB (<a href="http://weblogs.asp.net/brianbec/archive/2005/09/02/424335.aspx">VB plug</a> brought to you by <a href="http://weblogs.asp.net/brianbec/archive/2005/09/02/424335.aspx">Brian</a> and <a href="http://research.microsoft.com/~emeijer/">Erik</a> who think I should to switch). I wonder if XNA Framework will support WPF?</p><p dir="ltr">BTW, I still want an easy way to program my house and my car, but I'm sure those are coming. </p><p dir="ltr">Where else should the CLR live?</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>729</wp:post_id>
		<wp:post_date>2006-03-22 08:51:53</wp:post_date>
		<wp:post_date_gmt>2006-03-22 08:51:53</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>clr-everywhere</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="development"><![CDATA[Development]]></category>
		<category domain="post_tag" nicename="xbox"><![CDATA[Xbox]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[c1015410-a97c-415c-876c-e8ac9ac52515]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[CLR+Everywhere]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2006/03/22/CLR+Everywhere]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>2339</wp:comment_id>
			<wp:comment_author><![CDATA[orcmid]]></wp:comment_author>
			<wp:comment_author_email>dennis.hamilton@acm.org</wp:comment_author_email>
			<wp:comment_author_url>http://orcmid.com/blog/</wp:comment_author_url>
			<wp:comment_author_IP>216.160.65.145</wp:comment_author_IP>
			<wp:comment_date>2006-03-22 11:34:15</wp:comment_date>
			<wp:comment_date_gmt>2006-03-22 18:34:15</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[The opening video for the DVD is cool, as is making the DVD experience part of the XNA page on MSDN.  That looks fascinating.  (Not having a machine without production on it, I didn't click the install button.)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>2340</wp:comment_id>
			<wp:comment_author><![CDATA[Christian Weyer]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://blogs.thinktecture.com/cweyer/</wp:comment_author_url>
			<wp:comment_author_IP>217.228.113.28</wp:comment_author_IP>
			<wp:comment_date>2006-03-22 11:34:44</wp:comment_date>
			<wp:comment_date_gmt>2006-03-22 18:34:44</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Of course, SPOT on!
http://www.windowsfordevices.com/news/NS4666205829.html]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>2341</wp:comment_id>
			<wp:comment_author><![CDATA[David White]]></wp:comment_author>
			<wp:comment_author_email>dwhite@gsdtelematics.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.gsdtelematics.com</wp:comment_author_url>
			<wp:comment_author_IP>68.77.160.211</wp:comment_author_IP>
			<wp:comment_date>2006-03-23 07:33:04</wp:comment_date>
			<wp:comment_date_gmt>2006-03-23 14:33:04</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[You will be able to program against your car in .Net as soon as we can get the hardware finished ;-) Check it out in about 30 days!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>2342</wp:comment_id>
			<wp:comment_author><![CDATA[mp3 blog]]></wp:comment_author>
			<wp:comment_author_email>mp3blog@yahoo.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.3mp3search.com/</wp:comment_author_url>
			<wp:comment_author_IP>217.10.38.27</wp:comment_author_IP>
			<wp:comment_date>2006-04-03 04:47:36</wp:comment_date>
			<wp:comment_date_gmt>2006-04-03 11:47:36</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[nice to hear that]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Identity Woman</title>
		<link>http://devhawk.net/2006/03/24/identity-woman/</link>
		<pubDate>Fri, 24 Mar 2006 00:16:42 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://d41d7142-f297-4446-b4a3-3855cb2927ef</guid>
		<description></description>
		<content:encoded><![CDATA[<p>I've been to Mashup Camp, ETech and MIX in the past month and a half. So has Kaliya, otherwise known as <a href="http://www.kaliyasblogs.net/Iwoman/">Identity Woman</a>. She calls MS out for a <a href="http://www.identitywoman.net/?p=296">http://www.identitywoman.net/?p=296</a> as well as the <a href="http://www.identitywoman.net/?p=293">lack of an official wiki for the event</a>. She's right on both counts. I thought some of the logistics of ETech were suspect, but they sure did assume that every single attendee would need power and laid out power strips accordingly. </p><p>I kept seeing Kaliya at these events, but I didn't get to meet her until she came to the SPARK @ MIX session Monday afternoon. She's one of the organizers of the <a href="http://www.windley.com/events/iiw2006a/announcement.shtml">Internet Identity Workshop</a>. Sounds like a cool event, but it's right before my daughter Rileyanne's first birthday and you know <a href="http://spaces.msn.com/techiewife">Jules</a> would NEVER forgive me for missing that. </p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>730</wp:post_id>
		<wp:post_date>2006-03-24 00:16:42</wp:post_date>
		<wp:post_date_gmt>2006-03-24 00:16:42</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>identity-woman</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="etech"><![CDATA[ETech]]></category>
		<category domain="post_tag" nicename="mix06"><![CDATA[MIX06]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[d41d7142-f297-4446-b4a3-3855cb2927ef]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Identity+Woman]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2006/03/24/Identity+Woman]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>The Dual Schema Problem</title>
		<link>http://devhawk.net/2006/03/28/the-dual-schema-problem/</link>
		<pubDate>Tue, 28 Mar 2006 15:35:03 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://3e4f284e-9be2-491c-aee3-dd427ced2020</guid>
		<description></description>
		<content:encoded><![CDATA[A few months ago, Ted Neward wrote a <a href="http://msdn.microsoft.com/library/en-us/dndotnet/html/linqcomparisons.asp">great article</a> about the history of the Object Relational Impedance Mismatch problem and how <a href="http://msdn.microsoft.com/netframework/future/linq">LINQ</a> is addressing it in a new way. Basically, LINQ is introducing new language abstractions and complementary libraries to enable queries as a first class concept within the language. However, I don't believe that O/R Impedance Mismatch is the whole problem. More specifically, it's a follow-on problem to what I would call the Dual Schema problem.

In a nutshell, the Dual Schema problem is that you have to design and implement two separate versions of your persistent entities. There's the in memory version, typically written in an OO language like C# or Java. Then there's the on disk version, typically written in SQL. Regardless of the difficulties translating between the two versions (i.e. the aforementioned impedance mismatch), you have to first deal with the complexity of keeping the two versions in sync. While LINQ does a great job eliminating much of the friction translating between on disk and in memory formats, it could go much farther by eliminating the need for translation in the first place.

A variety of solutions to the Dual Schema problem have evolved, primarily outside the hallowed halls of enterprise vendors (i.e. MS and others like us). One such solution is <a href="http://www.rubyonrails.com/">Ruby on Rails</a>. In a Rails environment, I simply declare the existence of a given persistent entity:
<pre class="brush:ruby">class Person &lt; ActiveRecord::Base
end</pre>
The ActiveRecord base class (a standard part of Rails) will dynamically create methods and attributes on the Person object at runtime, based on the schema of the People table in the database. (Rails is smart enough to understand English plurals, hence the automatic connection of Person and People.) So technically there are still two schemas, but the in-memory version is automatically derived of the on-disk version.

(Note, DLinq provides a conceptually similar tool - SqlMetal - that can generate the static types from a given database schema. However, as static types they have to be defined at compile time. So while SqlMetal reduces the effort to keep schemas in sync, it doesn't eliminate it the way Rails does.)

By slaving the object schema to the database schema, Rails essentially solves the Dual Schema problem. The problem with the Rails approach is that defining a database schema requires a significant amount of skill and effort. Defining classes is typically trivial in comparison.The fact Rails allows you to implement a persistent entity with almost no code doesn’t help you much if you have to write and maintain a ton of SQL code to define your database schema.

I believe the Rails model is actually backwards. It would be much better for the developer if they could define their persistent entity in code and slave the database schema to the object model instead of the other way around.

Of course, this approach isn't exactly news. In his article, Ted writes of the rise and fall of OO database management systems, which were supposed to solve the Dual Schema and Impedance Mismatch problems. I'm certainly not suggesting a return to the heyday of OODBMS. However, one of the reasons Ted points out OODBMS failed was because big companies were already wedded to RDBMS. But those big companies are the short head. As you move down the <a href="http://bnoopy.typepad.com/bnoopy/2005/03/the_long_tail_o.html">long tail of software</a>, relational database as the primary storage paradigm makes less and less sense. For the vast majority of applications, relational databases are overkill.

Ted's other point about OODBMS is that loose coupling between the data store and the in memory representation is a feature, not a flaw. He's totally right. But can't we advance the state of the art in database typing to the level of modern day OO languages? How about eliminating anachronisms like fixed length strings? What if we derive the database schema from the object model - Rails in reverse if you will - but is still loosely coupled enough to allow for schema evolution?

An example of this code-centric model for data storage is <a href="http://www.garret.ru/~knizhnik/consus.html">Consus</a>. It’s written by Konstantin Knizhnik, who has written a bunch of <a href="http://www.garret.ru/~knizhnik/databases.html">open source, object-oriented and object-relational databases</a> across a wide variety of languages and execution environments, including CLR. Consus is actually written in Java, but he provides version compiled for .NET using <a href="http://msdn.microsoft.com/vjsharp/">Visual J#</a>. Consus lets you to define your data either as tables or objects. So you can do this:
<pre class="brush:java">Statement st = db.createStatement();
st.executeUpdate("create table Person (name string, address string, salary bigint)");
st.executeUpdate("insert into Person values ('John Smith', '1 Guildhall St.', 75000)");
ResultSet rs = st.executeQuery("select name, address, salary from Person where salary &gt; 100000");</pre>
Or you can do this:
<p style="font-family: 'Courier New';"><span style="font-family: Georgia, 'Bitstream Charter', serif;">
<pre class="brush:java">class Person {
    String name;
    String address;
    long salary;
    Person(String aName, long aSalary, String aAddress) {
        name = aName;
        salary = aSalary;
        address = aAddress;
    }
};

Person p = new Person("John Smith", 75000, "1 Guildhall St.");
ConsusStatement st = db.createStatement();
stmt.insert(p);
ConsusResultSet cursor = (ConsusResultSet)st.executeQuery(
    "select from Person where salary &gt; 100000");
</pre>
Consus also handles OO concepts like derivation and containment. Of course, the embedded queries are ugly, but you could imagine DLinq style support for Consus. In fact, one of the primary issues with Consus is that it supports both object and tuple style queries. When you explicitly request tables (i.e. "select name, address salary from Person"), you’ve got a tuple style query. When you don’t (i.e. "select from Person”) you’ve got an object style query. Of course, the issues with tuple style queries are well documented in Ted’s article and is exactly the problem that LINQ is designed to solve.</span></p>
(Konstantin, if you’re reading this, <a href="mailto:harry.pierson@microsoft.com">drop me a line</a> and I’ll look into getting you hooked up with the LINQ folks if you’re interested in adding LINQ support to Consus.NET.)

The tradeoff between the Rails approach and the Consus approach is one of performance. I have a ton of respect for Konstantin and the work he’s done on Consus and other OO and OR databases available from his site. However, I sure the combined developer forces at major database vendors like Microsoft (and other DB companies) means SQL Server (and the like) will out perform Consus by a significant margin, especially on large scale databases. So if execution performance is your primary criteria, the Ruby on Rails approach is better (leaving aside discussion of the Ruby runtime itself). However, in the long run execution performance is much less important than developer productivity. So I believe that &nbsp;for all the current interest in Rails, I think a Consus-style model will become dominant.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>731</wp:post_id>
		<wp:post_date>2006-03-28 15:35:03</wp:post_date>
		<wp:post_date_gmt>2006-03-28 15:35:03</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>the-dual-schema-problem</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="database"><![CDATA[Database]]></category>
		<category domain="category" nicename="development"><![CDATA[Development]]></category>
		<category domain="post_tag" nicename="scripting"><![CDATA[Scripting]]></category>
		<category domain="post_tag" nicename="web-2-0"><![CDATA[Web 2.0]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[3e4f284e-9be2-491c-aee3-dd427ced2020]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[The+Dual+Schema+Problem]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2006/03/28/The+Dual+Schema+Problem]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>2343</wp:comment_id>
			<wp:comment_author><![CDATA[David]]></wp:comment_author>
			<wp:comment_author_email>david.ing@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.from9till2.com</wp:comment_author_url>
			<wp:comment_author_IP>81.159.21.197</wp:comment_author_IP>
			<wp:comment_date>2006-03-29 04:49:58</wp:comment_date>
			<wp:comment_date_gmt>2006-03-29 11:49:58</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[>So I believe that  for all the current interest in Rails, I think a Consus-style model will become dominant.

Hmm, I'm not so sure, in the long run the Rails 'model by convention' is the simplest form of solution, and we've seen how powerful/persuasive the 'simplest' can be in getting the mass adoption going, i.e. say RSS vs ATOM, RDBMS vs OODBMS, POX vs SOAP. So, not being a zealot but just pointing out that I've seen a lot of great ideas/tech fall away due to not being the 'shortest/simplest path'.

Also, just for thoughts, the 'Dual Schema' is often more than just 2 views on the same thing. If you think CLR -> XML, CLR -> RDB, myXML -> yourXML, then you end up with a few combinations. The 'canonical schema' could be defined in the code-first way, but that has always led to compromises for other non-OO representations. Hence the constant mapping issues. A model is needed, but getting the model accepted as part of a decent/productive dev process is the trick.

The impedance you talk about can refer to web services/xsd/messages just as much as it can mean RDB mapping. 

Also (since I'm typing), databases are, I agree, an overkill for a lot of apps, but they aren't just used for storage - aspects like concurrency (awkward in mainstream programming) and transactions come along for the ride and make it worth the while. Also, an app that doesnt require a full RDBMS at the beginning of its life tends to convert over badly when it does need it, hence the convention of just using the 'littlest RDBMS' you can find rather than changing paradigm when you get bigger.

PS See you at TechEd Harry.

- David]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>2344</wp:comment_id>
			<wp:comment_author><![CDATA[Alex]]></wp:comment_author>
			<wp:comment_author_email>Alex@base4.net</wp:comment_author_email>
			<wp:comment_author_url>http://www.base4.net</wp:comment_author_url>
			<wp:comment_author_IP>219.89.81.114</wp:comment_author_IP>
			<wp:comment_date>2006-03-29 22:28:59</wp:comment_date>
			<wp:comment_date_gmt>2006-03-30 05:28:59</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[One thing that I think is vital going forward is to provide the ability to create Schemas that reference other Schemas. This becomes particularly valuable when talking to existing Legacy databases. The process is this:
1) Make a schema for the legacy database
2) Make a new schema to support new functionality that references (1). 
This is the approach taken by WinFS, and indeed my own open source product Base4. 

PS: I'm not sure if I understand you correctly but by my reckoning WinFS slaves both the Database and the CLR objects to the WinFS schema, does that mean you have just one schema?
]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>RubyNet Project</title>
		<link>http://devhawk.net/2006/04/06/rubynet-project/</link>
		<pubDate>Thu, 06 Apr 2006 10:59:42 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://f4ce5882-77b1-4f05-b435-6f659414f0e8</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Having written about Ruby in the scope of the <a href="http://devhawk.net/2006/03/15/Compiler+Dev+Lab++Scripting.aspx">Compiler Dev Lab</a> and the <a href="http://devhawk.net/2006/03/28/The+Dual+Schema+Problem.aspx">Dual Schema Problem</a>, I was interested to come across the <a href="http://www.plas.fit.qut.edu.au/rubynet/">Ruby.NET project</a> from <a href="http://www.fit.qut.edu.au/">Queensland University of Technology</a>. From the Ruby.NET home page:</p><blockquote dir="ltr" style="MARGIN-RIGHT: 0px"><p>Our goal is to create a compiler for the Ruby language that targets the .NET CLR. We aim to support 100% of Ruby language semantics, including all dynamic constructs such as closures and continuations. We plan to generate 100% managed and verifiable CIL code. </p></blockquote><p dir="ltr">Sweet!</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>732</wp:post_id>
		<wp:post_date>2006-04-06 10:59:42</wp:post_date>
		<wp:post_date_gmt>2006-04-06 10:59:42</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>rubynet-project</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="ruby"><![CDATA[Ruby]]></category>
		<category domain="post_tag" nicename="scripting"><![CDATA[Scripting]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<category domain="post_tag" nicename="web-2-0"><![CDATA[Web 2.0]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[f4ce5882-77b1-4f05-b435-6f659414f0e8]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[RubyNet+Project]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2006/04/06/RubyNet+Project]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>2345</wp:comment_id>
			<wp:comment_author><![CDATA[Larry O'Brien]]></wp:comment_author>
			<wp:comment_author_email>lobrien@email.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.knowing.net/</wp:comment_author_url>
			<wp:comment_author_IP>24.94.77.148</wp:comment_author_IP>
			<wp:comment_date>2006-04-06 12:03:24</wp:comment_date>
			<wp:comment_date_gmt>2006-04-06 19:03:24</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[That project page has been up for a _long_ time, although I see that they are now hoping for an alpha in the coming months. In the meantime, check out John Lam's Ruby-CLR bridge, which is rapidly evolving: http://www.iunknown.com/]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>2346</wp:comment_id>
			<wp:comment_author><![CDATA[DevHawk]]></wp:comment_author>
			<wp:comment_author_email>harry@devhawk.net</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>131.107.0.102</wp:comment_author_IP>
			<wp:comment_date>2006-04-06 17:49:36</wp:comment_date>
			<wp:comment_date_gmt>2006-04-07 00:49:36</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[It was news to me! As for RubyCLR, I was aware of it, but thanks for the pointer anyway.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>LINQ + WAP == Coolness</title>
		<link>http://devhawk.net/2006/04/06/linq-wap-coolness/</link>
		<pubDate>Thu, 06 Apr 2006 17:48:43 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://495490e7-335d-4eed-8f03-6b4512fe9601</guid>
		<description></description>
		<content:encoded><![CDATA[I never really missed <a href="http://msdn.microsoft.com/asp.net/reference/infrastructure/wap/default.aspx">Web Application Project</a> support in VS05 until I realized what I could do with it. I've been experimenting with LINQ and wanted to be able to use it in a web application I'm prototyping. Under the file system model, there's no easy way to change the compiler used for dynamic compilation of web pages. With WAP, it's no problem.

If you've got both WAP and LINQ installed, you can enable LINQ support in your web apps by doing the folllowing.
<ol>
	<li>Open your WebApp.csproj file in notepad.</li>
	<li>Add references to System.Query, System.Data.DLinq and System.Xml.XLinq.</li>
	<li>Change the Target Import element to import "$(ProgramFiles)LINQ PreviewMiscLinq.targets" instead of "$(MSBuildBinPath)Microsoft.CSharp.targets"</li>
</ol>
That's it! Seems simple, but it let me bind a GridView to the following function:

&nbsp;
<pre class="brush:csharp">public static IEnumerable GetTitles()
{
  var con = new SqlConnection(Properties.Settings.Default.PubsConString);
  var db = new Pubs(con);
  var q = from t in db.Titles select t;

  return q;
}</pre>
&nbsp;

It would be even cooler if I could simply write that query in the conext of the ObjectDataSource, but of course ObjectDataSource doesn't know about LINQ. I imagine a LinqDataSource would be a logical next step.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>733</wp:post_id>
		<wp:post_date>2006-04-06 17:48:43</wp:post_date>
		<wp:post_date_gmt>2006-04-06 17:48:43</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>linq-wap-coolness</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="development"><![CDATA[Development]]></category>
		<category domain="post_tag" nicename="linq"><![CDATA[LINQ]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[495490e7-335d-4eed-8f03-6b4512fe9601]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[LINQ+WAP+Coolness]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2006/04/07/LINQ+WAP+Coolness]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>2347</wp:comment_id>
			<wp:comment_author><![CDATA[Steve Eichert]]></wp:comment_author>
			<wp:comment_author_email>steve.eichert@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://steve.emxsoftware.com/</wp:comment_author_url>
			<wp:comment_author_IP>198.139.157.254</wp:comment_author_IP>
			<wp:comment_date>2006-04-07 05:32:51</wp:comment_date>
			<wp:comment_date_gmt>2006-04-07 12:32:51</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Have you seen Andres post on DLinq ASP.NET Build providers [1]?  He had some issues with creating an object data source because of some limitations in ASP.NET's support for generics but it sounds like he's doing some interesting stuff.

http://weblogs.asp.net/aaguiar/archive/2005/12/14/433143.aspx]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Talking Dynamic Lanugages with Neal Ford</title>
		<link>http://devhawk.net/2006/04/14/talking-dynamic-lanugages-with-neal-ford/</link>
		<pubDate>Fri, 14 Apr 2006 07:42:43 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://abc47a35-d16b-43d9-ba92-550187d382e9</guid>
		<description></description>
		<content:encoded><![CDATA[<p>I spent a couple of hours chatting with <a href="http://memeagora.blogspot.com/">Neal Ford</a> from <a href="http://www.thoughtworks.com/">ThoughtWorks</a> yesterday. <a href="http://blogs.tedneward.com/">Ted Neward</a> had virtually introduced us a few months ago and he was in town for <a href="http://timheuer.com/blog/archive/2006/04/11/9596.aspx">MTS</a>, so he arranged a meeting. I had asked Ted to introduce me to some dynamic language folks for some research and public debate purposes, and Neal was one of the people he hooked me up with. Unfortunately, this was right before I <a href="http://devhawk.net/2006/01/24/Architect+On+The+Edge.aspx">changed roles</a> and got real busy. Of course, dynamic languages in general and <a href="http://www.ruby-lang.org/en/">Ruby</a> in particular plays a large role in Edge Architecture, so I’m thankful Neal took the time to drop me a line and meet with me.</p><p>Above all else, talking to Neal made me realize that I just don’t know enough about dynamic languages, which limits my ability to discuss them. To date, I’ve flirted with them, but haven’t made a real commitment. For example, I’ve played around with <a href="http://instantrails.rubyforge.org/">Instant Rails</a>, but hadn’t actually <a href="http://rubyforge.org/projects/rubyinstaller/">installed Ruby</a> yet. It was time to re-image my dev partition anyway, so I’m going to try using Ruby exclusively for a while.</p><p>Here’s a brain dump of some of what we talked about. Not sure what it all means yet, so I’ll try and refrain from making commentary.</p><ul><li>Hungarian notation for interfaces (i.e. ISomething) is a big <a href="http://en.wikipedia.org/wiki/Code_smell">code smell</a>. This has nothing really to do with Ruby or dynamic languages, but it’s an important point that I wanted to include here. Neal’s point is that the interface defines the semantics of the type and the concrete class is an “implementation detail”. In other words, contract-first isn’t just for web services. Apparently, ThoughtWorks doesn’t use ADO.NET directly primarily because the interfaces “aren’t pervasive enough” and are difficult to mock out. Also, they’re using <a href="http://www.ayende.com/projects/rhino-mocks.aspx">Rhino Mocks</a> which I wasn’t previously aware of.</li><li>For all the debate about static vs. dynamic languages, it seems like the value Ruby brings is in meta-programming rather than dynamic typing. Certainly, that’s one of the big differentiators for Ruby vs. other dynamic languages like Python. While <a href="http://www.rubyonrails.com/">Rails</a> has pushed the popularity of Ruby thru the roof recently, Neal seems much more enamored with Ruby than Rails. </li><li>There is an even bigger gulf between dynamic and static typing proponents than I had thought. I brought up <a href="http://research.microsoft.com/os/singularity/">Singularity</a>, which uses static typing exclusively to deliver a provably dependable system. Neal disagreed with that approach, pointing out that “tests are the best way of encoding the specification of the system” rather than compile time checking. Given my lack of expertise in this space, I’m withholding comment (for now) but I’m guessing the truth is somewhere in the middle.</li><li>However, while the dynamic vs. static typing gulf is big, meta-programming is potentially the bridge. I don’t believe meta-programming is exclusive to dynamic languages. Certainly, some of the new features in the “Orcas” versions of C# and VB bring more expressiveness to the languages while still remaining type safe. </li><li>All this meta-programming leads to domain specific languages. Ruby has strong support what <a href="http://martinfowler.com/">Martin Fowler</a> called “<a href="http://martinfowler.com/articles/languageWorkbench.html#InternalDsl">internal DSLs</a>”, but Neal thought over time the focus would shift to <a href="http://martinfowler.com/articles/languageWorkbench.html#ExternalDsl">external DSLs</a> as they are more expressive and not constrained by the semantics of an existing language. Obviously, we’re pretty <a href="http://msdn.microsoft.com/vstudio/dsltools/">heavily focused</a> on DSLs. However, Neal did think our focus on graphical DSLs is misplaced. He called them a “hangover” from CASE/UML tools. He rightfully pointed out that “business analysis speak English”. </li></ul><p>All in all, it was time well spent. Neal, I hope we can pick up the conversation again sometime.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>734</wp:post_id>
		<wp:post_date>2006-04-14 07:42:43</wp:post_date>
		<wp:post_date_gmt>2006-04-14 07:42:43</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>talking-dynamic-lanugages-with-neal-ford</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="architecture"><![CDATA[Architecture]]></category>
		<category domain="category" nicename="development"><![CDATA[Development]]></category>
		<category domain="post_tag" nicename="lanugages"><![CDATA[Lanugages]]></category>
		<category domain="post_tag" nicename="modelling"><![CDATA[Modelling]]></category>
		<category domain="post_tag" nicename="ruby"><![CDATA[Ruby]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[abc47a35-d16b-43d9-ba92-550187d382e9]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Talking+Dynamic+Lanugages+With+Neal+Ford]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2006/04/14/Talking+Dynamic+Lanugages+With+Neal+Ford]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Why&#039;s (Poignant) Guide to Ruby</title>
		<link>http://devhawk.net/2006/04/14/whys-poignant-guide-to-ruby/</link>
		<pubDate>Fri, 14 Apr 2006 21:07:08 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://613057aa-265c-4956-b307-b90cb3734351</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Even if you don't care a lick about <a href="http://ruby-lang.org/en/">Ruby</a>, you should read <a href="http://poignantguide.net/ruby/">Why’s (Poignant) Guide to Ruby</a>. It is by far the most facinating (and freaky) technical book I've ever read. </p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>735</wp:post_id>
		<wp:post_date>2006-04-14 21:07:08</wp:post_date>
		<wp:post_date_gmt>2006-04-14 21:07:08</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>whys-poignant-guide-to-ruby</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="ruby"><![CDATA[Ruby]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[613057aa-265c-4956-b307-b90cb3734351]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Whys+Poignant+Guide+To+Ruby]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2006/04/15/Whys+Poignant+Guide+To+Ruby]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Alex the Great</title>
		<link>http://devhawk.net/2006/04/15/alex-the-great/</link>
		<pubDate>Sat, 15 Apr 2006 17:35:14 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://b280938e-e357-4330-9bb2-cfdaab148482</guid>
		<description></description>
		<content:encoded><![CDATA[My brother sent me this <a href="http://video.google.com/videoplay?docid=3957094422427700341">great compliation video</a> of <a href="http://www.washingtoncaps.com/team/player.asp?player_id=17">Alexander Ovechkin's</a> first year in the NHL. In the words of Barry Melrose, the <a href="http://www.nhl.com/hockeyu/history/trophies/calder.html">Calder Trophy</a> has been a one man race for some time now. Congrats to Alex on being only the second rookie to score 50 goals and 100 points his first season. 
<p></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>736</wp:post_id>
		<wp:post_date>2006-04-15 17:35:14</wp:post_date>
		<wp:post_date_gmt>2006-04-15 17:35:14</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>alex-the-great</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="hockey"><![CDATA[Hockey]]></category>
		<category domain="category" nicename="sports"><![CDATA[Sports]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[b280938e-e357-4330-9bb2-cfdaab148482]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Alex+The+Great]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2006/04/16/Alex+The+Great]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>ActiveRecord::Migration</title>
		<link>http://devhawk.net/2006/04/18/activerecordmigration/</link>
		<pubDate>Tue, 18 Apr 2006 15:22:14 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://d47d414a-96aa-4766-9333-bd01c3b65ac8</guid>
		<description></description>
		<content:encoded><![CDATA[<p>When I wrote about the <a href="http://devhawk.net/2006/03/28/The+Dual+Schema+Problem.aspx">Dual Schema</a> problem a few weeks ago, I specifically wrote that the <a href="http://www.rubyonrails.com">Rails</a> model is backwards because it derives the in-memory schema from the database schema. While I still believe that, Rails' <a href="http://api.rubyonrails.org/classes/ActiveRecord/Migration.html">ActiveRecord::Migration</a> library does make it significantly easier to manage the database from Ruby code. For those not familiar, ActiveRecord::Migration is a series of Ruby script files that define the database schema. Inside each migration script is an up and down method, so you can migrate forward and backward in the history of your project. And it provides easy to use abstractions such as create_table and add_column so you don't have to geek out on SQL syntax (unless you want to). Once you have a collection of these scripts, simply calling "rake migrate" will bring your database instance up to the current schema (<a href="http://martinfowler.com/articles/rake.html">rake</a> is Ruby's equivalent of make). Or, you can set your database to a specific version of the schema by running "rake migrate VERSION=X". </p><p>I wonder why the <a href="http://www.onlamp.com/pub/a/onlamp/2005/01/20/rails.html">Rolling on Rails</a> tutorial uses the database tools directly instead of ActiveRecord::Migrate? I'm thinking it wasn't available when the tutorial was written. Whatever the reason, they really should update the tutorial to reflect the current state of Rails.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>737</wp:post_id>
		<wp:post_date>2006-04-18 15:22:14</wp:post_date>
		<wp:post_date_gmt>2006-04-18 15:22:14</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>activerecordmigration</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="database"><![CDATA[Database]]></category>
		<category domain="post_tag" nicename="ruby"><![CDATA[Ruby]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[d47d414a-96aa-4766-9333-bd01c3b65ac8]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[ActiveRecordMigration]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2006/04/18/ActiveRecordMigration]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>2348</wp:comment_id>
			<wp:comment_author><![CDATA[Robby Russell]]></wp:comment_author>
			<wp:comment_author_email>robby@planetargon.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.robbyonrails.com</wp:comment_author_url>
			<wp:comment_author_IP>67.160.164.97</wp:comment_author_IP>
			<wp:comment_date>2006-04-19 11:28:54</wp:comment_date>
			<wp:comment_date_gmt>2006-04-19 18:28:54</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Correct, ActiveRecord migrations were added early last fall and those articles are about a year old. :-)

]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Apparently, Microsoft Delivered on Enterprise 2.0 Three Years Ago</title>
		<link>http://devhawk.net/2006/04/18/apparently-microsoft-delivered-on-enterprise-2-0-three-years-ago/</link>
		<pubDate>Tue, 18 Apr 2006 14:46:49 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://7ff8e0c4-8421-44ae-bfc5-c29df6c33702</guid>
		<description></description>
		<content:encoded><![CDATA[<p>In the past few weeks, there’s been a major uptick in discussion about Web 2.0 / Enterprise convergence. <a href="http://blog.hbs.edu/faculty/amcafee">Andrew McAfee</a> has a <a href="http://sloanreview.mit.edu/smr/issue/2006/spring/06/">new article</a> on what he calls Enterprise 2.0. <a href="http://web2.wsj2.com/">Dion’s</a> got an <a href="http://blogs.zdnet.com/Hinchcliffe">entire blog</a> on the subject, though <a href="http://web2.wsj2.com/democratization_of_content_with_web_20_the_emergent_vs_delib.htm">he thinks</a> it should be called Enterprise Web 2.0. <a href="http://www.roughtype.com/">Nicholas Carr</a> is <a href="http://www.roughtype.com/archives/2006/04/is_web_20_enter.php">skeptical</a>. Seems to me all this discussion about what <i>might</i> happen in this space is pretty silly since it’s <u>happened already</u>.</p><p>Unfortunately, Andrew’s Enterprise 2.0 isn’t freely available (you can buy a copy of the PDF for $6.50), but it primarily focuses on the growing frustration with email and the rise of collaborative Web 2.0 technologies such as blogs and wikis inside the enterprise. No big shock here – for collaboration, blogs and wikis are to email what word processors are to typewriters. Andrew also introduces a model he calls SLATES for describing the aspects of these technologies: Search, Links, Authorship, Tags, Extensions and Signals. So far, all good stuff.</p><p>The problem with the article is that he talks about these technologies in the future tense. For example, he writes: "As technologists build Enterprise 2.0 technologies that incorporate the SLATES components" which implies that these are coming down the pipe rather than here right now. Not only here right now, but available for going on three years. I’m talking about SharePoint 2003. 2003 as in "a year before <a href="http://www.oreillynet.com/pub/a/oreilly/tim/news/2005/09/30/what-is-web-20.html">Tim O’ Reilly coined the term Web 2.0</a>".</p><p>SharePoint (I’m talking primarily about the <a href="http://www.microsoft.com/windowsserver2003/technologies/sharepoint/default.mspx">free feature pack</a> for Windows Server 2003 though about the <a href="http://www.microsoft.com/office/sharepoint/prodinfo/default.mspx">portal server</a> as well) supports Search, Links, Authorship and Signals – four of the six components of Andrew’s Enterprise 2.0 stack. (And frankly, I'm not sure where Andrew is going w/ his Extensions aspect so four out of five is probably more accurate.) More importantly, it’s specifically designed to support what Dion called the <a href="http://web2.wsj2.com/democratization_of_content_with_web_20_the_emergent_vs_delib.htm">Democratization of Content</a>. As of December 2004, Microsoft’s internal IT department <a href="http://www.microsoft.com/technet/itsolutions/msit/infowork/spsperfnote.mspx">was supporting</a> "more than 60,000 users, 250 group and division portals, 50,000 team sites, and manages more than 3 terabytes of information." Personally, I use the coportate enterprise intranet portal, my division portal, a handful of team sites and my personal site on a pretty much daily basis. Only the enterprise and division portal are centrally managed. Given the explosion of SharePoint sites inside Microsoft, I'm obviously not alone.</p><p>Creating a new SharePoint team site inside Microsoft is totally self service and takes literally a few seconds. Once you have a site, you can configure it as you like, creating lists and setting permissions as you see fit. Again, it’s totally self service. Plus, it’s totally public unless you specifically lock it down (well, public inside the firewall at any rate). Of course, it could be easier and better, and that’s what next versions are for. SharePoint 2007 will have <a href="http://blogs.msdn.com/pjhough/archive/2005/09/23/473198.aspx">direct support</a> for blogs, wikis and RSS. Check out the <a href="http://channel9.msdn.com/showpost.aspx?postid=115383">C9 video</a> for more info.</p><p>Given the <a href="http://www.microsoft.com/presspass/features/2006/jan06/01-20SharePointServices.mspx">market momentum</a> to date and the <a href="http://www.microsoft.com/office/preview/default.mspx">impending release</a> of a new version, I find it very surprising to find Dion, Andrew and Nicholas discussing the potential ramifications of these technologies without even mentioning SharePoint. If these guys want to see the Enterprise 2.0 technology in action, all they need to do install SharePoint.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>738</wp:post_id>
		<wp:post_date>2006-04-18 14:46:49</wp:post_date>
		<wp:post_date_gmt>2006-04-18 14:46:49</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>apparently-microsoft-delivered-on-enterprise-2-0-three-years-ago</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="development"><![CDATA[Development]]></category>
		<category domain="post_tag" nicename="sharepoint"><![CDATA[SharePoint]]></category>
		<category domain="post_tag" nicename="web-2-0"><![CDATA[Web 2.0]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[7ff8e0c4-8421-44ae-bfc5-c29df6c33702]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Apparently+Microsoft+Delivered+On+Enterprise+20+Three+Years+Ago]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2006/04/18/Apparently+Microsoft+Delivered+On+Enterprise+20+Three+Years+Ago]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>2349</wp:comment_id>
			<wp:comment_author><![CDATA[Troy Phillips]]></wp:comment_author>
			<wp:comment_author_email>troy.phillips@zettaserve.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.zettaserve.com</wp:comment_author_url>
			<wp:comment_author_IP>203.48.119.103</wp:comment_author_IP>
			<wp:comment_date>2006-04-18 22:14:20</wp:comment_date>
			<wp:comment_date_gmt>2006-04-19 05:14:20</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I am very positive about SharePoint v3 (is it WSS 2007 too?) and will be keen to evaluate it once it is released. I really think that it has the potential to be Microsofts "next Exchange" (not to replace Exchange, but to be a reason to use Windows Servers/domain like Exchange currently is).

That said, the current version doesn't answer the Enterprise 2.0 problem as it stands. We attempted to use SPS 2003 as our sole source of collaboration/info storage and have had to back away from that. It really did not suit the storage of non-document information well (out of the box), so we have implemented mediwiki for this. I really look forward to investigating SPS 2007 and wish that MS had some sort of interim release that could have given us some of this functionality.

ps - I read a number of MS blogs and I have got the impression that there is still plenty of "collaboration via email" happening internally. Don't just look at the fact that lots of people are using the new product, but also find out why lots aren't.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>2350</wp:comment_id>
			<wp:comment_author><![CDATA[Ross Mayfield]]></wp:comment_author>
			<wp:comment_author_email>goobox@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://ross.typepad.com</wp:comment_author_url>
			<wp:comment_author_IP>71.132.221.178</wp:comment_author_IP>
			<wp:comment_date>2006-04-23 16:27:38</wp:comment_date>
			<wp:comment_date_gmt>2006-04-23 23:27:38</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Apparently nobody is going to call you on this, not sure if you have read the article yet, but it really is a stretch to say that Sharepoint delivers Enterprise 2.0.  v3 should get it there, however.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>2351</wp:comment_id>
			<wp:comment_author><![CDATA[David]]></wp:comment_author>
			<wp:comment_author_email>david.ing@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.from9till2.com</wp:comment_author_url>
			<wp:comment_author_IP>81.151.37.205</wp:comment_author_IP>
			<wp:comment_date>2006-05-31 15:53:04</wp:comment_date>
			<wp:comment_date_gmt>2006-05-31 22:53:04</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Some of us are trying to 'Enterprise 2.0' email... ;-)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Lang.NET 2006</title>
		<link>http://devhawk.net/2006/04/18/lang-net-2006/</link>
		<pubDate>Tue, 18 Apr 2006 13:23:29 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://86c20f25-28b9-4198-956c-99f1e5b1174b</guid>
		<description></description>
		<content:encoded><![CDATA[<p><a href="http://research.microsoft.com/~emeijer/">Erik Meijer</a> just posted details about <a href="http://lambda-the-ultimate.org/node/1416">Lang .NET 2006</a> over on <a href="http://lambda-the-ultimate.org/">Lambda the Ultimate</a>. Looks to be the next generation of the <a href="http://devhawk.net/2006/03/14/Compiler+Dev+Lab++LINQ.aspx">Complier Dev Lab</a> I attended last month. The appear to have opened up the program significantly, and are asking for abstracts for both 30 minute talks as well as 10 minute "lightning" talks. If you're interested in <a href="https://msrcmt.research.microsoft.com/PLACS2006/CallForPapers.aspx">submitting</a>, here's the list of topics they are most interested in:</p><ul><li>Dynamic languages and scripting 
</li><li>AJAX and ATLAS 
</li><li>Domain specific languages 
</li><li>Functional languages 
</li><li>Object-oriented and aspect-oriented programming 
</li><li>Web-services and mobile code 
</li><li>Libraries 
</li><li>Language-Integrated Query (LINQ) 
</li><li>Compiler frameworks 
</li><li>Garbage collection 
</li><li>JIT compilation 
</li><li>Visual Programming 
</li><li>Success and failure stories 
</li><li>Non-standard language features and implementation techniques 
</li><li>Tools and IDE support </li></ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>739</wp:post_id>
		<wp:post_date>2006-04-18 13:23:29</wp:post_date>
		<wp:post_date_gmt>2006-04-18 13:23:29</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>lang-net-2006</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="development"><![CDATA[Development]]></category>
		<category domain="post_tag" nicename="lanugages"><![CDATA[Lanugages]]></category>
		<category domain="post_tag" nicename="scripting"><![CDATA[Scripting]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[86c20f25-28b9-4198-956c-99f1e5b1174b]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[LangNET+2006]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2006/04/18/LangNET+2006]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Sacred Code Cows</title>
		<link>http://devhawk.net/2006/04/24/sacred-code-cows/</link>
		<pubDate>Mon, 24 Apr 2006 14:50:52 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://befc2e0c-ff9e-4732-a997-42246d9c239e</guid>
		<description></description>
		<content:encoded><![CDATA[<p>I <a href="http://devhawk.net/2006/04/14/Talking+Dynamic+Lanugages+With+Neal+Ford.aspx">wrote</a> of my meeting w/ <a href="http://memeagora.blogspot.com/">Neal Ford</a> a few weeks ago. Today he has a long post on what he calls <a href="http://memeagora.blogspot.com/2006/04/eating-sacred-hamburger.html">Eating Sacred Hamburger</a> that goes into more detail of some of the things we discussed:</p><blockquote dir="ltr" style="MARGIN-RIGHT: 0px"><p>Software development cults tend to create sacred cows: habits and idioms that might have meant something at one time but only remain as baggage now. I tend to like to kill sacred cows and grill them up, with some nice lettuce, tomato, and a sesame seed bun. On my current project, we're actively killing some sacred cows.</p></blockquote><p dir="ltr">The main sacred cow he's talking about slaughtering is Hungarian Notation for interfaces. You know, interfaces like <a href="http://msdn2.microsoft.com/en-us/library/system.data.idbconnection.aspx">IDbConnection</a> and <a href="http://msdn2.microsoft.com/en-us/library/system.web.ihttphandler.aspx">IHttpHandler</a>. </p><blockquote dir="ltr" style="MARGIN-RIGHT: 0px"><p dir="ltr">Thankfully, Hungarian Notation has mostly been banished, except for one lingering, annoying location in the .NET world: the stupid "I" preface on interfaces. In fact, if you understand how interfaces should be used, this is exactly the opposite of what you want. In our application, every important semantic type is represented by an interface. Using interfaces like this makes it easier to do a whole host of things, including mocking out complex dependencies for testing. Why would you destroy the most important names in your application with Hungarian Notation telling you it's an interface? Ironically enough, that your semantic type is an interface is an implementation detail -- exactly the kind of detail you want to keep out of interfaces. I suspect this nasty habit developed in the .NET world because interfaces first came to the Microsoft world as COM (or, back when it started, OLE). It's a stupid cow now, and should be slaughtered.</p></blockquote><p dir="ltr">I agree 100% with this, though I'm guessing the next time I write an interface, I'll have to go back and delete the stupid "I" because I'm so used to writing it. </p><p dir="ltr">The other convention he's looking to do away with camel and pascal casing, which is <a href="http://msdn.microsoft.com/library/en-us/cpgenref/html/cpconcapitalizationstyles.asp">convention in .NET</a>. He's a bigger fan of using underscores between words (which is big in the Ruby world). So far, he's only using underscores in his test methods since they tend to be longer, such as "Verify_end_to_end_security_connectivity_to_infrastructure". Frankly, I'm ambivalent on this one. I'm pretty good at reading camel and pascal casing and I would hope never to see a production method name like that.</p><p dir="ltr">So that's two down, but there's still an entire herd of sacred cows out there. What other ones do we need to get rid of?</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>740</wp:post_id>
		<wp:post_date>2006-04-24 14:50:52</wp:post_date>
		<wp:post_date_gmt>2006-04-24 14:50:52</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>sacred-code-cows</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="development"><![CDATA[Development]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[befc2e0c-ff9e-4732-a997-42246d9c239e]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Sacred+Code+Cows]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2006/04/24/Sacred+Code+Cows]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>2352</wp:comment_id>
			<wp:comment_author><![CDATA[Mike Clark]]></wp:comment_author>
			<wp:comment_author_email>michael.clark@ofm.wa.gov</wp:comment_author_email>
			<wp:comment_author_url>http://www.clarkmichael.com</wp:comment_author_url>
			<wp:comment_author_IP>198.186.221.106</wp:comment_author_IP>
			<wp:comment_date>2006-04-25 09:13:04</wp:comment_date>
			<wp:comment_date_gmt>2006-04-25 16:13:04</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[NO NO NO!  No bloody underscores between words!  BIG bloody annoyance!  [Sound of light saber being activated] I will lop off the fingers of the first one of you who DARES to even THINK of deprecating Camel and Pascal casing in .NET code!  

You freaks who want to code with underscores in Ruby, I hope you, too, get run out of town on a Rail!  GRRRRRR!

(No, seriously, underscores are the spawn of Satan).

Have a nice day!  :)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>2353</wp:comment_id>
			<wp:comment_author><![CDATA[Dan McKinley]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://mcfunley.com</wp:comment_author_url>
			<wp:comment_author_IP>198.45.18.20</wp:comment_author_IP>
			<wp:comment_date>2006-04-25 10:48:58</wp:comment_date>
			<wp:comment_date_gmt>2006-04-25 17:48:58</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Good post. I think this concept intersects with the phenomenon of "cargo cult" programming to some degree. On my team, the old timers are in the habit of setting local references to Nothing when using VB.NET. Ie,

Public Sub Foo()
  Dim x As New Object
  ' Use x
  x = Nothing
End Sub

Nobody can explain how this got started and I've had some extreme difficulty explaining this is not necessary.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>2354</wp:comment_id>
			<wp:comment_author><![CDATA[DevHawk]]></wp:comment_author>
			<wp:comment_author_email>harry@devhawk.net</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>131.107.0.75</wp:comment_author_IP>
			<wp:comment_date>2006-04-25 11:59:08</wp:comment_date>
			<wp:comment_date_gmt>2006-04-25 18:59:08</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Come on Mike, tell us how you REALLY feel! :)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>2355</wp:comment_id>
			<wp:comment_author><![CDATA[Eirik Mangseth]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>195.159.201.230</wp:comment_author_IP>
			<wp:comment_date>2006-05-03 03:57:57</wp:comment_date>
			<wp:comment_date_gmt>2006-05-03 10:57:57</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[You wrote "He's a bigger fan of using underscores between words (which is big in the Ruby world)". The Ruby world got this from Eiffel and Bertrand Meyer. Just read Object-oriented Software Construction, 2nd Edition. And anyone with a modicum of knowledge knows that Ruby's inventor was heavily inspired by Eiffel and the OOSC-book.

Eirik

"If I can't Eiffel in heaven, I won't go."]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>ChucK Audio Programming Language</title>
		<link>http://devhawk.net/2006/04/26/chuck-audio-programming-language/</link>
		<pubDate>Wed, 26 Apr 2006 16:13:55 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://5e0c1ef3-1aef-4a9b-936c-90cbcc79614d</guid>
		<description></description>
		<content:encoded><![CDATA[<p>I saw reference to <a href="http://chuck.cs.princeton.edu/">ChucK</a> on <a href="http://secondlife.blogs.com/prompt/">Prompt Criticality</a>, a <a href="http://www.secondlife.com/">Second Life</a> Blog. I wanted to blog it for my own reference if for no other reason. ChucK is "a new audio programming language for real-time synthesis, composition, and performance" that "presents a new <i>time-based concurrent programming model</i>, which supports a more precise and fundamental level of expressiveness, as well as multiple, simultaneous, dynamic control rates, a <i>precise and straightforward concurrency</i>, and the ability to add, remove, and modify code, <i>on-the-fly</i>, while the program is running, without stopping or restarting". </p><p>Sounds facinating, esp. given my <a href="http://devhawk.net/2006/04/14/Talking+Dynamic+Lanugages+With+Neal+Ford.aspx">recent discussion</a> of internal vs. external DSLs w/ Neal Ford. Plus it deals w/ concurrency and is dynamic. </p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>741</wp:post_id>
		<wp:post_date>2006-04-26 16:13:55</wp:post_date>
		<wp:post_date_gmt>2006-04-26 16:13:55</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>chuck-audio-programming-language</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="development"><![CDATA[Development]]></category>
		<category domain="post_tag" nicename="lanugages"><![CDATA[Lanugages]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[5e0c1ef3-1aef-4a9b-936c-90cbcc79614d]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[ChucK+Audio+Programming+Language]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2006/04/26/ChucK+Audio+Programming+Language]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>FeedBurner</title>
		<link>http://devhawk.net/2006/04/27/feedburner/</link>
		<pubDate>Thu, 27 Apr 2006 14:18:29 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://04960b18-350d-42c8-939a-e36c908b8cc4</guid>
		<description></description>
		<content:encoded><![CDATA[<p>I finally got around to signing up for a FeedBurner feed for DevHawk today. It's available <a href="http://feeds.feedburner.com/Devhawk">here</a>. I've updated my site template, but existing readers are still getting the old feed. Scott has <a href="http://www.hanselman.com/blog/SyndicatingComputerZen.aspx">built support</a> for FeedBurner into dasBlog, but it isn't released yet. Feel free to switch over on your own if you want, but I'll get the automatic redirection working soon enough.</p><p>UPDATE - Apparently I didn't look hard enough. FeedBurner support made it into the currently shipping version of dasBlog, so I've turned it on. Thanks to <a href="http://www.winterdom.com/weblog/">Tomas Restrepo</a> for the <a href="http://devhawk.net/CommentView,guid,04960B18-350D-42C8-939A-E36C908B8CC4.aspx#11a60941-d728-480e-89f1-45620788ccd7">heads up</a>.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>742</wp:post_id>
		<wp:post_date>2006-04-27 14:18:29</wp:post_date>
		<wp:post_date_gmt>2006-04-27 14:18:29</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>feedburner</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="blogging"><![CDATA[Blogging]]></category>
		<category domain="post_tag" nicename="dasblog"><![CDATA[dasBlog]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[04960b18-350d-42c8-939a-e36c908b8cc4]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[FeedBurner]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2006/04/27/FeedBurner]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>2356</wp:comment_id>
			<wp:comment_author><![CDATA[Tomas Restrepo]]></wp:comment_author>
			<wp:comment_author_email>tomasr@mvps.org</wp:comment_author_email>
			<wp:comment_author_url>http://www.winterdom.com/weblog/</wp:comment_author_url>
			<wp:comment_author_IP>200.116.207.32</wp:comment_author_IP>
			<wp:comment_date>2006-04-27 17:48:20</wp:comment_date>
			<wp:comment_date_gmt>2006-04-28 00:48:20</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Harry,

The feedburner support is in dasBlog 1.8, that's what I'm using over on my site. What version are you using?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>2357</wp:comment_id>
			<wp:comment_author><![CDATA[Mike Sax]]></wp:comment_author>
			<wp:comment_author_email>mike@sax.net</wp:comment_author_email>
			<wp:comment_author_url>http://www.Sax.net/live</wp:comment_author_url>
			<wp:comment_author_IP>208.54.15.129</wp:comment_author_IP>
			<wp:comment_date>2006-04-28 11:06:49</wp:comment_date>
			<wp:comment_date_gmt>2006-04-28 18:06:49</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hey Harry - just curious - what's the key advantage that made you decide to use Feedburner?  I considered it a few times, but haven't found enough reason to give others "control" over my feed... maybe I'm paranoid or missing something (or, most likely, both).]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>2358</wp:comment_id>
			<wp:comment_author><![CDATA[DevHawk]]></wp:comment_author>
			<wp:comment_author_email>harry@devhawk.net</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>131.107.0.102</wp:comment_author_IP>
			<wp:comment_date>2006-04-28 12:53:57</wp:comment_date>
			<wp:comment_date_gmt>2006-04-28 19:53:57</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[They have some nice value add services, such as tracking the number of subscribers, integrating my del.icio.us links and the like. But the main reason I did it was so that I have some more flexibility with my site. I want to make some changes to the structure of my site, and having my feed served thru FeedBurner means that I can move things around w/ affecting my subscribers...]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Getting Better With Use</title>
		<link>http://devhawk.net/2006/04/26/getting-better-with-use/</link>
		<pubDate>Wed, 26 Apr 2006 20:50:00 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://5682950f-1ca8-4564-aa7c-57a4d98a3196</guid>
		<description></description>
		<content:encoded><![CDATA[<p>One of the topics that comes up regularly in the context of Web 2.0 is the idea that social software gets better the more people use it. Tim O'Reilly <a href="http://www.oreillynet.com/pub/a/oreilly/tim/news/2005/09/30/what-is-web-20.html?page=2">wrote about it</a> when describing Web 2.0 and <a href="http://www.microsoft.com/billgates/speeches/2006/03-20MIX.asp">brought it up</a> when he was on stage with Bill Gates at MIX06.</p><p>Tim called it a principle of Web 2.0. But I don't think getting better with use is exclusive to social software. Alan Cooper wrote about building software that learns how the user works and optimizes itself for that usage pattern. For example, Windows Vista has a new feature called <a href="http://www.microsoft.com/windowsvista/features/foreveryone/performance.mspx#more">SuperFetch</a> that "understands which applications you use most, and preloads these applications into memory, so your system is more responsive when you first boot or when you switch to a different user profile." </p><p>The big difference that I see is that personal software has to be designed to learn where social software automatically improves with use.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>743</wp:post_id>
		<wp:post_date>2006-04-26 20:50:00</wp:post_date>
		<wp:post_date_gmt>2006-04-26 20:50:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>getting-better-with-use</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<category domain="post_tag" nicename="web-2-0"><![CDATA[Web 2.0]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[5682950f-1ca8-4564-aa7c-57a4d98a3196]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Getting+Better+With+Use]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2006/04/27/Getting+Better+With+Use]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Caprica</title>
		<link>http://devhawk.net/2006/04/27/caprica/</link>
		<pubDate>Thu, 27 Apr 2006 23:49:40 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://c7e2eb9e-2729-4dc0-8152-72edad7e1908</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Battlestar Galactica is already one of the two best shows on TV in my opinion. Lost is one of the best shows ever, but I digress. Now comes news that their doing a <a href="http://www.scifi.com/scifiwire/index.php?category=2&amp;id=35773">prequel spinoff</a>:</p><blockquote dir="ltr" style="MARGIN-RIGHT: 0px"><p>SCI FI Channel announced the development of <i>Caprica</i>, a spinoff prequel of its hit <a href="http://www.scifi.com/battlestar/" target="outside"><i>Battlestar Galactica</i></a>, in presentations to advertisers in New York on April 26. <i>Caprica</i> would come from <i>Galactica</i> executive producers Ronald D. Moore and David Eick, writer Remi Aubuchon (<i>24</i>) and NBC Universal Television Studio. <br /><br /><i>Caprica</i> would take place more than half a century before the events that play out in <i>Battlestar Galactica</i>. The people of the Twelve Colonies are at peace and living in a society not unlike our own, but where high technology has changed the lives of virtually everyone for the better. <br /><br />But a startling breakthrough in robotics is about to occur, one that will bring to life the age-old dream of marrying artificial intelligence with a mechanical body to create the first living robot: a Cylon. Following the lives of two families, the Graystones and the Adamas (the family of William Adama, who will one day become the commander of the <i>Battlestar Galactica</i>), <i>Caprica</i> will weave together corporate intrigue, techno-action and sexual politics into television's first science fiction family saga, the channel announced. </p></blockquote><p dir="ltr">OK, Comcast officially needs to get <a href="http://www.universalhd.com/">Universal HD</a> so I can see this &amp; BSG in HD.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>744</wp:post_id>
		<wp:post_date>2006-04-27 23:49:40</wp:post_date>
		<wp:post_date_gmt>2006-04-27 23:49:40</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>caprica</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="battlestar-galactica"><![CDATA[Battlestar Galactica]]></category>
		<category domain="post_tag" nicename="sci-fi"><![CDATA[Sci-Fi]]></category>
		<category domain="post_tag" nicename="television"><![CDATA[Television]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[c7e2eb9e-2729-4dc0-8152-72edad7e1908]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Caprica]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2006/04/28/Caprica]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Spell With Flickr</title>
		<link>http://devhawk.net/2006/04/28/spell-with-flickr/</link>
		<pubDate>Fri, 28 Apr 2006 16:34:21 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://af3fadd6-101c-4911-950b-631c5312165a</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Mike just <a href="http://blogs.technet.com/michael_platt/archive/2006/04/28/426762.aspx">posted</a> a list of sites he was using in a presentation. I had never seen <a href="http://metaatem.net/words">Spell with Flickr</a> before. Silly, but cool.</p><p>Here's DevHawk spelled with Flickr. </p><p><a id="fs_1" title="&quot;D&quot;" href="http://www.flickr.com/photos/95229107@N00/97122049"><img title="D" alt="D" src="http://static.flickr.com/23/97122049_96608eb66b_s.jpg" border="0" /></a><a id="fs_2" title="&quot;E&quot;" href="http://www.flickr.com/photos/50502690@N00/86176562"><img title="E" alt="E" src="http://static.flickr.com/42/86176562_a5cff4a38c_s.jpg" border="0" /></a><a id="fs_3" title="&quot;V&quot;" href="http://www.flickr.com/photos/49968232@N00/96816787"><img title="V" alt="V" src="http://static.flickr.com/25/96816787_47e8b9b4b4_s.jpg" border="0" /></a><a id="fs_4" title="&quot;H - gate detail&quot;" href="http://www.flickr.com/photos/49968232@N00/43486706"><img title="H - gate detail" alt="H - gate detail" src="http://static.flickr.com/31/43486706_b396595d6e_s.jpg" border="0" /></a><a id="fs_5" title="A" href="http://www.flickr.com/photos/49968232@N00/135790873"><img alt="A" src="http://static.flickr.com/52/135790873_65889f376c_s.jpg" border="0" /></a><a id="fs_6" title="&quot;W&quot;" href="http://www.flickr.com/photos/49968232@N00/53363145"><img title="W" alt="W" src="http://static.flickr.com/33/53363145_a6cb7f203e_s.jpg" border="0" /></a><a id="fs_7" title="&quot;K&quot;" href="http://www.flickr.com/photos/33451089@N00/17565394"><img title="K" alt="K" src="http://static.flickr.com/11/17565394_7aee234c7f_s.jpg" border="0" /></a></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>745</wp:post_id>
		<wp:post_date>2006-04-28 16:34:21</wp:post_date>
		<wp:post_date_gmt>2006-04-28 16:34:21</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>spell-with-flickr</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<category domain="post_tag" nicename="web-2-0"><![CDATA[Web 2.0]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[af3fadd6-101c-4911-950b-631c5312165a]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Spell+With+Flickr]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2006/04/28/Spell+With+Flickr]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Thank You Stephen Colbert</title>
		<link>http://devhawk.net/2006/05/01/thank-you-stephen-colbert/</link>
		<pubDate>Mon, 01 May 2006 16:55:20 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://45f8d542-67f1-4112-aed5-737b1159798c</guid>
		<description></description>
		<content:encoded><![CDATA[<p>(Quick reminder, this is my <i>personal</i> blog. Standard <a href="http://devhawk.net/default.aspx#disclaimer">disclaimer</a> applies.)</p><p>I'm guessing the <a href="http://www.whca.net/">White House Correspondents' Association</a> didn't run their choice of dinner entertainment past the actual White House. Last year, Stephen Colbert had <a href="http://www.youtube.com/watch?v=FT5d4vdNK5s">this hilarious bit</a> on Laura Bush's "after hours" show @ last year's dinner.</p><div style="TEXT-ALIGN: center"><object height="350" width="425"><param name="movie" value="http://www.youtube.com/v/FT5d4vdNK5s" /><embed src="http://www.youtube.com/v/FT5d4vdNK5s" type="application/x-shockwave-flash" width="425" height="350"></embed></object></div><p>I wonder who thought "Let's get the guy that made the joke about President Bush bathing in a bucket of horse semen last year to appear at this year's Correspondent's dinner." Actually, I don't have to wonder. It was Mark Smith from AP Radio, the President of WHCA, who admitted to being responsible for signing Colbert while introducing him Saturday night. This guy considered "<a href="http://msnbc.msn.com/id/10826561">Colbert: AP is America's #1 threat</a>" a "pit-in-my-stomach, career-in-flames moment". I'm guessing he's in full barf-o-rama mode after <a href="http://www.dailykos.com/storyonly/2006/4/30/1441/59811">Colbert's stunning performance</a>. This administration isn't exactly known for forgiving and forgetting. I wouldn't be surprised if Mark Smith could get to the White House in the future was the <a href="http://www.whitehouse.gov/history/whtour/">online tour</a>. </p><p>You can get the <a href="http://www.dailykos.com/storyonly/2006/4/30/1441/59811">transcript</a> from <a href="http://www.dailykos.com/">Daily Kos</a> and the <a href="http://www.leahys.net/blog/?p=113">video</a> from <a href="http://www.vastmoderateconspiracy.com/">Vast Moderate Conspiracy</a>. The video is also up on YouTube (in parts). Check out <a href="http://thankyoustephencolbert.org/">Thank You Stephen Colbert</a> for links. And while you're there, you can join the nearly 14,000 people who have said thanks in just under 24 hours. </p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>746</wp:post_id>
		<wp:post_date>2006-05-01 16:55:20</wp:post_date>
		<wp:post_date_gmt>2006-05-01 16:55:20</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>thank-you-stephen-colbert</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="comedy-central"><![CDATA[Comedy Central]]></category>
		<category domain="category" nicename="politics"><![CDATA[Politics]]></category>
		<category domain="post_tag" nicename="stephen-colbert"><![CDATA[Stephen Colbert]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[45f8d542-67f1-4112-aed5-737b1159798c]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Thank+You+Stephen+Colbert]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2006/05/01/Thank+You+Stephen+Colbert]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Hawk Eye on Windows Live ID</title>
		<link>http://devhawk.net/2006/05/04/hawk-eye-on-windows-live-id/</link>
		<pubDate>Thu, 04 May 2006 14:34:05 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://d359900b-bd10-4c7d-a159-0eac4ef9566b</guid>
		<description></description>
		<content:encoded><![CDATA[<p>I am so digging the new new <a href="http://spaces.msn.com/winliveid/blog/cns!AEE1BB0D86E23AAC!222.entry">Windows Live Sign-in Assistant</a>. If you haven't seen it, it provides easy signin for people w/ multiple <strike>Passports</strike> Windows Live IDs. I use <a href="http://domains.live.com/">Windows Live Custom Domains</a> to manage my devhawk.net email (which also rocks) which means I have my personal hotmail ID as well as my devhawk email ID. With the sign-in assistant, I get a slick login UI that lets me log in with either ID with a single click. Very nice. So far, the new sign-in only seems to be enabled for <a href="http://ideas.live.com/">Windows Live Ideas</a>, but I assume that will expand over time.</p><p>BTW, if you want this new sign-in experience, it looks like you need the new beta of <a href="http://www.ideas.live.com/programPage.aspx?versionId=0eccd94b-eb48-497c-8e60-c6313f7ebb73">Windows Live Messenger</a>. There's a bunch of other new stuff in the <a href="http://spaces.msn.com/messengersays/Blog/cns!5B410F7FD930829E!14406.entry">latest beta</a> - new features, better perf and a more polished experience. AFAIK, you still need to be invited to join the beta. I have a bunch of invites - if you want one, <a href="mailto:harry@devhawk.net?subject=WLM Invite">drop me a line</a>.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>747</wp:post_id>
		<wp:post_date>2006-05-04 14:34:05</wp:post_date>
		<wp:post_date_gmt>2006-05-04 14:34:05</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>hawk-eye-on-windows-live-id</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<category domain="post_tag" nicename="windows-live"><![CDATA[Windows Live]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[d359900b-bd10-4c7d-a159-0eac4ef9566b]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Hawk+Eye+On+Windows+Live+ID]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2006/05/04/Hawk+Eye+On+Windows+Live+ID]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>TechEd Iron Architect Contest</title>
		<link>http://devhawk.net/2006/05/11/teched-iron-architect-contest/</link>
		<pubDate>Thu, 11 May 2006 16:57:48 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://44ce8b07-8adc-40b8-a7dc-fe868eda01bb</guid>
		<description></description>
		<content:encoded><![CDATA[<p>For a change, I'm not involved with TechEd at ALL this year. It's all Simon and Marty. Looks like they've got some cool stuff cooking, particularly the <a href="http://blogs.msdn.com/ironarchitect/">Iron Architect contest</a>. Almost makes me wish I was going this year. </p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>748</wp:post_id>
		<wp:post_date>2006-05-11 16:57:48</wp:post_date>
		<wp:post_date_gmt>2006-05-11 16:57:48</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>teched-iron-architect-contest</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="architecture"><![CDATA[Architecture]]></category>
		<category domain="post_tag" nicename="community"><![CDATA[Community]]></category>
		<category domain="post_tag" nicename="teched06"><![CDATA[TechEd06]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[44ce8b07-8adc-40b8-a7dc-fe868eda01bb]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[TechEd+Iron+Architect+Contest]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2006/05/11/TechEd+Iron+Architect+Contest]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Rileyanne in Buttercup Field</title>
		<link>http://devhawk.net/2006/05/17/rileyanne-in-buttercup-field/</link>
		<pubDate>Thu, 18 May 2006 03:44:04 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://41ca07bf-6e91-4b11-bf9a-79f289762c86</guid>
		<description></description>
		<content:encoded><![CDATA[<p>I normally keep this blog clear of personal and political commentary, saving that talk for my <a href="http://spaces.msn.com/devhawk">personal blog on MSN Spaces</a>. But this time I had to make an exception. Check out this awesome picture of my daughter Rileyanne in a field of buttercups. Isn't she cute? :)</p><p align="center"><img src="http://tk.files.storage.msn.com/x1pFeqfYuS6GVACJn9mvD1nrajv95WDvs-A8EDl_jy8mG5Vv_yfqfiwn9WG23MAcu3E_26YVpp9d9A2RRRs_010z5ILanKttY3fIa1Abols5ntyD8ehxMB3OVZdgnCkcfFjNM-GcsGnsf0" /></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>749</wp:post_id>
		<wp:post_date>2006-05-17 20:44:04</wp:post_date>
		<wp:post_date_gmt>2006-05-18 03:44:04</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>rileyanne-in-buttercup-field</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="family"><![CDATA[Family]]></category>
		<category domain="category" nicename="personal"><![CDATA[Personal]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[41ca07bf-6e91-4b11-bf9a-79f289762c86]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Rileyanne+In+Buttercup+Field]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2006/05/18/Rileyanne+In+Buttercup+Field]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>2359</wp:comment_id>
			<wp:comment_author><![CDATA[Dmytro Lapshyn]]></wp:comment_author>
			<wp:comment_author_email>dmytrol@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>195.234.72.66</wp:comment_author_IP>
			<wp:comment_date>2006-05-18 11:10:29</wp:comment_date>
			<wp:comment_date_gmt>2006-05-18 18:10:29</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[If you happened to see the "Full Metal Alchemist" anime, there was a character there, Hugh, who was notorious for constantly bragging about his small daughter ;-)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>2360</wp:comment_id>
			<wp:comment_author><![CDATA[Julianne Pierson]]></wp:comment_author>
			<wp:comment_author_email>juliannepierson@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://techiewife</wp:comment_author_url>
			<wp:comment_author_IP>24.16.92.194</wp:comment_author_IP>
			<wp:comment_date>2006-06-01 10:39:12</wp:comment_date>
			<wp:comment_date_gmt>2006-06-01 17:39:12</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Your wife must be SOME photographer! Ha ha ha Obviously VERY modest as well.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>2361</wp:comment_id>
			<wp:comment_author><![CDATA[tomash]]></wp:comment_author>
			<wp:comment_author_email>tomash@yahoo.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.goodchoicemusic.com/az_y</wp:comment_author_url>
			<wp:comment_author_IP>195.250.55.26</wp:comment_author_IP>
			<wp:comment_date>2006-06-09 06:30:41</wp:comment_date>
			<wp:comment_date_gmt>2006-06-09 13:30:41</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[What's a butifull child!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Architect Connections Conference</title>
		<link>http://devhawk.net/2006/05/30/architect-connections-conference/</link>
		<pubDate>Tue, 30 May 2006 14:56:55 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://1f1eaf10-cea9-4029-85c3-4819feb8af55</guid>
		<description></description>
		<content:encoded><![CDATA[<p>For any readers in LA, I'm keynoting the <a href="http://www.msattend.com/msarchitectconnections">MS Architect Connections</a> conference in LA next week. They have a few spots still open, so if you're interested you can <a href="http://www.msattend.com/msarchitectconnections/RegistrationStep2.aspx">sign up here</a>.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>750</wp:post_id>
		<wp:post_date>2006-05-30 14:56:55</wp:post_date>
		<wp:post_date_gmt>2006-05-30 14:56:55</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>architect-connections-conference</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="architecture"><![CDATA[Architecture]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[1f1eaf10-cea9-4029-85c3-4819feb8af55]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Architect+Connections+Conference]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2006/05/30/Architect+Connections+Conference]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Enterprise 2.0 ARCast</title>
		<link>http://devhawk.net/2006/05/31/enterprise-2-0-arcast/</link>
		<pubDate>Wed, 31 May 2006 15:03:24 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://6e241dc2-8dd0-49d5-bb97-76e8b1225b45</guid>
		<description></description>
		<content:encoded><![CDATA[<p><a href="http://www.ronjacobs.com/">Ron</a> just posted his latest <a href="http://channel9.msdn.com/shows/ARCast_with_Ron_Jacobs">ARCast</a> featuring yours truly talking about <a href="http://channel9.msdn.com/ShowPost.aspx?PostID=199017">Enterprise 2.0</a>. Some of the same stuff I <a href="http://devhawk.net/2006/04/18/Apparently+Microsoft+Delivered+On+Enterprise+20+Three+Years+Ago.aspx">blogged about last month</a>, but in a conversational style. Check it out.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>751</wp:post_id>
		<wp:post_date>2006-05-31 15:03:24</wp:post_date>
		<wp:post_date_gmt>2006-05-31 15:03:24</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>enterprise-2-0-arcast</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="architecture"><![CDATA[Architecture]]></category>
		<category domain="post_tag" nicename="enterprise-2-0"><![CDATA[Enterprise 2.0]]></category>
		<category domain="post_tag" nicename="web-2-0"><![CDATA[Web 2.0]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[6e241dc2-8dd0-49d5-bb97-76e8b1225b45]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Enterprise+20+ARCast]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2006/05/31/Enterprise+20+ARCast]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Thinking About Object Models</title>
		<link>http://devhawk.net/2006/05/31/thinking-about-object-models/</link>
		<pubDate>Wed, 31 May 2006 22:54:05 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://c719933e-eb08-4303-a078-9a4151fd5368</guid>
		<description></description>
		<content:encoded><![CDATA[<p>I'm doing some experiments with Amazon's S3 Service. Very cool service, I might add. Anyway, the sample C# REST code basically wraps the network requests with a single connection class that has individual methods for each type of service interaction (list all my buckets, list all objects in a bucket, create a bucket, create an object, you get the idea). </p><p>However, S3's service is a natural hierarchy. The Service contains many Buckets, which in turn contain many Objects. So another way to wrap the service interaction is with a series of objects that are related to one another and only implement the service interactions relevant to that class. (Service would implement List My Buckets and perhaps Create Bucket. Bucket would implement List Objects and Delete Bucket. Again, you get the idea.)</p><p>For an interface as relatively simple as S3 (the SOAP interface has a grand total of 13 operations) it probably doesn't matter one way or the other. Furthermore, it's probably a question of personal preference. My question: What's <em>your</em> personal preference? A single object with many methods or a hierarchy of objects each with fewer methods?</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>752</wp:post_id>
		<wp:post_date>2006-05-31 22:54:05</wp:post_date>
		<wp:post_date_gmt>2006-05-31 22:54:05</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>thinking-about-object-models</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="architecture"><![CDATA[Architecture]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[c719933e-eb08-4303-a078-9a4151fd5368]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Thinking+About+Object+Models]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2006/06/01/Thinking+About+Object+Models]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>2362</wp:comment_id>
			<wp:comment_author><![CDATA[orcmid]]></wp:comment_author>
			<wp:comment_author_email>dennis.hamilton@acm.org</wp:comment_author_email>
			<wp:comment_author_url>http://orcmid.com/blog/</wp:comment_author_url>
			<wp:comment_author_IP>216.160.65.145</wp:comment_author_IP>
			<wp:comment_date>2006-06-01 11:22:17</wp:comment_date>
			<wp:comment_date_gmt>2006-06-01 18:22:17</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Well .... this is a pretty abstract question and circumstances matter.  But I will put on my T-shirt and take an abstracted architectural view.  

First, you need to know that I find classes like CFile to be repelling.  I don't like classes like that any more than I like control coupling (one method, many parameters, some parameters say what needs to be done).  It is a separation of concerns for me.  Making it one object and many methods (often hairy ones) is some improvement but basically a dual of the same problem.

OK, it isn't so much hierarchy for me although many situations do come out that way, especially when navigating information systems.  But what I see it as is separation of concerns.  The first part has to do with breaking down the work and using helpers and functions that work on parts of the procedure I'm developing.  What objects do I pass to other methods (for their use), or do I by inheritance graft other methods onto?  Can I keep the surface that I expose to other processes/objects/methods be kept small and understandable and invariant (that is, making a contract) and that leaves out everything that is irrelevant stuff.  (Example from CFile -- I may have a process to apply against a file, I should not have to deal with it being able to close, re-open, and otherwise mess with the file I've opened to be processed.)  So I want to pass it a live data stream.  Also, I may want what it does to not interfere with *my* current position in the data stream (or I may want choice in the matter).

Beside separation of concerns and removing extraneous elements from interface agreements (so they are not brittle and are easily preserved over time and substitutions) is the opportunity that factoring objects into hierarchies or subordinates (or interfaces) provides. For example, if you need to be holding onto more than one place under an access, you can arrange your object design to support that.  It's like having multiple cursors and enumerators and whatnot.  Also there is no reason to expose write methods on a component that I will only use for reading and that I only want some other service to read with.  That's my thinking about all of that. Some of this can be handled by factoring out a nice set of true interfaces and others involve methods that make new objects or that take objects/interfaces and use them.  

The down side?  This can become too fine-grained and performance and understandability can both go out the window (especially if remoting is happening).  I was reading some code the other day where it began with this traditional stack of declarations where each new one was for an object that was delivered by a method on the object declared and initialized one line above.  It was all to get to one deep "place" and the upshot of all this methodology was to insert an element in an XML document being used to hold a configuration.  

So sometimes it is necessary to breach conceptual purity to handle a simple use case.  Nothing wrong with that.  The definition of a shortcut/accelerator method can be in terms of the "pure" ones, and the implementation might be one that performs better.  But it takes all the lifting away from the user and lets the simple thing be done with a simple method.  I've done that in places where it worked quite well (and preserved legacy code that used a flatter model that I had refactored to get a clean conceptual breakdown of the architecture). 

It all depends.  It especially depends on whether others (including you later) will be (re-) using what you've done, and how much attention to factoring you can put in up front.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>2363</wp:comment_id>
			<wp:comment_author><![CDATA[01976]]></wp:comment_author>
			<wp:comment_author_email>wendysystems@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>67.66.49.192</wp:comment_author_IP>
			<wp:comment_date>2006-06-16 15:56:50</wp:comment_date>
			<wp:comment_date_gmt>2006-06-16 22:56:50</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi,
How do you deal with thinking in so many dimensional thoughts.
Oh,well.I way to tired to read your blog right now.my abstract mind would rather look at pictures.

Thanks though,I appreciate your efforts,
Thanks, 01976]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>June DSL CTP</title>
		<link>http://devhawk.net/2006/06/02/june-dsl-ctp/</link>
		<pubDate>Fri, 02 Jun 2006 07:56:11 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://8ee1fa11-64c2-4e54-b3bf-5e172cdbe19c</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Congrats to the team for their latest version of the <a href="http://msdn.microsoft.com/vstudio/DSLTools">DSL Toolkit</a>, integrated into the June CTP of the <a href="http://affiliate.vsipmembers.com/affiliate/downloadfiles.aspx">VS SDK</a>. According to the published product plans of the VS SDK, they're suppoesd to ship their next release - including the final DSL toolkit - next month. Looking forward to it.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>753</wp:post_id>
		<wp:post_date>2006-06-02 07:56:11</wp:post_date>
		<wp:post_date_gmt>2006-06-02 07:56:11</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>june-dsl-ctp</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="architecture"><![CDATA[Architecture]]></category>
		<category domain="post_tag" nicename="domain-specific-languages"><![CDATA[Domain Specific Languages]]></category>
		<category domain="post_tag" nicename="modelling"><![CDATA[Modelling]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[8ee1fa11-64c2-4e54-b3bf-5e172cdbe19c]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[June+DSL+CTP]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2006/06/02/June+DSL+CTP]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Number One Sydney Picture on Windows Live and Google</title>
		<link>http://devhawk.net/2006/06/06/number-one-sydney-picture-on-windows-live-and-google/</link>
		<pubDate>Tue, 06 Jun 2006 15:43:03 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://937dde5d-82f5-4018-9ebb-a2a3d9c46199</guid>
		<description></description>
		<content:encoded><![CDATA[<a href="http://s3.amazonaws.com/devhawk_images/Touring Sydney Monday (58).jpg"><img hspace="5" src="http://s3.amazonaws.com/devhawk_images/Touring Sydney Monday (58)_small.jpg" align="left" border="0" /></a><p>I typically don't <a href="http://www.technorati.com/search/devhawk.net">search Technorati for incoming links</a> because a significant number of the links to my blog come from my inclusion on dasBlog's default blogroll. For example, "<a href="http://www.dredlog.com/nssucks/">Dutch Railways Suck</a>" doesn't appear to have anything to do with architecture, development or hockey, but they still link to me. However, in checking out Technorati today, I discovered several blogs were linking to me that were out of the ordinary to say the least. Turns out that this picture I took on <a href="http://devhawk.net/back+in+all+blacks.aspx">my trip to Australia two years ago</a> is the number one result when searching both <a href="http://www.live.com/#q=sydney&amp;scope=images">Windows Live Image Search</a> and <a href="http://images.google.com/images?q=sydney&amp;hl=en">Google Image Search</a>. </p><p>I'm guessing that's why this picture shows up on the blog of <a href="http://ckhnat.blogspot.com/2006/05/cast-it-on-waters.html">woman trying to reverse the trends of feminism</a>, a <a href="http://sellinganimage.blogspot.com/2006/05/you-are-plague.html">guy who despises Sydney</a>, a <a href="http://spaces.msn.com/markopasu/Lists/cns!5E117D8B714C025B!288/">couple</a> of <a href="http://blogs.aol.fr/mpeyrotte/Rachel/entries/492">french</a> blogs that I can't read and two german blogs - one <a href="http://ach-ciao.blogspot.com/2006/05/sydney-im-coming.html">I can't read</a> and one <a href="http://daniel-does-madison.blogspot.com/2006/05/visa-incident.html">that I can</a>.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>754</wp:post_id>
		<wp:post_date>2006-06-06 15:43:03</wp:post_date>
		<wp:post_date_gmt>2006-06-06 15:43:03</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>number-one-sydney-picture-on-windows-live-and-google</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="blogging"><![CDATA[Blogging]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[937dde5d-82f5-4018-9ebb-a2a3d9c46199]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Number+One+Sydney+Picture+On+Windows+Live+And+Google]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2006/06/06/Number+One+Sydney+Picture+On+Windows+Live+And+Google]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Moving On...</title>
		<link>http://devhawk.net/2006/06/15/moving-on/</link>
		<pubDate>Thu, 15 Jun 2006 08:19:21 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://916e317b-1d1c-44aa-912e-6044c44031f0</guid>
		<description></description>
		<content:encoded><![CDATA[<p>It's not the biggest <a href="http://www.msnbc.msn.com/id/13282299">job change news</a> this week (or the <a href="http://www.microsoft.com/presspass/press/2006/jun06/06-15CorpNewsPR.mspx">day</a>), but after three years on Architecture Strategy and six years total as an evangelist, I'm moving on to a new role. After six years, I decided it was time for me to put my money where my mouth is as well as get my hands dirty building something more substantial than buzz.</p><p>I'll be moving over into Microsoft's IT division as a member of the Integration Center of Excellence Architecture Team. Integration, as you might guess, is a euphemism here for service-orientation. My team is tasked with architecting and delivering the shared service-oriented infrastructure for four of the biggest projects Microsoft IT will be delivering in the next year. <a href="http://devhawk.net/2003/09/19/Today+Is+The+Last+Day+Of+My+Life+So+Far.aspx">Last time I changed jobs</a>, I lamented that "With each job I take at MSFT, coding seems to become less a part of the job description." Happily, this is <em>NOT</em> the case this time. </p><p>About a year ago, Microsoft hired <a href="http://www.microsoft.com/presspass/exec/stuartsc/default.mspx">Stuart Scott</a> to run the business apps side of IT as one of our two CIOs (our other CIO <a href="http://www.microsoft.com/presspass/exec/ronma/default.mspx">Ron Markezich</a> oversees the IT infrastructure). Stuart was kind enough to spend about an hour with me last week explaining his vision for how he sees MSIT evolving under his leadership. Here's what he said in a <a href="http://www.microsoft.com/presspass/features/2005/dec05/12-05Scott.mspx">recent interview</a>:</p><blockquote><p><b>PressPass: How do you see Microsoft IT evolving?</b></p><p><b>Scott:</b> There is a broader role for IT to play at the front end of the development of products and services. Our IT organization knows a lot about the challenges that other IT organizations face because we build and maintain the IT backbone of a massive worldwide enterprise. IT must become future-thought leaders in the development of the product roadmap for our enterprise products. </p><p>By using our internal applications and experiences to build better products for our enterprise customers, we have the potential to solve the challenges that other IT organizations face. We’re heavily involved in dogfooding our products once they’ve been developed, but we also see a role closer to the front end of the product development cycle. Business Intelligence is one area where we will be partnering with the product groups and Finance as we build out our internal capability. I want to ensure that any product we develop to meet the needs of Microsoft, also meets the needs of the marketplace. </p></blockquote><p>He was also very frank about the current state of affairs in MSIT relative to the vision. He was quoted in China Information World (no link, sorry) as saying that "The systems Microsoft now uses are already 14 years old and based on previous versions of windows, so from a systems capability perspective, they cannot support the needs of the growing business." </p><p>All in all, I was pretty impressed with what he's setting out to do and the opportunity not only from a business perspective from from an industry perspective as well. Hence the whole "going to work in his division" thing. Of course, "Thought Leadership" is one of the things Architecture Strategy works on very diligently, so in some ways this isn't as big a change as it might be. On the other hand, giving advice to people solving hard problems is a lot different than solving those hard problems yourself.</p><p>I'll be starting this new role pretty much immediately, so expect the less-than-usual blogging to continue for the time being. But my external visibility on my blog and presenting at conferences and executive briefings is one of the things they hired me for. So after I get my bearings things should be back to normal. At that point, I'll hopefully be able to talk in more specific terms about what we're tackling on my new team. I hope to shake things up quite a bit over there and deliver the play by play here on my blog.</p><p>Massive thanks to <a href="http://blogs.msdn.com/jdevados/">John deVadoss</a> and the rest of the Architecture Strategy Team. Back when I started, I think <a href="http://blogs.msdn.com/smguest/">Simon Guest</a> was the only other blogger on the team. Now there are only three non-bloggers on the whole team. It's been a great three years and I've been a part of so many great accomplishments:</p><ul><li>Making Microsoft the first (I think!) global sponsor for the <a href="http://www.iasahome.org/">International Association of Software Architects</a></li><li>Delivering the <a href="http://msdn.microsoft.com/library/en-us/dnbda/html/OtlkLOBCRM.asp">CRM Integration for Outlook Sample Application</a></li><li>Launching the <a href="https://mvp.support.microsoft.com/communities/mvp.aspx?product=1&amp;competency=Visual+Developer+-+Solutions+Architect">Solution Architect</a> and <a href="https://mvp.support.microsoft.com/communities/mvp.aspx?product=1&amp;competency=Windows+Server+System+-+Infrastructure+Architect">Infrastructure Architect</a> MVP programs 
</li><li>Delivering the first-ever Architecture Track at Tech-Ed 2004 
</li><li>Taking <a href="http://www.thearchitectexchange.com/asehmi/">Arvindra's</a> amazing <span style="TEXT-DECORATION: line-through">JOURNAL</span><a href="http://www.architecturejournal.net/">The Architecture Journal</a> worldwide 
</li><li>Launching the <a href="http://www.microsoft.com/architecture">Architecture Resource Center</a> and the <a href="http://msdn.microsoft.com/architecture/">MSDN Solution Architecture Center</a> websites 
</li><li>Presenting at PDC, worldwide Tech-Eds, p&amp;p Summits and a host of other events 
</li><li>Meeting tons of customers in user group meetings, at executive briefings and in architecture design sessions</li></ul><p>I always joke that if I ever left Microsoft, I wouldn't want to go work for another technical company. Now, I get the chance to go affect the business of a Fortune 50 business while not having to leave Microsoft. Pretty sweet.</p><p>See you on the other side.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>755</wp:post_id>
		<wp:post_date>2006-06-15 08:19:21</wp:post_date>
		<wp:post_date_gmt>2006-06-15 08:19:21</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>moving-on</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="architecture"><![CDATA[Architecture]]></category>
		<category domain="post_tag" nicename="job"><![CDATA[Job]]></category>
		<category domain="post_tag" nicename="microsoft"><![CDATA[Microsoft]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[916e317b-1d1c-44aa-912e-6044c44031f0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Moving+On]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2006/06/15/Moving+On]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>2364</wp:comment_id>
			<wp:comment_author><![CDATA[Tomas Restrepo]]></wp:comment_author>
			<wp:comment_author_email>tomasr@mvps.org</wp:comment_author_email>
			<wp:comment_author_url>http://www.winterdom.com/weblog/</wp:comment_author_url>
			<wp:comment_author_IP>201.232.14.154</wp:comment_author_IP>
			<wp:comment_date>2006-06-15 11:21:08</wp:comment_date>
			<wp:comment_date_gmt>2006-06-15 18:21:08</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Sounds like a cool job. Congratulations and good luck on your new role :)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>2365</wp:comment_id>
			<wp:comment_author><![CDATA[Dario D.]]></wp:comment_author>
			<wp:comment_author_email>dario.delgado@acs-inc.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>199.221.49.15</wp:comment_author_IP>
			<wp:comment_date>2006-06-15 17:29:32</wp:comment_date>
			<wp:comment_date_gmt>2006-06-16 00:29:32</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Congratulations on your new endeavors. 

It sounds like a really cool job. Like you said you get to "go affect the business of a Fortune 50 business while not having to leave Microsoft". 

Very cool!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>2366</wp:comment_id>
			<wp:comment_author><![CDATA[P.J. van de Sande]]></wp:comment_author>
			<wp:comment_author_email>pj.vandesande@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://born2code.net</wp:comment_author_url>
			<wp:comment_author_IP>83.247.62.213</wp:comment_author_IP>
			<wp:comment_date>2006-06-16 02:59:20</wp:comment_date>
			<wp:comment_date_gmt>2006-06-16 09:59:20</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Congratulations!! Good luck and enjoy your new role :)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Really Not the Biggest Job Change News</title>
		<link>http://devhawk.net/2006/06/15/really-not-the-biggest-job-change-news/</link>
		<pubDate>Thu, 15 Jun 2006 13:36:52 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://dafd3ac1-35cd-4fd6-99ea-27e02da918df</guid>
		<description></description>
		<content:encoded><![CDATA[<p><a href="http://www.microsoft.com/presspass/press/2006/jun06/06-15CorpNewsPR.mspx">This</a> is even bigger than Scoble leaving, much less me moving to a new role.</p><blockquote dir="ltr" style="MARGIN-RIGHT: 0px"><p><strong>Microsoft Announces Plans for July 2008 Transition for Bill Gates</strong></p><p>Microsoft Corp. today announced that effective July 2008 Bill Gates, chairman, will transition out of a day-to-day role in the company to spend more time on his global health and education work at the Bill &amp; Melinda Gates Foundation. The company announced a two-year transition process to ensure that there is a smooth and orderly transfer of Gates’ daily responsibilities, and said that after July 2008 Gates would continue to serve as the company’s chairman and an advisor on key development projects.</p><p>The company announced that Chief Technical Officer Ray Ozzie will immediately assume the title of chief software architect and begin working side by side with Gates on all technical architecture and product oversight responsibilities, to ensure a smooth transition. Similarly, Chief Technical Officer Craig Mundie will immediately take the new title of chief research and strategy officer and will work closely with Gates to assume his responsibility for the company’s research and incubation efforts; Mundie also will partner with general counsel Brad Smith to guide Microsoft’s intellectual property and technology policy efforts. </p></blockquote><p dir="ltr">Wow.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>756</wp:post_id>
		<wp:post_date>2006-06-15 13:36:52</wp:post_date>
		<wp:post_date_gmt>2006-06-15 13:36:52</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>really-not-the-biggest-job-change-news</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="job"><![CDATA[Job]]></category>
		<category domain="post_tag" nicename="microsoft"><![CDATA[Microsoft]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[dafd3ac1-35cd-4fd6-99ea-27e02da918df]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Really+Not+The+Biggest+Job+Change+News]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2006/06/15/Really+Not+The+Biggest+Job+Change+News]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Hawk Eye on Xbox 360</title>
		<link>http://devhawk.net/2006/06/19/hawk-eye-on-xbox-360/</link>
		<pubDate>Mon, 19 Jun 2006 00:28:50 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://8838d950-2fe2-4802-867f-ed8bfc6e63af</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Last weekend, I finally got around to picking up an <a href="http://www.xbox.com/en-US/hardware/xbox360/">Xbox 360</a>. Things have been a little busy this week so I haven’t had a ton of time to play it. I bought <a href="http://www.xbox.com/en-US/games/theelderscrollsIVoblivion/">Oblivion</a> and <a href="http://www.xbox.com/en-US/games/kameo">Kameo</a>, but have spent most of my time playing <a href="http://www.xbox.com/en-US/games/livearcadexbox360">Xbox Live Arcade</a>. Seems sort of stupid to shell out $400 to play <a href="http://www.xbox.com/en-US/games/hexichdlivearcadexbox360/">Hexic</a> and <a href="http://www.xbox.com/en-US/games/unolivearcadexbox360/">UNO</a>, but it actually a compelling experience for a number of reasons. First off, they’re games you can play for 10-15 minutes at a time. Playing Oblivion for 15 minutes is pointless, but it’s perfect for a Live Arcade game. With two kids, 15 minutes of play time is much more common than 2 hours. Second, you don’t have to get up to put in a game disc. Sure it’s lazy, but aren’t we all lazy sometimes? Third, I can play them in front of my kids. Fourth, they’re cheap and easy to download on <a href="http://www.xbox.com/en-US/live/marketplace/">Xbox Live Marketplace</a>.</p><p>Marketplace is a thing of genius. My son Patrick’s favorite is the <a href="http://disney.go.com/disneypictures/cars/">Cars movie</a> trailer in HD. Being able to download demos is awesome, rather than keeping track of the discs that come with <a href="http://www.officialxboxmagazine.com/">OXM</a>. For example, I’ve downloaded every racing game demo there is so Patrick can play them. He hasn’t got the hang of it yet (he is only three) but since it’s a demo it doesn’t matter. He doesn’t care that he keeps racing the same car on the same track. (He did see the new <a href="http://www.xbox.com/en-US/games/c/cars">Cars game</a> at Blockbuster the other day, but it’s for the original Xbox and not on the <a href="http://www.xbox.com/en-US/games/backwardcompatibilitygameslist.htm">back compat</a> list.)</p><p>Finally, the ability to play music and look at pictures from a standard XP machine is pretty cool. The User Experience for lots of photos and music isn’t great, but the end result is worth it. My wife quipped “I could watch this all night” as we looked at a slide show of photos we’ve taken over the past three years while listening to some of custom tunes. I don’t have a Media Center as I’ve been waiting for HD cable support. However, I know the MCE experience for navigating thousands of songs and photos is much better than Xbox 360’s, so I might make the switch early. Plus, I would also get support for remote video viewing – something Xbox 360 doesn’t support for reasons that escape me.</p><p>All in all, I'm really digging the Xbox 360. Only downside is not enough time to play. </p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>757</wp:post_id>
		<wp:post_date>2006-06-19 00:28:50</wp:post_date>
		<wp:post_date_gmt>2006-06-19 00:28:50</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>hawk-eye-on-xbox-360</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="games"><![CDATA[Games]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<category domain="post_tag" nicename="xbox-360"><![CDATA[Xbox 360]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[8838d950-2fe2-4802-867f-ed8bfc6e63af]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Hawk+Eye+On+Xbox+360]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2006/06/19/Hawk+Eye+On+Xbox+360]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>2367</wp:comment_id>
			<wp:comment_author><![CDATA[Jesse Ezell]]></wp:comment_author>
			<wp:comment_author_email>jezell@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://weblogs.asp.net/jezell</wp:comment_author_url>
			<wp:comment_author_IP>69.169.14.40</wp:comment_author_IP>
			<wp:comment_date>2006-06-19 16:09:37</wp:comment_date>
			<wp:comment_date_gmt>2006-06-19 23:09:37</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Forget hexic and uno, geometry wars is where it's at!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Alpha Release of Ruby.NET</title>
		<link>http://devhawk.net/2006/06/21/alpha-release-of-ruby-net/</link>
		<pubDate>Wed, 21 Jun 2006 10:37:03 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://995cb378-1049-4f6b-9b8c-4aeb598b9e3f</guid>
		<description></description>
		<content:encoded><![CDATA[<p>I'm not sure what a "Preliminary Beta" is but <a href="http://www.qut.edu.au/">QIT</a> has released a one for their <a href="http://plas.fit.qut.edu.au/Ruby.NET/">Ruby.NET compiler</a>. They expect to achieve "full semantic compatibility" (can you tell this is an acidemic project?) by the end of the year. Thanks to <a href="http://www.from9till2.com/PermaLink.aspx?guid=fae70ab9-29c8-44f1-b076-46eee9f839d1">David Ing</a> for the link.</p><p>They claim to "pass all 871 tests in the samples/test.rb installation test suite of <a href="http://www.ruby-lang.org/">Ruby</a> 1.8.2." which seems odd since later they say "We have a plan for how to deal with continuations but we have not yet implemented them." Doesn't the Ruby test suite test continuations? I wish they would provide more details on this plan, continuations might not be the most interesting thing in Ruby, but it's up there and it's probably the hardest thing to implement on top of the CLR.</p><p>BTW, there are two other projects @ QIT that Ruby.NET leverages that look interesting. The <a href="http://plas.fit.qut.edu.au/gppg/">Gardens Point Parser Generator</a> is essentially a <a href="http://en.wikipedia.org/wiki/Yacc">YACC</a> clone written in C# and making extensive use of generics. Personally, I'm more interested in <a href="http://pdos.csail.mit.edu/~baford/packrat/">Parsing Expression Grammars</a>, but there's no C# implementation as of yet. QIT also has a library for <em><a href="http://plas.fit.qut.edu.au/perwapi/">reading and writing program executable files</a></em> (i.e. EXEs and DLLs). </p><p>As a quick aside, I'm getting pretty tired of all the different euphemisms for "alpha". In the age of perpetual beta, isn't alpha the new beta? But everyone seems worried about calling their releases alpha as if it means "it might not cause your machine to explode, if you could actually get it to compile". So we end up with things like "Preliminary Beta" and "Community Tech Preview". We all KNOW what these terms mean, so lets just call an alpha and alpha, shall we?</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>758</wp:post_id>
		<wp:post_date>2006-06-21 10:37:03</wp:post_date>
		<wp:post_date_gmt>2006-06-21 10:37:03</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>alpha-release-of-ruby-net</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="clr"><![CDATA[CLR]]></category>
		<category domain="category" nicename="development"><![CDATA[Development]]></category>
		<category domain="post_tag" nicename="ruby"><![CDATA[Ruby]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[995cb378-1049-4f6b-9b8c-4aeb598b9e3f]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Alpha+Release+Of+RubyNET]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2006/06/21/Alpha+Release+Of+RubyNET]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>2368</wp:comment_id>
			<wp:comment_author><![CDATA[Anonymous]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>71.241.156.86</wp:comment_author_IP>
			<wp:comment_date>2006-06-21 12:31:18</wp:comment_date>
			<wp:comment_date_gmt>2006-06-21 19:31:18</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[... can you tell this is an acidemic project?

Can you tell that this blog isn't ;)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>2369</wp:comment_id>
			<wp:comment_author><![CDATA[DevHawk]]></wp:comment_author>
			<wp:comment_author_email>harry@devhawk.net</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>72.34.69.70</wp:comment_author_IP>
			<wp:comment_date>2006-06-21 21:22:08</wp:comment_date>
			<wp:comment_date_gmt>2006-06-22 04:22:08</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Yes. :)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Against School</title>
		<link>http://devhawk.net/2006/06/21/against-school/</link>
		<pubDate>Wed, 21 Jun 2006 22:30:50 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://18c69e3f-d424-4cae-9f3a-b633da15aff7</guid>
		<description></description>
		<content:encoded><![CDATA[<p><a href="http://grahamglass.blogs.com/main/2006/06/thought_provoki.html">Graham Glass</a> called <a href="http://www.wesjones.com/gatto1.htm">this article</a> "thought provoking". Calling that an understatement is an understatement it and of itself. The article is by <a href="http://www.johntaylorgatto.com/">John Taylor Gatto</a>, former NY State and NYC teacher of the year. In this article, he completely shreds the modern school system. He describes our education system as "deliberately designed to produce mediocre intellects, to hamstring the inner life, to deny students appreciable leadership skills, and to ensure docile and incomplete citizens - all in order to render the populace 'manageable'". </p><p>I've long had issues with the education system (I'd say "of this country" but it's fairly universal) but I couldn't ever articulate them. I've been known to say stuff like "a diploma is evidence of attendance, not intelligence" and "never let school stand in the way of your education". I got better at understanding the problem after reading <a href="http://en.wikipedia.org/wiki/The_Third_Wave_%28book%29">The Third Wave</a>. Toffler points out the need for an industrial society to have a mass education system to turn children into factory workers. But Toffler doesn't really get into the downside of the mass education approach the way Gatto does. Note to self, pick up Gatto's book <a href="http://www.johntaylorgatto.com/underground/index.htm">The Underground History of American Education</a>.</p><p>As I type this, I wonder if I'll regret blogging this when my kids are in school. I can almost hear the argument now: "Dad, why should I have to go to school if you think it's designed to produce mediocre intellects?" Frankly, I don't have a good answer for that now and I doubt I'll have a good one then. ("I don't know. Go ask your mother." Kidding!) </p><p>You know, now that I think about it, I'm looking forward to that conversation with my kids. Gatto suggests teaching your own children to be leaders and adventures instead of letting schools train them to be employees and servants. A frank discussion about the value of school sounds much more like leadership than servitude to me.</p><p>Update: You can read the book <a href="http://www.johntaylorgatto.com/chapters/index.htm">online for free</a> or you can <a href="http://www.johntaylorgatto.com/bookstore/index.htm">buy the book</a> (and others) online from Gatto's website.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>759</wp:post_id>
		<wp:post_date>2006-06-21 22:30:50</wp:post_date>
		<wp:post_date_gmt>2006-06-21 22:30:50</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>against-school</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="education"><![CDATA[Education]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[18c69e3f-d424-4cae-9f3a-b633da15aff7]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Against+School]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2006/06/22/Against+School]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>2370</wp:comment_id>
			<wp:comment_author><![CDATA[Michael Cook]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.cadred.net</wp:comment_author_url>
			<wp:comment_author_IP>67.128.255.5</wp:comment_author_IP>
			<wp:comment_date>2006-06-22 09:37:40</wp:comment_date>
			<wp:comment_date_gmt>2006-06-22 16:37:40</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Good points, but if everyone is a leader, who will they have to lead?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>2371</wp:comment_id>
			<wp:comment_author><![CDATA[Phil Wheat]]></wp:comment_author>
			<wp:comment_author_email>pwheat@austinwheats.net</wp:comment_author_email>
			<wp:comment_author_url>http://blog.austinwheats.net</wp:comment_author_url>
			<wp:comment_author_IP>216.69.96.3</wp:comment_author_IP>
			<wp:comment_date>2006-06-22 11:18:12</wp:comment_date>
			<wp:comment_date_gmt>2006-06-22 18:18:12</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Sounds like the basic problem in "Diamond Age" by Stephenson.  How to keep your children from joining the median.  He had a very interesting proposal and result, not sure if I agree with it, but it was an interesting read. ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>2372</wp:comment_id>
			<wp:comment_author><![CDATA[Mike Clark]]></wp:comment_author>
			<wp:comment_author_email>michael.clark@ofm.wa.gov</wp:comment_author_email>
			<wp:comment_author_url>http://www.clarkmichael.com</wp:comment_author_url>
			<wp:comment_author_IP>198.186.221.106</wp:comment_author_IP>
			<wp:comment_date>2006-06-22 11:29:36</wp:comment_date>
			<wp:comment_date_gmt>2006-06-22 18:29:36</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Gatto is right on.  While it is possible to get an education in the public school system, it is not typical.  My suggestion to you with respect to school is to homeschool your little bright ones.  I've been following your wife's blog and Harry, I think the woman could educate a rock.  

We homeschooled most of our kids and the results were pretty good -- the public education racket likes to make a big deal about how qualified they are compared to parents (as in "don't try this at home -- WE'RE professionals), but they are blowing smoke.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>2373</wp:comment_id>
			<wp:comment_author><![CDATA[Julianne Pierson]]></wp:comment_author>
			<wp:comment_author_email>juliannepierson@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://techiewife</wp:comment_author_url>
			<wp:comment_author_IP>24.16.92.194</wp:comment_author_IP>
			<wp:comment_date>2006-06-22 11:33:51</wp:comment_date>
			<wp:comment_date_gmt>2006-06-22 18:33:51</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Here is the thing, we ask SO much of our teachers and we teachers get such a crap load of disrespect for trying to do the right thing. I tried to teach my students to think, you see, how they solved a problem was most often times more important than the answer they came to. If I could teach them how to problem solve, I would have taught them how to think. In teaching them how to think, I believe that I helped them realize their individuality. In so doing I most definately was NOT creating factory workers (not that there is anything wrong with becoming one) the important thing I was teaching was the power of choice. The power of thought. The power of their brains. Still, our country has asked teachers to become parents, social workers, educators, doctors, nutritionists, social commentators and reporters all at the same time...oh yes all the while paying less to the teachers then we do the bus drivers. I am not kidding the teachers in most systems are paid less than bus drivers it is a travesty. I am still not convinces home schooling is the answer either as so much social integration is lost. Perhaps, as I have suggested to my husband, school systems should enable partial home school, partial school house school (some already do this) but in order for that to work, parents who stay at home to educate, rear and nurture their kids need resources, tools and education (not to mention more tax breaks since they do not get an income...wouldnt it be great if stay at home parents who could prove that they were raising kids got a special tax break to make that more financially possible in an age when two income families are a necessity not a choice??) anyway obviously this strikes a chord with me, the old social worker/teacher who is now a stay at home Mom of two...]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>2374</wp:comment_id>
			<wp:comment_author><![CDATA[John]]></wp:comment_author>
			<wp:comment_author_email>jevdemon@acm.org</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>131.107.0.102</wp:comment_author_IP>
			<wp:comment_date>2006-06-22 18:23:31</wp:comment_date>
			<wp:comment_date_gmt>2006-06-23 01:23:31</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Business Week recently ran a story focusing how on the Gates Foundation is trying (and apparently failing) to help fix the troubles with school systems here in the US.  Throwing money at the problem isn't fixing anything - we've been doing this for decades with nothing to show for it. 

I personally think there are two major problems with public schools (neither of which anyone seems to want to fix):  

1) The governement shouldn't be in the education business - make it a private sector effort.  Force schools to compete for students.

2) The teachers unions (NEA and AF) care more about polticial issues than students.   

Fix those two massive problems and the schools (and students) will be much better off.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>2375</wp:comment_id>
			<wp:comment_author><![CDATA[Walter Brown]]></wp:comment_author>
			<wp:comment_author_email>walterbrown@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.monticohort1.blogspot.com</wp:comment_author_url>
			<wp:comment_author_IP>69.122.77.171</wp:comment_author_IP>
			<wp:comment_date>2006-07-31 11:55:01</wp:comment_date>
			<wp:comment_date_gmt>2006-07-31 18:55:01</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I just finished reading "Whats Worth Fighting For in Your School?" by Hargreaves and Fullan, My Small Learning COmmunity is having disscussion around this book now..  please feel free to join the conversation. Real reform can only occur from teachers.

Check out www.monticohort1.blogspot.com]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Architecture by Powerpoint</title>
		<link>http://devhawk.net/2006/06/22/architecture-by-powerpoint/</link>
		<pubDate>Thu, 22 Jun 2006 09:28:19 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://c256c8ff-9620-4b59-bc12-5f9a79f5e89a</guid>
		<description></description>
		<content:encoded><![CDATA[<p><a href="http://www.echoes.com/">Adam Stanley</a> left the following comment about the MS booth @ the Gartner EA Summit and I just had to share.</p><blockquote><p>One of the true revalations of being an enterprise architect is in the books that Microsoft was giving away. One on enterprise patterns, one of powerpoint. I do a lot of powerpoint! :)</p></blockquote><p>The book in question is <a href="http://www.microsoft.com/MSPress/books/7125.asp">Beyond Bullet Points</a>, which I highly recommend to architects and non-architects alike.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>760</wp:post_id>
		<wp:post_date>2006-06-22 09:28:19</wp:post_date>
		<wp:post_date_gmt>2006-06-22 09:28:19</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>architecture-by-powerpoint</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="architecture"><![CDATA[Architecture]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[c256c8ff-9620-4b59-bc12-5f9a79f5e89a]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Architecture+By+Powerpoint]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2006/06/22/Architecture+By+Powerpoint]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Gartner EA Summit Day One</title>
		<link>http://devhawk.net/2006/06/21/gartner-ea-summit-day-one/</link>
		<pubDate>Wed, 21 Jun 2006 21:14:16 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://147ea496-930c-429d-8a3e-73fe9fa914b7</guid>
		<description></description>
		<content:encoded><![CDATA[<p></p><p>I'm in sunny San Diego for the <a href="http://www.gartner.com/2_events/conferences/ea4.jsp">Gartner Enterprise Architecture Summit</a>. I'm presenting a sponsor session and case study tomorrow (MSFT is a <a href="http://agendabuilder.gartner.com/EA4/webpages/platinum_sponsors.aspx?menu=menu_itxpo_and_vendors&amp;menuItem=75">platinum sponsor</a> for the event) but I came in yesterday so I could attend a few sessions, meet a few customers and work the MS booth in the Solution Showcase. It's my last event and deliverable for my old team before switching to the new role full time. </p><p>The first of two keynotes today was Richard Buchanan's session on <a href="http://agendabuilder.gartner.com/EA4/webpages/SessionDetail.aspx?EventSessionId=860">The New Enterprise Architecture: Time for Leadership</a>. Pretty decent session, though much of it was pretty obvious. He even said at one point that this was "<span>Strategic Enterprise Planning 101". Not exactly the best way to kick of an EA summit, IMHO. However, he did make some interesting points:</span></p><ul><li>It's hard to quantify the value of business effectiveness. Richard's quote on this was great: "<span>What’s the dollar value of staying out of jail?"</span></li><li>He compared most of how IT is operated today as "looking in the mirror" (i.e. focusing on running what we already have). He suggested instead "looking out the window" (i.e. at the industry and the future). </li><li>I always say that architecture is the intersection of business and IT. Richard said “Architecture is a translation from business strategy to technology implementation. Architects must institutionalize this translation.” Close enough. </li><li>He also suggested that architects need to learn to speak the language of business. That's good advice.</li><li>Richard did do a good job capturing the dynamic aspect of enterprise and IT architecture. It's about change, not structure. He said "<span>EA is not about the past or the present. It’s about the future." Couldn't agree more.</span></li></ul><p>The second keynote was <a href="http://www.allthingsdistributed.com/">Werner Vogels</a> talk <a href="http://agendabuilder.gartner.com/EA4/webpages/SessionDetail.aspx?EventSessionId=861">Order in the Chaos: Building the Amazon.com Platform</a>. This was a great talk. I know a little about how Amazon has evolved, but I had no idea that it powered websites like <a href="http://target.com/">Target</a> and <a href="http://bebe.com/">Bebe</a>. His talk was a little scattered - I'm guessing he's not as used to speaking at events like this than the Gartner folks. There's no way to do the talk justice without basically repeating it verbatim, but my key takeaways were:</p><ul><li>Amazon naturally evolved from an application into a platform. This is fascinating and worthy of more study, esp. as I'm making the switch to MSFT's internal IT department. Microsoft knows a thing or two about platforms, but I'm not sure how it applies inside IT.</li><li>Amazon sees it's "secret sauce" as their ability to automate operations at scale. For example, handling over a million sellers in their system. That helps explain their moves into services like <a href="http://www.amazon.com/gp/browse.html/ref=sc_fe_l_2/103-5532906-6031841?%5Fencoding=UTF8&amp;node=16427261&amp;no=3435361&amp;me=A36L942TSJ2AJA">S3</a> and <a href="http://www.amazon.com/gp/browse.html/ref=sc_fe_l_2/103-5532906-6031841?%5Fencoding=UTF8&amp;node=15879911&amp;no=3435361&amp;me=A36L942TSJ2AJA">MTurk</a> which at first glance seems at odds with their retail web site. </li><li>One of the key values to becoming a platform is being able to open it up to partners. Again, Microsoft knows a lot about opening a platform to partners, but I'm not sure how it applies inside IT.</li><li>Money Quote: "<span>At Amazon, things are always failing. It’s not a bad thing, it’s a fact of life." I've started theorizing about this on my own, good to know where to start looking for </span>people putting this into practice.</li><li>Towards that end, he made probably the most interesting observation of the day. At Amazon, there is no wall between development and operations. Combined with the secret sauce of automating operations at scale and there is a good recipe for how enterprises need to run their IT department.</li></ul><p>The final session I went to today was Nick Gall on <span><a href="http://agendabuilder.gartner.com/EA4/webpages/SessionDetail.aspx?EventSessionId=863">Architecture for the Agile Enterprise: Integrating EA &amp; SOA</a>. The use of the term "agile" in this context was unfortunate, as he had no discussion of agile principles. He primarily focused on what he called Web Oriented Architecture or WOA. His formula for WOA was 'WOA = SOA + WWW + REST" which seems redundant. Isn't REST an attempt to capture the architectural style of the WWW? Anyway, this session wasn't very good. He had about 15 minutes of really good content but you had to wade thru the other 45 minutes of crap to find it. For example, he spent about ten minutes talking about the </span>value of using a small set common modular operations (i.e. the REST / WS-Transfer approach) before he used this great analogy:</p><blockquote>Modularity can be open or closed. Closed modularity is like a jigsaw puzzle. There are lots of individual pieces, but they can only be put together one way. Open modularity is like a <a href="http://en.wikipedia.org/wiki/Tangram">tangram puzzle</a>. There are only seven pieces, but they can be put together in hundreds of different combinations.</blockquote><p>That was a great analogy that really got the point across! Why not just start with that and skip the mumbo jumbo? </p><p>I missed the last session as I had to prep for booth duty. Even though this audience is very different from a typical MSFT event like TechEd, they still mobbed the booth for swag and a chance to win an Xbox 360. I had a few interesting architectural discussion, but mostly it was about the swag. </p><p>My session is tomorrow at 11am. I'm presenting <a href="http://agendabuilder.gartner.com/EA4/webpages/SessionDetail.aspx?EventSessionId=899">Beyond SOA</a> and a <a href="http://agendabuilder.gartner.com/EA4/webpages/SessionDetail.aspx?EventSessionId=901">case study session</a> on the Dell Integrated Desktop . Then there's two more hours of booth duty tomorrow, but I'm hoping it's more content and less swag this time as 1) I will have just presented so I'm hoping to get some questions and 2) everyone has already gotten their swag ration for the conference.  </p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>761</wp:post_id>
		<wp:post_date>2006-06-21 21:14:16</wp:post_date>
		<wp:post_date_gmt>2006-06-21 21:14:16</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>gartner-ea-summit-day-one</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="architecture"><![CDATA[Architecture]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[147ea496-930c-429d-8a3e-73fe9fa914b7]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Gartner+EA+Summit+Day+One]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2006/06/22/Gartner+EA+Summit+Day+One]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>2376</wp:comment_id>
			<wp:comment_author><![CDATA[Adam Stanley]]></wp:comment_author>
			<wp:comment_author_email>astanley@echoes.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.echoes.com/</wp:comment_author_url>
			<wp:comment_author_IP>70.12.33.230</wp:comment_author_IP>
			<wp:comment_date>2006-06-22 07:02:23</wp:comment_date>
			<wp:comment_date_gmt>2006-06-22 14:02:23</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Good review of day one.  I need to finish posting my comments.  One of the true revalations of being an enterprise architect is in the books that Microsoft was giving away.  One on enterprise patterns, one of powerpoint.  I do a lot of powerpoint! :)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>2377</wp:comment_id>
			<wp:comment_author><![CDATA[dudey]]></wp:comment_author>
			<wp:comment_author_email>dudey@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>202.149.45.1</wp:comment_author_IP>
			<wp:comment_date>2006-07-02 07:04:25</wp:comment_date>
			<wp:comment_date_gmt>2006-07-02 14:04:25</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[The Gartner report is one of the worst reports floating around.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Gartner EA Summit Day Two</title>
		<link>http://devhawk.net/2006/06/26/gartner-ea-summit-day-two/</link>
		<pubDate>Mon, 26 Jun 2006 14:52:03 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://029391d4-7531-48fb-93ee-1dd93005594b</guid>
		<description></description>
		<content:encoded><![CDATA[<p>I didn't post a day two wrap up of the <a href="http://devhawk.net/2006/06/22/Gartner+EA+Summit+Day+One.aspx">Gartner EA Summit</a> because I only made it to my session and booth duty right afterwards. That wasn't the original plan - the pipes in the bathroom of my hotel room kept banging so I didn't get much sleep. </p><p>My session went well. I heard from several people afterwards that it was their favorite session or that it was the highlight of the conference. Nice anecdotal evidence, but I still want to see the scores. They recorded the session, hopefully I can get it so I can publish it here. I had lots of great conversations afterwards (as expected). Maybe Gartner will have me back next year with twelve months of my new project under my belt.</p><p><a href="http://s3.amazonaws.com/devhawk_images/img393.jpg"><img style="BORDER-TOP-WIDTH: 0px; BORDER-LEFT-WIDTH: 0px; FLOAT: left; BORDER-BOTTOM-WIDTH: 0px; MARGIN-RIGHT: 10px; BORDER-RIGHT-WIDTH: 0px" height="80" src="http://s3.amazonaws.com/devhawk_images/img393_small.jpg" width="100" /></a> One suggestion for the Gartner folks. Next year, don't pick a logo with an arrow in it. I got a little confused when I first showed up because I followed the arrow and ended up on the wrong side of the hotel from the event. My friend Scott snapped this picture of a sign with two arrows pointing in different directions. </p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>762</wp:post_id>
		<wp:post_date>2006-06-26 14:52:03</wp:post_date>
		<wp:post_date_gmt>2006-06-26 14:52:03</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>gartner-ea-summit-day-two</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="architecture"><![CDATA[Architecture]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[029391d4-7531-48fb-93ee-1dd93005594b]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Gartner+EA+Summit+Day+Two]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2006/06/26/Gartner+EA+Summit+Day+Two]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>HawkEye on Entity Data Model Announcement</title>
		<link>http://devhawk.net/2006/06/26/hawkeye-on-entity-data-model-announcement/</link>
		<pubDate>Mon, 26 Jun 2006 14:35:02 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://091b69ed-aea1-4df4-b3e3-4bf9a3c48bb4</guid>
		<description></description>
		<content:encoded><![CDATA[<p>My pal <a href="http://blogs.msdn.com/timmall">Tim</a> dropped me an email last week to let me know they (the ADO.NET team) were publishing their <a href="http://blogs.msdn.com/dataaccess/archive/2006/06/20/638378.aspx">vNext vision around entities</a>. Of course, they picked the week when I'm in San Diego! So I didn't get a chance to look at it until today. In a nutshell, they are raising the level of abstraction for databases. Regular DevHawk readers know I talk about <a href="http://devhawk.net/SearchView.aspx?q=abstraction">abstraction</a> a lot around here. In fact, one of my earliest posts on this blog - 1 house, 2 kids and 5 jobs ago - was on <a class="TitleLinkStyle" href="http://devhawk.net/2003/01/17/Disruptive+Programming+Language+Technologies.aspx">Disruptive Programming Language Technologies</a>. So this is a topic near and dear to my heart. </p><p>This is an amazingly good thing. Think of the impact VB had on the development industry, but bigger. The abstraction level of databases hasn't been raised in decades. It's about freaking time we did.</p><p>My only problem with the article is that it's pretty obtuse. Referring to this as "Making the Conceptual Level Real" makes it sound much less exciting than it really is. Nobody refers to C# as a "conceptual" programming language. But if you use the terminology from the vision article, that's exactly what it is. Machine code is the physical level, IL is the logical layer and C# would then be the conceptual layer. But lets say you build a compiler that compiles C# directly to machine code. Would it suddenly become the logical layer? Who knows? Who cares? Let's just raise the level of abstraction and not get all caught up naming the level we're currently at.</p><p>VB was introduced <a href="http://www.panopticoncentral.net/archive/2006/05/24/12200.aspx">15 years ago</a> in 1991. Most developers in the industry are aware and remember the impact VB had (if you don't, check out <a href="http://ftponline.com/weblogger/forum.aspx?id=18">Billy Hollis</a>' <a href="http://dotnetmasters.com/historyofbasic.htm">History of BASIC</a>). The relational model was <a href="http://www.acm.org/classics/nov95/toc.html">introduced 36 years ago</a>, The <a href="http://en.wikipedia.org/wiki/Multics_Relational_Data_Store">first RDBMS</a> was introduced in 28 years ago. I'd bet the majority of developers in the industry today don't remember a time before databases. Hell, I was introduced 36 years old myself. (I'm sure my dad remembers programming before databases, but he doesn't code much these days.)</p><p>As I said, this is going to be big and it's about freaking time. So hats off to the <a href="http://blogs.msdn.com/dataaccess/default.aspx">ADO.NET team</a>. Can't wait to see this running. <a href="http://forums.microsoft.com/MSDN/ShowPost.aspx?PostID=488135&amp;SiteID=1">According to this</a>, first CTP drop is August, so you don't even have to wait too long. </p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>763</wp:post_id>
		<wp:post_date>2006-06-26 14:35:02</wp:post_date>
		<wp:post_date_gmt>2006-06-26 14:35:02</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>hawkeye-on-entity-data-model-announcement</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="architecture"><![CDATA[Architecture]]></category>
		<category domain="post_tag" nicename="database"><![CDATA[Database]]></category>
		<category domain="post_tag" nicename="hawkeye"><![CDATA[HawkEye]]></category>
		<category domain="post_tag" nicename="modelling"><![CDATA[Modelling]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[091b69ed-aea1-4df4-b3e3-4bf9a3c48bb4]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[HawkEye+On+Entity+Data+Model+Announcement]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2006/06/26/HawkEye+On+Entity+Data+Model+Announcement]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>2378</wp:comment_id>
			<wp:comment_author><![CDATA[Alex James]]></wp:comment_author>
			<wp:comment_author_email>alex@Base4.net</wp:comment_author_email>
			<wp:comment_author_url>http://www.base4.net/blog.aspx?Tag=ADO.NET</wp:comment_author_url>
			<wp:comment_author_IP>219.89.81.114</wp:comment_author_IP>
			<wp:comment_date>2006-07-27 19:44:32</wp:comment_date>
			<wp:comment_date_gmt>2006-07-28 02:44:32</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[My blog has a whole lot of material on ADO.NET entities if you are interested.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Meeting Ted Leonsis</title>
		<link>http://devhawk.net/2006/07/06/meeting-ted-leonsis/</link>
		<pubDate>Thu, 06 Jul 2006 09:44:24 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://5cf15e92-68a4-47de-92df-4c35037b11ac</guid>
		<description></description>
		<content:encoded><![CDATA[<p>By coincidence when I was in DC last spring, I got an email from <a href="http://ted.aol.com/">Ted Leonsis</a>, Vice Chairman of American Online and owner of the <a href="http://www.washingtoncaps.com/">Washington Capitals</a>. Long time DevHawk readers might remember that I <a href="http://devhawk.net/2004/02/19/Doing+The+Unthinkable.aspx">called Ted</a> "an abomination to the sport of hockey" in the wake of trading Peter Bondra in the "Great Caps Fire Sale of 2004" (Jagr, Lang, Nylander, Gonchar and Bondra). So I was somewhat surprised that wrote that he wanted to meet me since I blog a lot about the Caps. As I was in town, we arranged a meeting on short notice. I gotta say, it's much easier to call someone an abomination on your blog than to their face. :)</p><p> I got to spend an hour chatting about hockey - both from a game and ownership standpoint. Not that I'm likely to own a hockey team any time soon, but it was cool to hear about. I agreed with the owners during the lockout before Ted's hockey team math lesson, but it was useful to see all the numbers laid out. We also spoke about Web 2.0 and new media to some extent. I guess it's not surprising that a vice chairman of AOL is acutely aware of the changing face of the media - hence his reaching out to bloggers, even ones that have said bad things about him.</p><p>Anyway, expect to see more hockey coverage on these pages in the future. And significantly less owner name calling, unless we trade <a href="http://www.nhl.com/trophies/calder.html">Calder Trophy</a> winner <a href="http://www.washingtoncaps.com/team/player.asp?player_id=17">Alexander Ovechkin</a>:</p><div style="TEXT-ALIGN: center"><object height="350" width="425"><param name="movie" value="http://www.youtube.com/v/W5WCVSBmK3I" /><embed src="http://www.youtube.com/v/W5WCVSBmK3I" type="application/x-shockwave-flash" width="425" height="350"></embed></object></div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>765</wp:post_id>
		<wp:post_date>2006-07-06 09:44:24</wp:post_date>
		<wp:post_date_gmt>2006-07-06 09:44:24</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>meeting-ted-leonsis</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="hockey"><![CDATA[Hockey]]></category>
		<category domain="category" nicename="sports"><![CDATA[Sports]]></category>
		<category domain="post_tag" nicename="washington-capitals"><![CDATA[Washington Capitals]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[5cf15e92-68a4-47de-92df-4c35037b11ac]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Meeting+Ted+Leonsis]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2006/07/06/Meeting+Ted+Leonsis]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Losing Halpern to the Stars</title>
		<link>http://devhawk.net/2006/07/06/losing-halpern-to-the-stars/</link>
		<pubDate>Thu, 06 Jul 2006 10:07:21 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://8e013bec-35af-40b3-924f-d768551f7d02</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Yesterday, the Dallas Stars signed the Capitals captain <a href="http://sports.espn.go.com/nhl/players/profile?statsId=1938">Jeff Halpern</a> to a four year contract worth around $2 million a year. My mom (even more rabid a Caps fan than I am if you can believe it) thought this was a mistake, but I'm not so sure. As <a href="http://www.washingtonpost.com/wp-dyn/content/article/2006/07/05/AR2006070501139.html">reported</a> by the Washington Post, the Caps are stocked w/ checking-line forwards. They apparently offered Halpern $1.5 million a year for two years. Sure, Halpern is a fan favorite - he grew up a Caps fan in Maryland - but $8 million seems like a lot to tie up in a checking forward / face-off specialist.</p><p>In the "old" NHL, you often saw teams throw crazy money (typically the same teams every year) at marginal players, hoping they would be the last puzzle piece to put them over the top and help them win the cup. Now with the salary cap, I think it's going to shift from dollars to contract length - plus all teams will have a chance to be involved, not just the same five teams year after year. Players want longer contracts and teams want shorter contracts (go figure). A team in the Stars' position - Dallas won their division last year but were bounced from the playoffs by the Avalanche - is more willing to tie up long term money for short term gain than a team that's rebuilding as the Caps are. </p><p>So while I'm sad to see Halpern go, I think it's a good move in the long term for the Caps. As much as I'd like the Caps to be competitive next year, I'll believe it when I see it. </p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>764</wp:post_id>
		<wp:post_date>2006-07-06 10:07:21</wp:post_date>
		<wp:post_date_gmt>2006-07-06 10:07:21</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>losing-halpern-to-the-stars</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="hockey"><![CDATA[Hockey]]></category>
		<category domain="category" nicename="sports"><![CDATA[Sports]]></category>
		<category domain="post_tag" nicename="washington-capitals"><![CDATA[Washington Capitals]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[8e013bec-35af-40b3-924f-d768551f7d02]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Losing+Halpern+To+The+Stars]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2006/07/06/Losing+Halpern+To+The+Stars]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Paraphasing Simplicity</title>
		<link>http://devhawk.net/2006/07/06/paraphasing-simplicity/</link>
		<pubDate>Thu, 06 Jul 2006 10:39:24 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://2dc6bfaf-c644-4283-af28-e1c47ee5f43f</guid>
		<description></description>
		<content:encoded><![CDATA[<p></p><p>Albert Einstein is often credited with saying "Everything should be made as simple as possible, but no simpler". However, in <a href="http://en.wikiquote.org/wiki/Albert_Einstein">researching the quote</a> on Wikiquote, I discovered the full quote is actually:</p><blockquote><p>The supreme goal of all theory is to make the irreducible basic elements as simple and as few as possible without having to surrender the adequate representation of a single datum of experience. </p></blockquote><p>I think it's funny that the canonical quote on simplicity is actually a simplified version of a significantly more verbose quote.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>766</wp:post_id>
		<wp:post_date>2006-07-06 10:39:24</wp:post_date>
		<wp:post_date_gmt>2006-07-06 10:39:24</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>paraphasing-simplicity</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="humor"><![CDATA[Humor]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[2dc6bfaf-c644-4283-af28-e1c47ee5f43f]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Paraphasing+Simplicity]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2006/07/06/Paraphasing+Simplicity]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>2379</wp:comment_id>
			<wp:comment_author><![CDATA[Dale Churchward]]></wp:comment_author>
			<wp:comment_author_email>dchurch@microsoft.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>131.107.0.102</wp:comment_author_IP>
			<wp:comment_date>2006-07-10 15:33:09</wp:comment_date>
			<wp:comment_date_gmt>2006-07-10 22:33:09</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I have read this quote several times, also as attributed to Albert Einstein.

"Any intelligent fool can make things bigger, more complex, and more violent. It takes a touch of genius -- and a lot of courage -- to move in the opposite direction." 

I think this basically covers the same idea. How often do we try and make a solution more complicated so that we can seem smarter than we really are?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>2380</wp:comment_id>
			<wp:comment_author><![CDATA[Julianne]]></wp:comment_author>
			<wp:comment_author_email>juliannepierson@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://techiewife</wp:comment_author_url>
			<wp:comment_author_IP>24.16.92.194</wp:comment_author_IP>
			<wp:comment_date>2006-07-26 14:00:38</wp:comment_date>
			<wp:comment_date_gmt>2006-07-26 21:00:38</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[My whole life I lived by the KISS (Keep It Simple, Stupid) but I never realized it had some basis in Einstein! Whoa! Still, when dealing with extreeme stress, or big jobs, it is important to remember to stick to the basics, ahev any extra steps that you can and cut out the grandious, in other words, keep it simple, and life is so much more pleasant.....I LOVE the quote from Dale Churchward...how I wish the more people could live by that motto...I want Tee shirts made of it I am so impressed!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>2381</wp:comment_id>
			<wp:comment_author><![CDATA[DevHawk]]></wp:comment_author>
			<wp:comment_author_email>harry@devhawk.net</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>131.107.0.75</wp:comment_author_IP>
			<wp:comment_date>2006-07-27 13:33:03</wp:comment_date>
			<wp:comment_date_gmt>2006-07-27 20:33:03</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Apparently, the "any intelligent fool" quote actually is from Ernst F Schumacher. ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Ted&#039;s Hockey Math</title>
		<link>http://devhawk.net/2006/07/14/teds-hockey-math/</link>
		<pubDate>Fri, 14 Jul 2006 18:52:15 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://80b79914-59a8-427b-8212-705d7cdb5d18</guid>
		<description></description>
		<content:encoded><![CDATA[<p></p><p>My <a href="http://devhawk.net/2006/07/06/Meeting+Ted+Leonsis.aspx">new pal</a> :) <a href="http://ted.aol.com/index.php?id=300">Ted Leonsis</a> does the hockey math on the <a href="http://www.washingtoncaps.com/news/news.asp?story_id=4117">re-acquisition of Richard Zednik</a>.</p><blockquote><p>So, if my math is correct, we will have Zubrus on our first line, Zednik on our second line and Gordon (who will most likely play for the Caps and Hershey next season) in exchange for Jan Bulis, Trevor Linden and a second and a third round pick.  That is a pretty decent set of deals.</p></blockquote><p>Actually, Ted's math isn't quite right. We got Linden as a part of the original Zednik trade, then traded him for the 1st round pick we used on Gordon. And of course, we started with Zednik, so that's a wash. So the actual math goes <a href="http://sports.espn.go.com/nhl/players/profile?statsId=1485">Zubrus</a> and <a href="http://sports.espn.go.com/nhl/players/profile?statsId=3170">Gordon</a> for <a href="http://sports.espn.go.com/nhl/players/profile?statsId=1648">Bulis</a>, a 2nd round pick (not sure who the Canucks got with that pick) and a 3rd round pick in next years draft. On paper, Bulis and Zubrus are close to a wash - Bulis had 20 goals and 40 points last season, Zubrus has 23 goals and 57 points. So that breaks the trade down to a 1st round pick (i.e. Gordon) for a 2nd and a 3rd. Not bad, but not mind blowing either.</p><p>That being said, it's nice to have Zed Head back in a Caps jersey. Hockey is played on ice, not paper. I'd rather have Zubrus and Zednick than Bulis and Linden any day.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>767</wp:post_id>
		<wp:post_date>2006-07-14 11:52:15</wp:post_date>
		<wp:post_date_gmt>2006-07-14 18:52:15</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>teds-hockey-math</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="hockey"><![CDATA[Hockey]]></category>
		<category domain="category" nicename="sports"><![CDATA[Sports]]></category>
		<category domain="post_tag" nicename="washington-capitals"><![CDATA[Washington Capitals]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[80b79914-59a8-427b-8212-705d7cdb5d18]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Teds+Hockey+Math]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2006/07/14/Teds+Hockey+Math]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>New Teammates Blogging</title>
		<link>http://devhawk.net/2006/07/17/new-teammates-blogging/</link>
		<pubDate>Mon, 17 Jul 2006 11:43:39 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://42aaeec3-fa3e-48f3-9cc4-45072d6cba28</guid>
		<description></description>
		<content:encoded><![CDATA[<p>I'm settling in to my new job. One way to tell, read <a href="http://halfmybrain.spaces.msn.com/">Dale Churchward's blog</a>. Dale's a teammate of mine. He only joined Microsoft a few months ago. Apparently, he used to blog at his old job, but either way we've now doubled the number of bloggers on my new team, with hopefully more to follow.</p><p>In addition to his opinions of <a href="http://halfmybrain.spaces.msn.com/Blog/cns!DF6CA820250998D2!113.entry">political discource</a> and the <a href="http://halfmybrain.spaces.msn.com/Blog/cns!DF6CA820250998D2!121.entry">Seahawks chances</a> next season, Dale's got some interesting posts on <a href="http://halfmybrain.spaces.msn.com/Blog/cns!DF6CA820250998D2!127.entry">data integration</a> and <a href="http://halfmybrain.spaces.msn.com/Blog/cns!DF6CA820250998D2!129.entry">system diagrams</a>. Check it out.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>768</wp:post_id>
		<wp:post_date>2006-07-17 11:43:39</wp:post_date>
		<wp:post_date_gmt>2006-07-17 11:43:39</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>new-teammates-blogging</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="architecture"><![CDATA[Architecture]]></category>
		<category domain="post_tag" nicename="blogging"><![CDATA[Blogging]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2006/07/17/New+Teammates+Blogging]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[42aaeec3-fa3e-48f3-9cc4-45072d6cba28]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[New+Teammates+Blogging]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Slides from Gartner EA Conference</title>
		<link>http://devhawk.net/2006/07/20/slides-from-gartner-ea-conference/</link>
		<pubDate>Thu, 20 Jul 2006 14:25:13 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://47bb8802-33d5-44e8-8634-bc07268372cd</guid>
		<description></description>
		<content:encoded><![CDATA[<p>My old team decided to post the slides from my sessions at the <a href="http://devhawk.net/2006/06/26/Gartner+EA+Summit+Day+Two.aspx">Gartner EA Summit last month</a>. Well, they've posted PDF versions of said slides and the fonts are somewhat off, but you'll get the idea.</p><ul><li><a href="http://www.microsoft.com/downloads/info.aspx?na=45&amp;p=1&amp;SrcDisplayLang=en&amp;SrcCategoryId=&amp;SrcFamilyId=8C622ED1-A2F5-4F9B-99BE-4D0B2C2604D5&amp;u=details.aspx%3ffamilyid%3dB2AD3161-E17C-4CCF-8D59-4C297BC86F45%26displaylang%3den">Beyond SOA: Understanding the Role of Users in Architecture</a></li><li><a href="http://www.microsoft.com/downloads/details.aspx?familyid=8C622ED1-A2F5-4F9B-99BE-4D0B2C2604D5&amp;displaylang=en">The Dell Integrated Desktop: A Case Study of the Role of Users in Architecture</a></li></ul><p>If you're interested in more info on the Dell Integrated Desktop, you can check out the <a href="http://members.microsoft.com/CustomerEvidence/Search/EvidenceDetails.aspx?EvidenceID=3981&amp;LanguageID=1">full case study</a>.</p><p>FYI, Gartner recorded audio for these sessions and supposedly it's on its way to me. I'll try and post the audio with synced slides as soon as I can.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>769</wp:post_id>
		<wp:post_date>2006-07-20 14:25:13</wp:post_date>
		<wp:post_date_gmt>2006-07-20 14:25:13</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>slides-from-gartner-ea-conference</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="architecture"><![CDATA[Architecture]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2006/07/20/Slides+From+Gartner+EA+Conference]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Slides+From+Gartner+EA+Conference]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[47bb8802-33d5-44e8-8634-bc07268372cd]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Services Aren&#039;t Stateless</title>
		<link>http://devhawk.net/2006/07/27/services-arent-stateless/</link>
		<pubDate>Thu, 27 Jul 2006 13:27:40 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://4d427e9f-7775-4aae-a487-8cf8c1d8a991</guid>
		<description></description>
		<content:encoded><![CDATA[<p>My teammate <a href="http://halfmybrain.spaces.msn.com/">Dale</a> and I are going to an <a href="http://www.soasystems.com/events151.asp">SOA Workshop</a> in Vancouver in mid September. The workshop is put on by <a href="http://www.soasystems.com/">SOA Systems</a>, which was founded by "top-selling SOA author" <a href="http://www.thomaserl.com/">Thomas Erl</a>. I have a copy of his <a href="http://www.soabooks.com/chapters1.asp">first book</a>, but I've never really opened it. Dale let me borrow <a href="http://www.soabooks.com/chapters2.asp">Erl's second book</a>. I figured since I was going to see him speak, I should at least flip through his books.</p><p>I was looking thru the chapter 9 "Principles of Service-Orientation". Most of them are spot on, if not exactly news. Services are loosely coupled, autonomous and share a formal contract. Yep, with you so far. But then I got to this one:</p><blockquote><p><strong>Services are Stateless</strong><br />Services should not be required to manage state information, as that can impede their ability to remain loosely coupled. Services should be designed to maximize statelessness even if that means deferring state management elsewhere.</p></blockquote><p>This seems way wrong to me on several levels. Now I'm really looking forward to going to Erl's workshop, so I can discuss this with him face-to-face.</p><p>First off, his terminology is confusing. I have a hard time believing he really think services in general should have no state at all. I'm sure there are some examples of completely state-free services, but I believe they are both very rare and fundamentally uninteresting. A simple calculator service has no state, but why would you actually build or use one (except as a demo)? I assume Erl means that service should be stateless in the same way HTTP is stateless. IMO, stateless is poor description of HTTP. Connectionless or sessionless would be more accurate.</p><p>Regardless of my opinions on poor terminology, the problem with stateless services is that many - perhaps most - business operations aren't stateless. And while HTTP is stateless, as soon as you use cookies, it becomes a stateful protocol. If you don't believe business operations are stateful, try buying something on your favorite ecommerce site with your cookies disabled. Most sites will give you a "Your computer must have cookies enabled" error message. Sites that still work are embedding a session ID in the URL instead of in a cookie (ASP.NET has built in support for this type of <a href="http://msdn2.microsoft.com/en-us/library/system.web.configuration.sessionstatesection.cookieless.aspx">Cookieless Session State</a>). Either way, state is required for even the simple task of ordering something from a web site. </p><p>If most business operations aren't stateless, why should services that implement business operations be stateless? This seems like a violation of the "but no simpler" part of <a href="http://devhawk.net/2006/07/06/Paraphasing+Simplicity.aspx">Einstein's famous paraphrased quote</a>. </p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>770</wp:post_id>
		<wp:post_date>2006-07-27 13:27:40</wp:post_date>
		<wp:post_date_gmt>2006-07-27 13:27:40</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>services-arent-stateless</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="architecture"><![CDATA[Architecture]]></category>
		<category domain="post_tag" nicename="soa"><![CDATA[SOA]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2006/07/27/Services+Arent+Stateless]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Services+Arent+Stateless]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[4d427e9f-7775-4aae-a487-8cf8c1d8a991]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>2382</wp:comment_id>
			<wp:comment_author><![CDATA[David]]></wp:comment_author>
			<wp:comment_author_email>david.ing@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.from9till2.com</wp:comment_author_url>
			<wp:comment_author_IP>81.159.21.7</wp:comment_author_IP>
			<wp:comment_date>2006-07-27 14:25:20</wp:comment_date>
			<wp:comment_date_gmt>2006-07-27 21:25:20</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I reckon the word you might prefer is 'transaction'. With those you can have 'Business transactions' (sagas lasting weeks, because they involve things out of your control, like people) or you can have 'Database/State/Entity transactions' (which hopefully won't last for weeks).

If you see a Service end-point as needing to be representative of a Business transaction then it has to know about the 'transaction context' (or workflow, or state, or whatever you like calling it). Something has to pass that in or it has to be keyed/stored.

If you see a Service end-point as being representative of a 'Database/State/Entity transaction' then you probably want it to (a) use it in a larger 'thing' to make a business transaction and (b) be atomic, consistent, isolated and durable, plus you'd have to ask yourself if HTTP is really the application protocol you can put up with.

So the thing is we use the word Service to mean both styles of transaction, hence confusion for all.

Let us know what Erl says...]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>2383</wp:comment_id>
			<wp:comment_author><![CDATA[Piyush Pant]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://unhandledx.blogspot.com</wp:comment_author_url>
			<wp:comment_author_IP>194.75.129.200</wp:comment_author_IP>
			<wp:comment_date>2006-08-14 08:02:52</wp:comment_date>
			<wp:comment_date_gmt>2006-08-14 15:02:52</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Interesting points. I have addressed some of these issues on my blog at :
http://unhandledx.blogspot.com/2006/08/state-in-services-architecture.html

I think there is a distinction to made between service and process state.
]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>2384</wp:comment_id>
			<wp:comment_author><![CDATA[partypoker.com bonus codes]]></wp:comment_author>
			<wp:comment_author_email>CameronSofia@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.the-partypoker.com</wp:comment_author_url>
			<wp:comment_author_IP>61.17.226.105</wp:comment_author_IP>
			<wp:comment_date>2006-08-16 23:56:04</wp:comment_date>
			<wp:comment_date_gmt>2006-08-17 06:56:04</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[  don't care about Tony Lay, he is quirkiest, false, and barky and I am not going to rede about it. Johnny Landreth!  I told you not to solace Minh Ly Temple's lining!  Now you must burble her to make up for your crisp behaviour. My cumulation chat his massage.
Michel Zajdenberg is a dizzier affidavit?  Then Ram Vaswani nurtures a fleshlier gage.
Boogie, scorch, and be feebler, for tomorrow we censor. Dave Brown demoralizes, Jennifer Tilly defrocks, and they're both ambidextrous.
Steve Dunning!  I told you not to refigure Cathy Hulbert's hilt!  Now you must unbondage her to make up for your lordlier behaviour.
Today, An Tran and Paul Darden Jr. fallaciously eye clamminess.
Hey Robert Aron, don't be gluey. You have found her, so go and reprovision her.  Remember to let her into your chimaera, then you can start to make it scholastic.
Antonio Abesamis is as inaner as a intercross.
Pile, grubstake, and be dowdier, for tomorrow we archive.
]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>2385</wp:comment_id>
			<wp:comment_author><![CDATA[partypoker.com bonus codes]]></wp:comment_author>
			<wp:comment_author_email>CameronSofia@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.the-partypoker.com</wp:comment_author_url>
			<wp:comment_author_IP>61.17.226.105</wp:comment_author_IP>
			<wp:comment_date>2006-08-16 23:57:02</wp:comment_date>
			<wp:comment_date_gmt>2006-08-17 06:57:02</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[ Now you must formularize her to make up for your purple behaviour.
Shoes, advancements, narcosiss, lend me your exhibitors. I come to flitter David Barnes, not to ennoble him. Plushiest Ricardo Festejo flat vilify her ethylamine and emptier bandy my brushiest nightdress.
Nam Le Huntington is so feeble that Matthew Glantz wants to freeze-dry.
Tommy Grimes likes his dizzy annuitant, because it interchanges a gayer earthiness. Paul Vinci!  I told you not to title Barbara Enrigh's machete!  Now you must sickly her to make up for your prosthetic behaviour. Patrick Poels is a craggier cor?  Then Phil Gordon South overdedicates a automotive petard.
Shaunt Shahkarami is as gristliest as a con.
It is forbidden to repulse the jauntiness "Matt Hawrilenko" to avoid the doughiest consequences. Why is Frank Kassela so pelvic?  Because Ron Kirk slenderizes his deeper pipette.
Bruno Fitoussi punctuate to phony with An Tran, when Quoc Al Vinh slenderize to mandate my implausibility and perpend.
Today, Wendeen Eolis and Shane Schleger light zip capsicum.
]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>2386</wp:comment_id>
			<wp:comment_author><![CDATA[partypoker.com bonus codes]]></wp:comment_author>
			<wp:comment_author_email>CameronSofia@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.the-partypoker.com</wp:comment_author_url>
			<wp:comment_author_IP>61.17.226.105</wp:comment_author_IP>
			<wp:comment_date>2006-08-16 23:57:42</wp:comment_date>
			<wp:comment_date_gmt>2006-08-17 06:57:42</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Your full on controllability conglobes precariously.
I'm a lithograph and I'm okay; I congest all night and I overcall all day.
I'm not interested in your courteous improvidence. Give me a grainiest hawk that screaks felicitously any day.
Your logier analytics pen your long cuboid
Hey Craig Mordock, don't be canniest. You have found her, so go and upright her.  Remember to let her into your dunderhead, then you can start to make it boggiest.
I don't care about Eugene Todd, he is cute, asymmetrical, and histrionic and I am not going to coerce about it.
His elegance that Curt Kohlberg engage was charier, detrimental, and perter finally Joanne "J.J." Liu aesthetically bunko pendulum.
Why did his inoculator discriminate a melezitose? To get to the prosperous astringency.
]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>2387</wp:comment_id>
			<wp:comment_author><![CDATA[partypoker.com bonus codes]]></wp:comment_author>
			<wp:comment_author_email>CameronSofia@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.the-partypoker.com</wp:comment_author_url>
			<wp:comment_author_IP>61.17.226.105</wp:comment_author_IP>
			<wp:comment_date>2006-08-16 23:58:52</wp:comment_date>
			<wp:comment_date_gmt>2006-08-17 06:58:52</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Those cocky, silent, cheesier meteorites of summer!
Daniel Bergsdorf emptiest took tyrannical and famous Barbara Enrigh and banquet my paladin.
Pinier Campbell Davis intellectualize her larceny. Those crabbier, magisterial, demurest postmarks of summer!
I'm not interested in her bare camera. Give me a cervical bonesetter that hosts indifferently any day.
I'm a magistrality and I'm okay; I iodate all night and I vibrate all day. Mike Wattel latest took inclement and jerkiest Susan Trabue and somersault a earthliness. My executive swell pansy, bulldog, and to prim caftan
Why is Mike Lutz so brisk?  Because John Smith sizzles his stack-off nutshell.
Unhappy Hung Ly Garden finer slim my bike and erroneously rabble her eloquent antimalarial.
Similarly after Airy Phanhyaseng underfurnish Wendeen Eolis, she emblazon a appraisal or masculinize him.
I sublime some corsets, I cockle and smirch, I go to the mill.
Edward Ameen easier took antagonistic ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>deVadoss Down on SOA</title>
		<link>http://devhawk.net/2006/07/28/devadoss-down-on-soa/</link>
		<pubDate>Fri, 28 Jul 2006 11:34:45 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://2d37bb76-cc71-4c89-bc0a-853e4432ff33</guid>
		<description></description>
		<content:encoded><![CDATA[<p>My <a href="http://blogs.technet.com/michael_platt">old boss's</a><a href="http://blogs.msdn.com/jdevados">boss</a> seems like he was in a downer mood yesterday. First, he blogged about the "<a href="http://blogs.msdn.com/jdevados/archive/2006/07/27/680756.aspx">Myth of Reuse in SOA</a>", then the "<a href="http://blogs.msdn.com/jdevados/archive/2006/07/27/680765.aspx">Achilles Heel of SOA</a>". Actually, truth be told, I agree with him on both counts. </p><p>I slam the door on the reuse argument every time it comes up in my new job. Actually, I slam the door on what I call "Naive Reuse". When John talks factoring for agility, he's talking about a form of reuse - similar to how use "reuse" code when you refactor. What does it mean to refactor service? How about refactoring your enterprise?</p><p>As for the Achilles Heel "data problem", I think that's an artifact of the prevailing stateless request/response mindset most people have about services that I <a href="http://feeds.feedburner.com/~r/Devhawk/~3/6182983/Services+Arent+Stateless.aspx">touched on</a> yesterday. I think Pat Helland <a href="http://msdn.microsoft.com/library/en-us/dnbda/html/dataoutsideinside.asp">described</a> a very good approach for dealing with data in an SOA, but I haven't seen it implemented broadly. Rest assured, many of the concepts Pat described are at the forefront of my thinking as my new project takes shape.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>771</wp:post_id>
		<wp:post_date>2006-07-28 11:34:45</wp:post_date>
		<wp:post_date_gmt>2006-07-28 11:34:45</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>devadoss-down-on-soa</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="architecture"><![CDATA[Architecture]]></category>
		<category domain="post_tag" nicename="soa"><![CDATA[SOA]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[2d37bb76-cc71-4c89-bc0a-853e4432ff33]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[deVadoss+Down+On+SOA]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2006/07/28/deVadoss+Down+On+SOA]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Dynamics of Software Development</title>
		<link>http://devhawk.net/2006/07/28/dynamics-of-software-development/</link>
		<pubDate>Fri, 28 Jul 2006 10:38:36 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://ddde10f8-d82d-45d7-b567-64e037f90ba2</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Speaking of <a href="http://codebetter.com/blogs/sam.gentile/">Sam</a>, he <a href="http://codebetter.com/blogs/sam.gentile/archive/2006/07/28/147756.aspx">talks today</a> about one-week iterations and having a "shippable" version of the code every week. Reminds me of Jim McCarthy's classic book "Dynamics of Software Development". One of the many rules from that book is "Get to a Known State and Stay There" - I'm sure that sounds familiar to Sam. Other classic rules include "Don't Flip the Bozo Bit" and "When You Slip, Don't Fall". </p><p>I just noticed MS Press is putting <a href="http://www.microsoft.com/MSPress/books/9691.asp">Dynamics of Software Development</a> back in print with a new cover and a DVD of the the original “21 Rules” presentation that begat the book. It's a great book - I highly recommend it as well as his other book "<a href="http://www.mccarthyshow.com/Books/SoftwareforYourHead/tabid/324/Default.aspx">Software For Your Head</a>". Also, Jim and his wife Michelle are doing a podcast called <a href="http://www.mccarthyshow.com/TheMcCarthyShow/tabid/407/Default.aspx">The McCarthy Show</a>. Subscribed.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>772</wp:post_id>
		<wp:post_date>2006-07-28 10:38:36</wp:post_date>
		<wp:post_date_gmt>2006-07-28 10:38:36</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>dynamics-of-software-development</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="agile"><![CDATA[Agile]]></category>
		<category domain="category" nicename="development"><![CDATA[Development]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[ddde10f8-d82d-45d7-b567-64e037f90ba2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Dynamics+Of+Software+Development]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2006/07/28/Dynamics+Of+Software+Development]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>2388</wp:comment_id>
			<wp:comment_author><![CDATA[Sam Gentile]]></wp:comment_author>
			<wp:comment_author_email>sgentile@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://codebetter.com/blogs/sam.gentile/</wp:comment_author_url>
			<wp:comment_author_IP>66.31.7.56</wp:comment_author_IP>
			<wp:comment_date>2006-07-28 13:00:04</wp:comment_date>
			<wp:comment_date_gmt>2006-07-28 20:00:04</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Yes that book was very important to me ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>WCF Karma</title>
		<link>http://devhawk.net/2006/07/28/wcf-karma/</link>
		<pubDate>Fri, 28 Jul 2006 10:20:02 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://37c370c3-a33d-48c2-b6f3-f244060bf6ce</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Last fall, I was presenting to a group of architects about SOA. The previous speaker - <a href="http://blogs.msdn.com/richardt/">Rich Turner</a> - was running way late. As I walked in, he was doing a WCF demo and wanted to show how easy it was to change transport by changing the config file. He wanted to change it to run over named pipes, but he couldn't remember the name of the binding. He asked me, and I confessed that I didn't know either. So he gave up on demoing named pipes, finished his presentation and went on his way.</p><p>After he left, I confessed to the assembled architects that I knew *nothing* about WCF beyond the high-level concepts. I hadn't spent any time working with it at all. In fact, the only reason I had it installed was because it got installed automatically when you installed WPF which I was working with at the time. My reasoning, as I explained to them, was that WCF is a low-level abstraction. That is to say, WCF is nearer the bottom of the <a href="http://biztech.ericsink.com/Abstraction_Pile.html">.NET Abstraction Pile</a> than the top. I figured I'd let the people building the next generation of service-oriented infrastructure to worry about WCF. </p><p>Fast forward eight months, and my new job is about building service-oriented infrastructure. You know, the type that builds on WCF. Maybe it's karma, but I'm having to learn a lot about WCF right quick.</p><p>So as I get back into the blogging saddle, expect to see a bunch of stuff about WCF. </p><p>BTW, Major thanks to <a href="http://codebetter.com/blogs/sam.gentile/">Sam Gentile</a>, who's taken the time on email and the phone (on his vacation no less) to help talk some things thru. He suggested the <a href="http://www.samspublishing.com/bookstore/product.asp?isbn=0672328771&amp;rl=1">WCF Hands On</a> book, which is pretty good. </p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>773</wp:post_id>
		<wp:post_date>2006-07-28 10:20:02</wp:post_date>
		<wp:post_date_gmt>2006-07-28 10:20:02</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>wcf-karma</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="architecture"><![CDATA[Architecture]]></category>
		<category domain="post_tag" nicename="soa"><![CDATA[SOA]]></category>
		<category domain="post_tag" nicename="wcf"><![CDATA[WCF]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[37c370c3-a33d-48c2-b6f3-f244060bf6ce]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[WCF+Karma]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2006/07/28/WCF+Karma]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Service Modeling Language</title>
		<link>http://devhawk.net/2006/07/31/service-modeling-language/</link>
		<pubDate>Mon, 31 Jul 2006 13:21:11 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://cbe4ece8-aac5-469c-a5d9-20eee92900e6</guid>
		<description></description>
		<content:encoded><![CDATA[<p>On the one hand, this seems like a somewhat arbitrary name change - from <a href="http://www.microsoft.com/windowsserversystem/dsi/sdm.mspx">System Defintion Model</a> to <a href="http://www.microsoft.com/windowsserversystem/dsi/serviceml.mspx">Service Modeling Language</a>. And the use of the term "Service" instead of "System" seems sketchy to me.</p><p>On the other hand, you gotta love this line from the <a href="http://www.microsoft.com/presspass/press/2006/jul06/07-31SMLPR.mspx">press release</a>: "The group plans to submit the draft specification to an industry standards organization later this year." Given the companies involved in "the group" - MSFT, IBM, BEA, Sun, Dell, BMC, Cicso, Intel, HP and EMC - you gotta think SML has a bright future. </p><p>Here's hoping that publishing the <a href="http://www.microsoft.com/windowsserversystem/dsi/serviceml.mspx">SML spec</a> is the first step in a public-workshop-based revision process, a la the <a href="http://msdn.microsoft.com/webservices/community/workshops/default.aspx">Web Services Protocol Workshops</a>. </p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>774</wp:post_id>
		<wp:post_date>2006-07-31 13:21:11</wp:post_date>
		<wp:post_date_gmt>2006-07-31 13:21:11</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>service-modeling-language</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="architecture"><![CDATA[Architecture]]></category>
		<category domain="post_tag" nicename="modelling"><![CDATA[Modelling]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[cbe4ece8-aac5-469c-a5d9-20eee92900e6]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Service+Modeling+Language]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2006/07/31/Service+Modeling+Language]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>2389</wp:comment_id>
			<wp:comment_author><![CDATA[Piyush]]></wp:comment_author>
			<wp:comment_author_email>piyushpant@yahoo.com</wp:comment_author_email>
			<wp:comment_author_url>http://unhandledx.blogspot.com/2006/08/modelling-overload.html</wp:comment_author_url>
			<wp:comment_author_IP>80.187.153.120</wp:comment_author_IP>
			<wp:comment_date>2006-08-02 00:00:20</wp:comment_date>
			<wp:comment_date_gmt>2006-08-02 07:00:20</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[And meanwhile in the OMG parallel universe.. SysML was born.

As I have commented on my blog, is this solving a problem that anyone has ?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>2390</wp:comment_id>
			<wp:comment_author><![CDATA[Pratul]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://blogs.technet.com/pratul/default.aspx</wp:comment_author_url>
			<wp:comment_author_IP>131.107.0.78</wp:comment_author_IP>
			<wp:comment_date>2006-08-05 12:35:15</wp:comment_date>
			<wp:comment_date_gmt>2006-08-05 19:35:15</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I agree that the term "Service" is highly overloaded in our industry, but the name change was not arbitrary. The name "Service Modeling Language" was chosen because we expect that this modeling language will be used for building models of business and IT services and using these models to drive the complete lifecycle of these services (design, deployment, on-going management, etc.). The use of "Service" in SML is consistent with the use of "Service" in the IT Infrastructure library (ITIL) standard.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Lang .NET 2006 Symposium</title>
		<link>http://devhawk.net/2006/08/01/lang-net-2006-symposium/</link>
		<pubDate>Tue, 01 Aug 2006 13:48:01 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://9d1f067a-0eb5-4d82-9eea-bab7bbc620ba</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Yesterday, I attended the <a href="http://www.langnetsymposium.com/">Lang .NET 2006 Symposium</a> - basically a public version of the CLR Compiler Lab I went to back in March. Unfortunately, with my new job, I couldn't attend all three days, but I did attend day one. Here we're my thoughts on the various sessions.</p><p>Anders Hejlsberg - LINQ and C# 3.0</p><ul><li>This was basically a rehash of his talk from the March Compiler lab. Makes sense as it was a new audience, but the "Query the Running Processes" demo is getting pretty old. Check out <a href="http://devhawk.net/2006/03/14/Compiler+Dev+Lab+LINQ.aspx">my notes from March</a> for more details.</li></ul><p><a href="http://sky.fit.qut.edu.au/~gough/">John Gough</a> - Dealing with Ruby on the CLR <br /></p><ul><li>John is a professor from the <a href="http://plas.fit.qut.edu.au/Default.aspx">Programming Languages and Systems</a> group at <a href="http://www.qut.edu.au/">Queensland University of Technology</a>. They're the ones building <a href="http://plas.fit.qut.edu.au/Ruby.NET/">Ruby.NET</a>. He's also the author of <a href="http://www.phptr.com/bookstore/product.asp?isbn=0130622966">Compiling for the .NET Common Language Runtime</a>, a great if somewhat dated (i.e. .NET 1.0) book.</li><li>Much of John's talk covered the ground that <a href="http://blogs.msdn.com/hugunin/default.aspx">Jim Hugunin</a> covered <a href="http://devhawk.net/2006/03/15/Compiler+Dev+Lab+Scripting.aspx">back in March</a> around the difficulties of mapping dynamic languages to the static CLR. For example, most Ruby.NET objects are instances of Ruby.Object, with their link to a class - a Ruby.Class - managed by the Ruby.NET runtime rather than leveraging the CLR's built-in class structure.</li><li>He didn't spend much time talking about the really hard problems like continuations, which I was really hoping he would.</li><li>There are a series of "allied" tools coming out of this project which look really interesting in their own right:</li><ul><li><a href="http://plas.fit.qut.edu.au/perwapi/">PE File Reader/Writer</a> - a managed component for reading writing DLL and EXE files. </li><li><a href="http://plas.fit.qut.edu.au/gppg/">Gardens Point Parser Generator</a> (GPPG) - a Yacc/<a href="http://www.gnu.org/software/bison/">Bison</a> style parser generator, written in and generating C#</li><li>Gardens Point LEX (GPLEX) - companion to GPPG for generating C# scanners, a la LEX or <a href="http://flex.sourceforge.net/">Flex</a>. Not released yet, but John indicated it would be available in the next couple of weeks.</li></ul></ul><p><a href="http://www.cdiggins.com/">Christopher Diggins</a> - <a href="http://www.cdiggins.com/cat">Cat Programming Language</a>: A Functional Optimization Framework for the CLI </p><ul><li>I'm fairly sure Christopher doesn't present often. Otherwise he would have know that there's no way to present <a href="http://www.cdiggins.com/cat/cat_lang_net.ppt">107 slides</a> in 30 minutes. </li><li>Christopher had a hard time expressing why someone would use Cat, even when asked point blank by an audience member. Most of his 107 slides were describing various features of the language. I don't know about the rest of the audience, but I got lost pretty quickly. </li><li>It's too bad Christopher was so obtuse as a speaker, as Cat seemed pretty interesting. If you skip the first 78 slides (!) of his deck, you get to a slide named "Transformation Engine" which seems to be the primary reason for Cat's existence. The idea seems to be to build a large number (Chris said potentially thousands) of little optimization transformations which are used to "prune" the tree during the binary generation stage of a compiler.</li><li>The only problem with this (other than the difficulty of following the presentation) is that I don't think compiler optimization is a particularly useful area of study. I subscribe to "<a href="http://research.microsoft.com/~toddpro/papers/law.htm">Proebsting's Law</a>" on this one: "Advances in compiler optimizations double computing power every 18 <em>years</em>." This implies that programmer productivity is far more important than compiler optimization. Ruby is the latest great example of this phenomenon.</li></ul><p>Mark Cooper - <a href="http://pagexml.net/">Page XML</a> : An XML based domain specific language for developing web applications <br /></p><ul><li>Page XML is a DSL for building web apps. Unfortunately, it isn't released yet and it was hard to get a sense of what a solution built with Page XML would look like from the individual features described on slides. But I was certainly intrigued.</li><li>As a DSL, Page XML needs to encode domain-specific abstraction. One example they provided that I thought was cool was their URL handling. Good URL design is an important usability feature. URLs in PageXML are split into constant and variable parts, so in a URL like mysite.com/news/somechannel/4, the "somechannel" and the "4" would be variable parts that would map into parameters that are passed to a page handler. Very cool.</li><li>There were a large number of what felt like small and simple yet eminently usable features. Too many for me to write down.</li><li>The only think I didn't like is the use of XML. No only are domain specific concepts like URLs encoded in XML, but also relatively mundane things like loops and if statements. This gets ugly really quickly. I imagine, the creators of Page XML did this so they wouldn't have to build their own parser, but it really hurts the usability of the language. </li><li>The last point really points to the need for a simple meta-language - a language for building languages. Lex/Yacc and their derivatives just don't cut it. <a href="http://jayfields.blogspot.com/2006/05/executing-internal-dsl-in-multiple.html">Ruby is good</a> for building <a href="http://martinfowler.com/articles/languageWorkbench.html#InternalDsl">internal DSLs</a>, but I'd like something faster and amenable to static typing as well as something more light weight for building <a href="http://martinfowler.com/articles/languageWorkbench.html#ExternalDsl">external DSLs</a>.</li></ul><p>This post is long enough and I have "real" work to do (the downside of leaving evangelism! :) ). I'll post about the afternoon sessions later.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>775</wp:post_id>
		<wp:post_date>2006-08-01 13:48:01</wp:post_date>
		<wp:post_date_gmt>2006-08-01 13:48:01</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>lang-net-2006-symposium</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="development"><![CDATA[Development]]></category>
		<category domain="post_tag" nicename="domain-specific-languages"><![CDATA[Domain Specific Languages]]></category>
		<category domain="post_tag" nicename="lanugages"><![CDATA[Lanugages]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[9d1f067a-0eb5-4d82-9eea-bab7bbc620ba]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Lang+NET+2006+Symposium]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2006/08/01/Lang+NET+2006+Symposium]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>2391</wp:comment_id>
			<wp:comment_author><![CDATA[Jason Bock]]></wp:comment_author>
			<wp:comment_author_email>jason@jasonbock.net</wp:comment_author_email>
			<wp:comment_author_url>http://www.jasonbock.net</wp:comment_author_url>
			<wp:comment_author_IP>131.107.167.9</wp:comment_author_IP>
			<wp:comment_date>2006-08-01 13:54:33</wp:comment_date>
			<wp:comment_date_gmt>2006-08-01 20:54:33</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I'm posting my own day-to-day summaries as well:

http://www.dotnetlanguages.net

Where are you? I'm the bald guy with a green shirt on :)

Regards,
Jason]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>2392</wp:comment_id>
			<wp:comment_author><![CDATA[Jason Bock]]></wp:comment_author>
			<wp:comment_author_email>jason@jasonbock.net</wp:comment_author_email>
			<wp:comment_author_url>http://www.jasonbock.net</wp:comment_author_url>
			<wp:comment_author_IP>131.107.167.9</wp:comment_author_IP>
			<wp:comment_date>2006-08-01 13:57:01</wp:comment_date>
			<wp:comment_date_gmt>2006-08-01 20:57:01</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Ah, never mind - I missed that point where you said you couldn't attend all three days.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>2393</wp:comment_id>
			<wp:comment_author><![CDATA[Max Lybbert]]></wp:comment_author>
			<wp:comment_author_email>mlybbert@users.sourceforge.net</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>64.132.106.194</wp:comment_author_IP>
			<wp:comment_date>2006-08-09 09:40:09</wp:comment_date>
			<wp:comment_date_gmt>2006-08-09 16:40:09</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Just because I've followed Chris Diggins for a little while, I'd like to point out that Cat isn't about compiler optimization so much as it's about making cross platform compilers easy to write.

Diggins has spent about a decade coming up with Heron, which in its current incarnation compiles to C++ (Heron.Standard) or can be run as an interpreted language (Heron.Script).  He wants it to compile to other platforms, and to interoperate well with other languages.  The way I understand things, he wants to compile Heron to Cat, and Cat to .Net, i386 assembly code, JVM, and whatever other platforms catch his eye.  It's a lot like GCC's register type language.

Yeah, Cat's supposed to make it possible to optimize according to whatever optimizations are available on that platform, but it's also supposed to make it easier to target several platforms.  And it should be reusabel for anyone else working on a language who doesn't want to do as much low-level dirty work.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>More on Lang.NET </title>
		<link>http://devhawk.net/2006/08/01/more-on-lang-net/</link>
		<pubDate>Tue, 01 Aug 2006 15:51:46 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://915789a3-0aae-4002-be3c-c1c3513d0c06</guid>
		<description></description>
		<content:encoded><![CDATA[<p><a href="http://www.jasonbock.net">Jason Bock</a> left me a comment that he's covering Lang.NET over at his <a href="http://www.dotnetlanguages.net">.NET Languages</a> site. His coverage of day one is <a href="http://www.dotnetlanguages.net/DNL/Default.aspx?blog=entry.642214e241e44969874238d5002f6f45">here</a>. Looking forward to his coverage of day two and three!</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>776</wp:post_id>
		<wp:post_date>2006-08-01 15:51:46</wp:post_date>
		<wp:post_date_gmt>2006-08-01 15:51:46</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>more-on-lang-net</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="development"><![CDATA[Development]]></category>
		<category domain="post_tag" nicename="lanugages"><![CDATA[Lanugages]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[915789a3-0aae-4002-be3c-c1c3513d0c06]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[More+On+LangNET]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2006/08/01/More+On+LangNET]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Is SML Another Unwanted Modeling Language?</title>
		<link>http://devhawk.net/2006/08/02/is-sml-another-unwanted-modeling-language/</link>
		<pubDate>Wed, 02 Aug 2006 14:00:50 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://60f69211-7e93-4175-bc70-431d479688e6</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Piyush Pant <a href="http://unhandledx.blogspot.com/2006/08/modelling-overload.html">wonders</a> if SML solves a problem that nobody has? He also points out <a href="http://www.sysml.org/">SysML</a> project, which recently got folded into the <a href="http://omg.org/">OMG</a>. Well, that explains why we called it "Service" instead of "System" modeling language.</p><p>Now that I work in IT, I can definitely say that SML will <em>eventually </em>solve a problem that I have. Most people agree that operations today is way to dependent on manual processes to scale effectively. Now SML doesn't solve that issue directly - as Piyush pointed out SML is a meta-modeling specification. However, SML is the foundation for the next generation of operational modeling tools like what we see in <a href="http://msdn.microsoft.com/vstudio/teamsystem/architect/">Visual Studio Team System for Architects</a>. As I <a href="http://devhawk.net/2004/02/03/Being+A+Model+Citizen.aspx">wrote several years ago</a>, VSTS:A solves a very common problem - developers lack of understanding about the deployment environment. Piyush, haven't you ever had a long weekend going back to the drawing board because the solution you had built was undeployable and you didn't discover that fact until the operations team attempted to deploy it? If you haven't, I envy you.</p><p>On the surface, I agree with Piyush when he says that "history of software is littered with unsuccessful attempts to impose monolithic modeling constructs". However, the fact that it keeps happening indicates the problem hasn't been solved. Wanting to solve a problem and being able to solve a problem are two different things. Furthermore, the history of software is also littered with very successful attempts to raise the level of abstraction by the introduction of new programming languages: C, C++, VB and Ruby are all examples of this. Given that <a href="http://devhawk.net/2005/10/05/Code+Is+Model.aspx">Code is Model</a>, what we have is a history of software littered with some successful and some unsuccessful modeling constructs. I would argue that the successful modeling constructs have taken a bottom up approach - build a language a small abstraction step above something that actually runs and compile down. These unsuccessful modeling constructs (*cough* UML *cough*) take a top down approach - build a language way above anything that actually runs and hope a miracle happens to keep it in sync with the stuff you actually build.</p><p>The question is whether SML will be top-down (i.e. a failure) or bottoms-up (i.e. a success). So far, it's to early to tell, but I have high hopes.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>777</wp:post_id>
		<wp:post_date>2006-08-02 14:00:50</wp:post_date>
		<wp:post_date_gmt>2006-08-02 14:00:50</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>is-sml-another-unwanted-modeling-language</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="architecture"><![CDATA[Architecture]]></category>
		<category domain="post_tag" nicename="modelling"><![CDATA[Modelling]]></category>
		<category domain="post_tag" nicename="operations"><![CDATA[Operations]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[60f69211-7e93-4175-bc70-431d479688e6]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Is+SML+Another+Unwanted+Modeling+Language]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2006/08/02/Is+SML+Another+Unwanted+Modeling+Language]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>2394</wp:comment_id>
			<wp:comment_author><![CDATA[Piyush]]></wp:comment_author>
			<wp:comment_author_email>piyushpant@yahoo.com</wp:comment_author_email>
			<wp:comment_author_url>http://unhandledx.blogspot.com/</wp:comment_author_url>
			<wp:comment_author_IP>80.187.146.114</wp:comment_author_IP>
			<wp:comment_date>2006-08-02 16:27:37</wp:comment_date>
			<wp:comment_date_gmt>2006-08-02 23:27:37</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Interesting points re: top down and bottom up - hadn't thought of things that way and in general I agree. For this to work, though, these things need mass adoption and in an increasingly heterogenous world where systems are not all written on the technology stack of one vendor, a bottom up approach that is trying to solve a problem with a large surface area has limitations. Also, an ambitious undertaking like this seems to assume that the solution to a communication problem ( which is essentially what a modelling language solves in my opinion) , is to teach everyone to talk the same language. It doesn't happen in the real world and I am sceptical it will happen in IT.

]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>2395</wp:comment_id>
			<wp:comment_author><![CDATA[Piyush Pant]]></wp:comment_author>
			<wp:comment_author_email>piyushpant@yahoo.com</wp:comment_author_email>
			<wp:comment_author_url>http://unhandledx.blogspot.com/</wp:comment_author_url>
			<wp:comment_author_IP>194.75.129.200</wp:comment_author_IP>
			<wp:comment_date>2006-08-07 06:35:00</wp:comment_date>
			<wp:comment_date_gmt>2006-08-07 13:35:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I have responded to some of your ( and Pratul Dublish's) points at
http://unhandledx.blogspot.com/2006/08/further-on-sml-debate.html

]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Lang.NET Is Helping Game Developers</title>
		<link>http://devhawk.net/2006/08/02/lang-net-is-helping-game-developers/</link>
		<pubDate>Wed, 02 Aug 2006 12:37:41 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://72b02910-07e9-41a0-958e-d63a9c6d15db</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Back at <a href="http://www.cs.princeton.edu/~dpw/popl/06/">POPL 06</a>, <a href="http://en.wikipedia.org/wiki/Tim_Sweeney_(game_developer)">Tim Sweeny</a> of <a href="http://www.epicgames.com/">Epic Games</a> delivered a talk titled "<a href="http://www.cs.princeton.edu/~dpw/popl/06/Tim-POPL.ppt">The Next Mainstream Programming Language: A Game Developer’s Perspective</a>". I imagine he was a little too busy getting <a href="http://www.gearsofwar.com/">Gears of War</a> out the door to attend the <a href="http://www.langnetsymposium.com/">Lang.NET Symposium</a>. Too bad, as there were interesting solutions presented that solved two of the issues Tim identified in his his POPL talk.</p><p>One of the issues Tim identified is one of Modularity. Gears of War uses the <a href="http://www.unrealtechnology.com/html/technology/ue30.shtml">Unreal Engine 3</a>. In other words, UE3 is a game framework and GoW uses that framework. As you might expect, this framework is exposed as a hierarchy of objects. Tim's example had "Actor" as the base class in the framework hierarchy, with classes like "Player", "Enemy" and "InventoryItem" inheriting from "Actor". Then he had game-specific classes like "Dragon" and "Sword" inheriting from the generic "Enemy" class. The problem is that game developers also need to extend the functionality of the framework's base classes. That is, they need a game-specific version of "Actor" or "InventoryItem" in addition to the game specific subclasses like "Dragon" and "Sword". Unfortunately, the current generation of languages don't support this, so game developers often clone the entire framework, which is error-prone and hard to support.</p><p>At Lang.NET, <a href="http://www.cs.iastate.edu/~lumpe/">Professor Markus Lumpe</a> demonstrated an implementation of the Classbox concept for .NET. Classbox is essentially a solution to the modularity problem Tim identified. They've modified C#'s using syntax to apply to individual classes. When using a class in this fashion, you can add extensions to it like new methods and new fields. I'm not sure the scope of these extensions - whether it's the file with the using clause or the containing assembly - but it's key to realize this is a local extension. The original framework isn't modified at all. Within you assembly, the metadata for the extended classes is re-written to include the new extension. So to use Tim's example, if you extended the framework's "Actor" class, it would create a YourGame.Actor class that inherited from the Framework.Actor and contained your extensions. Then it would re-write the inheritance metadata (again, only for your assembly) so classes that inherited from Framework.Actor such as Framework.Enemy and Framework.InventoryItem now inherit from YourGame.Actor.</p><p>Now I'm sure there are some nefarious uses of this type of inheritance tree hacking. But there are scenarios such as Tim's Gaming Framework example where this behavior is exactly what you want. I spoke briefly to Markus and at length with Hua Ming, one of Markus' grad students, about perhaps having a keyword indicating that a class is "classbox enabled" rather than allowing any class to be classboxed in this way. Looking forward to their future work.</p><p>Another issue Tim identified was Reliability. He called this problem "If the compiler doesn’t beep, my program should work". He showed a very simple method to iterate an index array and transform the associated vertex from a vertex array by a provided matrix. A simple function - four lines of code. Yet, the compiler can't detect null pointer or out-of-bound array access. Adding code to check those runtime conditions would easily double or triple the length of the function. While modern managed languages (C#/VB/Java) have made great strides in eliminating "random memory overwrites" (via type safety) and "memory leaks" (via garbage collection) they don't help you with these other types of dynamic failures.</p><p>At Lang.NET, Microsoft Researcher <a href="http://research.microsoft.com/users/mbarnett/">Mike Barnett</a> demonstrated <a href="http://research.microsoft.com/specsharp/">Spec#.</a> Spec# is a superset of C# that solves these and other types of dynamic errors. The idea, in Mike's words, is to better bridge developer intent and code by embedding certain specifications into the code itself. Furthermore, it uses a combination of static and data flow analysis to detect the types of dynamic errors Tim described in his talk. So if you took Tim's simple transform function and fed it into the Spec# compiler, it would warn you of the possible null pointer dereferences. Furthermore, you can eliminate this warning by specifying the caller never pass you a null pointer. This is simply accomplished by adding an exclamation point to the type declaration. In other words, the vertex array method parameter would be declared "Vertex[]! vertices" to indicate you can't pass in a null array. With Spec#, you can also specify method pre and post conditions, which can solve the out-of-bound array access issue, as well as object invariants, which can specify the valid states an object instance can be in.</p><p>I didn't see Tim give this presentation, I only saw the slides after the fact. But I get the feeling that one of Tim's points is that game development is extremely cutting edge, and the issues they're running into now will be mainstream issues in a few years. Good to see language researchers are already well on their way to solving these issues. </p><p>The only thing I worry about is when will these ideas make it into mainstream languages? And will they be extensions to existing languages - i.e. will C# 4.0 and VB 10 include classboxing and specifications - or will they be entirely new languages? How much can you improve a language by adding features until it collapses under it's own weight?</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>778</wp:post_id>
		<wp:post_date>2006-08-02 12:37:41</wp:post_date>
		<wp:post_date_gmt>2006-08-02 12:37:41</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>lang-net-is-helping-game-developers</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="development"><![CDATA[Development]]></category>
		<category domain="post_tag" nicename="lanugages"><![CDATA[Lanugages]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[72b02910-07e9-41a0-958e-d63a9c6d15db]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[LangNET+Is+Helping+Game+Developers]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2006/08/02/LangNET+Is+Helping+Game+Developers]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>2396</wp:comment_id>
			<wp:comment_author><![CDATA[orcmid]]></wp:comment_author>
			<wp:comment_author_email>dennis.hamilton@acm.org</wp:comment_author_email>
			<wp:comment_author_url>http://miser-theory.info/astraendo/pn</wp:comment_author_url>
			<wp:comment_author_IP>216.160.65.145</wp:comment_author_IP>
			<wp:comment_date>2006-08-03 12:42:26</wp:comment_date>
			<wp:comment_date_gmt>2006-08-03 19:42:26</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[You were there?  Dang, I should have worn my "The Architect is In" T-Shirt.  

The more I talked to others, including some people from the BCL Team on Tuesday night, the more that class boxing the way Markus did it seems useful.  I rarely want simple inheritance off of an existing class.  I usually need to come up with a "parallel" class hierarchy that injects extensions/contractions on the interfaces of the original hierarchy.

By the way, that was an awesome symposium.  On Monday there was no moment that I was wishing that I could check my e-mail instead.

PS: Spec# can be done entirely in the IDE, as far as I can tell. That makes it a very rich idea.  I think it will be far more acceptable than formal verification, especially in use on production development projects.  (Think if FX cop but with way fewer need for test cases -- the reduction of test-coverage burden should pay for Spec# use hundreds of times over.)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>2397</wp:comment_id>
			<wp:comment_author><![CDATA[orcmid]]></wp:comment_author>
			<wp:comment_author_email>dennis.hamilton@acm.org</wp:comment_author_email>
			<wp:comment_author_url>http://miser-theory.info/astraendo/pn</wp:comment_author_url>
			<wp:comment_author_IP>216.160.65.145</wp:comment_author_IP>
			<wp:comment_date>2006-08-03 16:29:43</wp:comment_date>
			<wp:comment_date_gmt>2006-08-03 23:29:43</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Well, I pulled the trigger a little too quickly there.  

There are some language tweaks that the Spec# folk put into the C# language (for example) to make it easier to assert that a reference is not allowed to be null, that sort of thing.  There are probably decorations that would not require fudging with the language, and then there might be some sugar to make the decorations less painful.  But basically, the main work and the game of verifying the assertions is accomplished with an integration into the IDE.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>A Few Short Takes</title>
		<link>http://devhawk.net/2006/08/14/a-few-short-takes/</link>
		<pubDate>Mon, 14 Aug 2006 10:53:10 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://ac63af83-5f17-401e-b6c8-d568e93309d9</guid>
		<description></description>
		<content:encoded><![CDATA[<p>I did say I was going to go a little dark when I took the new job didn't I? Things have been hectic - my brother's getting married in just under two weeks and I'm working on getting my part of my new project's Business Requirements Document (otherwise known as the BRD) done before I leave on vacation. The BRD process is fairly odd for this project - for one, the project team is writing it instead of the business unit. Given that we're building infrastructure, many of the "business" elements of the BRD are not particularly appropriate. But we're muddling thru. In a meeting with my boss's boss's boss last week, he stressed the need for delivering incremental value. In other words, the need for using an agile process which is cool as far as I'm concerned.</p><p>I have a couple of longer posts coming, but here are a few short takes for a Monday morning:</p><p><a href="http://windowslivewriter.spaces.live.com"><strong>Windows Live Writer</strong></a></p><p>Everyone seems gaga over the new tool, so I downloaded it. Pretty cool. I'm writing this post using it. Typically, I write my posts in <strike>FrontPage</strike><a href="http://www.microsoft.com/office/preview/programs/designer/highlights.mspx">SharePoint Designer</a> and paste them into the dasBlog web editing interface - I'm pretty particular about the HTML that ends up on my blog. So far, Writer seems up for the job. And I love the Web Layout editing mode. Does have some bugs and missing features. For example, it has spell check, but not background spell check. And as <a href="http://www.hanselman.com/blog/WindowsLiveWriterAndDasBlog19.aspx">Scott pointed out</a> the category list is totally broken when you have a lot of categories. Writer has an <a href="http://download.microsoft.com/download/f/9/a/f9a19f2d-cec4-4a25-9b0b-eb9655ea7561/Windows%20Live%20Writer%20SDK%20(Beta).msi">SDK</a>, and one of the examples they suggest building with it is "Tags from tagging services". I'd like to have a simple text box where I could enter categories as tags, and have it automatically create any categories that aren't already on my site. I've already got a side coding project going, but I'm almost done so maybe I'll take that up next.</p><p><a href="http://msdn.microsoft.com/directx/xna/gamestudio"><strong>XNA Game Studio</strong></a></p><p>I was researching some Xbox stuff for a customer several months ago and got wind of this plan. I can't wait to see it running. I recently picked up <a href="http://www.moon-labs.com/">Frank Luna's</a><a href="http://www.moon-labs.com/ml_book2.htm">Intro to 3d Game Programming: A Shader Approach</a> based on <a href="http://letskilldave.com/archive/2006/07/18/Review_3A00_-Introduction-to-3D-Game-Programming-with-Direct-X-9.0c_3A00_-A-Shader-Approach-.aspx">Dave's recommendation</a>. I figure most, if not all, the source code will be obsolete in the XNA Framework world, but the concepts are spot on so it's been a good read. </p><p>One aspect of this announcement that I haven't seen talked about yet is the impact on the mod community. Many games today ship with an SDK - here are examples for <a href="http://garage.gaspowered.com">Dungeon Siege</a>, <a href="http://developer.valvesoftware.com/wiki/Main_Page">Half-Life 2</a> and <a href="http://www.iddevnet.com/doom3/">Doom 3</a>. Of course, the idea is that modder's get a popular game and industrial-strength game engine to build on for almost no cost and the game publisher expands the value of their game - any mods require the original game to play. Wouldn't it be cool if you could mod <a href="http://www.xbox.com/halo3/">Halo 3</a>? And combined with <a href="http://www.extremetech.com/article2/0,1558,1960510,00.asp?kc=ETRSS02129TX1K0000532">Live Anywhere</a>, the possibilities are enormous. I can't wait to see how this evolves.</p><p><strong>New Machine &amp; Vista</strong></p><p>For the first time in my nearly 8 year MSFT career, I have a desktop machine. And it's a nice one - a <a href="http://www.dell.com/content/products/productdetails.aspx/precn_690">Dell Precision 690 workstation</a>. 2x dual Xenon CPU, 2x 160GB SCSI Hard Drives, <a href="http://www.ati.com/products/workstation/FireGL-Dual_Link.pdf">dual link DVI outputs</a> for driving twin widescreen monitors - dual is very big on this machine. Pretty much the only skimpy part of this machine is the RAM - only 2GB. But I'm not running x64 (yet) so that's not a huge deal (yet). </p><p>Of course, such a screaming machine runs the latest <a href="http://www.winsupersite.com/showcase/winvista_5472_gallery_01.asp">Vista build</a>. I'm also running it on my laptop - with Aero Glass even, thanks to <a href="http://www.laptopvideo2go.com/forum/index.php?showtopic=10420">this driver</a>. The combo of latest Vista build + latest Office build is pretty sweet.</p><p>With new machines and new operating systems, I've been spending significant time installing. The Dell box turned out to be a real pain as it <em>only </em>has the SCSI drives which are not standard on the WinXP install disk. I'm dual booting XP/Vista on both machines, but I had to create a <a href="http://www.maximumpc.com/2005/01/how_to_slipstre.html">custom slipstreamed XP install disk</a> to get my Dell workstation up and running (Vista installed without any extra work). But now I've got the baseline install imaged - thanks to <a href="http://www.terabyteunlimited.com/bootitng.html">BootIt NG</a> which I've <a href="http://devhawk.net/2005/09/20/New+Dev+Partition+Contents.aspx">spoken highly</a> of before - I shouldn't ever have to do that again.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>779</wp:post_id>
		<wp:post_date>2006-08-14 10:53:10</wp:post_date>
		<wp:post_date_gmt>2006-08-14 10:53:10</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>a-few-short-takes</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="blogging"><![CDATA[Blogging]]></category>
		<category domain="post_tag" nicename="game-development"><![CDATA[Game Development]]></category>
		<category domain="post_tag" nicename="games"><![CDATA[Games]]></category>
		<category domain="post_tag" nicename="hardware"><![CDATA[Hardware]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[A+Few+Short+Takes]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[ac63af83-5f17-401e-b6c8-d568e93309d9]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2006/08/14/A+Few+Short+Takes]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Extending WL Writer</title>
		<link>http://devhawk.net/2006/08/15/extending-wl-writer/</link>
		<pubDate>Tue, 15 Aug 2006 08:32:36 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://42f43927-56b9-4a99-9584-aaca99c4f06c</guid>
		<description></description>
		<content:encoded><![CDATA[<p>So I downloaded <a href="http://download.microsoft.com/download/f/9/a/f9a19f2d-cec4-4a25-9b0b-eb9655ea7561/Windows%20Live%20Writer%20SDK%20(Beta).msi">the SDK</a> for <a href="http://download.microsoft.com/download/f/9/a/f9a19f2d-cec4-4a25-9b0b-eb9655ea7561/Writer.msi">WL Writer</a> and took a quick look. Basically, there's two types of extensions you can build:</p><ul><li>App Launcher - so you can add a "Blog It" button to some other app to remotely launch WL Writer. I assume this is how the WL Toolbar intergration works. 
</li><li>Content Source - so you can add some type of custom content to a post. Typical examples would be <a href="http://www.technorati.com/">Technorati</a> tags or <a href="http://www.microsoft.com/windowsxp/downloads/powertoys/wm_create.mspx">Currently Listening To</a> info.</li></ul><p>Given that they are trying to support "every blogging service out there", I'm surprised there's not a way to build a plugable blogging service. WL Writer only allows you to customize the content of the post via plugins. Customizing the metadata (i.e. categories) is right out. I realize it's the hip thing to put Technorati tags right in your post content, but Technorati also picks up category information which dasBlog already has great support for. What I'd <em>really</em> like is something that acts like del.icio.us' new post form, where you can free type in your categories, it highlights words as you type and it shows you a list of all your tags so you can click on them.</p><p>One other minor note - WL Writer does a good job for inserting hyperlinks. When you select a word, often the whitespace that follows it is also selected. Some HTML editors will insert the hyperlink over the whole selection - inlcuding the whitespace which makes no sense. WL Writer gets it right and excludes any trailing whitespace from the hyperlink. Cool!</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>780</wp:post_id>
		<wp:post_date>2006-08-15 08:32:36</wp:post_date>
		<wp:post_date_gmt>2006-08-15 08:32:36</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>extending-wl-writer</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="blogging"><![CDATA[Blogging]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<category domain="post_tag" nicename="windows-live"><![CDATA[Windows Live]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Extending+WL+Writer]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2006/08/15/Extending+WL+Writer]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[42f43927-56b9-4a99-9584-aaca99c4f06c]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Modular Compilers</title>
		<link>http://devhawk.net/2006/08/15/modular-compilers/</link>
		<pubDate>Tue, 15 Aug 2006 10:46:37 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://59b31575-05b0-49d5-bebe-ffcf2c30bca7</guid>
		<description></description>
		<content:encoded><![CDATA[<p>During Lang.NET, I ended up sitting next to Hua Ming, who's been working on the <a href="http://www.cs.iastate.edu/~lumpe/CBs/">.NET Classbox project</a> I <a href="http://devhawk.net/2006/08/02/LangNET+Is+Helping+Game+Developers.aspx">wrote about previously</a>. .NET Classbox introduces a new syntax for "using" to C# - basically, you can use individual classes as well as whole namespaces, and you can extend the individual classes you use. Obviously, that meant having a custom compiler that was 99% vanilla C# + the extra classbox syntax. Rather than building a C# compiler from scratch, the Classbox project extended the <a href="http://www.mono-project.com/">Mono Project</a> C# compiler. Hua described the process as taking a "huge amount of time" and he described the compiler as "a monster". Now, I'm not trying to knock Mono here, I imagine our C# compiler is just as hard to work with. <a href="http://msdn.microsoft.com/net/sscli">SSCLI's</a> C# compiler directory is 5.5MB of source code alone spread across 126 .h and 68 .cpp files.</p><p>Is it just me, or does it seem crazy to have to muck about with such a large code base in order to add a relatively simple language feature? What I'd like to see is a more modular way of building compilers, so that integrating a small language feature like classbox would be a small amount of effort. </p><p>Of course, there is some work that's been done in this space. MS Research had a <a href="http://research.microsoft.com/research/pubs/view.aspx?tr_id=658">Research C# compiler</a> paper, but it's three years old and <a href="http://research.microsoft.com/%7Etoddpro/">one</a> of the two authors has moved on to a <a href="http://www.microsoft.com/windows/cse/default.mspx">cool product group</a> job. I also discovered <a href="http://www-suif.stanford.edu/suif/NCI/suif.html">SUIF</a> and the <a href="http://www-suif.stanford.edu/suif/NCI/">National Compiler Infrastructure Project</a>, but these don't look like they've been updated in a while.</p><p>I like the model that the Research C# compiler proposes. Basically, it looks like this:</p><ol><li>Specify the grammar in a modular way. In the paper, the grammar is specified in an Excel file, and you can use multiple files in a modular fashion. i.e. have one file for the core language and another for the extensions.</li><li>Late bind a grammar production to an action. Typically, in a lex/yacc style scenario, you embed the action code for a given production directly into the grammar, which makes it extremely hard to extend the existing syntax. In the paper, each production is linked with an instance of a type, so swapping out a new type would seem to be possible.</li><li>Generate an abstract syntax tree, that gets processed by multiple visitors. From the paper, the compiler has broken the "traditional" compiler steps - bind, typecheck, rewrite and generate binary (in this case IL) - into separate visitors. That makes adding extra steps or chaning existing steps fairly straightforward.</li></ol><p>The only think I don't like about this specific approach is their Excel file based parser generator. It's a huge step beyond the LEX/YACC approach as it is scanner-less (having separate scanner and parser steps kills any chance of modularity) but it still has to deal with ambiguous grammars. Personally, I've been looking at <a href="http://pdos.csail.mit.edu/~baford/packrat/">Parsing Expression Grammars</a> in part because they aren't ambiguous. For programming lanugages, support ambiguity in the grammar is a bug, not a feature.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>781</wp:post_id>
		<wp:post_date>2006-08-15 10:46:37</wp:post_date>
		<wp:post_date_gmt>2006-08-15 10:46:37</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>modular-compilers</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="development"><![CDATA[Development]]></category>
		<category domain="post_tag" nicename="lanugages"><![CDATA[Lanugages]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[59b31575-05b0-49d5-bebe-ffcf2c30bca7]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Modular+Compilers]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2006/08/15/Modular+Compilers]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>2398</wp:comment_id>
			<wp:comment_author><![CDATA[Kenny Kerr]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://weblogs.asp.net/kennykerr/</wp:comment_author_url>
			<wp:comment_author_IP>205.250.157.244</wp:comment_author_IP>
			<wp:comment_date>2006-08-15 13:09:44</wp:comment_date>
			<wp:comment_date_gmt>2006-08-15 20:09:44</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[You should take a look at the Phoenix project. 

http://research.microsoft.com/phoenix/]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>2399</wp:comment_id>
			<wp:comment_author><![CDATA[DevHawk]]></wp:comment_author>
			<wp:comment_author_email>harry@devhawk.net</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>131.107.0.102</wp:comment_author_IP>
			<wp:comment_date>2006-08-15 13:51:16</wp:comment_date>
			<wp:comment_date_gmt>2006-08-15 20:51:16</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[As far as I can tell, Phoenix only includes back end tools - i.e. no grammar definition and no parser. Sounds like a good choice for my #3 above, but what about the other two capabilities?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>2400</wp:comment_id>
			<wp:comment_author><![CDATA[Kenny Kerr]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://weblogs.asp.net/kennykerr/</wp:comment_author_url>
			<wp:comment_author_IP>205.250.157.244</wp:comment_author_IP>
			<wp:comment_date>2006-08-15 16:01:59</wp:comment_date>
			<wp:comment_date_gmt>2006-08-15 23:01:59</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Yep, it’s a long way off but I hope the Phoenix project (or something like it) will one day provide more support for developing the grammar and front-end for compilers.

I’ve typically resorted to rolling my own but that’s obviously not practical in many cases.
]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>2401</wp:comment_id>
			<wp:comment_author><![CDATA[Max]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>81.178.245.106</wp:comment_author_IP>
			<wp:comment_date>2006-09-10 02:10:47</wp:comment_date>
			<wp:comment_date_gmt>2006-09-10 09:10:47</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[The .NET language Boo actually implements its "using" keyword as a short piece of Boo code that does a transformation on the abstract syntax tree at compile time like so (pseudocode):

using object:
  code block

Becomes:

Lock(object)
try:
  code block
finally:
  Unlock(object)

You can define these AST transformations in your own program to implement most any construct you like, and they are really easy to write! Neat, eh? 

http://boo.codehaus.org/]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Business Processes Are Services Too</title>
		<link>http://devhawk.net/2006/08/16/business-processes-are-services-too/</link>
		<pubDate>Wed, 16 Aug 2006 15:21:30 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://e149413f-1826-4245-ad7f-97aed9816231</guid>
		<description></description>
		<content:encoded><![CDATA[<p>I've been having a <a href="http://unhandledx.blogspot.com/2006/08/state-in-services-architecture.html">conversation</a> with <a href="http://unhandledx.blogspot.com/">Piyush Pant</a> over on his blog that started as a <a href="http://devhawk.net/CommentView,guid,4d427e9f-7775-4aae-a487-8cf8c1d8a991.aspx#commentstart">comment he left</a> on my <a href="http://devhawk.net/2006/07/27/Services+Arent+Stateless.aspx">Services Aren't Stateless</a> post. He thinks that I'm "missing the crucial point here by implicitly conflating business process and service state". While Piyush hasn't really defined what he means by these terms, I think I understand what he's getting at. Yes, process and service state are different in many ways, but they are also similar in that they are both service private data.</p><p>Pat Helland (side note - I wish Pat would start blogging again) wrote an article some time ago titled <a href="http://msdn.microsoft.com/library/en-us/dnbda/html/dataoutsideinside.asp">Data on the Outside vs. Data on the Inside</a> where he talked about the differences between service private data and data in the space between the services. For example, data on the outside is immutable, requires an open schema for interop, doesn't need encapsulation and is representable in XML. Service private data is not immutable, doesn't need an open schema for interop, requires encapsulation and is typically stored in a SQL RDBMS. So on this front, process and service state are both service private data so conflating them makes some sense. </p><p>However, what's not in the article is the idea of Resource and Activity data. Not sure why Pat didn't include this in the article, but he was talking about it as <a href="http://www.stucharlton.com/blog/archives/000041.html">far back as PDC 2003</a>. <a href="http://www.stucharlton.com/blog/">Stu Charlton</a> described the difference between resource and activity data in his <a href="http://www.theserverside.net/tt/articles/showarticle.tss?id=AutonomousServices">Autonomous Services</a> article:</p><blockquote><p><b>Activity Data</b> - This is "work in progress" data for any long-running business operation, and is usually encapsulated by business logic. A classic example is a shopping cart in any e-commerce system. This data is mutable, but typically has low concurrency conflicts, as it is not widely shared. Typically activity data retires after a long running operation completes, and may be archived in a decision support system for later analysis. </p><p><b>Resource Data</b> - This is "state of the business" data, which represents the resources of an organization, and is usually encapsulated by business logic. Examples are: room availability in a hotel, inventory levels in a warehouse, account statuses, employee and customer information. Some resources have a small life span, others may last a very long time (years). Resource data is usually volatile with potential for high concurrency conflicts. </p></blockquote><p>So I'm fairly sure that when Piyush says "process state" I should hear "activity data". Similarly "service state" is "resource data". The differences between activity and resource data lead to some interesting implementation artifacts, which I assume he getting at when he says I'm conflating the two. For example, since activity data like shopping cart has low or no concurrency issues, using an optimistic concurrency scheme is entirely appropriate, which you would never use for highly volatile resource data like warehouse inventory levels. In fact, since activity data doesn't have concurrency issues, you could even store it inside an instance of <a href="http://wf.netfx3.com/">workflow</a> or <a href="http://msdn.microsoft.com/biztalk/learning/dev/orch/default.aspx">orchestration</a>, which gets serialized to a persistent store when it's in an idle state.  </p><p>However, the fact that activity and resource data is handled differently doesn't mean that most services won't have activity data. When <a href="http://webservices.sys-con.com/read/136190.htm">Thomas Erl says</a> that that stateless services is a "common principle of service orientation", essentially what I think he's saying that services should only have resource data. And as I said before, this seems wrong to me. Sure, <em>some</em> services will be stateless. But <em>all</em> services? Services implement business capabilities. Most business capabilities are long running processes. Doesn't that imply that most services in the enterprise will need to be long running workflows or orchestrations? </p><p>So for the most part, Piyush and I just seem to have different names for the same concepts. The one issue I have with Piyush's descricription of process and service state is that he seems to implicitly assume that processes aren't services. Why not? Again, not <em>all</em> services will be processes, but if you're not exposing processes as services, how exactly are you exposing them?</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>782</wp:post_id>
		<wp:post_date>2006-08-16 15:21:30</wp:post_date>
		<wp:post_date_gmt>2006-08-16 15:21:30</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>business-processes-are-services-too</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="architecture"><![CDATA[Architecture]]></category>
		<category domain="post_tag" nicename="database"><![CDATA[Database]]></category>
		<category domain="post_tag" nicename="soa"><![CDATA[SOA]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[e149413f-1826-4245-ad7f-97aed9816231]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Business+Processes+Are+Services+Too]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2006/08/16/Business+Processes+Are+Services+Too]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Language Features I Wish C# Had - Symbols</title>
		<link>http://devhawk.net/2006/08/21/language-features-i-wish-c-had-symbols/</link>
		<pubDate>Mon, 21 Aug 2006 23:05:20 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://4bc2985c-5ff1-4d9e-ab1d-1f51d5d2c6a2</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Ruby's symbols are <a href="http://wiki.rubygarden.org/Ruby/page/show/UnderstandingSymbols">often talked about</a> in terms of efficiency - taking up less memory and executing faster. While these are both laudable goals, symbols are more than just performance improvers. The ability to name things is valuable semantically. Take a look thru p&amp;p's <a href="http://msdn.microsoft.com/library/en-us/dnpag2/html/CAB.asp">Composite UI AppBlock</a> and you'll see strings used as names for things all over the place. It's great for loose coupling, you see. But how do you tell the difference between a string used as a name and a string used for some other reason like user input? You can't. </p><p><a href="http://www.rubyonrails.com/">Rails</a> makes extensive use of symbols - anyone who has <a href="http://www.onlamp.com/pub/a/onlamp/2005/01/20/rails.html">Rolled on Rails</a> has seen "scaffold :recipe". That's just the tip of the iceberg. Rails uses symbols extensively across both ActionPack and ActiveRecord (and probably others I'm not familiar with). It's a great approach, but one that's unique to Ruby as far as I'm aware.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>783</wp:post_id>
		<wp:post_date>2006-08-21 23:05:20</wp:post_date>
		<wp:post_date_gmt>2006-08-21 23:05:20</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>language-features-i-wish-c-had-symbols</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="c-sharp"><![CDATA[C#]]></category>
		<category domain="category" nicename="development"><![CDATA[Development]]></category>
		<category domain="post_tag" nicename="lanugages"><![CDATA[Lanugages]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2006/08/22/Language+Features+I+Wish+C+Had+Symbols]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Language+Features+I+Wish+C+Had+Symbols]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[4bc2985c-5ff1-4d9e-ab1d-1f51d5d2c6a2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Language Features I Wish C# Had - Tuples</title>
		<link>http://devhawk.net/2006/08/21/language-features-i-wish-c-had-tuples/</link>
		<pubDate>Mon, 21 Aug 2006 23:01:53 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://ead6b18d-9203-4d86-a7ad-7e1e6c6277d6</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Several languages, such as <a href="http://www.python.org/doc/current/tut/node7.html#SECTION007300000000000000000">Python</a>, have the concept of a <a href="http://en.wikipedia.org/wiki/Tuple#Usage_in_computer_science">Tuple</a> built into the lanugage. One of things it's used for in Python is multiple return values. So you can call "return x,y" to return two values. Of course, C# can only return one. If you need to return more values, you have to define out parameters.</p><p>LINQ / C# 3.0 / VB 9 support the idea of <a href="http://msdn.microsoft.com/library/en-us/dnvs05/html/vb9overview.asp?frame=true#vb9overview_topic5">anonymous types</a>, which is similar to a tuple. The big difference is that, because they're anonymous, they can't leave the scope they're defined in. In other words, they're great within a function, but if you want to pass them out of your function type-safely, you have to define a non-anonymous type for them.</p><p>Interestingly enough, <a href="http://research.microsoft.com/fsharp/fsharp.aspx">F#</a> supports <a href="http://research.microsoft.com/fsharp/manual/quicktour.aspx#QuickTourTuples">tuples</a>, though it a bit of a hack. Since the CLR doesn't support tuples, F# basically <a href="http://research.microsoft.com/fsharp/manual/export-interop.aspx#Tuples">defines different Tuple classes</a> for up to seven tuple parameters (i.e. Tuple&lt;t1,t2,t3,t4,t5,t6,t7&gt;), For .NET 1.x, it's even worse - they have to define different type names (Tuple2, Tuple3, etc). Ugh.</p><p><strong>Update</strong> - <a href="http://strangelights.com/blog/">Robert Pickering</a> pointed out that F#'s tuple implementation is entirely transparent inside of F#. He's right - I was writing from the perspective of a C# developer using F#'s implementation of tuples. Maybe I need to be looking closer at F#?</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>784</wp:post_id>
		<wp:post_date>2006-08-21 23:01:53</wp:post_date>
		<wp:post_date_gmt>2006-08-21 23:01:53</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>language-features-i-wish-c-had-tuples</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="c-sharp"><![CDATA[C#]]></category>
		<category domain="category" nicename="development"><![CDATA[Development]]></category>
		<category domain="post_tag" nicename="lanugages"><![CDATA[Lanugages]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2006/08/22/Language+Features+I+Wish+C+Had+Tuples]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Language+Features+I+Wish+C+Had+Tuples]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[ead6b18d-9203-4d86-a7ad-7e1e6c6277d6]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>2402</wp:comment_id>
			<wp:comment_author><![CDATA[Tom Vande Stouwe]]></wp:comment_author>
			<wp:comment_author_email>tomv@conpro.net</wp:comment_author_email>
			<wp:comment_author_url>http://architecturematters.net</wp:comment_author_url>
			<wp:comment_author_IP>24.148.176.174</wp:comment_author_IP>
			<wp:comment_date>2006-08-22 05:41:18</wp:comment_date>
			<wp:comment_date_gmt>2006-08-22 12:41:18</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Harry,

How does a Truples diffe from an 'object' in .NET core. Could I not return an object from a routine, and define the structure dynamically? What about a collection? It seem that Truples appear to be nothing more then a UDT model, and that already is there.

I may be missing something, so if I am off base, just let me know :)

Tom]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>2403</wp:comment_id>
			<wp:comment_author><![CDATA[Robert Pickering]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://strangelights.com/blog</wp:comment_author_url>
			<wp:comment_author_IP>87.64.24.124</wp:comment_author_IP>
			<wp:comment_date>2006-08-22 07:42:58</wp:comment_date>
			<wp:comment_date_gmt>2006-08-22 14:42:58</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I don’t the implementation of tuples in F# is a hack; you are simply talking about the implementation details. If you are passing the tuple between two functions in F# then it is totally transparent you do not see the implantation details you describe. Sure if you pass a tuple between F# and C# then you are forced to deal with the Tuple classes that F# provides, and this is a little ugly, but I can see another way this could be supported in languages that don’t support tuples.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>2404</wp:comment_id>
			<wp:comment_author><![CDATA[Robert Pickering]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://strangelights.com/blog</wp:comment_author_url>
			<wp:comment_author_IP>87.64.24.124</wp:comment_author_IP>
			<wp:comment_date>2006-08-22 07:49:39</wp:comment_date>
			<wp:comment_date_gmt>2006-08-22 14:49:39</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Tom, 

Tuples are different to what you describe. A tuple is just a way of returning two values from a method with out having to define a type to contain them. For instance in F# you can say:

let my_tuple = 1, 2

To create a tuple, then to retrive a value from a tuple you would say:

let _, x = my_tuple

And then x would hold the value 2.

Wikipedia has a good definition:
http://en.wikipedia.org/wiki/Tuple

Cheers,
Rob
]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>2405</wp:comment_id>
			<wp:comment_author><![CDATA[DevHawk]]></wp:comment_author>
			<wp:comment_author_email>harry@devhawk.net</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>24.16.92.194</wp:comment_author_IP>
			<wp:comment_date>2006-08-22 08:16:10</wp:comment_date>
			<wp:comment_date_gmt>2006-08-22 15:16:10</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Robert, you're right. I think it feels like a hack if you use F# tuples outside of F#, which was the context of my post in the first place.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Greatest Kids Ever</title>
		<link>http://devhawk.net/2006/08/26/greatest-kids-ever/</link>
		<pubDate>Sat, 26 Aug 2006 20:52:08 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://e976bbc1-2fcb-4a7c-883c-3d6e9a755214</guid>
		<description></description>
		<content:encoded><![CDATA[I'm sure <a href="http://techiewife.spaces.live.com/">my wife</a> will blog this in more detail, but we're on vacation so blogging isn't top of her mind. Today was my brother's wedding - I was the best man with the whole speech giving and everything. We left the kids with my wife's sister tonight, but last night we brought them to the rehearsal dinner. They were the only two kids there but there were straight up amazingly well behaved. All night. Long past their bedtime (though to be honest, we are in Washington DC and still sort of on west coast time). I mean, I expect my kids to behave - but this was above and beyond. We got to the restaurant around 6pm and didn't leave until 9:30! Tonight, at the wedding, several people told us how impressed they were with our kids. I am too.

Just wanted to blog how incredibly proud I am of my kids.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>785</wp:post_id>
		<wp:post_date>2006-08-26 20:52:08</wp:post_date>
		<wp:post_date_gmt>2006-08-26 20:52:08</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>greatest-kids-ever</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="family"><![CDATA[Family]]></category>
		<category domain="category" nicename="personal"><![CDATA[Personal]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Greatest+Kids+Ever]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[e976bbc1-2fcb-4a7c-883c-3d6e9a755214]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2006/08/27/Greatest+Kids+Ever]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Cut Out The Middle Man</title>
		<link>http://devhawk.net/2006/08/28/cut-out-the-middle-man/</link>
		<pubDate>Mon, 28 Aug 2006 20:15:19 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://42938453-fe20-4747-b9da-7c750e537bc3</guid>
		<description></description>
		<content:encoded><![CDATA[<p><a href="http://blogs.msdn.com/nickmalik/">Nick Malik</a> is an architect in MSIT's Enterprise Architecture group. He's been blogging a while, though I only discovered his blog a couple of weeks ago. Yesterday <a href="http://blogs.msdn.com/nickmalik/archive/2006/08/27/726970.aspx">he posted</a> about OMG's SOA SIG's Draft RFI on EDA and it's relationship to SOA and BPM. That's a veritable alphabet soup of acronyms! To translate, the <a href="http://www.omg.org/">Object Management Group's</a><a href="http://soa.omg.org/">Special Interest Group on Service Oriented Architecture</a> has posted a draft <a href="http://www.omg.org/cgi-bin/apps/doc?soa/06-08-01.pdf">Request for Information</a> on <a href="http://en.wikipedia.org/wiki/Event_Driven_Architecture">Event Driven Architecture</a> and it's relationship to <a href="http://en.wikipedia.org/wiki/Service-oriented_architecture">Service Oriented Architecture</a> and <a href="http://en.wikipedia.org/wiki/Business_Process_Management">Business Process Management</a>. Here's the summary from the actual document:</p><blockquote><p>The EDA Sub-group of the OMG SOA SIG seeks information from members of the EDA, BPM and SOA community as well as anyone interested in promoting standards in this area. Requested information will be evaluated by the EDA Sub-group, resulting in the development of Requests for Proposal(s) (RFP) for standardization of Event definition, relationship between EDA, BPM and SOA that will ultimately allow development of standards for Complete Life Cycle of Events -Ontology of Events, Sense and Respond Services, Events Metrics and processing of complex events. Please note that it is our intent to develop modeling standards for the EDA/SOA and EDA-Business Process interaction and provide standards for the implementation of that interaction as well. </p></blockquote><p>First off, I'm a bit wary about this part: "it is our intent to develop modeling standards". Of course, OMG is responsible for <a href="http://www.uml.org/">UML</a> and long time readers should be well aware of <a href="http://devhawk.net/2004/02/03/Being+A+Model+Citizen.aspx">my opinion of UML</a>. I don't want to <a href="http://c2.com/cgi/wiki?SetTheBozoBit">set the bozo bit</a> on an entire organization, but I am skeptical that any new modeling "standards" from OMG will be any more effective than the <a href="http://www.martinfowler.com/bliki/UnwantedModelingLanguage.html">Unwanted Modeling Language</a>.</p><p>Secondly, EDA seems to be vaguely defined, if at all. Wikipedia has this to say about EDA:</p><blockquote><p>An event-driven architecture (EDA) defines a methodology for designing and implementing applications and systems in which events transmit between loosely coupled software components and services. An event-driven system is typically comprised of <b>event consumers</b> and <b>event producers</b>. Event consumers subscribe to an intermediary event manager, and event producers publish to this manager. When the event manager receives an event from a producer, the manager forwards the event to the consumer. If the consumer is unavailable, the manager can store the event and try to forward it later. This method of event transmission is referred to in message-based systems as <b>store and forward</b>.<br />[emphasis in original]</p></blockquote><p>Assuming events are encoded as messages, then you can rewrite "event consumers / event producers" as "message receivers / message senders" and you really blur the line with SOA? </p><p>The big difference in EDA seems to be the use of an "intermediary event manager". The problem I have with this approach is that the "intermediary event manager" works fine if you have a small number of endpoints, but how will it scale to handle hundreds of systems? Thousands? Tens of thousands? I don't see how the centralized event manager approach can possibly scale to handle tens of millions of events delivered between tens of thousands of systems. The management of such a system would be a nightmare? If a business process went south, you would obviously look in the central event manager as the source of the problem, but I would think that would be like finding a needle in a haystack. You could federate the event managers, instead of attempting to scale out the center. But a federated event manager approach would seem to defeat much of the purpose of an EDA in the first place. If you're going to federate your event managers, why not cut out the middle man and make each event producer it's own event manager as well? What is the benefit of separating these capabilities?</p><p>I guess fleshing out EDA isn't a bad idea, but it seems more like a solution looking for a problem to me. </p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>786</wp:post_id>
		<wp:post_date>2006-08-28 20:15:19</wp:post_date>
		<wp:post_date_gmt>2006-08-28 20:15:19</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>cut-out-the-middle-man</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="architecture"><![CDATA[Architecture]]></category>
		<category domain="post_tag" nicename="modelling"><![CDATA[Modelling]]></category>
		<category domain="post_tag" nicename="soa"><![CDATA[SOA]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2006/08/29/Cut+Out+The+Middle+Man]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Cut+Out+The+Middle+Man]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[42938453-fe20-4747-b9da-7c750e537bc3]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>October is for Lost and BSG</title>
		<link>http://devhawk.net/2006/08/28/october-is-for-lost-and-bsg/</link>
		<pubDate>Mon, 28 Aug 2006 19:38:03 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://a1c254f2-c8e7-4477-b66e-2954d85547d7</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Wednesday Oct 4th is the season premier for <a href="http://abc.go.com/primetime/lost/">Lost</a>. Two days later on Oct 6th is the season premier of <a href="http://www.scifi.com/battlestar/">Battlestar Galactica</a>. These are my favorite two shows - an in my opinion the best two - on TV right now. <a href="http://www.majornelson.com/archive/2006/08/28/Video_3A00_Battlestar-Galactica.aspx">According to Major Nelson</a>, a one hour recap of BSG called "The Story So Far" is available on XBLM. If they could post a Lost and the Lost Experience recap on XBLM, that would just be perfect.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>787</wp:post_id>
		<wp:post_date>2006-08-28 19:38:03</wp:post_date>
		<wp:post_date_gmt>2006-08-28 19:38:03</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>october-is-for-lost-and-bsg</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="sci-fi"><![CDATA[Sci-Fi]]></category>
		<category domain="post_tag" nicename="television"><![CDATA[Television]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<category domain="post_tag" nicename="xbox-360"><![CDATA[Xbox 360]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[a1c254f2-c8e7-4477-b66e-2954d85547d7]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2006/08/29/October+Is+For+Lost+And+BSG]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[October+Is+For+Lost+And+BSG]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Wisdom from Presentation Zen</title>
		<link>http://devhawk.net/2006/08/28/wisdom-from-presentation-zen/</link>
		<pubDate>Mon, 28 Aug 2006 20:38:34 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://edadcbf8-7558-46e4-bfcd-4b94b7d2cff7</guid>
		<description></description>
		<content:encoded><![CDATA[<p>From <a href="http://presentationzen.blogs.com/presentationzen/">Presentation Zen</a>:</p><blockquote><p>It is just plain stupid to use projected slides (i.e., visuals) used in a live presentation as a document to be read later by people who did not see the talk.<br />[<a href="http://presentationzen.blogs.com/presentationzen/2006/08/powerpoint_prin.html">PowerPoint printouts used for communicating battle plans?</a>]</p></blockquote><p>Amen.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>788</wp:post_id>
		<wp:post_date>2006-08-28 20:38:34</wp:post_date>
		<wp:post_date_gmt>2006-08-28 20:38:34</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>wisdom-from-presentation-zen</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="powerpoint"><![CDATA[PowerPoint]]></category>
		<category domain="post_tag" nicename="presentation"><![CDATA[Presentation]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2006/08/29/Wisdom+From+Presentation+Zen]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Wisdom+From+Presentation+Zen]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[edadcbf8-7558-46e4-bfcd-4b94b7d2cff7]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Here Has Moved (And Will Move Again)</title>
		<link>http://devhawk.net/2006/09/06/here-has-moved-and-will-move-again/</link>
		<pubDate>Wed, 06 Sep 2006 16:55:32 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://60608639-8cfa-4be0-8870-0677b414e160</guid>
		<description></description>
		<content:encoded><![CDATA[<p>I'm back from my two week vacation (note to self: two weeks is about three days too long for a three and one year old to be away from home). But here isn't where I left it. While I was gone, my team moved into a new temporary space. On the plus side, I have an office instead of a cube, the team is all together and this area of the building is pretty deserted, so it's quiet. On the downside, I'm sharing the office with the program manager for my project and as I said, it's temporary. I guess there's no point unpacking. </p><p>Update - about 30 minutes after I posted this, we got the official email that we're moving at the end of the month.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>789</wp:post_id>
		<wp:post_date>2006-09-06 16:55:32</wp:post_date>
		<wp:post_date_gmt>2006-09-06 16:55:32</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>here-has-moved-and-will-move-again</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="job"><![CDATA[Job]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[60608639-8cfa-4be0-8870-0677b414e160]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2006/09/06/Here+Has+Moved+And+Will+Move+Again]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Here+Has+Moved+And+Will+Move+Again]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>SOA Sample Scenario</title>
		<link>http://devhawk.net/2006/09/06/soa-sample-scenario/</link>
		<pubDate>Wed, 06 Sep 2006 18:26:27 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://ba972500-1097-4649-b09e-95959c2a459e</guid>
		<description></description>
		<content:encoded><![CDATA[<p>So now that I'm back, we're beginning work in earnest on my project. For those <a href="http://devhawk.net/2006/06/15/Moving+On.aspx">not following along at home</a>, my project is to deliver shared service oriented infrastructure for Microsoft's internal IT department. We've spent the time since I moved over working on our business justification, and now we're moving into specifications and prototyping. That is, I get to starting getting my hands dirty.</p><p>As part of the prototyping efforts, we're looking to build some sample business services on top of our prototype infrastructure. The idea being to both illustrate what we're building as well as have a playground where we can experiment with new ideas. During the prototyping, I'll be pretty involved with the development. But once we start writing production code, the dev team will take that over but I will continue to own the service playground. I've been kicking a playground idea like this around for several years, so I'm pretty excited about it.</p><p>The question is, what kind of business scenario should we build? I want the sample business services to be something interesting and real-world-esque. But of course, it can't be too complex since I wasn't hired to build a playground as my primary job function.</p><p>So far, we have two primary ideas:</p><ul><li>Enterprise Management System: <a href="http://msdn2.microsoft.com/en-us/library/ms124659.aspx">AdventureWorks</a> is the primary sample database that ships with SQL Server. They have <a href="http://msdn2.microsoft.com/en-us/library/ms124825.aspx">business scenarios</a> around Sales &amp; Marketing, Product Management, Purchasing and Manufacturing. This sounds suspiciously like an ERP/CRM/SFA type enterprise system. On the plus side, MS is an enterprise so things like ERP/CRM/SFA are the types of solutions we need/use/buy/build internally. On the negative side, it's complex to do real-world and teams that actually do ERP/CRM/SFA inside Microsoft might dismiss the infrastructure if the playground isn't real-world enough. 
</li><li><a href="http://en.wikipedia.org/wiki/Prediction_market">Prediction Market</a>: If you've ever seen <a href="http://www.hsx.com/">Hollywood Stock Exchange (HSX)</a> or <a href="http://www.tradesports.com/">Tradesports</a>, those are prediction markets. The basic idea is that you trade on predictions, rather than companies like you would in a stock market. Using HSX as an example, you get 2 million "Hollywood Dollars" (i.e. play money) to invest in <a href="http://movies.hsx.com/moviestockindex.htm">upcoming movies</a> and / or <a href="http://movies.hsx.com/starbondindex.htm">movie stars</a>. Those movies and stars pay out based on the money they make at the box office. They also have <a href="http://movies.hsx.com/movies/servlet/SecuritySearch?advancedSearch=yes&amp;securityType=option&amp;name=&amp;tickerSymbol=&amp;priceRange=&amp;tradingStatus=ALL&amp;ipoDate=&amp;submit=submit">derivatives</a> for opening weekend, <a href="http://movies.hsx.com/special/bb2k6/">blockbusters</a> and the Oscars. HSX even sells <a href="http://www.hsxresearch.com/offerings.htm">forecasting and prediction services</a> based on the HSX market. Of course, I can't build something quite so extensive, but we could get pretty far with this idea. The upside is that it's relatively simple (compared to enterprise management systems) and there's little conflict with existing systems inside Microsoft. The downside also is that it's relatively simple and not like anything we're building inside Microsoft. </li></ul><p>I'm leaning towards the prediction market, as it sounds more fun to build and experiment with. What do you think?</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>790</wp:post_id>
		<wp:post_date>2006-09-06 18:26:27</wp:post_date>
		<wp:post_date_gmt>2006-09-06 18:26:27</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>soa-sample-scenario</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="architecture"><![CDATA[Architecture]]></category>
		<category domain="post_tag" nicename="infrastructure"><![CDATA[infrastructure]]></category>
		<category domain="post_tag" nicename="soa"><![CDATA[SOA]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[SOA+Sample+Scenario]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[ba972500-1097-4649-b09e-95959c2a459e]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2006/09/07/SOA+Sample+Scenario]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Python and DSLs</title>
		<link>http://devhawk.net/2006/09/07/python-and-dsls/</link>
		<pubDate>Thu, 07 Sep 2006 20:12:58 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://7331ef05-9c2a-487e-87ad-78e983f9e39e</guid>
		<description></description>
		<content:encoded><![CDATA[<p>When I read <a href="http://www.knowing.net/">Larry O'Brien's</a> post <a href="http://www.knowing.net/PermaLink,guid,fde14e86-4d1e-461d-9751-950a1f2e6974.aspx">IronPython as a Foundation for DSLs</a>, I had a strong sense of deja-vu. I went thru a very similar thought process when I discovered the early versions of IronPython were written in Python. I figured that meant Python must have some support that makes building compilers easier. Unfortunately, that doesn't turn out to be the case. Python provides a <a href="http://docs.python.org/lib/module-parser.html">standard module called parser</a> which "provides an interface to Python's internal parser". That means that compiling Python is easy, but there's no support for compiling any language other than Python. </p><p>I've been doing a little experimenting in this space. First, as I've <a href="http://devhawk.net/2006/08/15/Modular+Compilers.aspx">written before</a>, I've been playing with <a href="http://pdos.csail.mit.edu/~baford/packrat/">parsing expression grammars</a>. Second, I want to take a close look at <a href="http://plas.fit.qut.edu.au/metaphor/">Metaphor</a> from <a href="http://plas.fit.qut.edu.au/Default.aspx">QUT</a>:</p><blockquote><p>Metaphor is a programming language with support for type-safe run-time code generation -- a form of meta-programming. Metaphor is based on a subset of C# or Java and combines the imperative, object-oriented nature of these languages with the multi-stage programming constructs from <a href="http://www.metaocaml.org">MetaOCaml</a>. Metaphor uses the static type system of multi-stage languages to achieve compile-time safety of run-time generated code...</p><p>Metaphor is implemented as a compiler on the Microsoft CLR.</p></blockquote><p>Finally, I need to take a closer look at <a href="http://www.antlr.org/">ANTLR</a>. Don't know how I missed it, but I had never seen <a href="http://www.antlr.org/works/">ANTLRWorks</a> until Larry linked to it. </p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>791</wp:post_id>
		<wp:post_date>2006-09-07 20:12:58</wp:post_date>
		<wp:post_date_gmt>2006-09-07 20:12:58</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>python-and-dsls</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="development"><![CDATA[Development]]></category>
		<category domain="post_tag" nicename="lanugages"><![CDATA[Lanugages]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2006/09/08/Python+And+DSLs]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Python+And+DSLs]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[7331ef05-9c2a-487e-87ad-78e983f9e39e]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>IDEA 2006</title>
		<link>http://devhawk.net/2006/09/13/idea-2006/</link>
		<pubDate>Wed, 13 Sep 2006 09:47:40 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://fa6d7824-d0b3-47b4-a0bd-820245d101c8</guid>
		<description></description>
		<content:encoded><![CDATA[<p>I saw from <a href="http://blog.wired.com/sterling/">Bruce Sterling's blog</a> that he's going to be at <a href="http://ideaconference.org/">Idea 2006</a> next month in Seattle. Bruce is at or near the top of the list of "folks I'd like to chat with over a few good beers". I saw him at <a href="http://devhawk.net/2006/03/08/ETech+Day+One.aspx">ETech</a> and have since read and thoroughly enjoyed both <a href="http://mitpress.mit.edu/catalog/item/default.asp?ttype=2&amp;tid=10603">Shaping Things</a> and <a href="http://www.amazon.com/exec/obidos/tg/detail/-/0679463224">Tomorrow Now</a>. I wonder if I can make it to IDEA?</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>792</wp:post_id>
		<wp:post_date>2006-09-13 09:47:40</wp:post_date>
		<wp:post_date_gmt>2006-09-13 09:47:40</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>idea-2006</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[IDEA+2006]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[fa6d7824-d0b3-47b4-a0bd-820245d101c8]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2006/09/13/IDEA+2006]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Gamer Card Plugin for WL Writer</title>
		<link>http://devhawk.net/2006/09/15/gamer-card-plugin-for-wl-writer/</link>
		<pubDate>Fri, 15 Sep 2006 16:48:10 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://de72827b-c398-454b-960c-8ed0c6bcbf95</guid>
		<description></description>
		<content:encoded><![CDATA[<p></p><p><img style="MARGIN: 0px 0px 0px 5px" src="http://s3.amazonaws.com/devhawk_images/GamerCardPluginScreenShot.jpg" align="right" border="0" />In my <a href="http://devhawk.net/2006/09/15/Hawkeye+On+NHL+07.aspx">last post</a>, I wanted to include a link to my gamer card, showing the NHL 07 logo on it. It turns out that in addition to the <a href="http://www.xbox.com/en-US/MyXbox/embedgamercard.htm">"official" gamer card</a> from Xbox.com, there's also the <a href="http://www.mygamercard.net/">MyGamerCard.net</a> site which provides both image and flash versions of gamer cards. Since I'm using <a href="http://ideas.live.com/programpage.aspx?versionid=4372c8c2-b76f-4d44-aea1-9835b61d8dc1">Windows Live Writer</a>, and I hear it's really <a href="http://dev.live.com/blogs/devlive/archive/2006/08/14/44.aspx">easy to extend</a>, I decided to throw together a plugin for inserting Gamer Cards. It was, as advertised, extremely easy. I spent more time laying out the dialog box than I did writing the code to interface with WL Writer.</p><p>The plug in provides basically five Gamer Card options:</p><ul><li>Standard Xbox.com Gamer Card 
</li><li>MGC.net Gamer Card image with link to Xbox.com Profile 
</li><li>MGC.net Gamer Card image with link to MGC.net Profile 
</li><li>MGC.net Gamer Card image only 
</li><li>MGC.net Gamer Card flash movie</li></ul><p><a href="http://profile.mygamercard.net/RayTracer"><img style="MARGIN: 0px 5px 0px 0px" src="http://card.mygamercard.net/h2o/RayTracer.png" align="left" border="0" /></a></p><p>I'm interested in feedback and suggestions for future versions. MyGamerCard.net provides ten different Gamer Card styles (that's my Gamer Card in the "H2O" style to the left) so that's an obvious enhancement for another day. I'd also like to evolve the plugin into a "Smart Content Source", which allows you to edit the content after it's been created (like the default "Insert Map" option). Finally, I'm thinking of adding support for <a href="http://gamerscorechart.com/">GamerScoreChart.com</a>.</p><p>Download <a href="http://cid-0d9bc809858885a4.office.live.com/self.aspx/DevHawk%20Content/BlogFiles/GamerCard.WriterPlugin.Setup.zip">GamerCard.WriterPlugin.Setup.zip (142.41 KB)</a> and enjoy. <a href="mailto:harry@devhawk.net">Let me know</a> what you think.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>793</wp:post_id>
		<wp:post_date>2006-09-15 16:48:10</wp:post_date>
		<wp:post_date_gmt>2006-09-15 16:48:10</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>gamer-card-plugin-for-wl-writer</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="blogging"><![CDATA[Blogging]]></category>
		<category domain="category" nicename="development"><![CDATA[Development]]></category>
		<category domain="post_tag" nicename="windows-live"><![CDATA[Windows Live]]></category>
		<category domain="post_tag" nicename="xbox-360"><![CDATA[Xbox 360]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[de72827b-c398-454b-960c-8ed0c6bcbf95]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Gamer+Card+Plugin+For+WL+Writer]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2006/09/15/Gamer+Card+Plugin+For+WL+Writer]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Hawkeye on NHL 07</title>
		<link>http://devhawk.net/2006/09/15/hawkeye-on-nhl-07/</link>
		<pubDate>Fri, 15 Sep 2006 12:22:39 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://4bc05ec0-5cb5-4ac9-8535-9690800eec38</guid>
		<description></description>
		<content:encoded><![CDATA[<p><a href="http://live.xbox.com/member/RayTracer"><img style="margin: 0px 5px 0px 0px" src="http://card.mygamercard.net/RayTracer.png" align="left" border="0" /></a>For those who <em>don't</em> keep a close eye on my Xbox playing habits, I picked up <a href="http://www.xbox.com/nhl07xbox360">NHL 07</a> last night. There are two hockey franchises for the Xbox 360: <a href="http://www.easports.com/">EA Sports</a> and <a href="http://www.2ksports.com/">2K Sports</a>. I've been a 2K fan for several years, but I didn't think much of their <a href="http://www.xbox.com/games/nhl2k6xbox/">last effort</a> on Xbox so I never bothered to pick the 360 version. Of course, EA Sports skipped the 360 last year so I've been without next-gen hockey since I bought my next-gen console. </p><p>Now there's a new version of both major hockey franchises, just in time for the <a href="http://sports.espn.go.com/nhl/news/story?page=2006camps">opening of training camps</a>. Each has had an entire year to innovate, and it's interesting to see where each title has spent that time. 2K Sports has created "Cinemotion", which is an entirely new presentation system which is more like an "<a href="http://xbox360.ign.com/articles/732/732345p1.html">interactive hockey movie</a>" than a TV broadcast.</p><p><img style="border-top-width: 0px; border-left-width: 0px; border-bottom-width: 0px; margin: 0px 0px 0px 5px; border-right-width: 0px" height="120" alt="NHL 07 Box" src="http://s3.amazonaws.com/devhawk_images/boxnhl07.jpg" width="85" align="right" border="0" />EA Sports spent their time on an entirely new control scheme called "Skill Stick". Basically, while the left thumbstick still controls player movement, the right thumbstick controls the player's stick. It's taking time to get used to - hey I've only had the game a few hours - but so far I really like it. I was playing the <a href="http://www.xbox.com/en-US/live/marketplace/nhl07/demo.htm">XBLM Demo</a> and scored on a sweet spinorama move with the skill stick. That pretty much hooked me on the spot. Most of the <a href="http://www.metacritic.com/games/platforms/xbox360/nhl07#critics">reviewers</a> have singled out the skill stick as the reason for the generally favorable reviews. </p><p>Plus, EA picked <a href="http://www.washingtoncaps.com/">Washington Capitals</a> superstar <a href="http://www.washingtoncaps.com/team/player.asp?player_id=17">Alex Ovechkin</a> for their cover athlete. Barring awful reviews, I pretty much decided to pickup NHL 07 as soon as I heard that.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>794</wp:post_id>
		<wp:post_date>2006-09-15 12:22:39</wp:post_date>
		<wp:post_date_gmt>2006-09-15 12:22:39</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>hawkeye-on-nhl-07</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="hockey"><![CDATA[Hockey]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<category domain="post_tag" nicename="washington-capitals"><![CDATA[Washington Capitals]]></category>
		<category domain="post_tag" nicename="xbox-360"><![CDATA[Xbox 360]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Hawkeye+On+NHL+07]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2006/09/15/Hawkeye+On+NHL+07]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[4bc05ec0-5cb5-4ac9-8535-9690800eec38]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Managed Lex and Yacc</title>
		<link>http://devhawk.net/2006/09/17/managed-lex-and-yacc/</link>
		<pubDate>Sun, 17 Sep 2006 09:08:43 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://b8ae64d3-5204-4cd7-a89c-68d4e854b744</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Buried deep in the docs for v3 of the <a href="http://msdn2.microsoft.com/en-us/library/aa411710.aspx">Visual Studio SDK</a> is something called the <a href="http://msdn2.microsoft.com/en-us/library/aa405796.aspx">Managed Babel System</a>. Babel - in the context of Visual Studio - is the framework for creating language services for stuff like syntax highlighting, brace matching, and IntelliSense completion. As part of the Managed version of Babel, the VS SDK includes the Managed Package Lex Scanner Generator (MPLEX) and the Managed Package Parser Generator (MPPG). Online docs are pretty thin, but there are a few white papers in the additional documentation of the VS SDK install. </p><p>Interestingly enough, the white papers were written by John Gough of QUT's <a href="http://plas.fit.qut.edu.au/">Programming Languages and Systems</a> group. John wrote <a href="http://www.amazon.com/dp/0130622966">Compiling for the .NET Common Language Runtime</a> and PLAS has several interesting language projects including <a href="http://plas.fit.qut.edu.au/metaphor/">Metaphor</a> and <a href="http://plas.fit.qut.edu.au/Ruby.NET/">Ruby.NET</a>. As you might expect for a group that focuses on languages on .NET, they have a <a href="http://plas.fit.qut.edu.au/gppg/">managed version of YACC called GPPG</a> available and John said at <a href="http://www.langnetsymposium.com/">Lang.NET</a> that they would be releasing a managed version of LEX "soon". I'm thinking that QUT's GPPG/GPLEX combo has been absorbed into the VS SDK and renamed MPPG/MPLEX. Unfortunately, my laptop power connector is broken, so I can't verify this until Monday. </p><p>It's not a <a href="http://www.knowing.net/PermaLink,guid,c201c6a5-3deb-433f-b38a-6541498159ab.aspx">Rosetta stone</a> and the lex/yacc model is <a href="http://www.knowing.net/PermaLink,guid,0d0f3a62-45ae-4c8e-9438-6c082ef83039.aspx">getting pretty long in the tooth</a>, but I'm thinking at least <a href="http://www.knowing.net/">Larry O'Brien</a> will be interested in these tools.</p><p>UPDATE - Apparently, this is somewhat old news, as per <a href="https://blogs.msdn.com/aaronmar">Aaron Marten</a>:</p><blockquote><p>The tools we're including are called MPPG &amp; MPLex (which stand for Managed Package Parser Generator and Managed Package Lexer). They are derivative works from the open-source <a href="http://plas.fit.qut.edu.au/gppg/">GPPG/GPLex tools developed at the Queensland University of Technology</a>.<br />[<a href="https://blogs.msdn.com/aaronmar/archive/2006/08/15/701300.aspx">Managed Language Tools in Visual Studio 2005 SDK</a>]</p></blockquote>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>795</wp:post_id>
		<wp:post_date>2006-09-17 09:08:43</wp:post_date>
		<wp:post_date_gmt>2006-09-17 09:08:43</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>managed-lex-and-yacc</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="development"><![CDATA[Development]]></category>
		<category domain="post_tag" nicename="lanugages"><![CDATA[Lanugages]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2006/09/17/Managed+Lex+And+Yacc]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[b8ae64d3-5204-4cd7-a89c-68d4e854b744]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Managed+Lex+And+Yacc]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>A Question of Context</title>
		<link>http://devhawk.net/2006/09/19/a-question-of-context/</link>
		<pubDate>Tue, 19 Sep 2006 07:34:07 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://f78c8901-b413-4200-b824-cdb1f7bc936f</guid>
		<description></description>
		<content:encoded><![CDATA[<p></p><p>A couple of weeks ago, <a href="http://www.davidchappell.com">David Chappell</a> posted a great article on <a href="http://www.davidchappell.com/HTML_email/Opinari_No16_8_06.html">SOA and the Reality of Reuse</a>. When someone mentions the idea of using SOA for reuse, I cringe. David does a great job blowing the "SOA for Reuse" argument out of the water. In the future, I will just send that link rather than spending the time arguing out the point.</p><p>But something nagged at the back of my brain about that post. David starts by talking about object reuse before making the parallel to services. The problem with that comparison is that object reuse <em>hasn't</em> been a failure. When was the last time you wrote a String class? A Linked List? A Button? There's been support for <a href="http://msdn.microsoft.com/library/en-us/shellcc/platform/commctls/buttons/buttons.asp">Buttons</a> in Windows since at least the 3.x days (probably longer, but that's before my time). Whatever your OO language of choice, there's a big collection of reusable objects to go with it.</p><p>Given his position as "famous technology author", I'm assuming David is well aware of successes of object reuse. Furthermore, I doubt it was an accident that in his article he writes that "reuse of <strong>business</strong> objects failed" (emphasis added). While there has been success around object reuse, essentially none of those successes have been in a business scenario. In fact, there have been some high profile projects such as <a href="http://www.microsoft-watch.com/article2/0,1995,1875024,00.asp">Microsoft's Business Framework</a> and <a href="http://www.research.ibm.com/journal/sj/373/rubin.html">IBM's San Francisco Project</a> that have <strike>crashed and burned</strike> been significantly less than successful.</p><p>So here's the question: given that general object reuse has seen some success, what's so different about business objects that causes reuse to fail utterly? Since we're really interested in service reuse, knowing why some object reuse succeeds and other reuse fails will help us understand which services are likely to be reusable and which wont. I would say that success of object reuse hinges on context.</p><p>Wikipedia gives this definition of <a href="http://en.wikipedia.org/wiki/Context">context</a>: "The <b>context</b> of an event, word, paradigm, change or other reality includes the circumstances and conditions which <i><b>surround</b></i> it." (emphasis in original) For example, the word "order" is ambiguous. If you're using a procurement system for the military, you could conceivably be given an order to place an order. (OK, that's silly. But you get the idea.) The word "order" has two different meanings. However, the words that surround the ambiguous term make the meaning clear. An order that you place is different that an order that you give. That's context.</p><p>A string or a linked list or a button has very little in the way of contextual needs. That is to say you can use it the exact same way in a wide variety of environments. A business object on the other hand has significant contextual requirements, which makes reuse difficult or impossible. For example, a Purchase Order object from the above-mentioned military procurement system sounds like it might be reusable. At least until you take into account the differences between branches of the military, between ordering tanks and ordering uniforms, between active units and reserve units, etc. Once the generic Purchase Order has been specialized to the point of practical usability for a given scenario, it's no longer reusable in the general case.</p><p>Taking this back to the service realm, likewise I figure the reusable services will be the ones with little or no contextual needs. A good example is the identity and directory services such as <a href="http://www.microsoft.com/windowsserver2003/technologies/directory/activedirectory">Active Directory</a> and its competitors. Sure, you use LDAP not SOAP to access it, but AD is certainly both reusable and a service plus it's in wide usage. Other candidates for reusable services my team is looking at are service directory, management and operations, business activity monitoring and provisioning.</p><p>I actually think there will be <em>less</em> reuse in services than there was with objects. The value of reuse of services has to exceed not only the contextual issues but also the overhead of distributed access. Calling across the network is an expensive operation - whatever's on the other side better be worth the drive. I'm guessing for services, more often than not, reuse won't be worth the trip (if it's possible at all).</p><p><strong>Update </strong>- David pointed out to me that the last paragraph of his article begins:</p><blockquote><p>Object reuse has been successful in some areas. The large class libraries in J2EE and the .NET Framework are perhaps the most important examples of this.</p></blockquote><p>Doh! I guess my "assumption" that David is aware of successful object reuse was correct. </p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>796</wp:post_id>
		<wp:post_date>2006-09-19 07:34:07</wp:post_date>
		<wp:post_date_gmt>2006-09-19 07:34:07</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>a-question-of-context</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="architecture"><![CDATA[Architecture]]></category>
		<category domain="post_tag" nicename="object-oriented"><![CDATA[Object Oriented]]></category>
		<category domain="post_tag" nicename="reuse"><![CDATA[Reuse]]></category>
		<category domain="post_tag" nicename="soa"><![CDATA[SOA]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2006/09/19/A+Question+Of+Context]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[A+Question+Of+Context]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[f78c8901-b413-4200-b824-cdb1f7bc936f]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>2406</wp:comment_id>
			<wp:comment_author><![CDATA[Thomas Beck]]></wp:comment_author>
			<wp:comment_author_email>thomas@beckshome.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.beckshome.com</wp:comment_author_url>
			<wp:comment_author_IP>71.230.0.149</wp:comment_author_IP>
			<wp:comment_date>2006-09-19 19:00:22</wp:comment_date>
			<wp:comment_date_gmt>2006-09-20 02:00:22</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Great follow-up to David's original post. I think your addition of the "context" idea to the discussion has really added a lot. In my opnion, this brings us right back to the old black box, grey box, white box discussion.

I elaborate in my post http://www.beckshome.com/PermaLink,guid,7b0aa555-c37a-44e9-baf3-b69f6b1efc30.aspx]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Feasible Service Reuse</title>
		<link>http://devhawk.net/2006/09/20/feasible-service-reuse/</link>
		<pubDate>Wed, 20 Sep 2006 09:20:35 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://fbb3c357-45b2-4457-8a49-82aa4e864459</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Yesterday, I posted about <a href="http://devhawk.net/2006/09/19/A+Question+Of+Context.aspx">services and reuse</a>. More to the point, I posted why I don't believe that business services will be reusable, any more than business objects were reusable. However, "can't reuse business services" isn't the whole story, because I believe in different kinds of reuse.</p><p>The kind of reuse I was writing about yesterday is typically referred to as "black box reuse". The idea being that I can reuse the item (object or service) with little or no understanding of how it works. Thomas Beck <a href="http://www.beckshome.com/PermaLink,guid,7b0aa555-c37a-44e9-baf3-b69f6b1efc30.aspx">wrote about colored boxes</a> on his blog yesterday. Context impacts reuse - the environments in which you plan to reuse an item must be compatible with what the item expects. However, those contextual requirements aren't written down anywhere - at least, they're not encoded anywhere in the item's interface. Those contextual requirements are buried in the code - the code you're not supposed to look at because we're striving for black box reuse. Opaque Requirements == No Possibility of Reuse. </p><p>As I wrote yesterday, David Chappell <a href="http://www.davidchappell.com/HTML_email/Opinari_No16_8_06.html">tears this type of reuse apart</a> fairly adeptly. Money quote: "Creating services that can be reused requires predicting the future". But black box reuse this isn't the only kind of reuse. It's attractive, since it's simple. At least it would be, if it actually worked. So what kind of reuse <em>doesn't</em> require predicting the future? </p><p>Refactoring. </p><p>I realize most people probably don't consider refactoring to be reuse. But let's take a look at the official definition from <a href="http://refactoring.com/">refactoring.com</a>:</p><blockquote><p>Refactoring is a disciplined technique for restructuring an existing body of code, altering its internal structure without changing its external behavior. Its heart is a series of small behavior preserving transformations. Each transformation (called a 'refactoring') does little, but a sequence of transformations can produce a significant restructuring. Since each refactoring is small, it's less likely to go wrong. The system is also kept fully working after each small refactoring, reducing the chances that a system can get seriously broken during the restructuring</p></blockquote><p>Two things about this definition imply reuse. First, refactoring is "restructuring an existing body of code". It's not rewriting that existing body of code. You may be making changes to the code - this certainly isn't black box reuse - but you're not scrapping the code completely and starting over. Second, refactoring is making changes to the code "without changing its external behavior". You care about the code's external behavior because somewhere, some other code is calling the code you're refactoring. Some other existing piece of code that you don't want to change - i.e. that you want to reuse.</p><p>When you refactor, you still reuse a significant amount of the code, but you’re not having to predict the future to do it. Refactoring<i></i>is the kind of reuse I believe in. </p><p>In his article, David talks about types of reuse such as business agility, adaptability and easily changeable orchestration. These look a lot more like refactoring than black box reuse to me. Unfortunately, David waves these away, saying  "Still, isn’t this just another form of reuse?". Reconfiguration hardly qualifies as "predict the future" style reuse that he spends the rest of the article arguing against. It's just one paragraph in an otherwise splendid article, so I'll give him a pass this time. (I'm sure he's relieved.)</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>797</wp:post_id>
		<wp:post_date>2006-09-20 09:20:35</wp:post_date>
		<wp:post_date_gmt>2006-09-20 09:20:35</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>feasible-service-reuse</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="architecture"><![CDATA[Architecture]]></category>
		<category domain="post_tag" nicename="object-oriented"><![CDATA[Object Oriented]]></category>
		<category domain="post_tag" nicename="refactoring"><![CDATA[Refactoring]]></category>
		<category domain="post_tag" nicename="reuse"><![CDATA[Reuse]]></category>
		<category domain="post_tag" nicename="soa"><![CDATA[SOA]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2006/09/20/Feasible+Service+Reuse]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Feasible+Service+Reuse]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[fbb3c357-45b2-4457-8a49-82aa4e864459]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Hard on Hardware</title>
		<link>http://devhawk.net/2006/09/20/hard-on-hardware/</link>
		<pubDate>Wed, 20 Sep 2006 09:17:45 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://8919ab55-ac81-45b7-9019-298e868439b8</guid>
		<description></description>
		<content:encoded><![CDATA[<p>I guess being "Harry's Computer" is a rough gig. Right before I went on vacation a few weeks ago, the power connector on my laptop started acting up. I'd plug it in, but it wouldn't charge. Typically, replugging it would solve the issue. When I got back from vacation, the help desk tech took one look at it and realized I needed a new power connector. OK, how long will that take? Supposedly a day or two, but in the end it took a week and a half. It arrived Monday afternoon, right after I left for a two day <a href="http://www.soasystems.com/events151.asp">SOA workshop</a> (more on that later). To make matters worse, the power connector has now completely broken off, so I'm having to lug my docking station around if I want to charge my laptop.</p><p>Then, to make matters worse, my power cable had stopped working. Luckily, my buddy <a href="http://halfmybrain.spaces.live.com">Dale</a> is up here in Vancouver with me at this workshop, so I've been able to borrow his. But seriously, a broken power cable? How does that happen? I mean, it's not cut or anything. But if you share the transformer box, you can hear something broken inside rattling. That's not good.</p><p>So I have a busted power cable that I can't connect to my laptop anyway because of a broken power connector. Frankly, I'm a little worried about what will go wrong with this machine next. But since it only seems to happen when I'm on the road, and I'm not scheduled to go on the road again anytime soon, I guess I'll survive.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>798</wp:post_id>
		<wp:post_date>2006-09-20 09:17:45</wp:post_date>
		<wp:post_date_gmt>2006-09-20 09:17:45</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>hard-on-hardware</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="hardware"><![CDATA[Hardware]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2006/09/20/Hard+On+Hardware]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Hard+On+Hardware]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[8919ab55-ac81-45b7-9019-298e868439b8]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Stateless != Stateless</title>
		<link>http://devhawk.net/2006/09/20/stateless-stateless/</link>
		<pubDate>Wed, 20 Sep 2006 15:35:31 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://325c0630-3dbc-4292-b9a7-ad509157ffe9</guid>
		<description></description>
		<content:encoded><![CDATA[<p>A while back, I blogged that <a href="http://devhawk.net/2006/07/27/Services+Arent+Stateless.aspx">Services Aren't Stateless</a>, in response to some stuff in Thomas Erl's <a href="http://www.soabooks.com/chapters2.asp">latest book</a>. At the time, I mentioned that I was looking forward to discussing my opinions with <a href="http://www.thomaserl.com/">Erl</a> when I attended his <a href="http://www.soasystems.com/events151.asp">workshop</a>. I've spent the last two days at said workshop. I'll have a full write-up on the workshop later this week, but I wanted to blog the resolution to this stateless issue right away.</p><p>At the time, I wrote "I assume Erl means that service should be stateless in the same way HTTP is stateless." Turns out, my assumption was way way wrong. When he addressed this topic in his workshop, he started by talking about dealing with concurrency and scalability, which got me confused at first. Apparently, when Erl says stateless, he's referring to minimizing memory usage. That is, don't keep service state in memory longer than you need to. So <a href="http://devhawk.net/2006/08/16/Business+Processes+Are+Services+Too.aspx">all the stuff about activity data</a>, that's all fine as per Erl's principles, as long as you write it out to database instead of keeping it in memory. In his book, he talks about the service being "temporarily stateful" while processing a message. When I read that, I didn't get it - because I was thinking of the HTTP definition of stateless &amp; stateful. But if we're just talking about raw memory usage, it suddenly makes sense. </p><p>On the one hand, I'm happy to agree 100% with Erl on another of his principles. Frankly, much of what he talked about in his workshop seems predicated on unrealistic organizational behavior and offer at best unproven promises of cost and time savings in the long run via black box reuse. So to be in complete agreement with him on something was a nice change of pace. Thomas is much more interested in long-running and async services than I originally expected when I first flipped thru his book.</p><p>On the other hand, calling this out as a "principle of service orientation" hardly seems warranted. I mean, large scale web sites have been doing this for a long time and <a href="http://msdn2.microsoft.com/en-us/library/ms178586.aspx">SQL Session State</a> support has been a part of ASP.NET since v1. Furthermore, using the term "stateless" in this way is fundamentally different from the way HTTP and the industry at large uses it, which was the source of my confusion. So while I agree with the concept, I really wish Erl hadn't chosen an overloaded term to refer to it.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>799</wp:post_id>
		<wp:post_date>2006-09-20 15:35:31</wp:post_date>
		<wp:post_date_gmt>2006-09-20 15:35:31</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>stateless-stateless</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="architecture"><![CDATA[Architecture]]></category>
		<category domain="post_tag" nicename="soa"><![CDATA[SOA]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Stateless+Stateless]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[325c0630-3dbc-4292-b9a7-ad509157ffe9]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2006/09/20/Stateless+Stateless]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Revisiting the AJAX Ecosystem</title>
		<link>http://devhawk.net/2006/09/21/revisiting-the-ajax-ecosystem/</link>
		<pubDate>Thu, 21 Sep 2006 21:09:14 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://e0685a52-45cc-4197-bd41-74a263df90e8</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Seven months and one job ago, I <a href="http://devhawk.net/2006/02/14/Thoughts+On+The+AJAX+Toolkit+Spectrum.aspx">wrote this</a> about AJAX toolkits:</p><blockquote><p>The network effect that <a href="http://web2.wsj2.com/web_20_design_the_ajax_spectrum.htm">Dion doesn't consider</a> is the component ecosystem phenomenon that Microsoft has a ton of experience with. Old school VB, COM/ActiveX and .NET have all had large ecosystems of components and controls evolve that extend the functionality of the baseline development platform. There's no reason to believe that won't happen with Atlas. I think it's wrong to describe Atlas as a monolith or self-contained or enclosing. It's an extensible baseline platform - i.e. the baseline functionality is set down once at the development platform and the ecosystem can extend it from there. Sure, overlapping extensions happen (how many rich text editor components are there for ASP.NET?) but at least they all have basic compatibility.</p></blockquote><p>I bring this up now because I saw on <a href="http://blogs.msdn.com/sburke/archive/2006/09/19/762781.aspx">Shawn Burke's blog</a> that they've shipped the September release of the <a href="http://atlas.asp.net/atlastoolkit/">Atlas Control Toolkit</a>. There are now 25 different controls (they had 10 in their first release). But there's something more significant than the addition of 15 controls overall:</p><blockquote><p><a href="http://atlas.asp.net/atlastoolkit/Slider/Slider.aspx">Slider</a> is just a super-useful little control.  There are so many times when you want to let users use this type of UI.  Another great thing about Slider is that it's <strong>a 3rd party contribution, from </strong><a href="http://aspadvice.com/blogs/garbin/"><strong>Garbin</strong></a>, who did a great job on it. (emphasis added)<br />[<a href="http://blogs.msdn.com/sburke/archive/2006/09/19/762781.aspx">Atlas Control Toolkit September Release</a>]</p></blockquote><p>I just wanted to brag that I called this 7 months ago.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>800</wp:post_id>
		<wp:post_date>2006-09-21 21:09:14</wp:post_date>
		<wp:post_date_gmt>2006-09-21 21:09:14</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>revisiting-the-ajax-ecosystem</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="ajax"><![CDATA[AJAX]]></category>
		<category domain="category" nicename="development"><![CDATA[Development]]></category>
		<category domain="post_tag" nicename="web-2-0"><![CDATA[Web 2.0]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2006/09/22/Revisiting+The+AJAX+Ecosystem]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Revisiting+The+AJAX+Ecosystem]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[e0685a52-45cc-4197-bd41-74a263df90e8]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Tonight&#039;s Caps Game Live on the Web</title>
		<link>http://devhawk.net/2006/09/26/tonights-caps-game-live-on-the-web/</link>
		<pubDate>Tue, 26 Sep 2006 11:13:13 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://0ad58218-0661-4c34-9e45-aa8a0ece13b5</guid>
		<description></description>
		<content:encoded><![CDATA[<p>This just came across my news reader:</p><blockquote><p>Washington Capitals will face the Philadelphia Flyers in preseason exhibition tonight. Bummed that the game is not being televised? Never fear, <a href="http://www.washingtoncaps.com/news/news.asp?story_id=4180">WashingtonCaps.com is broadcasting the game</a> via broadband off their website. However it is restricted to the Washington area only.<br />[<a href="http://pheadsthoughts.blogspot.com/2006/09/caps-live-via-web_26.html">Caps Live Via Web</a> - <a href="http://pheadsthoughts.blogspot.com">Puckhead's Thoughts</a>]</p></blockquote><p>Wow! I mean, I still can't watch the game &lt;grumble grumble&gt; and it is still pre-season, but this is pretty significant. More details in the press release:</p><blockquote><p>The Washington Capitals exhibition game against the Philadelphia Flyers on Tuesday, Sept. 26 at 7 p.m. will be broadcast live on WashingtonCaps.com through the use of B2 Networks. This will mark the first time in NHL history that a game can be viewed exclusively via broadband.</p><p>The game can be seen free of charge on the Capitals’ website, WashingtonCaps.com. Fans will need a high-speed internet connection and Windows Media Player 9 or higher. Capitals’ radio network play-by-play announcer Steve Kolbe will call the game with Mike Vogel, senior writer from WashingtonCaps.com, providing analysis. Due to NHL broadcast restrictions, the game can only be viewed by fans living within the Capitals broadcast area.</p><p>B2 Networks is a provider of secure international television and video broadcasting systems, pay-per-view and billing systems. During the past 12 months, B2 has broadcast more than 3,000 hockey games from all levels including the championships from four leagues. B2 is the digital distribution rightsholder for the United Hockey League, American Hockey League, ECHL and USHL, along with baseball’s Northern League. B2 recently broadcast the National Lacrosse League championship to fans on four continents.<br />[<a href="http://www.washingtoncaps.com/news/news.asp?story_id=4180">Capitals Preseason Game to be Broadcast on WashingtonCaps.com via B2Networks</a>]</p></blockquote><p>The Caps and <a href="http://ted.aol.com/">their owner</a> are aggressively pursing avenues outside of the main stream media (which for the most part ignores hockey). First, they come up with <a href="http://www.ericmcerlain.com/offwingopinion/archives/006447.php">Guidelines For Issuing Press Credentials To Bloggers</a> and now this. </p><p>Of all the major sports, hockey seems to have the most to gain from both the HD revolution and media decentralization. Hockey is so fast and the puck is so small, you spend most of your time tracking the puck when watching in standard definition. In HD, you don't have to watch the puck, you can watch the play. This isn't to say that other sports aren't gorgeous in HD, but the difference in the experience between SD and HD just isn't as significant for other sports. As for media decentralization, the reason hockey has the most to gain is because it has the least coverage in the mainstream media today. So there's no where to go but up. </p><p>However, the NHL broadcast restrictions stuff has got to go. Come on <a href="http://ted.aol.com/">Ted</a>, you're a "<a href="http://www.corp.aol.com/whoweare/whoswho/leonsis.shtml">pioneer of the Internet and new media</a>". Get those guys at the NHL to wake up and embrace the new media! How come EVERY game isn't available this way? </p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>801</wp:post_id>
		<wp:post_date>2006-09-26 11:13:13</wp:post_date>
		<wp:post_date_gmt>2006-09-26 11:13:13</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>tonights-caps-game-live-on-the-web</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="hockey"><![CDATA[Hockey]]></category>
		<category domain="post_tag" nicename="media-2-0"><![CDATA[Media 2.0]]></category>
		<category domain="category" nicename="sports"><![CDATA[Sports]]></category>
		<category domain="post_tag" nicename="washington-capitals"><![CDATA[Washington Capitals]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[0ad58218-0661-4c34-9e45-aa8a0ece13b5]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2006/09/26/Tonights+Caps+Game+Live+On+The+Web]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Tonights+Caps+Game+Live+On+The+Web]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>del.icio.us Buttons and IE7</title>
		<link>http://devhawk.net/2006/09/26/del-icio-us-buttons-and-ie7/</link>
		<pubDate>Tue, 26 Sep 2006 23:52:12 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://fbee5aee-af16-4def-86a1-68ff775ac9cb</guid>
		<description></description>
		<content:encoded><![CDATA[<p>I like the <a href="http://del.icio.us/help/ie/extension">del.icio.us Buttons for IE</a> but they don't work as well with IE7. Or more to the point, IE7 has changed the interface model on del.icio.us. Hopefully, <strike>del.icio.us</strike> Yahoo! will update the buttons sometime soon.</p><p>Basically, IE supports a variety of extensions. On such extension mechanism is a "Browser Extension" (catchy, ain't it). While I'm sure there are other aspects to Browser Extensions, it puts a button on IE's main toolbar. An example of a browser extension that I use is <a href="http://www.onepassword.com/">Password Scrambler</a>. del.icio.us, in comparison, creates a toolbar with two buttons - one brings up the <a href="http://del.icio.us/post">link post page</a> while the other is a dropdown menu that brings you to various places within del.icio.us. Frankly, I only use the link post button.</p><p>The issue is that in IE7, they've moved around the main toolbar. Under IE6, I would position the del.icio.us toolbar right after the main toolbar. So it worked out great. Now, in IE7, the main toolbar is now to the right of the tabs. By default, the browser extension buttons aren't visible, but they are available on the Tools drop down menu. So I don't have one click access to the Password Scrambler any more, but I do have all those extra commands grouped together. But since del.icio.us has it's own toolbar, there's no place really to put it that doesn't take up screen space. It can't go on the command bar with the address box and the search box. It can't go on the command bar with the tabs and the main menu. The only alternative is to have it on a bar by itself, which is a waste of space. Esp. since I only care about the link post button, which would fit nicely on IE7's new Tools menu.</p><p>I investigated what it would take to do it myself, and frankly I'm slammed with much more important things to do. At least, more relevant to my day job. Anyone with a good suggestion here, I'd sure appreciate it.</p><p><strong>Update</strong> - According to a comment left by <a href="http://blog.del.icio.us/">britta</a>, the del.icio.us buttons IE7 ready yet and they suggest using <a href="http://del.icio.us/help/buttons">these buttons</a> in the meantime. Thanks for the tip, britta!</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>802</wp:post_id>
		<wp:post_date>2006-09-26 23:52:12</wp:post_date>
		<wp:post_date_gmt>2006-09-26 23:52:12</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>del-icio-us-buttons-and-ie7</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2006/09/27/delicious+Buttons+And+IE7]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[delicious+Buttons+And+IE7]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[fbee5aee-af16-4def-86a1-68ff775ac9cb]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>2407</wp:comment_id>
			<wp:comment_author><![CDATA[britta]]></wp:comment_author>
			<wp:comment_author_email>support@del.icio.us</wp:comment_author_email>
			<wp:comment_author_url>http://blog.del.icio.us/</wp:comment_author_url>
			<wp:comment_author_IP>67.72.118.244</wp:comment_author_IP>
			<wp:comment_date>2006-09-27 13:20:29</wp:comment_date>
			<wp:comment_date_gmt>2006-09-27 20:20:29</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[hello! yeah, the del.icio.us toolbar doesn't support ie7 quite yet -- it can cause some nasty bugs, even. you might want to use these alternative buttons until we update it (we're working on it): http://del.icio.us/help/buttons :)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>OneNote Rocks</title>
		<link>http://devhawk.net/2006/09/27/onenote-rocks/</link>
		<pubDate>Wed, 27 Sep 2006 11:17:56 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://4e86d50e-a083-47eb-b7fe-82c6d3eb58e0</guid>
		<description></description>
		<content:encoded><![CDATA[<p>I need a better microphone for my laptop, but the ability to record the audio for a meeting and sync that audio with the notes you're taking is brilliant. I'm using the 2007 version, but I think at least some of this functionality was available in the 2003 version. </p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>803</wp:post_id>
		<wp:post_date>2006-09-27 11:17:56</wp:post_date>
		<wp:post_date_gmt>2006-09-27 11:17:56</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>onenote-rocks</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="office"><![CDATA[Office]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2006/09/27/OneNote+Rocks]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[OneNote+Rocks]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[4e86d50e-a083-47eb-b7fe-82c6d3eb58e0]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>2408</wp:comment_id>
			<wp:comment_author><![CDATA[Dag K&#246;nig]]></wp:comment_author>
			<wp:comment_author_email>dagk@microsoft.com</wp:comment_author_email>
			<wp:comment_author_url>http://buzzfrog.blogs.com</wp:comment_author_url>
			<wp:comment_author_IP>83.226.215.70</wp:comment_author_IP>
			<wp:comment_date>2006-09-27 22:26:52</wp:comment_date>
			<wp:comment_date_gmt>2006-09-28 05:26:52</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Both features are also available in OneNote 2003. I have used it often. But sometime it makes you feel like a spy. ;-)

/dag]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>2409</wp:comment_id>
			<wp:comment_author><![CDATA[Bil Simser]]></wp:comment_author>
			<wp:comment_author_email>emailme@bilsimser.com</wp:comment_author_email>
			<wp:comment_author_url>http://weblogs.asp.net/bsimser</wp:comment_author_url>
			<wp:comment_author_IP>24.64.226.237</wp:comment_author_IP>
			<wp:comment_date>2006-10-22 20:48:59</wp:comment_date>
			<wp:comment_date_gmt>2006-10-23 03:48:59</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I totally agree. I use OneNote for *everything* and keep a few OneNote notebook files online in SharePoint where you can just sync stuff automagically. It's great for keeping track of little things, plus I have sections for projects, software, and a blog queue of intersting things I'll get to one day.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Thoughts on the SOA Workshop</title>
		<link>http://devhawk.net/2006/09/27/thoughts-on-the-soa-workshop/</link>
		<pubDate>Wed, 27 Sep 2006 16:11:00 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://1ed04a69-9af6-4d7b-921a-c815b739fd66</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Last week, I attended an <a href="http://www.soasystems.com/events151.asp">SOA workshop</a> presented by <a href="http://www.soasystems.com/">SOA Systems</a> and delivered by "top-selling SOA author" <a href="http://www.thomaserl.com/">Thomas Erl</a>. It was two SOA-jammed days + the drive to Vancouver and back primarily discussing SOA with <a href="http://halfmybrain.spaces.live.com/blog/">Dale</a>. In other words, it was a lot of SOA. I went up expecting to take Erl to task for his "Services are Stateless" principle. However, that turned out to be a <a href="http://devhawk.net/2006/09/20/Stateless+Stateless.aspx">misunderstanding</a> on my part about how Erl uses the term stateless. However, while Erl and I agreed on optimizing memory utilization (which is what he means by stateless), that wasn't much else when it came to common ground. As I wrote last week, Erl's vision of service-orientation is predicated on unrealistic organizational behavior and offer at best unproven promises of cost and time savings in the long run via black box reuse.</p><p>Erl spends a lot of time talking about service reuse. I think it's safe to say, in Erl's mind, reuse is the primary value of service orientation. However, he didn't offer any reason to believe we can reuse services any more successfully than we were able to reuse objects. Furthermore, his predictions about the amount of reuse you can achieve are completely made up. At one point, he was giving actual reuse numbers (i.e. 35% new code, 65% existing code). When I asked him where those numbers came from, Erl admitted that they were "estimates" because "there hasn't been enough activity in serious SOA projects to provide accurate metrics" and that there is "no short term way of proving" the amount of service reuse. In other words, Erl made those numbers up out of thin air.</p><p>This whole "serious" or "real" SOA is a major theme with Erl. One the one hand, I agree that SOA is a horribly overused term. Many projects labeled SOA have little or nothing to do with SO. On the other hand, it seems pretty convenient to chalk up failed projects as not being "real" SOA so you can continue to spout attractive yet completely fictional reuse numbers. I asked about the Gartner's 20% service reuse prediction and Erl responded that low reuse number was because the <a href="http://msdn.microsoft.com/webservices/webservices/understanding/specs/default.aspx">WS-* specs</a> are still in process. While I agree that the WS-* specs are critical to the advancement of SO, I fail to see how lack of security, reliable messaging and transactions are holding back reuse. If anything, I would expect those specs to <em>impede</em> reuse, as it adds further contextual requirements to the service. </p><p>While I think Erl is mistaken when it comes to the potential for service reuse, he's absolutely dreaming when it comes to the organizational structure and behavior that has to be in place for this potential service reuse to happen in the first place. I'm not sure what Erl was doing before he became a "top-selling SOA author," but I find it hard to believe it included any time in any significantly sized IT shop. </p><p>Erl expects services - "real" services, anyway - to take around 30% more time and money than he traditional siloed approach. The upside for spending this extra time and money is the potential service reuse. The obvious problem with this is that we don't know how much reuse we're going to see for this extra time and money. If you spend 30% more but can only reuse 20% of your services (as Gartner predicts), is it worth it? If you end up spending 50% more but are only able to reuse 10% of your services, is it worth it? Where's the line where it's no longer worth it to do SOA? Given that there's no real way to know how much reuse you're going to see, Erl's vision of SOA requires a huge leap of faith on the part of the implementer. "Huge leap of faith" doesn't go so well with "corporate IT department".</p><p>Furthermore, the next IT project I encounter that is willing to invest any additional time and money - much less 30% - in order to achieve some theoretical organizational benefit down the road will be the first. Most projects I've encountered (including inside MSIT) sacrifice long term time and money in return for short term gain. When asked how to make this 30% investment happen, Erl suggested that the CIO has to have a "dictatorial" relationship with the projects in the IT shop. I'm thinking that CIO's that adopt a dictatorial stance won't get much cooperation from the IT department and will soon be ex-CIO's.</p><p>In the end, I got a lot less out of this workshop than I was hoping to. As long as SO takes 30% more time and money and the primary benefit is the same retread promises of reuse that OO failed to deliver on, I have a hard time imagining SO making much headway. </p><p>PS - I have a barely used copy of "<a href="http://www.soabooks.com">Service-Oriented Architecture: Concepts, Technology, and Design</a>" if anyone wants to trade for it. It's not a <a href="http://oneredpaperclip.blogspot.com/">red paperclip</a>, but it's like new - only flipped through once. :)</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>804</wp:post_id>
		<wp:post_date>2006-09-27 16:11:00</wp:post_date>
		<wp:post_date_gmt>2006-09-27 16:11:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>thoughts-on-the-soa-workshop</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="architecture"><![CDATA[Architecture]]></category>
		<category domain="post_tag" nicename="soa"><![CDATA[SOA]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Thoughts+On+The+SOA+Workshop]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[1ed04a69-9af6-4d7b-921a-c815b739fd66]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2006/09/27/Thoughts+On+The+SOA+Workshop]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>2410</wp:comment_id>
			<wp:comment_author><![CDATA[David Clement]]></wp:comment_author>
			<wp:comment_author_email>david.clement@visiphor.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>208.181.139.17</wp:comment_author_IP>
			<wp:comment_date>2006-09-28 09:39:07</wp:comment_date>
			<wp:comment_date_gmt>2006-09-28 16:39:07</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Ouch!  ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>2411</wp:comment_id>
			<wp:comment_author><![CDATA[Arnon Rotem-Gal-Oz]]></wp:comment_author>
			<wp:comment_author_email>arnon@rgoarchitects.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.ddj.com/dept/architect</wp:comment_author_url>
			<wp:comment_author_IP>217.132.168.250</wp:comment_author_IP>
			<wp:comment_date>2006-09-28 13:03:25</wp:comment_date>
			<wp:comment_date_gmt>2006-09-28 20:03:25</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[
> PS - I have a barely used copy of "Service-Oriented Architecture:
> Concepts, Technology, and Design" if anyone wants to trade for it
>It's not a red paperclip, but it's like new - only flipped through once. :)

I have a similar experience with his "Service-Oriented Architecture: A Field Guide to Integrating XML and Web Services" :)

Arnon]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>2412</wp:comment_id>
			<wp:comment_author><![CDATA[Erik Johnson]]></wp:comment_author>
			<wp:comment_author_email>ejohnson@epicor.com</wp:comment_author_email>
			<wp:comment_author_url>http://appside.blogspot.com</wp:comment_author_url>
			<wp:comment_author_IP>65.248.23.250</wp:comment_author_IP>
			<wp:comment_date>2006-10-02 09:30:33</wp:comment_date>
			<wp:comment_date_gmt>2006-10-02 16:30:33</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[It came to me a while back that half the time I talk to someone about SOA, we aren't even talking about the same objectives.  Working for an ISV, we try to think about service-oriented application design rather than the target implementer's enterprise architecture.  They are different things.

I agree you can't expect reuse in SOA to materialize any differently than you would for objects.  Cohesion is cohesion.  But if you can design an application to at least minimize the invasiveness required to deploy that app into someone else's enterprise architecture, you can get some economy back reminiscent of "reuse".  Anyway, I wrote up some thoughts along these lines over the weekend on the 'ol blog.  ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>New Version of Gamer Card Writer Plugin</title>
		<link>http://devhawk.net/2006/09/29/new-version-of-gamer-card-writer-plugin/</link>
		<pubDate>Fri, 29 Sep 2006 17:15:08 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://a914d76b-f2f1-4071-a05d-41d8fbb7da93</guid>
		<description></description>
		<content:encoded><![CDATA[<p><a href="http://gallery.live.com/liveitemdetail.aspx?li=0dfb3c1d-bb4e-4661-ad80-82c1994b424e&amp;l=8" target="_new" atomicselection="true"><img style="border-right: 0px; border-top: 0px; margin: 0px 5px 0px 0px; border-left: 0px; border-bottom: 0px" height="100" alt="Gamer Card Writer Plugin" src="http://s3.amazonaws.com/devhawk_images/WindowsLiveWriter/NewVersionofGamerCardWriterPlugin_C9B8/LARGE[1][7].jpg" width="100" align="left" border="0" /></a> There's a new version of WL Writer, so I spent a little time updating my Gamer Card Writer Plugin. The big addition in this version is support for the different card styles from <a href="http://mygamercard.net/">MyGamerCard.net</a>. Also, I added a preview, so you can see what the card will look like before you insert it into your post. </p><p>Rather than post it here, I submitted it to the <a href="http://gallery.live.com/">Windows Live Gallery</a>, since they've added an area for <a href="http://gallery.live.com/default.aspx?l=8">Writer Plugins</a>. You can <a href="http://gallery.live.com/liveitemdetail.aspx?li=0dfb3c1d-bb4e-4661-ad80-82c1994b424e&amp;l=8">download</a> it from there.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>805</wp:post_id>
		<wp:post_date>2006-09-29 17:15:08</wp:post_date>
		<wp:post_date_gmt>2006-09-29 17:15:08</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>new-version-of-gamer-card-writer-plugin</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="blogging"><![CDATA[Blogging]]></category>
		<category domain="category" nicename="development"><![CDATA[Development]]></category>
		<category domain="post_tag" nicename="windows-live"><![CDATA[Windows Live]]></category>
		<category domain="post_tag" nicename="xbox-360"><![CDATA[Xbox 360]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2006/09/30/New+Version+Of+Gamer+Card+Writer+Plugin]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[New+Version+Of+Gamer+Card+Writer+Plugin]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[a914d76b-f2f1-4071-a05d-41d8fbb7da93]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>2413</wp:comment_id>
			<wp:comment_author><![CDATA[Rex]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>75.36.60.73</wp:comment_author_IP>
			<wp:comment_date>2006-09-29 17:17:48</wp:comment_date>
			<wp:comment_date_gmt>2006-09-30 00:17:48</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Interesting, can wait to try it out.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>&quot;Working&quot; From Home As The Office Moves</title>
		<link>http://devhawk.net/2006/09/29/working-from-home-as-the-office-moves/</link>
		<pubDate>Fri, 29 Sep 2006 17:03:15 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://b3674392-cb09-466c-9bf9-df5f6b520fc3</guid>
		<description></description>
		<content:encoded><![CDATA[<p></p><div class="wlWriterSmartContent" id="84E294D0-71C9-4bd0-A0FE-95764E0368D9:153d6944-dc7b-4578-8710-a2c9523305a7" contenteditable="false" style="padding-right: 0px; display: inline; padding-left: 5px; float: right; padding-bottom: 0px; margin: 0px; padding-top: 0px"><a href="http://local.live.com/default.aspx?v=2&amp;cp=47.54693~-122.0346&amp;lvl=1&amp;style=o&amp;scene=3713755&amp;sp=aN.47.54674_-122.0346_New%2520Issquah%2520Black%2520Building_" id="map-6ff6cd5d-0b86-4c0b-b169-9e805a204ff9" alt="Click to view this map on Live.com" title="Click to view this map on Live.com"><img src="http://s3.amazonaws.com/devhawk_images/WindowsLiveWriter/WorkingFromHomeAsTheOfficeMoves_72FB/map09acefc72c79.jpg" width="320" height="240" /></a><br /><label for="map-6ff6cd5d-0b86-4c0b-b169-9e805a204ff9" style="font-size:.8em;">New Microsoft Issaquah Black Building</label></div><p></p><p>Even though I moved offices <a href="http://devhawk.net/2006/09/06/Here+Has+Moved+And+Will+Move+Again.aspx">just a month</a> ago, we moved again today. New office won't be ready until Monday, so I "worked from home". Of course, with two kids too young for school, getting much actual work done is essentially impossible. I did manage to get my blog upgraded to <a href="http://www.hanselman.com/blog/DasBlog19Released.aspx">dasBlog 1.9</a> during the kids' naps.</p><p>My new office building is "Issaquah Black" which is a much cooler name than "18" or "Sammamish C". The building used to be a Boeing building. In fact, my old next door neighbor used to work in this building, back when he and I lived a scant 2.5 mile / 6 minute commute from here. Boeing moved him to Everett and apparently decided to get rid of the building. A year ago, I moved to a new house on the outskirts of Redmond, so my commute is 12.5 miles / 20 minutes. Significantly longer than if I had never moved, but I love my house and can easily deal with a 20 minute commute. Even though main campus is closer (only 8 miles), with all the rush hour traffic it takes closer to 45 to get there!</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>806</wp:post_id>
		<wp:post_date>2006-09-29 17:03:15</wp:post_date>
		<wp:post_date_gmt>2006-09-29 17:03:15</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>working-from-home-as-the-office-moves</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="microsoft"><![CDATA[Microsoft]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<category domain="post_tag" nicename="working-at-msft"><![CDATA[Working at MSFT]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[quotWorkingquot+From+Home+As+The+Office+Moves]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[b3674392-cb09-466c-9bf9-df5f6b520fc3]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2006/09/30/quotWorkingquot+From+Home+As+The+Office+Moves]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>College Football Logjam</title>
		<link>http://devhawk.net/2006/10/01/college-football-logjam/</link>
		<pubDate>Sun, 01 Oct 2006 15:48:03 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://e48dfc42-f3e6-4eb9-831a-f572ecc451d0</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Two years ago, Auburn was on the outside looking in on the BCS title game. If things continue as they are, we're looking at a logjam at the top worse than 2004 or 2003. </p><p>At this point, nearly half way though the season, Ohio State has the #1 slot sewn up, assuming they win all their games. Their only remaining game against a ranked opponent is Michigan. Michigan already beat then #2 ranked Notre Dame, so this will be no cake walk for Ohio State. But, let's assume they win since they fall out of the national title hunt if they lose.</p><p>After that comes the logjam. <a href="http://sports.espn.go.com/ncf/rankings?pollId=2&amp;weekNumber=6&amp;seasonYear=2006">This week's coaches' poll</a> has the remaining unbeaten teams ranked as such: #2 USC, #3 Auburn, #4 West Virginia, #5 Florida and #6 Michigan. <a href="http://sports.espn.go.com/ncf/rankings?pollId=1&amp;weekNumber=6&amp;seasonYear=2006">This week's AP poll</a> has Auburn #2 and USC #3, and the rest of the unbeatens the same. These polls are <em>VERY</em> close. In the AP poll, Auburn and USC are separated by only 28 votes. West Virginia, Florida and Michigan are only 53 votes apart, with West VA and Florida only 2 votes apart!</p><p>Of the six unbeaten teams, only four will survive to the end of the season. As I said above, Michigan plays Ohio State at the end of the season plus Auburn plays Florida in two weeks. Of the six teams, Florida has the hardest schedule. They play four currently ranked teams, two on the road (LSU, @Auburn, Georgia, @Florida State). USC has three games against ranked teams, but none are in the top ten and their all at home (Oregon, Cal and Notre Dame). Ohio State has probably the easiest schedule, with only one game against ranked opponent - i.e. Michigan - and they get them at home. </p><p>So assuming Ohio State, Auburn, USC and West Virginia all run the table, it's a toss up who will be ranked #2 and play Ohio State in the BCS title game. Both USC and Auburn are #2 in one of the two major polls. Auburn has three games against ranked opponents (two remaining + their 7-3 victory over then-#6-ranked LSU). USC has four games against ranked opponents (three remaining + their 28-10 victory over then-#19-ranked Nebraska). But none of USC's ranked opponents are in the top ten and all of Auburn's are (at least currently). So who has the edge? Who knows? I do know that in this situation, either Auburn or USC will be left out in the cold. Not to mention West Virginia who has basically no chance to crack the top two unless someone stumbles. </p><p>I'm predicting lots of complaining at the end of the season. Like every season where there's more than one unbeaten team. I'm begriming to believe that's why the BCS was created, so that fans can focus their hostility on computers rather than the polls.</p><p><strong>Update</strong> - I forgot to mention the ultra nightmare BCS scenario. If USC, Auburn and <em>Michigan</em> run the table, you'll likely have a USC vs. Auburn title game with Michigan ranked #3. That means Michigan would have beaten both then-ranked #1 and #2 during the season, but wouldn't get a shot at the title.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>807</wp:post_id>
		<wp:post_date>2006-10-01 15:48:03</wp:post_date>
		<wp:post_date_gmt>2006-10-01 15:48:03</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>college-football-logjam</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="college-football"><![CDATA[College Football]]></category>
		<category domain="category" nicename="sports"><![CDATA[Sports]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2006/10/01/College+Football+Logjam]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[College+Football+Logjam]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[e48dfc42-f3e6-4eb9-831a-f572ecc451d0]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Lip Service on Long Term Planning</title>
		<link>http://devhawk.net/2006/10/02/lip-service-on-long-term-planning/</link>
		<pubDate>Mon, 02 Oct 2006 13:35:54 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://2265ee4d-7d93-4c1c-b61e-14136018871f</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Long term readers know my liberal political leanings. So it should come as no surprise to them that I read liberal blogs like Washington Monthly. But this isn't a post about politics, it's a post about planning:</p><blockquote><p>This kind of long-term planning — in politics, in business, in nearly every walk of life — is something that nearly everyone <i>says</i> they support, but when push comes to shove very few people are willing to back it up. There's always something this week, or this month, or this year that seems uniquely crucial and demands our attention. Next year there will be something else, and the year after that something else again. The long-term stuff simply never gets done unless someone like Dean is willing to go to the mat for it.<br />[<a href="http://www.washingtonmonthly.com/archives/individual/2006_10/009605.php">Building a Better Movement</a> - <a href="http://www.washingtonmonthly.com">Kevin Drum</a>]</p></blockquote><p>I don't have much to add to this, except that planning is a big part of architecture, especially architecture in the enterprise (which may or may not be "Enterprise Architecture"). Who "goes to the mat" for the long-term stuff at your company? Or does the long-term stuff simply never get done?</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>808</wp:post_id>
		<wp:post_date>2006-10-02 13:35:54</wp:post_date>
		<wp:post_date_gmt>2006-10-02 13:35:54</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>lip-service-on-long-term-planning</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="architecture"><![CDATA[Architecture]]></category>
		<category domain="category" nicename="politics"><![CDATA[Politics]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[2265ee4d-7d93-4c1c-b61e-14136018871f]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2006/10/02/Lip+Service+On+Long+Term+Planning]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Lip+Service+On+Long+Term+Planning]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Numero Uno Theory of Sociology</title>
		<link>http://devhawk.net/2006/10/03/numero-uno-theory-of-sociology/</link>
		<pubDate>Tue, 03 Oct 2006 11:38:39 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://feb2c00b-c0e6-49e2-95cb-3b1bc61228d5</guid>
		<description></description>
		<content:encoded><![CDATA[<p>My wife Julie has a degree in sociology. Furthermore, she has a knack for sociology, the way I have a knack for computers. It's part of what makes her such a great mom and teacher. Anyway, Julie once told me that sociology is easy because everything you need to know about a given theory is in the title. Not sure how true that is in sociology in general, but it certainly is true of my own personal sociological theory, the aptly named "Harry Pierson's Numero Uno Theory of Sociology", which states:</p><blockquote><p>Everyone Looks Out For Numero Uno.  </p></blockquote><p>This applies not only to individuals, but also to organizations. When forced to choose between what is "right" (as defined by the organization's core principles) and what will protect the organization's long-term survival, the organization will <strong><em><u>always</u></em></strong> choose to protect itself and sacrifice its core principles.  </p><p>I first came up with this theory several years ago, when the <a href="http://en.wikipedia.org/wiki/Roman_Catholic_Church_sex_abuse_scandal">Catholic priest sex abuse scandal</a> was in full swing. The Catholic Church - like pretty much all religions - has very rigid definitions of what is right in the way of values and morality. Yet when their own priests violated these very principles and acted immorally, the representatives of the church chose to "look out for numero uno" and protect the organization by suppressing the evidence rather than doing what is right by their own definition.  </p><p>Now we're embroiled in a similar scandal, this time in politics. Last week, Congressman Mark Foley (R-Fla) <a href="http://blogs.abcnews.com/theblotter/2006/09/foley_resigns_o.html">resigned</a> when it came to light that he had sent sexually explicit emails and IM's to underage male Congressional pages. While criminal, what makes this a Numero Uno scandal is that Republican leadership <a href="http://www.rollcall.com/issues/1_1/breakingnews/15259-1.html">has known these messages since late last year</a> but decided to "look out for numero uno" and try to cover it up. Even as late as last week, Congressman Tom Reynolds' (R-NY) chief of staff Kirk Fordham tried to <a href="http://americablog.blogspot.com/2006/10/breaking-cong-tom-reynolds-r-ny-chief.html">cut a deal</a> with ABC "<a href="http://www.washingtonpost.com/wp-dyn/content/blog/2006/10/02/BL2006100200213_pf.html">not to publish the raw, sexually explicit messages</a>".  </p><p>The fallout from this scandal has already been massive. Liberals and conservatives alike are appalled by both Foley's predatory behavior and Republican leadership's attempt to sweep it under the rug. While other recent scandals on Capital Hill - such as those involving Jack Abramoff and Duke Cunningham - have been further reaching, Foley's scandal is more likely to be covered at length by the mainstream media. To quote <a href="http://www.washingtonmonthly.com/archives/individual/2006_10/009599.php">Kevin Drum</a>, "It involves sex, it involves coverups, it involves powerful players turning on each other to protect their own skins, and it involves lots of documentary evidence." Like it or not, that's the kind of scandal that gets eyeballs and ratings.  </p><p>The timing couldn't be worse for Republicans, as this comes barely a month before the mid-term elections. Most political analysts give the Democrats a decent chance to take back the majority in one or both houses of Congress, and that was before this scandal broke. We won't know how big an impact the Foley scandal will have until after the mid term elections.  </p><p>However, if Republican leadership had dealt with it last fall or even last spring, the election impact would have been drastically reduced. Of course, it would have gotten wall-to-wall media coverage, but it would have lacked the coverup angle and it wouldn't be taking up so much pre-election airtime now. Foley wouldn't be on the ballot in Florida. And I wonder what this will do to Republican voter turnout across the board, given that a significant percentage of conservative voters are anti-homosexual.  </p><p>But that's the thing about Numero Uno, you're always looking out for it, regardless of the potential consequences down the road.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>809</wp:post_id>
		<wp:post_date>2006-10-03 11:38:39</wp:post_date>
		<wp:post_date_gmt>2006-10-03 11:38:39</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>numero-uno-theory-of-sociology</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="politics"><![CDATA[Politics]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2006/10/03/Numero+Uno+Theory+Of+Sociology]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Numero+Uno+Theory+Of+Sociology]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[feb2c00b-c0e6-49e2-95cb-3b1bc61228d5]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>QOTD from Raganwald 2.0</title>
		<link>http://devhawk.net/2006/10/03/qotd-from-raganwald-2-0/</link>
		<pubDate>Tue, 03 Oct 2006 08:56:10 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://b201eef4-b470-43f6-bb3e-2ac0842f87eb</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Saw these on <a href="http://weblog.raganwald.com/">Reg Braithwaite's</a> while I was reading that <a href="http://weblog.raganwald.com/2006/09/wasabi-cannot-cure-rotten-fish.html">Wasabi cannot cure rotten fish</a>. </p><blockquote><p>"If you want to build a ship, don't drum up people to collect wood and don't assign them tasks and work, but rather teach them to long for the endless immensity of the sea."<br /><a href="http://www.brainyquote.com/quotes/authors/a/antoine_de_saintexupery.html">Antoine de Saint-Exupery</a></p></blockquote><p>And my new personal personal favorite:</p><blockquote><p>"Don't worry about people stealing your ideas. If your ideas are any good, you'll have to ram them down people's throats."<br /><a href="http://en.wikipedia.org/wiki/Howard_Aiken">Howard Aitken</a></p></blockquote><p>I like that quote so much, I updated my email signature to include it.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>810</wp:post_id>
		<wp:post_date>2006-10-03 08:56:10</wp:post_date>
		<wp:post_date_gmt>2006-10-03 08:56:10</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>qotd-from-raganwald-2-0</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2006/10/03/QOTD+From+Raganwald+20]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[QOTD+From+Raganwald+20]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[b201eef4-b470-43f6-bb3e-2ac0842f87eb]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Drop the Puck!</title>
		<link>http://devhawk.net/2006/10/04/drop-the-puck/</link>
		<pubDate>Wed, 04 Oct 2006 18:05:23 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://562d7016-8bb8-4291-b12c-8dd5031f3a39</guid>
		<description></description>
		<content:encoded><![CDATA[<p>The 06-07 NHL season finally starts tonight. This offseason feels longer than most, probably because I've been <a href="http://devhawk.net/2006/07/06/Meeting+Ted+Leonsis.aspx">more involved with hockey</a> this past offseason. But the <a href="http://www.washingtoncaps.com/news/news.asp?story_id=4207">opening night rosters</a> are set and the Sabres and Hurricanes face off in just over five hours. Here are a few quick thoughts:</p><ul><li><a href="http://www.nhl.com/">NHL.com</a> has gotten a make over. I don't know who their designer is, but somewhat should clue them into "less is more". </li><li>There's a new beta service called <a href="http://fans.nhl.com/5A-groups/">NHL Connect</a>. Looks like forums and blogs and profiles right on NHL.com. Looks cool, but currently it's <a href="http://fans.nhl.com/5A-oem/html/account.html">invite only</a>. I would hope it would open up soon. Nice to see Caps fans representing - the <a href="http://fans.nhl.com/nhl_groups/Washington_Capitals_Official_Group/">Washington Capitals Official Group</a> is tied with the <a href="http://fans.nhl.com/nhl_groups/Los_Angeles_Kings_Official_Group/">Kings</a> for most number of members (so far). </li><li>Via <a href="http://www.ericmcerlain.com/offwingopinion/archives/006560.php">Off Wing Opinion</a> I found <a href="http://washtimes.com/sports/20061003-114922-9831r.htm">this article</a> by Dave Fay about the NHL's point system. His recommendation: "winning a game in regulation should be worth three points, winning in overtime should be worth two, winning in a shootout should be worth one. Losing at any time should be what the reward has always been for losing -- zero." I could live with that. I'm also cool with two points for a win and none for a loss, regardless if it goes to overtime or shootout. I'd even be OK (but not elated) with three for a win in regulation, two for a win in overtime or shootout and one for a loss in overtime or shootout. But the idea that you had out more total points for an overtime game than a non overtime game is just stupid. </li></ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>811</wp:post_id>
		<wp:post_date>2006-10-04 11:05:23</wp:post_date>
		<wp:post_date_gmt>2006-10-04 18:05:23</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>drop-the-puck</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="hockey"><![CDATA[Hockey]]></category>
		<category domain="category" nicename="sports"><![CDATA[Sports]]></category>
		<category domain="post_tag" nicename="washington-capitals"><![CDATA[Washington Capitals]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Drop+The+Puck]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[562d7016-8bb8-4291-b12c-8dd5031f3a39]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2006/10/04/Drop+The+Puck]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Possible Comment Issue</title>
		<link>http://devhawk.net/2006/10/04/possible-comment-issue/</link>
		<pubDate>Wed, 04 Oct 2006 09:45:42 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://29079521-ff99-48d7-94ac-c0d8a63275ee</guid>
		<description></description>
		<content:encoded><![CDATA[<p><a href="http://udidahan.weblogs.us/">Udi</a> emailed me over the weekend to let me know that he had issues leaving a comment on one of my posts. If you've had any issues commenting here on DevHawk, please <a href="mailto:harry@devhawk.net">drop me a line</a> and let me know. </p><p>Thanks!</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>812</wp:post_id>
		<wp:post_date>2006-10-04 09:45:42</wp:post_date>
		<wp:post_date_gmt>2006-10-04 09:45:42</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>possible-comment-issue</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="blogging"><![CDATA[Blogging]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2006/10/04/Possible+Comment+Issue]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Possible+Comment+Issue]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[29079521-ff99-48d7-94ac-c0d8a63275ee]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Cool Toy From the Teacher</title>
		<link>http://devhawk.net/2006/10/09/cool-toy-from-the-teacher/</link>
		<pubDate>Mon, 09 Oct 2006 15:31:29 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://63dad24c-4db8-4f80-a612-e6e613ae1b26</guid>
		<description></description>
		<content:encoded><![CDATA[<p>As I <a href="http://devhawk.net/2006/10/09/Hawkeye+On+Standard+WCF+Bindings.aspx">wrote this morning</a>, I'm in training this week. The instructor (who I wrote earlier is "pretty good") is <a href="http://www.masteringbiztalk.com/blogs/jon/">Jon Flanders</a>. I didn't recognize his name, but I did recognize his <a href="http://www.masteringbiztalk.com/atlasworkflowdesigner/">Atlas based WF Designer</a> that he released a month and a half ago or so. It's a cool piece of work so it's doubly cool (for me anyway) that he's teaching this class.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>813</wp:post_id>
		<wp:post_date>2006-10-09 15:31:29</wp:post_date>
		<wp:post_date_gmt>2006-10-09 15:31:29</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>cool-toy-from-the-teacher</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="ajax"><![CDATA[AJAX]]></category>
		<category domain="category" nicename="development"><![CDATA[Development]]></category>
		<category domain="post_tag" nicename="wf"><![CDATA[WF]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Cool+Toy+From+The+Teacher]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[63dad24c-4db8-4f80-a612-e6e613ae1b26]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2006/10/09/Cool+Toy+From+The+Teacher]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Hawkeye on Standard WCF Bindings</title>
		<link>http://devhawk.net/2006/10/09/hawkeye-on-standard-wcf-bindings/</link>
		<pubDate>Mon, 09 Oct 2006 12:55:01 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://80aeee6b-3cf3-4bbe-993d-12d16e858c9c</guid>
		<description></description>
		<content:encoded><![CDATA[<p>I'm in <a href="http://www.quicklearn.com/wf_wcf.htm">WF/WCF training</a> this week, so any daytime blogging will be on breaks and at lunch. So far, the instructor is pretty good, though we've only covered "intro to WCF" so far. Given the amount of content he's laid out, I wonder how were going to get through it all.</p><p>The instructor said something interesting as he was going over the bindings that come "out of the box" with WCF. He commented that these bindings were the ones the WCF developers thought would be used most often. Of course, he doesn't speak for the WCF team, but it does make some kind of sense. You can extend WCF to support any potential binding, but it makes sense the WCF team would want to enable the common cases without having to write much code.</p><p>So take a look at the list of <a href="http://msdn.microsoft.com/library/en-us/dnlong/html/wcfarch.asp">nine standard bindings</a>. Given that WCF is about unifying the windows stack for distributed computing, most of the bindings are at least conceptually similar or in some cases leverage previous distributed paradigms and technologies. You have two HTTP based bindings (<a href="http://blogs.msdn.com/drnick/archive/2006/06/09/623578.aspx">with</a> and <a href="http://blogs.msdn.com/drnick/archive/2006/06/01/612672.aspx">without</a> WS-* extensions) which are analogous to ASMX and WSE. There's a <a href="http://blogs.msdn.com/drnick/archive/2006/06/05/617703.aspx">TCP binding</a> which is comparable to .NET remoting. And there are <a href="http://blogs.msdn.com/drnick/archive/2006/07/17/667988.aspx">two MSMQ bindings</a> (with and without SOAP support) for those needing to interop with existing MSMQ systems or who need <a href="http://friends.newtelligence.net/clemensv/PermaLink,guid,e75402c6-bdd6-438c-9bf2-31f64b8e0557.aspx">durable messaging</a>. </p><p>That leaves four "new" standard bindings. These are interesting as they don't herald back to previous technologies and paradigms of distributed computing (at least on the Windows platform) but still the WCF team thought enough of the scenarios they enable to include them in the box with WCF. For example, I the <a href="http://blogs.msdn.com/drnick/archive/2006/06/23/643814.aspx">wsFederationHttpBinding</a> is designed to take advantage of the significant investment they've made in <a href="http://msdn.microsoft.com/ws-federation/">federated identity</a>. Several years ago, Don Box <a href="http://www.theserverside.net/tt/talks/videos/DonBox/interview.tss?bandwidth=dsl">talked about</a> shrinking the service metaphor rather than stretching the object metaphor across the network. <a href="http://blogs.msdn.com/drnick/archive/2006/06/06/618445.aspx">NetNamedPipesBinding</a> is an obvious implementation of that vision. And <a href="http://blogs.msdn.com/drnick/archive/2006/06/22/642481.aspx">wsDualHttpBinding</a> is a way to take advantage of the WCF's <a href="http://blogs.msdn.com/drnick/archive/2006/03/07/544724.aspx">duplex channel shape</a> while still using HTTP as your transport. </p><p>Finally, there's <a href="http://blogs.msdn.com/drnick/archive/2006/07/18/669486.aspx">netPeerTCPBinding</a>. From where I sit, this is a radical addition to an otherwise standard set of bindings. Now don't get me wrong, I'm glad it's there. But I'm guessing developers who look at it are more likely to think along the lines of "Wow, what can I do with this?" rather than "Yes, I expected that to be there." Certainly, that was my thought process. </p><p>Anyone got any cool uses for netPeerTCPBinding?</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>814</wp:post_id>
		<wp:post_date>2006-10-09 12:55:01</wp:post_date>
		<wp:post_date_gmt>2006-10-09 12:55:01</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>hawkeye-on-standard-wcf-bindings</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="development"><![CDATA[Development]]></category>
		<category domain="post_tag" nicename="wcf"><![CDATA[WCF]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2006/10/09/Hawkeye+On+Standard+WCF+Bindings]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Hawkeye+On+Standard+WCF+Bindings]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[80aeee6b-3cf3-4bbe-993d-12d16e858c9c]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>2414</wp:comment_id>
			<wp:comment_author><![CDATA[Waseem Sadiq]]></wp:comment_author>
			<wp:comment_author_email>waseem@sadiq.nl</wp:comment_author_email>
			<wp:comment_author_url>http://waseem.sadiq.nl/blog/</wp:comment_author_url>
			<wp:comment_author_IP>62.58.171.229</wp:comment_author_IP>
			<wp:comment_date>2006-10-10 01:06:29</wp:comment_date>
			<wp:comment_date_gmt>2006-10-10 08:06:29</wp:comment_date_gmt>
			<wp:comment_content><![CDATA["Anyone got any cool uses for netPeerTCPBinding?"

Most certainly... how about PeerChannel which enables p2p scenario's under WCF. Check it out, very cool stuff.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Logjam Worsens</title>
		<link>http://devhawk.net/2006/10/09/logjam-worsens/</link>
		<pubDate>Mon, 09 Oct 2006 16:19:09 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://5540c1d3-294c-42d5-a264-d801e7cc5e12</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Last week, I wrote about the <a href="http://devhawk.net/2006/10/01/College+Football+Logjam.aspx">college football logjam</a>. While we've seen <a href="http://sports.espn.go.com/ncf/recap?gameId=262800002">one team fall out</a> of the running, the overall race for the #2 slot has tightened significantly. Last week, Auburn and USC held a small yet significant advantage in the voting over West Virginia, Florida and Michigan. This week, that margin is gone. Auburn's loss combined with SC's <a href="http://sports.espn.go.com/ncf/recap?gameId=262800030&amp;confId=9">wholly unimpressive win</a> (spoken as an SC alumni) over the Huskies and Florida's <a href="http://sports.espn.go.com/ncf/recap?gameId=262800057">impressive win</a> over #9 LSU creates essentially a four way tie for second place. Only 100 votes separate #2 from #5 in both the <a href="http://sports.espn.go.com/ncf/rankingsindex?pollId=null&amp;weekNumber=7&amp;seasonYear=2006">AP and USA Today polls</a>. </p><p>There are also a few other undefeated teams in the top 25: #7 Louisville, #19 Missouri, #20 Boise State and #24 Rutgers. Baring significant upheaval in the polls, only Louisville really has a shot to join the group at the top. They play West Virginia in a few weeks, so the winner of that game will likely stay in the hunt for the BCS title game. And Ohio State still plays Michigan at the end of the season, so we're still looking at a maximum of four unbeaten teams. </p><p>As bad as this scenario is, it's even worse to consider what happens if <em>all</em> these unbeaten teams lose. Currently, Texas, Tennessee, Notre Dame, California, and Auburn are all essentially out of the hunt. As long as there are at least two unbeaten teams, really none of these teams can legitimately argue that they deserve a shot at the title. But you can bet that ranked one-loss teams will be highly-motivated to beat ranked no-loss teams in order to be able to make a case for inclusion in the title game. USC plays #18 Oregon State, #10 Cal and #9 Notre Dame. Florida plays at Auburn and Georgia. Michigan plays Iowa (not to mention #1 ranked Ohio State). </p><p>If I was a betting man, instead of an Trojan fan, I would bet the BCS title game would be between West Virginia and the winner of the Ohio State / Michigan game. Obviously, if SC plays Notre Dame the way they played against Washington, they'll lose. But SC will be amped to the max for Notre Dame, so I would be more concerned about SC looking past Oregon State or Cal the way they obviously didn't take Washington seriously. By the same reasoning, I figure Auburn has a better-than-decent chance of beating Florida next week. If SC and Florida lose, that leaves three unbeaten teams, two of which play each other. Hence my prediction. </p><p>Of course, I'm not a betting man, so I'm hoping to see the winner of Ohio State and Michigan play USC for the championship. Note I wrote "hoping" which is code for "that's only going to happen if they play better than they did the past two weeks". </p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>815</wp:post_id>
		<wp:post_date>2006-10-09 16:19:09</wp:post_date>
		<wp:post_date_gmt>2006-10-09 16:19:09</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>logjam-worsens</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="college-football"><![CDATA[College Football]]></category>
		<category domain="category" nicename="sports"><![CDATA[Sports]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[5540c1d3-294c-42d5-a264-d801e7cc5e12]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2006/10/09/Logjam+Worsens]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Logjam+Worsens]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Things I Didn&#039;t Realize About WF</title>
		<link>http://devhawk.net/2006/10/09/things-i-didnt-realize-about-wf/</link>
		<pubDate>Mon, 09 Oct 2006 14:45:43 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://508d922f-08c3-415d-b635-ae66f2daf13b</guid>
		<description></description>
		<content:encoded><![CDATA[<p>1. You can customize how you load workflows. My favorite part of <a href="http://www.microsoft.com/MSPress/books/6895.asp">Customizing the Microsoft® .NET Framework Common Language Runtime</a> is custom loading assemblies from a <a href="http://msdn.microsoft.com/library/en-us/stg/stg/structured_storage_start_page.asp">structured storage</a> file. In WF, you can load workflows by <a href="http://windowssdk.msdn.microsoft.com/en-gb/library/ms594868.aspx">type</a> or <a href="http://windowssdk.msdn.microsoft.com/en-gb/library/ms594869.aspx">from XAML</a>. Of course, these the XAML - or even the types - can be loaded from anywhere, or even generated on the fly. If you need more control, you can swap out the <a href="http://windowssdk.msdn.microsoft.com/en-gb/library/system.workflow.runtime.hosting.workflowloaderservice.aspx">default workflow loader service</a> with one of your own creation.</p><p>2. You can swap out the <a href="http://windowssdk.msdn.microsoft.com/en-us/library/ms735790.aspx">default workflow scheduler</a>. How about a scheduler based on the <a href="http://channel9.msdn.com/wiki/default.aspx/Channel9.ConcurrencyRuntime">Concurrency and Coordination Runtime (CCR)</a>?</p><blockquote><p>Side note - How about a official home page for CCR? And while I'm asking, how about a download for CCR separate from <a href="http://msdn.microsoft.com/robotics/">MS Robotics Studio</a>?</p></blockquote><p>3. You can add any object to the workflow runtime as a service. You're not limited <a href="http://windowssdk.msdn.microsoft.com/en-us/library/ms734738.aspx">the services the WF runtime knows</a> about. Of course, WF won't use your service, but you can build activities that use it. This is likely to be huge for getting data in and out of the workflow instance.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>816</wp:post_id>
		<wp:post_date>2006-10-09 14:45:43</wp:post_date>
		<wp:post_date_gmt>2006-10-09 14:45:43</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>things-i-didnt-realize-about-wf</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="development"><![CDATA[Development]]></category>
		<category domain="post_tag" nicename="wf"><![CDATA[WF]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2006/10/09/Things+I+Didnt+Realize+About+WF]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Things+I+Didnt+Realize+About+WF]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[508d922f-08c3-415d-b635-ae66f2daf13b]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>2415</wp:comment_id>
			<wp:comment_author><![CDATA[jurgen pieters]]></wp:comment_author>
			<wp:comment_author_email>jurgenp3@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>213.246.235.226</wp:comment_author_IP>
			<wp:comment_date>2006-11-14 07:44:27</wp:comment_date>
			<wp:comment_date_gmt>2006-11-14 15:44:27</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[testtest]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>More Stuff I Didn&#039;t Know About WF</title>
		<link>http://devhawk.net/2006/10/11/more-stuff-i-didnt-know-about-wf/</link>
		<pubDate>Wed, 11 Oct 2006 13:52:35 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://c69099e7-e12f-492b-be38-d8a4e6f42cd7</guid>
		<description></description>
		<content:encoded><![CDATA[<p>4. All communication from the host to the workflows goes thru the <a href="http://windowssdk.msdn.microsoft.com/en-us/library/system.workflow.runtime.workflowqueuingservice.aspx">WorkflowQueuingService</a>. Unlike other WF services, the queuing service <em>is not</em> replaceable. Communication from a workflow activity instance to the host goes thru some other service. There is no "default" activity -&gt; host communication service, though WF ships with the <a href="http://windowssdk.msdn.microsoft.com/en-us/library/system.workflow.activities.externaldataexchangeservice.aspx">ExternalDataExchangeService</a>. You have to manually add the ExternalDataExchangeService to your workflow runtime instance. WF also includes the <a href="http://windowssdk.msdn.microsoft.com/en-us/library/ms734408.aspx">wca.exe</a> utility which generates strongly typed <a href="http://windowssdk.msdn.microsoft.com/en-us/library/ms734592.aspx">HandleExternalEvent</a> and <a href="http://windowssdk.msdn.microsoft.com/en-us/library/ms734739.aspx">CallExternalMethod</a> activities for your workflow. And according to <a href="http://www.masteringbiztalk.com/blogs/jon">Jon</a>, the <a href="http://windowssdk.msdn.microsoft.com/en-us/library/ms735872.aspx">External Data Exchange system</a> was added specifically for SharePoint. </p><p>5. The built-in sequential and state machine workflows are customizable. So if you wanted to have a custom designer or validation experience for an otherwise standard sequential or state machine workflow, you can inherit from the standard workflow type and add the custom validation and / or designer support. For example, as I <a href="http://devhawk.net/2006/10/09/Things+I+Didnt+Realize+About+WF.aspx">wrote earlier</a>, you can load a workflow from XAML. XAML workflows can't support the Code Activity. So if you wanted to use the standard sequence designer but disallow the use of the Code Activity, you wouldn't have to rewrite the sequence activity from scratch.</p><p>6. You can execute workflows across a farm, similar to how you build a web farm. Workflows that get persisted to the persistence service can be loaded on any node in the farm. Of course, like web servers in a farm, you'd have to have the same bits installed on all the machines in the workflow farm. Sounds like an opportunity for something like <a href="http://www.microsoft.com/applicationcenter/default.mspx">Application Center</a> for WF.</p><p>7. The built in <a href="http://windowssdk.msdn.microsoft.com/en-us/library/system.workflow.runtime.hosting.sqlworkflowpersistenceservice.aspx">SQL Persistence Service</a> is a toy. When you start your workflow engine, the SQL Persistence Service will auto-load all the existing persisted workflows into memory, as an "optimization". So if you have thousands of order workflows persisted in your database and you decide to bring another workflow processing node online, that new workflow processing node will happily load <em>ALL</em> of the outstanding orders that it can find in the database. This service should have been included as a sample like the <a href="http://windowssdk.msdn.microsoft.com/en-us/library/ms741725.aspx">file based persistence service sample</a> rather than <a href="http://windowssdk.msdn.microsoft.com/en-us/library/system.workflow.runtime.hosting.sqlworkflowpersistenceservice.aspx">described</a> as "a fully functional persistence service" in the docs.</p><p>8. WF Web Service integration is also a toy. WF leverages basic ASMX for all it's web service integration, so your only choice for web services - <a href="http://windowssdk.msdn.microsoft.com/en-us/library/ms735862.aspx">consuming</a> or <a href="http://windowssdk.msdn.microsoft.com/en-us/library/ms733602.aspx">exposing</a> - is atomic request/response style services. You can have a workflow with multiple operations, but the default ASMX hosting infrastructure squirrels the WF Instance ID in the ASP.NET session, which will time out in twenty minutes (by default). Furthermore, the built in ASMX workflow host doesn't provide an option to specify the web service namespace, so it ends up with the default http://tempuri.org namespace. Again, like the SQL Persistence, this should have been included as a sample, not included in the standard activities.</p><p>9. Activities can <a href="http://windowssdk.msdn.microsoft.com/en-us/library/ms734652.aspx">generate code</a>. In the previous item, I mentioned there's basic ASMX hosting integration for a workflows. Turns out the WebService Activities generate that hosting code as part of the workflow compilation process. So in other words, if you add a WebService activity to your workflow, the activity will inject the custom ASMX hosting code into your compiled workflow. In this WebService activity case, the injected code isn't very good, but the fact you can do this at all is <em>very </em>cool.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>817</wp:post_id>
		<wp:post_date>2006-10-11 13:52:35</wp:post_date>
		<wp:post_date_gmt>2006-10-11 13:52:35</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>more-stuff-i-didnt-know-about-wf</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="development"><![CDATA[Development]]></category>
		<category domain="post_tag" nicename="wf"><![CDATA[WF]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2006/10/11/More+Stuff+I+Didnt+Know+About+WF]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[More+Stuff+I+Didnt+Know+About+WF]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[c69099e7-e12f-492b-be38-d8a4e6f42cd7]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>2416</wp:comment_id>
			<wp:comment_author><![CDATA[Erik Johnson]]></wp:comment_author>
			<wp:comment_author_email>ejohnson@epicor.com</wp:comment_author_email>
			<wp:comment_author_url>http://appside.blogspot.com</wp:comment_author_url>
			<wp:comment_author_IP>70.181.202.20</wp:comment_author_IP>
			<wp:comment_date>2006-10-12 11:24:59</wp:comment_date>
			<wp:comment_date_gmt>2006-10-12 18:24:59</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Transactions are also a toy.  You can't call other flows within a transaction nor can you federate multiple workflow instances within a transaction.  This is understandable because a transaction context is a box threads enter and leave.  You can't -- by default at least -- know what thread(s) will execute your flow and there is no plumbing built into the WF engine to guide threads in or out of Tx contexts.

But you can implement a Manual Workflow Scheduler (I think), which bypasses the WorkflowQueuingService you mention.  But I haven't tried passing a transaction context in this way.  BTW, you can't even use a transaction (or a sleep activity) without attaching a WorkflowPersistenceService because these activities can invoke a dehydration cycle.  The SQLPersistenceService is, I think, a level up from being just a toy.  The SQLTrackingService was well, thought-out, IMO.  But because I was trying to use WF inside a more synchronous scenario, I ended up creating an oxymoronically named "MemoryPersistenceService" so I could use these activities without all the baggage.

I REALLY wished WF was more adept with XML data and XML Schema -- especially WRT the rules engine.  Also, I'm really disappointed that XAML isn't documented (well) and there isn't a schema for XAML.  I'm told on the newsgroups that there is no way to define a normative schema for XAML because you don't know the properties for the contained objects.  Fair enough, but a simple wildcard would work, right?

In fact the whole XAML angle looks like it got put on the back burner, which is a shame.  How cool is it to be able to whip a workflow up using an XMLWriter and then run it? You can do it, but you have to reverse-engineer the format.

Despite these nits, I'm a big fan of WF.  I like the engine design and it's fast (1ms overhead to execute a 10-step no-op sequental workflow.  ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>2417</wp:comment_id>
			<wp:comment_author><![CDATA[Jon Flanders]]></wp:comment_author>
			<wp:comment_author_email>jon.flanders@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.masteringbiztalk.com/</wp:comment_author_url>
			<wp:comment_author_IP>72.165.51.170</wp:comment_author_IP>
			<wp:comment_date>2006-10-13 17:52:05</wp:comment_date>
			<wp:comment_date_gmt>2006-10-14 00:52:05</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Erik - the scheduler service override has absolutely nothing to do with the QueueingService.  The WorkflowQueueingService is one service you can't replace (well you might be able to replace it - but it will be a no-op since there aren't any virual methods to override).]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>2418</wp:comment_id>
			<wp:comment_author><![CDATA[DevHawk]]></wp:comment_author>
			<wp:comment_author_email>harry@devhawk.net</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>24.16.94.200</wp:comment_author_IP>
			<wp:comment_date>2006-10-13 22:59:31</wp:comment_date>
			<wp:comment_date_gmt>2006-10-14 05:59:31</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I'm not sure I would call WF's transactions a toy. It certainly could be better - the stuff I'm working on right now I'd like to flow the Tx from outside the workflow (i.e. in a WF Service) into the Workflow, but I don't think there's any way to do that. 

Then again, on the other hand, transactions are really hard and easy to screw up. So maybe having specific boundaries to what you can and can't do in a workflow is a good thing?

A MemoryPersistenceService? That's funny...]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>WF Clarifications and Corrections</title>
		<link>http://devhawk.net/2006/10/17/wf-clarifications-and-corrections/</link>
		<pubDate>Tue, 17 Oct 2006 00:08:48 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://6e2a5b96-56eb-43ef-9bb8-cd5bb0aa57e3</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Last week, after I <a href="http://devhawk.net/2006/10/11/More+Stuff+I+Didnt+Know+About+WF.aspx">posting my WF learnings</a>, I got a call from <a href="http://blogs.msdn.com/pandrew/archive/2006/10/16/Ten-Reasons-why-WF-is-not-a-Toy.aspx">Paul Andrew</a>, Technical Product Manager for WF. Seems calling the built-in persistence service and the built-in web service support "toys" created some extra work for Paul. He <a href="http://blogs.msdn.com/pandrew/archive/2006/10/16/Ten-Reasons-why-WF-is-not-a-Toy.aspx">blogged a response</a> and I wanted to follow up on a few things here.</p><p>1. The "toy" SQL Persistence Service - My understanding about how the built-in persistence service works was incorrect. As per Paul's blog, "The WF runtime doesn't load all idle instances on startup, that would be crazy." Of course, we're talking about the SQL Persistence Service, not the WF runtime, but it's still crazy. It's so crazy that when I thought that's what the SQL Persistence Service did, I called it a toy! So I'm flat out wrong on this one. Sorry about that Paul (and the rest of the WF team).</p><p>2. The "toy" Web Service Integration - Apparently, I was also mistaken about the use of ASP.NET sessions. But I was right about WF's use of ASMX, the use of the tempuri.org namespace, and that web service support is limited to WS-I basic profile request/response style services. So while "toy" is a bit harsh, the web service integration is still pretty light weight. Where's the WCF integration? I understand the need to support ASMX, but no WCF means no support for duplex conversations, either as service provider or consumer, and no support for reliable sessions. That makes WF's web service integration a non-starter in my project. Of course, the good news is that you can build your own WF activities, so I can toss the built-in web  service activites and still get to keep the rest of WF.</p><p>3. Is WF itself a "toy"? Paul has a list of reasons why WF isn't a toy, including some silly ones (it wasn't in <a href="http://www.imdb.com/title/tt0114709/">Toy Story</a>). In case there's any confusion about my opinon of WF, let me be clear: I think WF rocks, full stop. My negative comments about WF were isolated to the two areas listed above and not intended to apply to WF as a whole. The other seven points were all about cool things that I didn't realize WF does.</p><p>I'm not just trying to kiss up to Paul here - WF is one of two foundation technologies that my project absolutely depends on. (Any guesses on the other?) With the class out of the way and a better understaning as to what's possible with WF, I will be diving much deeper on WF in the future. Watch this space for more WF related posts.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>818</wp:post_id>
		<wp:post_date>2006-10-17 00:08:48</wp:post_date>
		<wp:post_date_gmt>2006-10-17 00:08:48</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>wf-clarifications-and-corrections</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="blogging"><![CDATA[Blogging]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<category domain="post_tag" nicename="wf"><![CDATA[WF]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[6e2a5b96-56eb-43ef-9bb8-cd5bb0aa57e3]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2006/10/17/WF+Clarifications+And+Corrections]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[WF+Clarifications+And+Corrections]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>2419</wp:comment_id>
			<wp:comment_author><![CDATA[Jon Flanders]]></wp:comment_author>
			<wp:comment_author_email>jon.flanders@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.masteringbiztalk.com/</wp:comment_author_url>
			<wp:comment_author_IP>66.214.152.143</wp:comment_author_IP>
			<wp:comment_date>2006-10-17 10:54:08</wp:comment_date>
			<wp:comment_date_gmt>2006-10-17 17:54:08</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Check out my post Harry - http://www.masteringbiztalk.com/blogs/jon/PermaLink,guid,5cc60ee3-38ce-4fcd-94d7-a8ca9b3b8d5d.aspx  which clarifies things a little bit.  Even though the WF/ASMX integration doesn't use asp.net "sessions" (i am fairly certain earlier betas did) it uses a "session" cookie - which means if the client goes away - so does the cookie.  

The OOB persistence service does load all "running" workflows - just not idled workflows.  I assume I mispoke when I mentioned that feature.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>WorkflowQueueNames</title>
		<link>http://devhawk.net/2006/10/17/workflowqueuenames/</link>
		<pubDate>Tue, 17 Oct 2006 13:54:30 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://76d427b9-df3a-419e-8240-10b5a0113921</guid>
		<description></description>
		<content:encoded><![CDATA[<p>As I wrote in my <a href="http://devhawk.net/2006/10/17/WF+Clarifications+And+Corrections.aspx">last post</a>, I'm doing a bunch of WF related work. I'm close to releasing some WF related stuff I started building last week in <a href="http://www.masteringbiztalk.com/blogs/jon/default.aspx">Jon's</a> class. But I discovered something cool about the way WF's queuing system works, and wanted to blog about it. </p><blockquote><p>Side note - Speaking of Jon, he's <a href="http://www.masteringbiztalk.com/blogs/jon/PermaLink,guid,5cc60ee3-38ce-4fcd-94d7-a8ca9b3b8d5d.aspx">joined</a> the "WF is not a toy" conversation. He had an interesting point about the persistence service that I hadn't thought of. If you use the SQL persistence service and you have TransactionScope in your workflow, you end up with a distributed transaction, even if these are all writing against the same SQL instance. That's a good enough reason to write your own persistence service right there. </p></blockquote><p>In the WF stuff I'm building, I need a way for the WF runtime to notify a given workflow instance when something happens. WF has a low level <a href="http://windowssdk.msdn.microsoft.com/en-us/library/system.workflow.runtime.workflowqueuingservice(VS.80).aspx">queuing system</a> as well as the higher abstraction <a href="http://windowssdk.msdn.microsoft.com/en-us/library/ms735872(VS.80).aspx">data exchange system</a>. I'm more interested in low level knowledge of WF, so I decided to use the queuing system. </p><p>In my implementation, the workflow instances only need to be notified when specific events happen. That is, I'm not passing in any real data on the queue - the arrival of the data is what's important, not the data itself. Queues are identified by name and I started by using a simple string as my queue name. However, the queue name isn't limited to be a string, it supports any <a href="http://msdn2.microsoft.com/en-us/library/system.icomparable.aspx">IComparable</a> class. This turned out to be a huge advantage for me. </p><p>Things worked fine when I was building a simple sequence, but when I moved to a parallel activity things went south. Since I was using a simple string, I ended up creating two queues with the same name, which didn't work out well. Furthermore, I have two different notification situations. So I needed a way to have a unique queue name for the same activity type in parallel branches of the workflow as well as supporting two different notification situations. </p><p>Because queue name is IComparable instead of a string, I was able to create two queue name types - one for each notification situation. Each of these queue name types includes a string that I initialize to the activity's <a href="http://windowssdk.msdn.microsoft.com/en-us/library/system.workflow.componentmodel.activity.qualifiedname(VS.80).aspx">qualified name</a>, which as per the docs is "always unique in a workflow instance". So I was able to kill two birds with one stone - supporting multiple parallel activities as well as multiple notification scenarios. That's pretty cool. If they had used simple strings, I would have had to have a naming system like "notificationscenario:notificationdata:activityname" and then have to parse out the queue name string. In fact, I started down this path before I remembered that queue name is IComparable. Using IComparable is <em>much much </em>cleaner.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>819</wp:post_id>
		<wp:post_date>2006-10-17 13:54:30</wp:post_date>
		<wp:post_date_gmt>2006-10-17 13:54:30</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>workflowqueuenames</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2006/10/17/WorkflowQueueNames]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[WorkflowQueueNames]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[76d427b9-df3a-419e-8240-10b5a0113921]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>2420</wp:comment_id>
			<wp:comment_author><![CDATA[Tomas Restrepo]]></wp:comment_author>
			<wp:comment_author_email>tomas@winterdom.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.winterdom.com/weblog/</wp:comment_author_url>
			<wp:comment_author_IP>200.116.233.108</wp:comment_author_IP>
			<wp:comment_date>2006-10-17 15:36:59</wp:comment_date>
			<wp:comment_date_gmt>2006-10-17 22:36:59</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Yep, the queueing system is actually pretty nifty once you get the hang of it, and you can certainly pass data through the queues if you need to, as it will be serialized alongside the workflow instance if needed.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>QOTD - Rick Barnes</title>
		<link>http://devhawk.net/2006/10/22/qotd-rick-barnes/</link>
		<pubDate>Sun, 22 Oct 2006 17:31:15 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://ea256946-cbe1-4936-8b7e-cc59d59d92d4</guid>
		<description></description>
		<content:encoded><![CDATA[<p>As usual, I'm behind on blogging. This quote is actually from last <a href="http://devhawk.net/default,date,2006-10-17.aspx">Tuesday</a>. </p><blockquote><p>"Sunshine is a terrific bleach"<br />                                -<a href="http://rickbarn.spaces.live.com/">Rick Barnes</a></p></blockquote><p>Rick, by the way, is my manager.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>820</wp:post_id>
		<wp:post_date>2006-10-22 17:31:15</wp:post_date>
		<wp:post_date_gmt>2006-10-22 17:31:15</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>qotd-rick-barnes</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="quote-of-the-day"><![CDATA[Quote of the Day]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2006/10/23/QOTD+Rick+Barnes]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[QOTD+Rick+Barnes]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[ea256946-cbe1-4936-8b7e-cc59d59d92d4]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>2421</wp:comment_id>
			<wp:comment_author><![CDATA[payday loan]]></wp:comment_author>
			<wp:comment_author_email>top@mail.net</wp:comment_author_email>
			<wp:comment_author_url>http://www.payday-loan-tonight.com</wp:comment_author_url>
			<wp:comment_author_IP>82.207.57.133</wp:comment_author_IP>
			<wp:comment_date>2006-12-20 03:12:41</wp:comment_date>
			<wp:comment_date_gmt>2006-12-20 11:12:41</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hello this is news online interesning blog about all tems.Thank you!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>The Other Foundation Technology</title>
		<link>http://devhawk.net/2006/10/23/the-other-foundation-technology/</link>
		<pubDate>Mon, 23 Oct 2006 11:29:23 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://52cd2590-51c0-4dfb-8049-d6e9dd88d214</guid>
		<description></description>
		<content:encoded><![CDATA[<p>I mentioned last week that WF "is one of two foundation technologies that my project absolutely depends on". <a href="http://codebetter.com/blogs/sam.gentile/archive/2006/10/17/New-and-Notable-115.aspx">Sam Gentile assumes</a> the other foundation technology is WCF. It's not.</p><p>As a quick reminder, my <a href="http://devhawk.net/2006/06/15/Moving+On.aspx">day job</a> these days is to architect and deliver shared service-oriented infrastructure for Microsoft's IT division. These services will be automating long running business operations. And when I say long running, I mean days, weeks or longer. While there will surely be some atomic or stateless services, I expect most of the services we build will be long running. Thus, the infrastructure I'm responsible for has to enable and support long running services.</p><p>The other foundation technology my project depends on is <a href="http://msdn2.microsoft.com/en-us/library/ms166043.aspx">Service Broker</a>. Service Broker was expressly designed for building these types of long running services. It supports several capabilities that I consider absolutely critical for long running services:</p><ul><li>Service Initiated Interaction<img height="1" alt="Use SHIFT+ENTER to open the menu (new window)." src="http://team/_layouts/images/blank.gif" width="1" border="0" />. Polling for changes is inefficient. Long running operations need support for the <a href="http://www.w3.org/TR/2001/NOTE-wsdl-20010315#_solicit-response">Solicit-Response</a> and/or <a href="http://www.w3.org/TR/2001/NOTE-wsdl-20010315#_notification">Notification</a> message exchange patterns. 
</li><li>Durable Messaging. The first <a href="http://en.wikipedia.org/wiki/Fallacies_of_Distributed_Computing">fallacy of distributed computing</a> is that the network is reliable. If you need to be 100% sure the message gets delivered, you have to write it to disk on both sides. 
</li><li>Service Instance Dehydration. It's both dangerous and inefficient to keep an instance of a long running service in memory when it's idle. In order to maximize integrity (i.e. service instances survive a system crash) as well as resource utilization (i.e. we're not wasting memory/CPU/etc on idle service instances), service instances must be dehydrated to disk. </li></ul><p>In addition to these capabilities, Service Broker supports something called <a href="http://msdn2.microsoft.com/en-us/library/ms171615.aspx">Conversation Group Locking</a>, which turns out to be important when building highly scalable long running services. Furthermore, my understanding is that Conversation Group Locking is a feature unique to Service Broker, not only across Microsoft's products but across the industry. Basically, it means that inbound messages for a specific long running service instance are locked so they can't be processed on more than one thread at a time. </p><p>Here's an example: let's say I'm processing a Cancel Order message for a specific order when the Ready to Ship message arrives for that order arrives. With Conversation Group Locking, the Ready to Ship message stays locked in the queue until the Cancel Order message transaction is complete, regardless of the number of service threads there are. Without Conversation Group Locking, the Ready to Ship message might get processed by another service thread at the same time the Cancel Order message is being processed. The customer might get notified that the cancellation succeeded while the shipping service gets notified to ship the product. Oops.</p><p>There's also an almost-natural fit between Service Broker and Windows Workflow. For example, a Service Broker Conversation Group and a WorkflowInstance are roughly analogous. They even both use a Guid for identification, making mapping between Conversation Group and WF Instance simple and direct. I was able to get prototype Service Broker / WF integration up and running in about a day. I'll post more on that integration later this week.</p><p>Last but not least, Service Broker is wicked fast. Unfortunately, I don't have any public benchmarks to point to, but the Service Broker team told me about a private customer benchmark that handled almost 9,000 messages per second! One of the reasons Service Broker is so fast is because it's integrated into SQL Server 2005, which is is pretty fast in it's own right. Since Service Broker is baked right in, you can do all your messaging work and your data manipulation within the scope of a local transaction. </p><p>Service Broker has a few rough areas and it lacks a supported managed api (though there is a <a href="http://msdn2.microsoft.com/en-us/library/ms160848.aspx">sample managed api</a> available). Probably the biggest issue is that Service Broker has almost no interop story. If you need to interop with a Service Broker service, you can use SQL Server's <a href="http://msdn2.microsoft.com/en-us/library/ms191274.aspx">native Web Service support</a>. or the <a href="http://adapterworx.com/cs/products/servicebroker.aspx">BizTalk adapter for Service Broker</a> from <a href="http://adapterworx.com/">AdapterWORX</a>. However, I'm not sure how many of Service Broker's native capabilities are exposed if you use these interop mechanisms. You would probably have to write a bunch of application code to make these capabilities work in an interop scenario.</p><p>Still, I feel Service Broker's unique set of capabilities, its natural fit with WF and its high performance make it the best choice for building my project's long running services. Is it the best choice for your project? I have no idea. One of the benefits of working for MSIT is that I get to focus on solving a specific problem and not on solving general problems. I would say that if you're doing exclusively atomic or stateless services, Service Broker is probably overkill. If you're doing any long running services at all, I would at least give Service Broker a serious look.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>821</wp:post_id>
		<wp:post_date>2006-10-23 11:29:23</wp:post_date>
		<wp:post_date_gmt>2006-10-23 11:29:23</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>the-other-foundation-technology</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="architecture"><![CDATA[Architecture]]></category>
		<category domain="post_tag" nicename="microsoft"><![CDATA[Microsoft]]></category>
		<category domain="post_tag" nicename="service-broker"><![CDATA[Service Broker]]></category>
		<category domain="post_tag" nicename="soa"><![CDATA[SOA]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[The+Other+Foundation+Technology]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[52cd2590-51c0-4dfb-8049-d6e9dd88d214]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2006/10/23/The+Other+Foundation+Technology]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>FeedFlare Finally Fixed</title>
		<link>http://devhawk.net/2006/10/25/feedflare-finally-fixed/</link>
		<pubDate>Wed, 25 Oct 2006 13:55:00 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://795e7f30-8a19-4012-be45-8380e07eecc2</guid>
		<description></description>
		<content:encoded><![CDATA[<p>I moved over to <a href="http://www.feedburner.com/">FeedBurner</a> a while back. <a href="http://dasblog.info/">DasBlog</a> has great support for FeedBurner - all you do set your FeedBurner feed name in the DasBlog config and it handles the rest, including permanently redirecting your readers to the new feed.</p><p>However, I haven't been able to make FeedFlares work today. FeedFlares "build interactivity into each post" with little links like "Digg this", "Email this" or "Add to del.icio.us". Since FeedBurner is serving the XML feed, it's no big deal for them to add those links into the RSS feed. But to get those same flares to work on the web site, you have to embed a little script at the end of each item. Scott <a href="http://www.hanselman.com/blog/AddingFeedBurnerFeedFlareToDasBlog.aspx">shows how to do this</a> with DasBlog, except that it didn't work for me. I've tried off and on, but for some reason, the FeedBurner script file I was including was always empty. </p><p>Then I noticed the other day that my post <a title="WorkflowQueueNames" href="http://devhawk.net/2006/10/17/WorkflowQueueNames.aspx">WorkflowQueueNames</a> had the flare's on them. Hmm, why would that post work and none of the rest of mine work? Turns out that it works because there's no spaces in the title. Unlike most of the rest of the DasBlog community, I'm using '+' for spaces in my permalinks, instead of removing them. So I get <a href="http://devhawk.net/FeedFlare+Finally+Fixed.aspx">http://devhawk.net/FeedFlare+Finally+Fixed.aspx</a> as the permalink url instead of <a href="http://devhawk.net/FeedFlareFinallyFixed.aspx">http://devhawk.net/FeedFlareFinallyFixed.aspx</a>. In fact, that feature is in DasBlog because I pushed for it (a fact <a href="http://www.computerzen.com">Scott</a> reminded me of while I was troubleshooting this last night). And it was breaking the FeedFlares.</p><p>The solution is to URL encode the '+', which is %2B, in the FeedFlare script link. I created a custom macro, since I already had a <a href="http://devhawk.net/2006/02/11/New+Devhawk+Design.aspx">few custom macro's</a> powering this site anyway, and now I get the FeedFlares on all my blog entries. I'll also go update the DasBlog source, but creating a custom macro was both easier and less risky than patching the tree and upgrading everything. </p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>822</wp:post_id>
		<wp:post_date>2006-10-25 13:55:00</wp:post_date>
		<wp:post_date_gmt>2006-10-25 13:55:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>feedflare-finally-fixed</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="blogging"><![CDATA[Blogging]]></category>
		<category domain="post_tag" nicename="dasblog"><![CDATA[dasBlog]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2006/10/25/FeedFlare+Finally+Fixed]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[FeedFlare+Finally+Fixed]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[795e7f30-8a19-4012-be45-8380e07eecc2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Custom Authentication with WCF is Top Shelf</title>
		<link>http://devhawk.net/2006/10/27/custom-authentication-with-wcf-is-top-shelf/</link>
		<pubDate>Fri, 27 Oct 2006 14:20:30 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://a0566855-4b27-46cb-b90b-99155d7a5d35</guid>
		<description></description>
		<content:encoded><![CDATA[<p>I've spent the last three days heads down in WCF security and color me massively impressed. I just checked in a prototype that provides customized authentication for a business service. The idea that you could bang up a custom authentication service fairly easily blows my mind.</p><p>The cornerstone to this support in WCF is the standard <a href="http://windowssdk.msdn.microsoft.com/en-us/library/system.servicemodel.wsfederationhttpbinding.aspx">WSFederationHttpBinding</a>. While the binding name implies support for <a href="http://msdn.microsoft.com/library/en-us/dnglobspec/html/ws-federation.asp">WS-Federation</a> which in turn implies the use of infrastructure like <a href="http://www.microsoft.com/WindowsServer2003/R2/Identity_Management/ADFSwhitepaper.mspx">Active Directory Federation Services</a>, the binding also scales down to support simple federation scenarios with a single Security Token Service (aka STS) as defined by <a href="http://msdn.microsoft.com/library/en-us/dnglobspec/html/WS-trust.pdf">WS-Trust</a>. WS-Trust appears similar to <a href="http://web.mit.edu/kerberos/">Kerberos</a>. If you want to access a service using the federation binding, you first obtain a security token from the associated STS. Tokens contain <a href="http://en.wikipedia.org/wiki/SAML">SAML</a> assertions, which can be standard - such as Name and Windows SID - or entirely custom, which opens up very interesting and flexible security scenarios. 
</p><p>If you want to support multiple authentication systems (windows, certificates, <a href="http://cardspace.netfx3.com/">CardSpace</a>, <strike>Passport</strike><a href="http://dev.live.com/liveid/">Windows Live ID</a>, etc), STS is perfect because you can centralize the multiple authentication schemes at the STS, which then hands out a standard token the business service understands. Adding a new auth scheme can happen centrally at the STS rather than in each and every service. Support for multiple authentication schemes was the focus of our current prototype and it worked extremely well. 
</p><p>WCF includes a <a href="http://windowssdk.msdn.microsoft.com/en-us/library/aa355045.aspx">federation sample</a> which is where you should start if you're interested in this stuff. That scenario includes a chain of two STS's. Accessing the secure bookstore service requires authenticating against the bookstore STS which in turn requires authenticating against a generic "HomeRealm" STS. Since there are two STS's, they factored the common STS code into a shared assembly. You can use that common code to build an STS of your own. 
</p><p>For our prototype, we made only minor changes to the common STS code from the sample. In fact, the only significant change we made was to support programmatic selection of the proof key encryption token. In the sample, both the issuer token and the proof key encryption token are hard coded (passed into the base class constructor). The issuer token is used to sign the custom security token so the target service knows it came from the STS. The encryption token is used to - you guessed it - encrypt the token so it can only be used by the target service. Hard-coding the encryption token means you can only use your STS with a single target service. We changed that so the encryption token can be chosen based on the incoming service token request. 
</p><p>Of course, it wasn't all puppy dogs and ice cream. While I like the config system of WCF, anyone who calls it "easy" is full of it. I've spend most of the last three days looking at config files. Funny thing about config files is that they're hard to debug. So most of my effort over the last few days has been in a cycle of run app / app throws exception / tweak config / repeat. Ugh. 
</p><p>Also, while the federation sample is comprehensive, I wonder why this functionality isn't in the based WCF platform. For example, the sample includes implementations of RequestSecurityToken and RequestSecurityTokenResponse, the input and output messages of the STS. But I realized that WCF has to have its own implementations of RST and RSTR as well, since it has to send the RST to the STS and process the RSTR it gets in response. A little <a href="http://www.aisto.com/roeder/dotnet/">spelunking</a> revealed the presence of an official WCF implementation of RST and RSTR, both marked internal. I normally fall on the pragmatic side of the <a href="http://www.hanselman.com/blog/IsThereAGoodReasonToMarkAClassPublic.aspx">internal/public debate</a>, but this one makes little sense to me. 
</p><p>Otherwise, the prototype went smooth as silk and my project teammates were very impressed at how quickly this came together. Several of the project teams we're working with have identified multiple authentication as the "killer" capability they're looking to us to provide, so it's good to know we're making progress in the right direction. </p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>823</wp:post_id>
		<wp:post_date>2006-10-27 14:20:30</wp:post_date>
		<wp:post_date_gmt>2006-10-27 14:20:30</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>custom-authentication-with-wcf-is-top-shelf</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="security"><![CDATA[Security]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<category domain="post_tag" nicename="wcf"><![CDATA[WCF]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[a0566855-4b27-46cb-b90b-99155d7a5d35]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2006/10/27/Custom+Authentication+With+WCF+Is+Top+Shelf]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Custom+Authentication+With+WCF+Is+Top+Shelf]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Is WCF &quot;Straightforward&quot; for Long Running Tasks?</title>
		<link>http://devhawk.net/2006/10/28/is-wcf-straightforward-for-long-running-tasks/</link>
		<pubDate>Sat, 28 Oct 2006 20:38:30 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://cdc11975-d7a3-4114-9efb-6964486b3b46</guid>
		<description></description>
		<content:encoded><![CDATA[<p>My father sent me a link to <a href="http://ddj.com/dept/webservices/193104809">this article on SOA scalability</a>. He thought it was pretty good until he got to <a href="http://ddj.com/dept/webservices/193104809?pgno=6">this paragraph</a>:</p><blockquote><p>Long-running tasks become more complex. You cannot assume that your client can maintain a consistent connection to your web service throughout the life of a task that takes 15 minutes, much less one hour or two days. In this case, you need to implement a solution that follows a full-duplex pattern (where your client is also a service and gets notified when the task is completed) or a polling scheme (where your client checks back later to get the results). Both of these solutions require stateful services. This full-duplex pattern becomes straightforward to implement using the Windows Communications Foundation (Indigo) included with .NET 3.0.</p></blockquote><p>When I first saw duplex channels in WCF, I figured you can use them for long running tasks also. Turns out that of the nine <a href="http://windowssdk.msdn.microsoft.com/en-us/library/ms730879.aspx">standard WCF bindings</a>, only four support duplex contracts. Of those four, one is designed for <a href="http://windowssdk.msdn.microsoft.com/en-us/library/system.servicemodel.netpeertcpbinding.aspx">peer-to-peer scenarios</a> and one uses <a href="http://windowssdk.msdn.microsoft.com/en-us/library/system.servicemodel.netnamedpipebinding.aspx">named pipes</a> so it doesn't work across the network, so they're obviously not usable in the article's scenario. <a href="http://windowssdk.msdn.microsoft.com/en-us/library/system.servicemodel.nettcpbinding.aspx">NetTcp</a> can only provide duplex contracts within the scope of a consistent connection, which the author has already ruled out as a solution. That leaves <a href="http://windowssdk.msdn.microsoft.com/en-us/library/system.servicemodel.wsdualhttpbinding.aspx">wsDualHttp</a>, which is implemented much as the author describes, where both client and the service are listening on the network for messages. There's even a standard binding element - <a href="http://windowssdk.msdn.microsoft.com/en-us/library/system.servicemodel.channels.compositeduplexbindingelement.aspx">Composite Duplex</a> - which ties two one-way messaging channels into a duplex channel.</p><p>Alas, the wsDualHttp solution has a few flaws that render it - in my opinion at least - unusable for exactly these sorts of long running scenarios. On the client side, while you can specify the <a href="http://windowssdk.msdn.microsoft.com/en-us/library/system.servicemodel.channels.compositeduplexbindingelement.clientbaseaddress.aspx">ClientBaseAddress</a>, you can't specify the entire <a href="http://windowssdk.msdn.microsoft.com/en-us/library/system.servicemodel.description.serviceendpoint.listenuri.aspx">ListenUri</a>. Instead, wsDualHttp generates a random guid and tacks it on the end of your ClientBaseAddress, effectively creating a random url every time you run the client app. So if you shut down and restart your client app, you're now listening on a different url than the one the service is going to send messages to and the connection is broken. Oops.</p><p>The issues don't end there. On the <a href="http://windowssdk.msdn.microsoft.com/en-us/library/ms731184.aspx">service side of a duplex contract</a>, you get an object you can use to call back to the client via OperationContext.Current.GetCallbackChannel. This works fine, as long as you don't have to shut down your service. There's no way to persist the callback channel information to disk and later recreate it. So if you shut down and restart your service, there's no way to reconnect with the client, even if they haven't changed the url they're listening on. Oops.</p><p>So in other words, WCF can do long running services using the wsDualHttp binding, as long as you don't restart the client or service during the conversation. Because that would never ever happen, right?</p><p>This is part of the reason <a href="http://devhawk.net/2006/10/23/The+Other+Foundation+Technology.aspx">why I'm sold on Service Broker</a>. From where I sit, it looks like WCF can't handle long running operations <u><em>at all</em></u> - at least, not with any of the built in transports and bindings. You may be able to build something custom that would work for long running services, I'm not a deep enough expert on WCF to know. From reading what Nicholas Allen <a href="http://blogs.msdn.com/drnick/archive/2006/08/29/729208.aspx">has to say about CompositeDuplex</a>, I'm fairly sure you could work around the client url issue if you built a custom binding element to set the ListenUriBaseAddress. But I have no idea how to deal with the service callback channel issue. It doesn't appear that the<em> </em>necessary plumbing is there at all to persist and rehydrate the callback channel. If you can't do that, I don't see how you can reliably support long running services.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>824</wp:post_id>
		<wp:post_date>2006-10-28 20:38:30</wp:post_date>
		<wp:post_date_gmt>2006-10-28 20:38:30</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>is-wcf-straightforward-for-long-running-tasks</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="architecture"><![CDATA[Architecture]]></category>
		<category domain="post_tag" nicename="wcf"><![CDATA[WCF]]></category>
		<category domain="post_tag" nicename="web-services"><![CDATA[Web Services]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Is+WCF+QuotStraightforwardquot+For+Long+Running+Tasks]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[cdc11975-d7a3-4114-9efb-6964486b3b46]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2006/10/29/Is+WCF+QuotStraightforwardquot+For+Long+Running+Tasks]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>2422</wp:comment_id>
			<wp:comment_author><![CDATA[Robert W. Anderson]]></wp:comment_author>
			<wp:comment_author_email>robert@cairene.net</wp:comment_author_email>
			<wp:comment_author_url>http://et.cairene.net</wp:comment_author_url>
			<wp:comment_author_IP>63.195.121.126</wp:comment_author_IP>
			<wp:comment_date>2006-11-01 07:45:11</wp:comment_date>
			<wp:comment_date_gmt>2006-11-01 14:45:11</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[You (or your dad? ) make a good point about WCF's full-duplex capability.  I didn't mean to give the impression that full-duplex patterns in WCF are perfect--just that it is easier to expose Web Service functionality from a client application using WCF.   

It sounds like you have gone further down the WCF road than we have (currently we are architecting the next major version of our Digipede network which will include replacing our current WSE2 Web Services with WCF).  Our plan to support full-duplex is to build on top of two half-duplex channels.  Of course, that puts the burden on us to deal with restart issues, but as you pointed out, we would have that burden with full-duplex channels anyway.  

For various reasons we haven’t looked seriously at Service Broker for our product, though it looks like it handles these issues in a more straightforward manner.

Thanks for taking the time to comment,

Robert

]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Essential Windows Workflow Foundation</title>
		<link>http://devhawk.net/2006/11/01/essential-windows-workflow-foundation/</link>
		<pubDate>Wed, 01 Nov 2006 15:10:54 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://018a041d-5395-46db-be26-12dc4a747390</guid>
		<description></description>
		<content:encoded><![CDATA[<p>On <a href="http://pluralsight.com/blogs/dbox/archive/2006/10/25/41185.aspx">Don's recommendation</a>, I picked up <a href="http://www.aw-bc.com/catalog/academic/product/0,1144,0321399838,00.html">Essential WF</a>. In the forward, Don writes "[S]omething big is about to happen." I'm only part way thru chapter one, and this is already a must read. Go get it. Now. </p><p>In the <a href="http://www.aw-bc.com/catalog/academic/product/0,1144,0321399838-PRE,00.html">preface</a>, they define the term "Reactive Program", which I'm adding to my personal lexicon.</p><blockquote><p>"Windows Workflow Foundation (WF) is a general-purpose programming framework for creating reactive programs that act in response to stimulus from external entities. The basic characteristic of reactive programs is that they pause during their execution, for unknown amounts of time, awaiting input."</p></blockquote><p>That "unknown amounts of time" is the kicker. Here's a paragraph from early in chapter one that expands on that:</p><blockquote><p>"Real-world processes take a long time - days, weeks, or even months. It is wishful thinking to assume that the operating system process (or CLR application domain) in which the program begins execution will survive for the required duration."</p></blockquote><p>Gee, that <a href="http://devhawk.net/2006/10/23/The+Other+Foundation+Technology.aspx">sounds familiar</a> doesn't it? </p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>825</wp:post_id>
		<wp:post_date>2006-11-01 15:10:54</wp:post_date>
		<wp:post_date_gmt>2006-11-01 15:10:54</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>essential-windows-workflow-foundation</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="architecture"><![CDATA[Architecture]]></category>
		<category domain="post_tag" nicename="wf"><![CDATA[WF]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2006/11/01/Essential+Windows+Workflow+Foundation]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Essential+Windows+Workflow+Foundation]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[018a041d-5395-46db-be26-12dc4a747390]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>The Two Types of Service Architects</title>
		<link>http://devhawk.net/2006/11/01/the-two-types-of-service-architects/</link>
		<pubDate>Wed, 01 Nov 2006 15:44:18 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://d6fd829a-6770-489a-b276-72c972083f53</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Tomas Restrepo <a href="http://www.winterdom.com/weblog/2006/10/29/WCFAndDuplexChannels.aspx">comments</a> on my recent SSB and WCF posts:</p><blockquote><p><a href="http://www.winterdom.com/weblog/ct.ashx?id=d948c914-95e1-4fe1-ba48-392fd6468be7&amp;url=http%3a%2f%2fdevhawk.net%2f">Harry Pierson</a> asks how well <a href="http://www.winterdom.com/weblog/ct.ashx?id=d948c914-95e1-4fe1-ba48-392fd6468be7&amp;url=http%3a%2f%2fdevhawk.net%2f2006%2f10%2f29%2fIs%2bWCF%2bQuotStraightforwardquot%2bFor%2bLong%2bRunning%2bTasks.aspx">WCF supports long running tasks</a>. He suggests that WCF does not support them very well, and says that's one reason he likes SQL Server Service Broker so much. I'd say SSSB is a good match only as long as the long running tasks you're going to be executing are purely database driven and can be executed completely within the database. Sure, this is an "expanded universe" with the CLR support in SQL Server 2005, but even so it makes me nervous at times <img src="http://www.winterdom.com/weblog/smilies/happy.gif" />. </p><p>You could also consider using a custom service with MSMQ or something like BizTalk Server for this if you had long running processes that were not completely tied to the DB (or a single DB for that matter).</p></blockquote><p>Sam Gentile <a href="http://feeds.feedburner.com/~r/SamGentile/~3/43478464/New-and-Notable-118.aspx">follows up</a>:</p><blockquote><p>In that same post, but I needed to call it out separate, Tomas rightfully says, "I'd say SSSB is a good match only as long as the long running tasks you're going to be executing are purely database driven and can be executed completely within the database," in response to <a href="http://devhawk.net/2006/10/29/Is+WCF+QuotStraightforwardquot+For+Long+Running+Tasks.aspx">Harry liking Service Broker so much</a>. Talk about a narrow edge case. That's way I never really got excited or cared about Service Broker. Its a narrow solution to a special edge case when everything is database driven and can be executed totally inside the database. That's the old Microsoft Data-Driven Architecture for sure. Me, I'd rather have a rich Domain-Driven architecture most of the time. Then if you have Oracle databases in your architecture too, where does it leave you? Nowhere.</p></blockquote><p>As you might expect, I have a few comments,  clarifications and corrections.</p><p>First, Tomas' statement that Service Broker only supports service logic "executed completely within the database" in flat out wrong. Service Broker can be used from any environment that can connect to SQL Server and execute DML statements. If you can call SELECT/INSERT/UPDATE/DELETE, then you can also call BEGIN DIALOG/SEND/RECEIVE/END CONVERSATION. This includes Windows apps and services, web apps and services, console apps and even <a href="http://msdn.microsoft.com/data/ref/jdbc/">Java apps</a>. Of course, you can also access Service Broker from stored procedures if you wish, but you're not limited to them as Tomas suggested. </p><p>Tomas' misconception may come from a feature of Service Broker called <a href="http://msdn2.microsoft.com/en-us/library/ms171617.aspx">Activation</a>. Activation is a feature of Service Broker that <a href="http://msdn2.microsoft.com/en-us/library/ms171601.aspx">dynamically scales message processing to match demand</a>. For example, Service Broker can be configured to launch a new instance of a specified stored procedure if messaging processing isn't keeping up with incoming message traffic on a given queue. This is called <a href="http://msdn2.microsoft.com/en-us/library/ms171585.aspx">internal activation</a> and because it uses stored procedures it does execute within the database as Thomas said. Service Broker also supports <a href="http://msdn2.microsoft.com/en-us/library/ms171581.aspx">external activation</a> where it notifies an external application when activation is needed. You do have to build an application to host your service logic and handle these notifications, but that application doesn't execute within the database. So while you could argue that it's easier to execute your service logic within the database (no need to build a separate host app), it's not required.</p><p>Given that you don't have host your service logic in the database, then you're also not limited to "a single DB" as Tomas suggests. You don't, in fact, have to put your Service Broker queues in the same database with your business data. So if you have Oracle in your environment, like the scenario Sam mentioned, you would host your service logic in an external application that processed messages from a queue in a SQL 2005 database while accessing and modifying business data from tables in the Oracle database. Using multiple databases does require using distributed instead of local transactions, but if you're using MSMQ as Tomas recommended, you're already stuck with the DTC anyway. </p><p>Finally, I didn't get Tomas' "purely database driven" or Sam's "everything is database driven" comments at all. While there are exceptions, the vast majority of systems I've ever seen/built/designed have essentially been one or more stateless tiers sitting in front of a stateful database. If it's a traditional three tier web app, there's a stateless presentation tier, a stateless business logic tier and a stateless data access logic tier. For a web service, there's no presentation tier, but there's is the stateless SOAP processing tier typically provided by the web service stack. Does this mean the vast majority of web apps and services are  "purely database driven" too? If so, then I guess it's a good thing, right?</p><p>In the end, maybe there are two types of service architects - those that believe the majority of services will be atomic and those that believe the majority of services will be long running. For atomic services, Service Broker is overkill. But if it turns out that most services are long running, <a href="http://devhawk.net/2006/10/29/Is+WCF+QuotStraightforwardquot+For+Long+Running+Tasks.aspx">WCF's lack of support</a> is going to be a pretty big roadblock. </p><p>I'm obviously in the long running camp. I'm not sure, but I get the feeling this is the less popular camp, at least for now. We'll have to wait to see, but I do know is that whenever someone brings me what they think is an atomic business scenario, it doesn't take much digging to reveal that the atomic scenario is actually a single step of a long running business scenario that also needs to be automated. </p><p>Here's a question for Tomas, Sam and the rest of you: Which group do you self select into? Are most services going to be atomic or long running in the (pardon the pun) long run?</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>826</wp:post_id>
		<wp:post_date>2006-11-01 15:44:18</wp:post_date>
		<wp:post_date_gmt>2006-11-01 15:44:18</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>the-two-types-of-service-architects</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="architecture"><![CDATA[Architecture]]></category>
		<category domain="post_tag" nicename="service-broker"><![CDATA[Service Broker]]></category>
		<category domain="post_tag" nicename="soa"><![CDATA[SOA]]></category>
		<category domain="post_tag" nicename="wcf"><![CDATA[WCF]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[d6fd829a-6770-489a-b276-72c972083f53]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2006/11/01/The+Two+Types+Of+Service+Architects]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[The+Two+Types+Of+Service+Architects]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Slight Workflow Annoyance</title>
		<link>http://devhawk.net/2006/11/03/slight-workflow-annoyance/</link>
		<pubDate>Fri, 03 Nov 2006 12:36:39 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://e42581ae-6d27-4c06-8a28-f77432ddfcc4</guid>
		<description></description>
		<content:encoded><![CDATA[<p>One of the cool things about WF is that you can specify the Guid it uses to identify a workflow instance. <a href="http://windowssdk.msdn.microsoft.com/en-us/library/system.workflow.runtime.workflowruntime.createworkflow.aspx">WorkflowRuntime.CreateWorkflow</a> has an <a href="http://windowssdk.msdn.microsoft.com/en-us/library/ms594870.aspx">overload</a> (actually <a href="http://windowssdk.msdn.microsoft.com/en-us/library/ms594866.aspx">two</a>) where you can specify said workflow instance identifier. This is awesome for using WF with Service Broker, as Service Broker already has the idea of a <a href="http://msdn2.microsoft.com/en-us/library/ms166131.aspx">conversation group</a> which is roughly analogous to a <a href="http://windowssdk.msdn.microsoft.com/en-us/library/system.workflow.runtime.workflowinstance.aspx">workflow instance</a>. Conversation groups even use a Guid identifier, so there's not even any mapping required to go from conversation group to workflow instance. </p><p>However, things get less cool when you call <a href="http://windowssdk.msdn.microsoft.com/en-us/library/system.workflow.runtime.workflowruntime.getworkflow.aspx">WorkflowRuntime.GetWorkflow</a>. If you call GetWorkflow with a Guid that has no corresponding workflow instance, it throws an InvalidOperationException instead of just returning null. That seems like an odd choice. If you're going to support specifying the instance identifier when you create the workflow instance, doesn't it make sense that you should also gracefully support the scenario where an instance identifier is invalid?</p><p>I see two ways to deal with this:</p><ul><li>Iterate through the list of <a href="http://windowssdk.msdn.microsoft.com/en-us/library/system.workflow.runtime.workflowruntime.getloadedworkflows.aspx">loaded</a> and <a href="http://windowssdk.msdn.microsoft.com/en-us/library/system.workflow.runtime.hosting.sqlworkflowpersistenceservice.getallworkflows.aspx">persisted</a> workflow instances looking for the one in question.</li><li>Call GetWorkflow and swallow the exception.</li></ul><p>I ended up picking the "Swallow the Exception" approach as I can't imagine the iteration thru every loaded and persisted instance would be very performant. But swallowing exceptions always makes me feel icky. I'm a fan of the "exceptions only for exceptional situations" approach and as far as I'm concerned, an invalid instance identifier isn't that exceptional. Still, it's a minor annoyance, especially given how cool it is to be able to specify the workflow instance identifier in the first place.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>827</wp:post_id>
		<wp:post_date>2006-11-03 12:36:39</wp:post_date>
		<wp:post_date_gmt>2006-11-03 12:36:39</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>slight-workflow-annoyance</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="development"><![CDATA[Development]]></category>
		<category domain="post_tag" nicename="service-broker"><![CDATA[Service Broker]]></category>
		<category domain="post_tag" nicename="wf"><![CDATA[WF]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Slight+Workflow+Annoyance]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[e42581ae-6d27-4c06-8a28-f77432ddfcc4]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2006/11/03/Slight+Workflow+Annoyance]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>2423</wp:comment_id>
			<wp:comment_author><![CDATA[Ingo Rammer]]></wp:comment_author>
			<wp:comment_author_email>ingo.rammer@thinktecture.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>84.153.126.10</wp:comment_author_IP>
			<wp:comment_date>2006-11-03 13:10:25</wp:comment_date>
			<wp:comment_date_gmt>2006-11-03 20:10:25</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I'd respectfully tend to disagree. I am a firm believer in the idea that exceptions should be thrown when a method can't perform the operation which is implied by its name. (This is a bit more concrete than the "exceptional condition"). Which now means that the semantic implication of "get" (as in GetWorkflow) is the thing we'd need to argue about. Here, I usually tend to prefer the pattern that get/load/retrieve-methods do indeed throw an exception if the can't get the specified item (after all, they couldn't do what their name implies) whereas methods like FindWorkflow() - if they would exist - would happily return empty lists if there were no matches for the given criteria. In essence, I would have expected the WF runtime to perform this operation exactly in the way it does.

Just my 2c,
-Ingo]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Certainly Not Politics As Usual</title>
		<link>http://devhawk.net/2006/11/07/certainly-not-politics-as-usual/</link>
		<pubDate>Tue, 07 Nov 2006 13:25:57 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://cca89202-4fb0-45fe-865d-a446d061139b</guid>
		<description></description>
		<content:encoded><![CDATA[<p></p><p>Today is the Midterm Elections here in the United States. If the pre-election day polls are to be believed, it looks like good news for the Democrats and bad news for the Republicans. The big question is whether the news is good/bad enough for Democrats to take control of one or both houses of Congress. I guess we'll know by tonight. </p><p>But this post isn't about the midterms. Don't get me wrong, I hope the Democrats take back both houses of congress. But whoever ends up controlling Congress will have a thin majority at best, which will limit their ability to accomplish much. Frankly, the only area that I would expect to see much traction is on issues where moderate Republicans can reach across the aisle and vote with the Democrats in order to distance themselves from President Bush's abysmal approval ratings. </p><p>I'm much more interested in the 2008 presidential campaign. For the first time in over 50 years, it will be a wide open race for both parties. Neither the sitting president nor the vice president will be running for president in 2008. The last time this happened was in 1952. President Harry Truman (D) dropped out of the race after losing the New Hampshire primary and Vice President Alben Barkley never had enough support to win the nomination. The Democratic nomination went to Illinois Governor Adlai Stevenson <a href="http://en.wikipedia.org/wiki/United_States_presidential_election%2C_1952">who lost to</a> General Eisenhower in a landslide. Since then, the incumbent president or vice president has always been his party's nominee for president.  </p><p>Until now. Well, until two years from now at any rate. So while not completely unprecedented, this is the first time we've had a completely wide open race since the start of the Information Age. In other words, it's the first time we've had a wide open race since the advent of cable TV, personal computers, 24 news networks, Rush Limbaugh, the Internet, weblogs, Wikipedia and YouTube. I'm sure some have already started calling this Politics 2.0. And while I'm tired of the "2.0" moniker, certainly big changes is underway in the political arena. </p><p>So what happens when you combine the harsh sunlight of a decentralized and demassivied media with a wide open race with no clear favorite from either party? I'm guessing a very ugly race, especially from the Republicans. Both parties do negative ads, but they have become a "<a href="http://www.latimes.com/news/politics/la-na-negads26sep26,1,1883432.story?coll=la-headlines-politics">key strategy in the Republican political arsenal</a>". (The NRCC <a href="http://www.washingtonpost.com/wp-dyn/content/article/2006/09/09/AR2006090901079_pf.html">apparently spent</a> "more than 90 percent of its $50 million-plus advertising budget" on negative ads this year.) I expect 2008 will be even worse. And not just the presidential race itself, but also the race for each party's nomination. In some ways, the nomination race will be worse, since you expect politicians to have bad things to say about candidates from the opposing party.  </p><p>If the next two years are filled with party infighting with every detail chronicled in the blogosphere and/or the mainstream media - and I fully expect that's what will happen - we are in for a very ugly campaign ahead. Brace yourselves.  </p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>828</wp:post_id>
		<wp:post_date>2006-11-07 13:25:57</wp:post_date>
		<wp:post_date_gmt>2006-11-07 13:25:57</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>certainly-not-politics-as-usual</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="politics"><![CDATA[Politics]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2006/11/07/Certainly+Not+Politics+As+Usual]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Certainly+Not+Politics+As+Usual]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[cca89202-4fb0-45fe-865d-a446d061139b]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>2424</wp:comment_id>
			<wp:comment_author><![CDATA[Charlie]]></wp:comment_author>
			<wp:comment_author_email>charles.hinderliter@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://hagel2008.blogspot.com</wp:comment_author_url>
			<wp:comment_author_IP>71.76.2.253</wp:comment_author_IP>
			<wp:comment_date>2006-11-07 13:35:18</wp:comment_date>
			<wp:comment_date_gmt>2006-11-07 21:35:18</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I'm looking forward to the 2008 primary races.  It could prove to be healthy (though perhaps ugly) as both parties try to find their way forward.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>2425</wp:comment_id>
			<wp:comment_author><![CDATA[Dale Churchward]]></wp:comment_author>
			<wp:comment_author_email>dale.churchward@microsoft.com</wp:comment_author_email>
			<wp:comment_author_url>http://halfmybrain.spaces.live.com/</wp:comment_author_url>
			<wp:comment_author_IP>131.107.0.102</wp:comment_author_IP>
			<wp:comment_date>2006-11-07 15:06:38</wp:comment_date>
			<wp:comment_date_gmt>2006-11-07 23:06:38</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Considering that Harry and I are on opposing ends of the political spectrum I find it interesting that I agree with this post. While one party or the other will end up with a slim majority I am not confident that it is enough to get much done in the next 2 years. Of course, the cynic in me doesn't think this is a real bad thing. I am definitely a proponent of a small, less intrusive government.

I also agree that the 2008 Presidential race should be very interesting. An idea that we were discussing earlier would have Dick Cheney resigning following this election, and getting one of the leading candidates into the VP position to get some free campaigning over the next couple of years. I don't see that as likely, but at least it’s an intriguing possibility.

Since I can't post without a small dig at Harry I will say that the DNC doesn't have to spend as much on negative ads since they have the mainstream press to do their dirty work for them. :-)
]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>2426</wp:comment_id>
			<wp:comment_author><![CDATA[Robbie]]></wp:comment_author>
			<wp:comment_author_email>krobbie67@yahoo.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>69.163.107.40</wp:comment_author_IP>
			<wp:comment_date>2006-11-07 19:54:56</wp:comment_date>
			<wp:comment_date_gmt>2006-11-08 03:54:56</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Sadly, I think this is the first posting of yours that I have fully understood since I am much more politically savvy than I am technically. Whassup!!! Kiss the kids, the meema, and the wife for me. :-)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>2427</wp:comment_id>
			<wp:comment_author><![CDATA[DJ]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>209.131.211.194</wp:comment_author_IP>
			<wp:comment_date>2006-11-08 06:07:14</wp:comment_date>
			<wp:comment_date_gmt>2006-11-08 14:07:14</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I totally agree with your sentiments. When the presidential race doesn't have a former VP who is hanging his hat on previous accomplishments, the only thing they will have is mud to sling. 

And Dale: "Of course, the cynic in me doesn't think this is a real bad thing. I am definitely a proponent of a small, less intrusive government." 
You said you are on the other political end of the spectrum, Republican I deduce, maybe a more than slim majority can reduce the Republican's changes the last 6+ years to create a larger, more intrusive government. :)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>2428</wp:comment_id>
			<wp:comment_author><![CDATA[Dale Churchward]]></wp:comment_author>
			<wp:comment_author_email>dale.churchward@microsoft.com</wp:comment_author_email>
			<wp:comment_author_url>http://halfmybrain.spaces.live.com/</wp:comment_author_url>
			<wp:comment_author_IP>131.107.0.102</wp:comment_author_IP>
			<wp:comment_date>2006-11-08 09:42:18</wp:comment_date>
			<wp:comment_date_gmt>2006-11-08 17:42:18</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Yes I am a Republican and notice I didn't say it was a bad thing that they were getting voted out. I totally agree that over the last 6 years they have spent money like it was nothiing, and grown the government. Personally a little gridlock in Washington D.C. is perfectly OK with me.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>2429</wp:comment_id>
			<wp:comment_author><![CDATA[fioricet-online]]></wp:comment_author>
			<wp:comment_author_email>fraushmidt@gawab.com</wp:comment_author_email>
			<wp:comment_author_url>http://arbat.or.at/fioricet/</wp:comment_author_url>
			<wp:comment_author_IP>87.103.250.178</wp:comment_author_IP>
			<wp:comment_date>2006-12-11 16:19:59</wp:comment_date>
			<wp:comment_date_gmt>2006-12-12 00:19:59</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Very nice site. Please keep updating it. Your site is exactly the kind of sites which make the net surfing so intresting]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Common Ground with My Conservative Teammates</title>
		<link>http://devhawk.net/2006/11/09/common-ground-with-my-conservative-teammates/</link>
		<pubDate>Thu, 09 Nov 2006 11:01:23 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://d205a6b9-567e-4587-85e2-c2e3a55f6659</guid>
		<description></description>
		<content:encoded><![CDATA[<p><a href="http://s3.amazonaws.com/devhawk_images/WindowsLiveWriter/fd35dc67084e_91BE/IMAGE_00014[15].jpg" atomicselection="true"><img style="BORDER-RIGHT: 0px; BORDER-TOP: 0px; MARGIN: 0px 5px 0px 0px; BORDER-LEFT: 0px; BORDER-BOTTOM: 0px" height="192" src="http://s3.amazonaws.com/devhawk_images/WindowsLiveWriter/fd35dc67084e_91BE/IMAGE_00014_thumb[13].jpg" width="240" align="left" border="0" /></a> I came in this morning to discover my boss and next cube neighbor <a href="http://rickbarn.spaces.live.com/">Rick</a> had decided to spruce up his cube with camo netting. He's ex-Army, so it's not like it's out of character for him. Of course, the camo netting has the exact opposite of it's indented effect, making Rick's cube very easy to find in the farm. </p><p>Unlike my last team, most of my <a href="http://halfmybrain.spaces.live.com/blog/cns!DF6CA820250998D2!194.entry">teammates are conservatives</a>. But apparently we can find common ground in our opinions of Defense Secretary Rumsfeld. Rick called him an abysmal failure. I couldn't agree more. <a href="http://halfmybrain.spaces.live.com">Dale</a> joked that Rumsfeld was joining our team and moving into Rick's newly camo festooned cube. Rick countered that Rumsfeld was actually joining the Enterprise Architecture group. Heh. </p><p>Update: Dale <a href="http://devhawk.net/CommentView,guid,d205a6b9-567e-4587-85e2-c2e3a55f6659.aspx#commentstart">points out</a> he made the joke about Rumsfeld joining EA, not Rick. My bad Dale. </p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>829</wp:post_id>
		<wp:post_date>2006-11-09 11:01:23</wp:post_date>
		<wp:post_date_gmt>2006-11-09 11:01:23</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>common-ground-with-my-conservative-teammates</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="architecture"><![CDATA[Architecture]]></category>
		<category domain="post_tag" nicename="humor"><![CDATA[Humor]]></category>
		<category domain="category" nicename="politics"><![CDATA[Politics]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[d205a6b9-567e-4587-85e2-c2e3a55f6659]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2006/11/09/Common+Ground+With+My+Conservative+Teammates]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Common+Ground+With+My+Conservative+Teammates]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>2430</wp:comment_id>
			<wp:comment_author><![CDATA[Dale Churchward]]></wp:comment_author>
			<wp:comment_author_email>dale.churchward@microsoft.com</wp:comment_author_email>
			<wp:comment_author_url>http://halfmybrain.spaces.live.com/</wp:comment_author_url>
			<wp:comment_author_IP>131.107.0.102</wp:comment_author_IP>
			<wp:comment_date>2006-11-09 12:23:34</wp:comment_date>
			<wp:comment_date_gmt>2006-11-09 20:23:34</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Slight correction. After Rick said that Rumsfeld was an abysmal failure I suggested he might fit better in the Enterprise Architecture group. Rick then repeated it.

To the Enterprise Architects, I was just kidding, really...don't stone me.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>2431</wp:comment_id>
			<wp:comment_author><![CDATA[Rovert]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>170.20.11.116</wp:comment_author_IP>
			<wp:comment_date>2006-11-10 07:11:34</wp:comment_date>
			<wp:comment_date_gmt>2006-11-10 15:11:34</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Years ago, I knew a couple of guys that used camo netting over their cubes.  In my opinion, it really improved the lighting and the acoustics of their cubicles.  It was fun to visit them and collaborate in their cubicles -- we could really concentrate and get stuff done under the nets.

Neither guy was ex-Military and I have no idea about their political affiliation.

A maintenance guy came by and asked one of my co-workers to take down the net.  My co-worker refused.  The maintenance guy said "It is a fire hazard!".   My co-worker then explained that the netting conformed to MilSpec#Such-and-such and is completely fireproof.  I thought he was about to demonstrate this when he whipped out the coolest cigarette lighter I ever saw!

Last I remember, the netting was still up.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Thoughts on Election Day</title>
		<link>http://devhawk.net/2006/11/10/thoughts-on-election-day/</link>
		<pubDate>Fri, 10 Nov 2006 11:48:46 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://6fe9af1f-e0ed-46bf-88f6-60bc04cc8a9c</guid>
		<description></description>
		<content:encoded><![CDATA[<p>I've had a few days to savor the Democrat landslide victory this past Tuesday. I was half right about the razor thin majorities. Democrats have a slim two seat advantage in the senate, but a fairly significant thirty-four seat majority in the house (with ten races undecided). Given that the Republicans had a twenty-eight seat majority in the last congress, that's a pretty significant turnaround for the Democrats. Frankly, I'm pretty excited. </p><p>Here are a few short takes on the election: </p><ul><li>We can close the book on Rove's "permanent republican majority" pipe dream. America isn't a conservative country. It isn't a liberal country, either. It's a moderate country. Liberal and conservative are the words we use to describe the direction one diverges from the middle ground. This election was decided by the moderates in this country, which isn't surprising as the bell curve tells us that it's the moderates who are in the majority. Political parties ignore the middle at their own peril.  </li><li>Democrats didn't win the election on Tuesday, the Republicans lost it. Hard working moderate Americans have limited tolerance for ineptitude and corruption, as the Democrats found out in '94 and the Republicans found out this week. There are those on the left howling for elephant blood, but spending time exacting revenge on the Republicans won't solve any of America's hard problems. The Democrats are <a href="http://www.nytimes.com/cq/2006/11/08/cq_1916.html?adxnnl=1&amp;adxnnlx=1163144214-/6a4nq4LqOgJNehwFIBMbw">talking like they realize this</a>, but actions speak louder than words.  </li><li>Speaking of actions and words, President Bush <a href="http://www.whitehouse.gov/news/releases/2006/11/20061108-2.html">talked a good talk</a> Wednesday, but I'll believe President "<a href="http://en.wikipedia.org/wiki/Bushism">The Decider</a>" Bush honestly wants to "work with the new Congress in a bipartisan way" when I see it. Trying to push <a href="http://www.cnn.com/2006/POLITICS/11/09/bolton.congress/index.html">John Bolton's confirmation</a> as well as retroactive authorization for the warrantless wiretapping program through congress before Democrats officially take control isn't a promising start.  </li><li>There's no such thing as a political party that actively works for limited government. It isn't that surprising, as it violates my <a href="http://devhawk.net/2006/10/03/Numero+Uno+Theory+Of+Sociology.aspx">Numero Uno</a> theory. Individuals may want limited government, but there's no way a government entity like a political party will actively work to reduce their own importance. Republicans claim to be for shrinking the federal government, but their actions contradict that claim. Republicans like Reagan and Bush cut taxes, but they never actually cut spending to match. As such, the <a href="http://photos1.blogger.com/blogger/7794/428/1600/a1.28.jpg">Federal Debt / GDP ratio</a> has about doubled in the past 18 years, with the only reduction coming while Clinton was in office. Claiming to cut taxes without cutting spending is like claiming you're making more money because you're not paying your mortgage. Republicans aren't cutting taxes, they're deferring them. It's time to realize that you can't <a href="http://en.wikipedia.org/wiki/Starve_the_beast">starve the beast</a> and move on to more pragmatic policies. Better a tax-and-spend liberal than a borrow-and-spend conservative.</li></ul><p>Update: In the interest of bipartisanship, <a href="http://www.tpmmuckraker.com/archives/001981.php">here are some less than reputable Democrats</a> poised to take key positions in the new Democrat controlled congress. Making someone with a <a href="http://www.washingtonpost.com/wp-srv/politics/campaigns/junkie/links/hastings102189.htm">congressional impeachment</a> or <a href="http://www.tpmmuckraker.com/archives/000502.php">under FBI investigation</a> the chair of a congressional committee isn't a promising start to "<a href="http://www.washingtonpost.com/wp-dyn/content/article/2006/10/06/AR2006100600602.html">draining the swamp</a>". </p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>830</wp:post_id>
		<wp:post_date>2006-11-10 11:48:46</wp:post_date>
		<wp:post_date_gmt>2006-11-10 11:48:46</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>thoughts-on-election-day</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="politics"><![CDATA[Politics]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2006/11/10/Thoughts+On+Election+Day]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Thoughts+On+Election+Day]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[6fe9af1f-e0ed-46bf-88f6-60bc04cc8a9c]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>2432</wp:comment_id>
			<wp:comment_author><![CDATA[MinorRipper]]></wp:comment_author>
			<wp:comment_author_email>mikedidier@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.minor-ripper.blogspot.com</wp:comment_author_url>
			<wp:comment_author_IP>66.9.26.10</wp:comment_author_IP>
			<wp:comment_date>2006-11-10 11:59:39</wp:comment_date>
			<wp:comment_date_gmt>2006-11-10 19:59:39</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I think it's appropriate that we get underway in relegating the Bush Jr. foreign policy team into the dustbin of history ASAP after the election --Rumsfeld, Bolton, Cheney (hopefully). Doesn't the whole 'neocon' era already seem like a bad nightmare??  Never again.  Yeah right!

www.minor-ripper.blogspot.com]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>2433</wp:comment_id>
			<wp:comment_author><![CDATA[Libertarian]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>72.201.155.147</wp:comment_author_IP>
			<wp:comment_date>2006-11-10 12:17:38</wp:comment_date>
			<wp:comment_date_gmt>2006-11-10 20:17:38</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Interestingly enough, I agree with pretty much everything you wrote. It will be interesting to see in 2 years if progress has been made, or more excuses. Believing Bush to cooperate when you see it may be entirely appropriate; however, I'm a little more optimistic based on his history as TX governor working with democrats. If you think about it, before the election he wasn't working with democrats at all. Heck, he wasn't even working with republicans! At the very least this election sends a loud message all politicians, and I think that is definitely a good thing.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>2434</wp:comment_id>
			<wp:comment_author><![CDATA[Dale Churchward]]></wp:comment_author>
			<wp:comment_author_email>dale.churchward@microsoft.com</wp:comment_author_email>
			<wp:comment_author_url>http://halfmybrain.spaces.live.com/</wp:comment_author_url>
			<wp:comment_author_IP>131.107.0.102</wp:comment_author_IP>
			<wp:comment_date>2006-11-13 11:04:47</wp:comment_date>
			<wp:comment_date_gmt>2006-11-13 19:04:47</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[As much as I hate to admit it, I agree with a lot of what you wrote Harry, especially about the Republicans being fired. As far as Bush pushing through stuff before the new Congressional session I can't blame him for that. Is he really just supposed to wait until January when it will be much harder? That really wouldn't be the smartest move on his part.

As far as the Democrats cleaning house and not tolerating the corruption of the Republican I found an article I thought was really interesting.
 
http://www.rollcall.com/issues/1_1/breakingnews/15974-1.html

It sure looks like the Democrats aren’t embracing the concept of draining the swamp. Not that I expected them to. Politicians are politicians no matter the party and they seem to like to defend their own.
]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Patrick and Daddy&#039;s Xbox</title>
		<link>http://devhawk.net/2006/11/20/patrick-and-daddys-xbox/</link>
		<pubDate>Mon, 20 Nov 2006 13:57:27 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://f279f031-764d-4924-8cf4-fad156d7af3c</guid>
		<description></description>
		<content:encoded><![CDATA[<p><img height="99" src="http://s3.amazonaws.com/devhawk_images/WindowsLiveWriter/0995b2a57c40_9C5C/xboxlogo[12].gif" width="100" align="right" /> Last night, after his sister had gone to bed, my three year old son Patrick and I spent some time playing on "daddy's Xbox". He wants <a href="http://www.xbox.com/games/carsxbox360">Cars</a> and <a href="http://www.xbox.com/games/vivapinata">Viva Pinata</a> for Christmas, but I fired up the <a href="http://www.xbox.com/games/sonicthehedgehog">Sonic the Hedgehog</a><a href="http://www.xbox.com/en-US/live/marketplace/sonicthehedgehog/demo.htm">demo</a> and handed him the controller. He's only three, so he would basically run around in a circle and jump until he fell off the very tall tower the demo starts on. He enjoyed it, but he was also a little discouraged because he wasn't very good at the game.</p><p><img style="MARGIN: 0px 5px 0px 0px" height="57" src="http://s3.amazonaws.com/devhawk_images/WindowsLiveWriter/0995b2a57c40_9C5C/vivapinatalogo[5].gif" width="137" align="left" /> That got me thinking about what kind of games would be good for him. He's not that good with the controller yet, so fighting bad guys or navigating a ledge on a tall tower are not great bets. Likewise, three year olds aren't that good at focusing on a specific goal like "pick up all the rings" but would rather just explore the world. Viva Pinata sounds like it's right on target for Patrick (plus, he likes the TV show). But what other games really fit the bill? Not many. Patrick loves Cars - he wants to be <a href="http://en.wikipedia.org/wiki/Lightning_McQueen">Lightning McQueen</a> so bad - but I'm not sure he's going to be any good at the game. </p><p><img height="93" src="http://s3.amazonaws.com/devhawk_images/WindowsLiveWriter/0995b2a57c40_9C5C/XnaLogo[11].gif" width="204" align="right" />I wonder if there's much of a market for pre-school console games? Probably not at the $50-60 price point, but as a $5 or $10 Xbox Live Arcade game? Maybe so. I've played around with <a href="http://msdn.microsoft.com/directx/XNA/default.aspx">XNA Game Studio</a>, but I haven't really been inspired to build anything. Maybe I've been looking in the wrong place for inspiration!</p><p>Update: My father had a great suggestion. Patrick loves <a href="http://disney.go.com/disneychannel/playhouse/handymanny/index.html">Handy Manny</a> and <a href="http://www.bobthebuilder.com">Bob the Builder</a>, so how about some type of Mr. Fix It game where you can go around building and repairing stuff. Sort of Grand Theft Auto with tools, but for three year olds. </p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>831</wp:post_id>
		<wp:post_date>2006-11-20 13:57:27</wp:post_date>
		<wp:post_date_gmt>2006-11-20 13:57:27</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>patrick-and-daddys-xbox</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="family"><![CDATA[Family]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<category domain="post_tag" nicename="xbox-360"><![CDATA[Xbox 360]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2006/11/20/Patrick+And+Daddys+Xbox]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Patrick+And+Daddys+Xbox]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[f279f031-764d-4924-8cf4-fad156d7af3c]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>2435</wp:comment_id>
			<wp:comment_author><![CDATA[easy]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://cikeasy.blogspot.com</wp:comment_author_url>
			<wp:comment_author_IP>219.93.152.3</wp:comment_author_IP>
			<wp:comment_date>2006-12-02 02:26:57</wp:comment_date>
			<wp:comment_date_gmt>2006-12-02 10:26:57</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[My son is 3 years old and also looooveee Cars... he can watched the dvd again and again and again.... and i need to put wallpaper and screensaver on his pc with LIghtning McQueen on it.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Hawkeye on XBL Video Marketplace</title>
		<link>http://devhawk.net/2006/11/23/hawkeye-on-xbl-video-marketplace/</link>
		<pubDate>Thu, 23 Nov 2006 22:19:50 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://8e74ec53-8761-4924-a8d4-3b391729637a</guid>
		<description></description>
		<content:encoded><![CDATA[<p>As per <a href="http://www.majornelson.com/archive/2006/11/22/video-marketplace-now-live.aspx">Major Nelson's blog</a>, the <a href="http://www.xbox.com/en-US/live/marketplace/moviestv/default.htm">XBL Video Marketplace</a> went live yesterday. Being off work yesterday (vacation time: use it or lose it), I fired up the ol' 360 to have a look see for myself. <a href="http://www.imdb.com/title/tt0434409/">V for Vendetta</a> in HD? Cool. 6GB? Not so cool. Guess I'll have to blow away some of the demos that I'm not playing in order to make space. 
</p><p>The amount of HD space needed for HD movies begs the question, why isn't Video Marketplace available for PC? My 20GB of Xbox HD space is taken up with game demos and downloads. But my home PC(s) can spare that kind of space. I'd much rather download the content to my PC then stream it across my home network to the 360 when I want to watch it. Not sure how DRM (I assume the content uses WM DRM) impacts network streaming, but I would guess that's a solvable problem. 
</p><p>While I'm talking about DRM, why do I have to pay to download DRMed rental content? Shouldn't I pay when it's time to actually watch the content? I understand having a time limit (24 hours) to <em>finish</em> watching content I rented, but why is there a time limit (14 days) to <em>start</em> watching it? Once it's downloaded it, I'm no longer using XBL resources, so why put any limit on it at all?
</p><p>The pricing model seems pretty much in line with iTunes and/or Blockbuster. $2 to own a TV show, $3 to rent a "classic" movie, $4 to rent a new release movie, with a 50% markup for HD content ($3/$4.50/$6). While these prices are pretty typical, where's the all-you-can-watch subscription plan? The all-you-can-listen model is one of the key values of <a href="http://www.zune.net/en-us/meetzune/zunepass.htm">Zune</a> or <a href="http://www.playsforsure.com/">PlaysForSure</a> services like <a href="http://www.napster.com/">Napster</a> and <a href="http://www.urge.com">Urge</a> not to mention <a href="http://www.netflix.com/">NetFlix</a>. I'd probably scrap my premium channel cable plan if I could get an unlimited subscription to XBL Video Marketplace. 
</p><p>I'd also like to see more content pricing tiers. Owning a 45 minute <a href="http://www.cbs.com/primetime/csi/">CSI</a> for $2 seems pretty fair. But $2 for an 11 minute <a href="http://www.adultswim.com/shows/spaceghost/index.html">Space Ghost Coast to Coast</a> seems overpriced. And while I'm making requests, how about making it easy to buy an entire season of a given show – both from a pricing perspective (i.e. a discount for buying an entire season) as well as a user experience perspective (i.e. one click to buy the whole season).
</p><p>So all in all, a pretty cool service with some room for improvement. The availability of significant amounts of good HD content is a MAJOR winner for this service and a great foundation to build on. Like all things XBL related, I assume Video Marketplace will evolve over time. Can't wait to see how it goes.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>832</wp:post_id>
		<wp:post_date>2006-11-23 22:19:50</wp:post_date>
		<wp:post_date_gmt>2006-11-23 22:19:50</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>hawkeye-on-xbl-video-marketplace</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="entertainment"><![CDATA[Entertainment]]></category>
		<category domain="post_tag" nicename="hawkeye"><![CDATA[HawkEye]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<category domain="post_tag" nicename="xbox-360"><![CDATA[Xbox 360]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[8e74ec53-8761-4924-a8d4-3b391729637a]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2006/11/24/Hawkeye+On+XBL+Video+Marketplace]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Hawkeye+On+XBL+Video+Marketplace]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Let It Snow</title>
		<link>http://devhawk.net/2006/11/27/let-it-snow/</link>
		<pubDate>Tue, 28 Nov 2006 02:56:33 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://f0847089-8e86-45f7-998f-158ed9bfc904</guid>
		<description></description>
		<content:encoded><![CDATA[<p>My wife <a href="http://techiewife.spaces.live.com/blog/cns!3DAECC033B88329C!507.entry">wanted snow</a>, and main Microsoft campus got it. Not much - less than an inch by my measurement - but enough to snarl traffic getting off campus. Jules and I decided it would make more sense for me to grab dinner in the campus cafe and wait out some of the crowds rather than brave the snow and traffic on a nearly empty tank of gas.</p><p>Of course, I don't work on campus any more. My office is <a href="http://devhawk.net/2006/09/30/quotWorkingquot+From+Home+As+The+Office+Moves.aspx">way down in Issaquah</a>. Unluckily for me, I had a meeting on main campus today. It was a great meeting - talking about my project with some field architects. But I didn't expect to get trapped on campus by snow or I would have blown it off. Next time, I need a meeting room with windows!</p><p>Update - It took me only 45 minutes to get home, which is actually fairly typical for me to get home from main campus in the evening. There must have been an accident on 520 because when I crossed the freeway by campus, it was bumper-to-bumper as far as I could see in both directions. But when I passed the 520 exit by my house, there was only a trickle of cars coming off it. The side streets were surprisingly empty. Maybe everyone was afraid they'd be impassible with snow? Takes more than an inch of snow to stop me and my 4WD Chevy Blazer.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>833</wp:post_id>
		<wp:post_date>2006-11-27 18:56:33</wp:post_date>
		<wp:post_date_gmt>2006-11-28 02:56:33</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>let-it-snow</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="family"><![CDATA[Family]]></category>
		<category domain="post_tag" nicename="microsoft"><![CDATA[Microsoft]]></category>
		<category domain="category" nicename="personal"><![CDATA[Personal]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2006/11/28/Let+It+Snow]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Let+It+Snow]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[f0847089-8e86-45f7-998f-158ed9bfc904]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Multi User Blogs</title>
		<link>http://devhawk.net/2006/12/07/multi-user-blogs/</link>
		<pubDate>Thu, 07 Dec 2006 15:16:33 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://601b64e2-9444-466e-9d78-805e41218b7f</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Most of the technical blogs I read are individual blogs (like this one). Yet, most of the political blogs I read are multi-user. Typically, there is a primary poster - such as Josh Marshal from <a href="http://www.talkingpointsmemo.com/">Talking Points Memo</a>. But TPM has at least four other bloggers on their home page (Paul Kiel, David Kurtz, Greg Sargent, Justin Rood). I wonder why these two blogging communities are so different?</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>834</wp:post_id>
		<wp:post_date>2006-12-07 15:16:33</wp:post_date>
		<wp:post_date_gmt>2006-12-07 15:16:33</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>multi-user-blogs</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="blogging"><![CDATA[Blogging]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[601b64e2-9444-466e-9d78-805e41218b7f]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Multi+User+Blogs]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2006/12/07/Multi+User+Blogs]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Streaky Caps</title>
		<link>http://devhawk.net/2006/12/07/streaky-caps/</link>
		<pubDate>Thu, 07 Dec 2006 23:52:00 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://5f06b233-4524-4c61-ac16-46d78ac9421e</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Washington Capitals record in the past four games: 4-0<br />Washington Capitals record in the past ten games: 4-4-2</p><p>That is what in the business of hockey you call "streaky". </p><p>When your recent winning streak includes wins over Dallas (16-8 at the time, 19-9 now) and Eastern conference leading Buffalo (20-3-2 then, 21-4-2 now), you can feel pretty good about yourself. Being only one point out of the playoffs doesn't hurt either. </p><p>On the other hand, the East is a beast this year. Only Florida and Philadelphia are below .500. Everyone else is in the thick of the playoff hunt. Another six game slide would really hurt the Caps' playoff chances. By comparison in the West, seven of the fifteen teams are below .500 (i.e. everyone not currently in a playoff spot). Dallas, at ten games over .500 is <u>3rd</u> in the Pacific Division behind Anaheim (+18) and San Jose (+12). </p><p>Finally, it's always nice to be looking down on the Penguins in the standings. But their not far behind. Their 26 points puts them in 13th place in the East, but they're at .500 (11-11-4) and only five points out of a playoff spot. Next Monday's game should be a good one. It's even on <a href="http://www.versus.com/nw/article/view/1367/?tf=NHLArticleWrapper.tpl">national TV</a> in HD!</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>835</wp:post_id>
		<wp:post_date>2006-12-07 15:52:00</wp:post_date>
		<wp:post_date_gmt>2006-12-07 23:52:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>streaky-caps</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="hockey"><![CDATA[Hockey]]></category>
		<category domain="category" nicename="sports"><![CDATA[Sports]]></category>
		<category domain="post_tag" nicename="washington-capitals"><![CDATA[Washington Capitals]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2006/12/07/Streaky+Caps]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Streaky+Caps]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[5f06b233-4524-4c61-ac16-46d78ac9421e]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Us the Inclusive</title>
		<link>http://devhawk.net/2006/12/07/us-the-inclusive/</link>
		<pubDate>Thu, 07 Dec 2006 14:19:40 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://9ed60791-33c2-47fe-9a65-c3f74c341882</guid>
		<description></description>
		<content:encoded><![CDATA[<p>With the real and serious problem we face in this country - the civil war in Iraq, the deteriorating situation in Afghanistan, rebuilding New Orleans, etc. - it boggles the mind that we waste any time at all on faux controversies such as the so-called "War on Christmas". Getting <a href="http://www.abcnews.go.com/Business/wireStory?id=2642061">Wal-Mart</a> to use "Christmas" instead of "Holiday" in their marketing seems like a dubious accomplishment at best. </p><p>But where I rail against such stupidity, my brilliant <a href="http://techiewife.spaces.live.com/">wife</a> writes poetry. One of Julie's conservative friends sent her an insipid poem that's been making the rounds on the Internet called "How The 'Left' Stole Christmas". I must have missed Wolf Blitzer changing his name to "Wolf Blitzen" or the Senate passing legislation to take away Christian's faith and forbid them to speak of salvation and grace. </p><p>My response would have simply been "Read the <a href="http://en.wikipedia.org/wiki/First_Amendment_to_the_United_States_Constitution">First Amendment</a>, idiot!". My wife, however, wrote a <a href="http://techiewife.spaces.live.com/blog/cns!3DAECC033B88329C!552.entry">poem of her own in response</a>. Check it out. </p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>836</wp:post_id>
		<wp:post_date>2006-12-07 14:19:40</wp:post_date>
		<wp:post_date_gmt>2006-12-07 14:19:40</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>us-the-inclusive</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="family"><![CDATA[Family]]></category>
		<category domain="category" nicename="politics"><![CDATA[Politics]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[9ed60791-33c2-47fe-9a65-c3f74c341882]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2006/12/07/Us+The+Inclusive]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Us+The+Inclusive]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Transactions in Workflow Foundation-land</title>
		<link>http://devhawk.net/2006/12/11/transactions-in-workflow-foundation-land/</link>
		<pubDate>Mon, 11 Dec 2006 14:58:26 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://e7b99068-8f9b-47cd-b5d2-e09d5d250ccc</guid>
		<description></description>
		<content:encoded><![CDATA[<p>I've been spending some quality time with SSB and WF of late. On the balance, my opinion of both these technologies is very positive, though each has some warts of note. For Service Broker, they got the transactional messaging semantics right, but much of the lower level connection management - what SSB calls "routes" are clumsy to deal with. For Workflow Foundation, the execution model is amazingly flexible. Unfortunately, WF's support for transactions is significantly more rigid.</p><p>If you're build a SSB app, you're typical execution thread looks like this:</p><ol><li>Start a transaction.  </li><li>Receive message(s) from top of the queue.  </li><li>Execute service business logic. Obviously, this varies from service to service but it typically involves reading and writing data in the database as well as sending messages to other services.  </li><li>Commit the transaction</li></ol><p>When I sat down to marry SSB and WF, I naively assumed I could simply use WF for step three above. Alas, that turns out to be impossible. <a href="http://forums.microsoft.com/MSDN/ShowPost.aspx?PostID=843580&amp;SiteID=1">This thread</a> on MSDN Forums has most of the gory details, but the short version is that WF does not support flowing host managed transactions into the workflow instance. As per <a href="http://forums.microsoft.com/MSDN/User/Profile.aspx?UserID=154457&amp;SiteID=1">Joel West</a> in the aforementioned thread:</p><blockquote><p>"[T]he WF runtime in V1 only supports flowing in a transaction on WorkflowInstance.Unload. There are various ways that you could try and hack this (with a custom persistence service or WorkflowCommitWorkBatchService) but if you do this it won't work correctly 100% of the time and the times when it fails (error conditions or failures causing the tx to rollback) will be exactly when you are expecting transactional consistency.</p><p>Bottom line - the only way to make this work is to call WorkflowInstance.Unload inside your transaction scope.  This was the best that we could do in V1 to try and enable this pattern in some form.  Not always ideal but it can be made to work for most scenarios that require usage of an external transaction."</p></blockquote><p>So the WF compatible execution thread looks like this:  </p><ol><li>Start a transaction  </li><li>Receive message(s) from the top of the queue  </li><li>Load/Create the associated workflow instance for the received messages  <ul><li>All messages received are guaranteed to be from the same SSB conversation group, which is roughly analogous to a WF instance, so this turns out to be fairly easy</li></ul></li><li>Enqueue the received message in the workflow instance  </li><li>Unload the workflow instance  </li><li>Commit the host transaction </li><li>Reload the workflow instance  </li><li>Run the workflow instance (note, I'm using the manual scheduling service)  <ul><li>Workflow instance creates a transaction if needed</li></ul></li><li>Unload the workflow instance (typically done via UnloadOnIdle in the persistence service)</li><ul><li>Assuming the workflow instance needed a transaction, it gets committed after unload</li></ul></ol><p>Basically, you use two transactions. One host managed transaction to move the message from SSB to WF instance and one WF managed transaction to process the message.The need for two transaction instead of one is unfortunate, but required given the current design of WF. And frankly, given the importance and difficulty of transaction management, I'm not that surprised that WF has hard coded transaction semantics. Trying to build a generic transaction flow model that would work in the myriad of scenarios WF is targeting would have been extremely difficult. At least there is a work around, even if it means using two transactions and loading and unloading the workflow instance twice.</p><p>However, there is a silver lining to the two transaction approach: two unexpected benefits when dealing with poison messages. First, SSB doesn't have dead letter queue like MSMQ does. Moving a poison message to a dead letter queue would break SSB's exactly once and in order semantics.(MSMQ doesn't guarantee in order delivery) But moving all messages into the WF instance gets them out of the main SSB queue so poison messages don't continue to get processed over and over. </p><p>Second, because the workflow instance is peristed after the messages are enqueued, there's a representation of the workflow after the message is received but before the message is processed. If there's a poison message, attempting to processing the message will fail and rollback to this state. This persisted workflow instance could be sent to a developer who could step through it to determine the cause of the error. We could even have developer versions of runtime workflow services so we could read remote data and simulate data updates. I wouldn't want the developer updating production data in this way, but it would be great for troubleshooting issues.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>837</wp:post_id>
		<wp:post_date>2006-12-11 14:58:26</wp:post_date>
		<wp:post_date_gmt>2006-12-11 14:58:26</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>transactions-in-workflow-foundation-land</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="service-broker"><![CDATA[Service Broker]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<category domain="post_tag" nicename="wf"><![CDATA[WF]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2006/12/11/Transactions+In+Workflow+Foundationland]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Transactions+In+Workflow+Foundationland]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[e7b99068-8f9b-47cd-b5d2-e09d5d250ccc]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>2436</wp:comment_id>
			<wp:comment_author><![CDATA[Tomas Restrepo]]></wp:comment_author>
			<wp:comment_author_email>tomas@winterdom.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.winterdom.com/weblog</wp:comment_author_url>
			<wp:comment_author_IP>200.116.233.120</wp:comment_author_IP>
			<wp:comment_date>2006-12-11 16:11:51</wp:comment_date>
			<wp:comment_date_gmt>2006-12-12 00:11:51</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[The WF transaction model makes more sense if you come from a BizTalk background (like me), because BizTalk has essentially the same restriction. 

That said, BizTalk is far, far more flexible in its transaction facilities, but you still have to remember that message receive and send operations operate in completely separate transactions from orchestrations. However, this is improved in BizTalk because you have the MessageBox right in the middle of the messaging engine and the orchestration engine which makes implementing your kind of scenario completely natural even under the two-transaction separation.

I'm not quite sure I agree about the whole poison message thingie, though. First of all, handling "real" poison messages (i.e. malformed ones that you really need to discard) requires breaking In-order delivery semantics if you hope to keep processing. The only way to avoid if the problematic message is important is to completely stop processing, fix the offending message(s) and resume processing. And this, I think, pretty much is all across the board (not specific to SSSB or MSMQ). 

Second, MSMQ does support in-order delivery, afaik, for *messages sent in the same transaction*. This is key because MSMQ doesn't have the notion of a conversation/dialog like SSSB does (though it's certainly possible to implement it if you really want it). That said, I think you may be talking more about "in-order processing", which is a completely different thing, and which you seem to be dismissing. I'm not quite sure why you'd care so much about in-order delivery if you're not doing in-order processing after that (i.e. message 2 might finish processing before message-1 does), so that might be something to consider.

]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>2437</wp:comment_id>
			<wp:comment_author><![CDATA[DevHawk]]></wp:comment_author>
			<wp:comment_author_email>harry@devhawk.net</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>131.107.0.102</wp:comment_author_IP>
			<wp:comment_date>2006-12-12 09:17:56</wp:comment_date>
			<wp:comment_date_gmt>2006-12-12 17:17:56</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I'm not very deep on BizTalk, but I'm working on it. That said, comparing the high-level TX capabilities of a product like BizTalk to the low-level TX capabilities of a technology like WF is an apples to oranges comparison. From what I understand about MessageBox, it sounds fairly similar to SSB, which would make a SSB/WF implementation conceptually similar to BizTalk. But I need to learn much more about BizTalk.

I agree 100% that dealing with poison messages need to be fixed before you can resume processing. But the silver lining of the two transaction approach to SSB & WF is that you're only stalling the instance with the poision message. If you left the poison message in the SSB queue, it would keep getting picked up until and throwing an exception until an operator came along to do something. If you move it to WF, then it will only effect the instance that message is intended for.

I'm not dismissing in-order processing at all. It's one of the primary values of SSB in my opinon. Assuming WF doesn't reorder messages in a queue, moving them from SSB to WF wouldn't break the in order semantics.

]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>2438</wp:comment_id>
			<wp:comment_author><![CDATA[Tomas Restrepo]]></wp:comment_author>
			<wp:comment_author_email>tomas@winterdom.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.winterdom.com/weblog</wp:comment_author_url>
			<wp:comment_author_IP>200.116.233.120</wp:comment_author_IP>
			<wp:comment_date>2006-12-12 20:06:38</wp:comment_date>
			<wp:comment_date_gmt>2006-12-13 04:06:38</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Harry,

I just realized I misread your original post and didn't notice that you were delivering all messages in a single conversation group to a single workflow instance. In that case, you're probably maintaining ordered processing. FWIW, seems you're implementing the kind of solution that is usually handled in Biztalk through a feature known as Convoys (look them up, the details might be useful to you at least for ideas, I think)

BTW, the BizTalk MessageBox is far more than SSB, though they share some features, I think. Mostly, the MsgBox does not only queuing, it's also the underlying Pub/Sub and content-based routing engine in BizTalk. I do think it might be possible to implement the message box on top of SSB, and maybe the BizTalk team might explore that for possible performance improvements in future releases. 

And yes, I realize I'm a pita sometimes nagging about biztalk (but I do think for the kind of work you're doing, knowing how biztalk manages some of it would prove useful).]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>2439</wp:comment_id>
			<wp:comment_author><![CDATA[DevHawk]]></wp:comment_author>
			<wp:comment_author_email>harry@devhawk.net</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>131.107.0.102</wp:comment_author_IP>
			<wp:comment_date>2006-12-13 09:59:04</wp:comment_date>
			<wp:comment_date_gmt>2006-12-13 17:59:04</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Don't worry. I'm a PITA sometimes nagging about SSB! :)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Good Week for Hobbyists and Students</title>
		<link>http://devhawk.net/2006/12/13/good-week-for-hobbyists-and-students/</link>
		<pubDate>Wed, 13 Dec 2006 09:57:06 +0000</pubDate>
		<dc:creator>devhawk</dc:creator>
		<guid isPermaLink="false">http://1bedb46b-04e6-4c11-b4ae-7d07ed097418</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Both <a href="http://msdn.microsoft.com/directx/XNA/">XNA Game Studio Express</a> and <a href="http://msdn.microsoft.com/robotics/">Microsoft Robotics Studio</a> shipped their 1.0 releases this week. So once you're done hacking a robot to mow your lawn, you can relax by debugging your latest game on your Xbox 360. W00t!</p><p>Santa, please bring me a few extra hours per day so I can play with this stuff!</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>838</wp:post_id>
		<wp:post_date>2006-12-13 09:57:06</wp:post_date>
		<wp:post_date_gmt>2006-12-13 09:57:06</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>good-week-for-hobbyists-and-students</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="games"><![CDATA[Games]]></category>
		<category domain="category" nicename="general-geekery"><![CDATA[General Geekery]]></category>
		<category domain="post_tag" nicename="xbox-360"><![CDATA[Xbox 360]]></category>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
			<wp:meta_value><![CDATA[2006/12/13/Good+Week+For+Hobbyists+And+Students]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_compressedtitle</wp:meta_key>
			<wp:meta_value><![CDATA[Good+Week+For+Hobbyists+And+Students]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dasblog_entryid</wp:meta_key>
			<wp:meta_value><![CDATA[1bedb46b-04e6-4c11-b4ae-7d07ed097418]]></wp:meta_value>
		</wp:postmeta>
	</item>
</channel>
</rss>
