{"status":"ok","post":{"id":1231,"type":"post","slug":"ironpython-consolecolormgr","url":"http:\/\/devhawk.net\/2009\/03\/19\/ironpython-consolecolormgr\/","status":"publish","title":"IronPython ConsoleColorMgr","title_plain":"IronPython ConsoleColorMgr","content":"<p>I really liked the ConsoleColorMgr class from my <a href=\"http:\/\/devhawk.net\/2009\/03\/19\/Writing+An+IronPython+Debugger+Colorful+Console.aspx\">last ipydbg post<\/a> so I took a few minutes to yank it out into its own seperate module. I also took the opportunity to make a few improvements.<\/p>\n<p>First off, I added support for background colors as well as foreground colors. Furthermore, both colors default to \u201cNone\u201d which ConsoleColorMgr takes to mean leave that color unchanged. <\/p>\n<pre class=\"brush: python\">\nfrom System import Console as _Console     \n\nclass ConsoleColorMgr(object):     \n  def __init__(self, foreground = None, background = None):     \n    self.foreground = foreground     \n    self.background = background     \n\n  def __enter__(self):   \n    self._tempFG = _Console.ForegroundColor   \n    self._tempBG = _Console.BackgroundColor  \n    if self.foreground: _Console.ForegroundColor = self.foreground   \n    if self.background: _Console.BackgroundColor = self.background     \n       \n  def __exit__(self, t, v, tr):   \n    _Console.ForegroundColor = self._tempFG  \n    _Console.BackgroundColor = self._tempBG\n<\/pre>\n<p>The other change I made was to build a set of default ConsoleColorMgr instances in the consolecolor module, one for each of the values in <a href=\"http:\/\/msdn.microsoft.com\/en-us\/library\/system.consolecolor.aspx\">ConsoleColor<\/a>. <\/p>\n<pre class=\"brush: python\">\nimport sys   \nfrom System import ConsoleColor, Enum     \n   \n_curmodule = sys.modules[__name__]     \n\nfor n in Enum.GetNames(ConsoleColor):     \n    setattr(_curmodule, n, ConsoleColorMgr(Enum.Parse(ConsoleColor, n)))\n<\/pre>\n<p>Note that for this set of default ConsoleColorMgr instances, I\u2019m only setting the foreground color. If you want to set the background color, you have to create your own ConsoleColorMgr instances. This allows me to write the following:<\/p>\n<pre class=\"brush: python\">\nfrom __future__ import with_statement     \nimport consolecolor    \n\nwith consolecolor.Red:     \n    print \"Open the pod bay doors, HAL\"    \nwith consolecolor.ConsoleColorMgr(ConsoleColor.Black, ConsoleColor.Red):  \n    print \"I'm sorry Dave, I'm afraid I can't do that.\"\n<\/pre>\n<p>If you want it, I\u2019ve put consolecolor.py up <a href=\"http:\/\/cid-0d9bc809858885a4.skydrive.live.com\/self.aspx\/DevHawk%20Content\/IronPython%20Stuff\/consolecolor.py\">on my skydrive<\/a> or it\u2019s available as part of my <a href=\"http:\/\/github.com\/devhawk\/devhawk_ipy\/tree\/master\">devhawk_ipy project<\/a> on GitHub. <\/p>\n<p><strong>Update<\/strong> &#8211; <a href=\"http:\/\/bermingham.blogspot.com\">Christopher Bermingham<\/a> pointed out that my sample snippet at the end doesn\u2019t work unless you add \u201cfrom <a href=\"http:\/\/docs.python.org\/library\/__future__.html\">__future__<\/a> import with_statement\u201d to the top of your python file. I updated my code snippet to include this. Thanks Christopher!<\/p>\n","excerpt":"<p>I really liked the ConsoleColorMgr class from my last ipydbg post so I took a few minutes to yank it out into its own seperate module. I also took the opportunity to make a few improvements. First off, I added support for background colors as well as foreground colors. Furthermore, both colors default to \u201cNone\u201d [&hellip;]<\/p>\n","date":"2009-03-19 16:43:51","modified":"2009-03-19 16:43:51","categories":[{"id":252,"slug":"ironpython","title":"IronPython","description":"","parent":0,"post_count":99}],"tags":[],"author":{"id":1,"slug":"admin","name":"DevHawk","first_name":"Harry","last_name":"Pierson","nickname":"DevHawk","url":"","description":""},"comments":[{"id":2181,"name":"Christopher Bermingham","url":"http:\/\/bermingham.blogspot.com","date":"2009-03-20 09:07:08","content":"<p>Hello-  I am trying to get your consolecolor sample running&#8230;  What version of IronPython is that?  I am running the latest release 2.0.0.0 (which is really 2.0.1 file version 2.0.20209.00).  I believe the CPython 2.5 &#8216;with&#8217; statement doesn&#8217;t seem to be recognized.<\/p>\n<p>>>> with consolecolor.Red:<br \/>\n  File &#8220;<stdin>&#8220;, line 1<br \/>\n    with consolecolor.Red<\/p>\n<p>         ^<br \/>\nSyntaxError: unexpected token &#8216;consolecolor&#8217;<\/stdin><\/p>\n","parent":0},{"id":2182,"name":"Christopher Bermingham","url":"http:\/\/bermingham.blogspot.com","date":"2009-03-20 12:26:33","content":"<p>Me again-<br \/>\nI found it in an article that it looks like you have bookmarked <img src=\"http:\/\/devhawk.net\/wp-includes\/images\/smilies\/icon_smile.gif\" alt=\":)\" class=\"wp-smiley\" \/><br \/>\nfrom __future__ import with_statement<\/p>\n<p><a href=\"http:\/\/langexplr.blogspot.com\/2009\/02\/writing-xml-with-ironpython-xmlwriter.html\" rel=\"nofollow\">http:\/\/langexplr.blogspot.com\/2009\/02\/writing-xml-with-ironpython-xmlwriter.html<\/a><\/p>\n<p>Your sample looks great.  Thanks!<\/p>\n","parent":0},{"id":2183,"name":"DevHawk","url":"","date":"2009-03-20 13:45:26","content":"<p>Woops, thanks for pointing out my mistake Christoper. I&#8217;ve updated the code to include the __future__ import.<\/p>\n<p>As for that xmlwriter article, that was the inspiration for this approach!<\/p>\n","parent":0}],"attachments":[],"comment_count":3,"comment_status":"closed","custom_fields":{"dasblog_entryid":["30e6352e-6825-4364-905c-aac5b56964e3"],"dasblog_compressedtitle":["IronPython+ConsoleColorMgr"],"dasblog_compressedtitleunique":["2009\/03\/19\/IronPython+ConsoleColorMgr"]}},"previous_url":"http:\/\/devhawk.net\/2009\/03\/19\/writing-an-ironpython-debugger-colorful-console\/","next_url":"http:\/\/devhawk.net\/2009\/03\/21\/writing-an-ironpython-debugger-a-little-hack-err-cleanup\/"}