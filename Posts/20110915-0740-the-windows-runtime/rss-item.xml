<?xml version="1.0" encoding="utf-8"?>
<item>
  <title>The Windows Runtime</title>
  <link>http://devhawk.net/2011/09/15/the-windows-runtime/</link>
  <pubDate>Thu, 15 Sep 2011 14:40:31 +0000</pubDate>
  <dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">devhawk</dc:creator>
  <guid isPermaLink="false">http://devhawk.net/?p=1919</guid>
  <description></description>
  <content:encoded xmlns:content="http://purl.org/rss/1.0/modules/content/"><![CDATA[After nearly 2 years of not being able to tell anyone what I was working on - or even the name of the team I was on! - <a href="http://www.buildwindows.com/">//build</a> is finally here and the <a href="http://msdn.microsoft.com/en-us/windows/apps/br229516">Windows 8 developer preview</a> is finally out there in the open for everyone to start building applications for. You have NO idea how hard it's been for me to keep my mouth shut and blog quiet about this!

I am a program manager on the Runtime Experience team, one of <a href="http://blogs.msdn.com/b/b8/archive/2011/08/17/introducing-the-team.aspx">many teams</a> in the Windows division building Windows 8. Our team is responsible for building the underlying infrastructure that powers the <a href="http://msdn.microsoft.com/en-us/library/windows/apps/hh464942(v=VS.85).aspx">Windows Runtime</a> (or WinRT for short). In particular, I work on the WinRT metadata infrastructure. I also work closely with our partners in Developer Division that use the metadata to project WinRT APIs into multiple languages.

In a nutshell, WinRT is the new API surface area for <a href="http://msdn.microsoft.com/en-us/windows/apps/">Metro style apps</a> in Windows 8. WinRT APIs are available across multiple languages - C#, Visual Basic, C++ and JavaScript - enabling developers to build Metro style apps using the language and frameworks they are most familiar with. Much, much more info is available on the new <a href="http://dev.windows.com">Windows Dev Center</a>.

In addition to the <a href="http://msdn.microsoft.com/en-us/library/windows/apps/hh464942(v=VS.85).aspx">developer preview docs for WinRT</a>, there are several sessions at //build focusing on WinRT - what it is, how it works under the covers, and how you use it from the various languages. Here's a handy list of all the //build sessions you should check out if you want to know more about WinRT:
<ul>
	<li><a href="http://channel9.msdn.com/Events/BUILD/BUILD2011/PLAT-874T">Lap Around Windows Runtime</a>
Martyn Lovell - the dev manager for the Runtime Experience team - provides a overview of the Windows Runtime.</li>
	<li><a href="http://channel9.msdn.com/Events/BUILD/BUILD2011/TOOL-531T">Using the Windows Runtime from C# and Visual Basic</a>
Jesse Kaplan from the CLR team and I cover how you can build managed Metro style apps and how you use WinRT from C# and VB. Obviously, I highly recommend this session because...Well, it's my session isn't it? What am I gonna say? Don't watch my talk?</li>
	<li><a href="http://channel9.msdn.com/Events/BUILD/BUILD2011/TOOL-533T">Using the Windows Runtime from JavaScript</a>
Luke Hoban from the JavaScript team talks about how WinRT is used when building the new Metro style apps in HTML5 and JavaScript.</li>
	<li><a href="http://channel9.msdn.com/Events/BUILD/BUILD2011/TOOL-532T">Using the Windows Runtime from C++</a>
Herb Sutter from the C++ team as well as the C++ standards committee talks about how WinRT is used for C++ developers building native Metro style apps.</li>
	<li><a href="http://channel9.msdn.com/Events/BUILD/BUILD2011/PLAT-203T">Async Everywhere: creating responsive APIs and apps</a>
Ben Kuhn, a developer on the Runtime Experience team, dives deep on how async is exposed and implemented in WinRT</li>
	<li><a href="http://channel9.msdn.com/Events/BUILD/BUILD2011/PLAT-875T">Windows Runtime Internals: understanding "Hello World"</a>
Matt Merry, a teammate on the Runtime Experience PM team, goes under the hood and shows you how the internals of WinRT work.</li>
	<li><a href="http://channel9.msdn.com/Events/BUILD/BUILD2011/PLAT-877T">Being Pragmatic by leveraging existing code in Metro style apps</a>
<a href="http://twitter.com/#!/jolson88">Jason Olson</a>, a teammate on the Runtime Experience PM team and my next door office neighbor, talks about how you bring your existing code into the new world of Metro style apps. In particular, he's got a <a href="http://code.msdn.microsoft.com/windowsapps/Groove-Drum-Sequencer-cc6028ec">wicked cool demo</a>.</li>
	<li><a href="http://channel9.msdn.com/Events/BUILD/BUILD2011/PLAT-657T">Windows Interns: our summer of apps</a>
John Lam, my immediate boss, is MCing this session with some of the Windows Interns who built the first Windows 8 Metro style apps over the summer.</li>
</ul>
As I write this, not all the sessions have been delivered and none of them are available online yet. But they should all be online within a couple of days. Also, you can also get more information as well as ask questions over at the <a href="http://forums.dev.windows.com">Windows Dev Center Forums</a>. Our dev manager has already been <a href="http://social.msdn.microsoft.com/profile/martyn%20lovell%20%5Bmsft%5D/">very busy answering questions</a>!

I am so excited that you can finally see what we've been working on and I can wait to see what <span style="text-decoration: underline;">you</span> build with Windows 8!]]></content:encoded>
  <excerpt:encoded xmlns:excerpt="http://wordpress.org/export/1.2/excerpt/"><![CDATA[]]></excerpt:encoded>
  <wp:post_id xmlns:wp="http://wordpress.org/export/1.2/">1919</wp:post_id>
  <wp:post_date xmlns:wp="http://wordpress.org/export/1.2/">2011-09-15 07:40:31</wp:post_date>
  <wp:post_date_gmt xmlns:wp="http://wordpress.org/export/1.2/">2011-09-15 14:40:31</wp:post_date_gmt>
  <wp:comment_status xmlns:wp="http://wordpress.org/export/1.2/">open</wp:comment_status>
  <wp:ping_status xmlns:wp="http://wordpress.org/export/1.2/">open</wp:ping_status>
  <wp:post_name xmlns:wp="http://wordpress.org/export/1.2/">the-windows-runtime</wp:post_name>
  <wp:status xmlns:wp="http://wordpress.org/export/1.2/">publish</wp:status>
  <wp:post_parent xmlns:wp="http://wordpress.org/export/1.2/">0</wp:post_parent>
  <wp:menu_order xmlns:wp="http://wordpress.org/export/1.2/">0</wp:menu_order>
  <wp:post_type xmlns:wp="http://wordpress.org/export/1.2/">post</wp:post_type>
  <wp:post_password xmlns:wp="http://wordpress.org/export/1.2/"></wp:post_password>
  <wp:is_sticky xmlns:wp="http://wordpress.org/export/1.2/">0</wp:is_sticky>
  <category domain="post_tag" nicename="build"><![CDATA[//build]]></category>
  <category domain="post_tag" nicename="activation"><![CDATA[Activation]]></category>
  <category domain="post_tag" nicename="c-sharp"><![CDATA[C#]]></category>
  <category domain="post_tag" nicename="c-plus-plus"><![CDATA[C++]]></category>
  <category domain="category" nicename="development"><![CDATA[Development]]></category>
  <category domain="post_tag" nicename="javascript"><![CDATA[JavaScript]]></category>
  <category domain="post_tag" nicename="lanugages"><![CDATA[Lanugages]]></category>
  <category domain="post_tag" nicename="metadata"><![CDATA[Metadata]]></category>
  <category domain="post_tag" nicename="metro-style-apps"><![CDATA[Metro style apps]]></category>
  <category domain="post_tag" nicename="visual-basic"><![CDATA[Visual Basic]]></category>
  <category domain="category" nicename="windows"><![CDATA[Windows]]></category>
  <category domain="post_tag" nicename="windows-8"><![CDATA[Windows 8]]></category>
  <category domain="category" nicename="windows-runtime"><![CDATA[Windows Runtime]]></category>
  <wp:postmeta xmlns:wp="http://wordpress.org/export/1.2/">
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment xmlns:wp="http://wordpress.org/export/1.2/">
    <wp:comment_id>3183</wp:comment_id>
    <wp:comment_author><![CDATA[anvaka]]></wp:comment_author>
    <wp:comment_author_email>anvaka@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://anvaka.blogspot.com</wp:comment_author_url>
    <wp:comment_author_IP>216.213.97.190</wp:comment_author_IP>
    <wp:comment_date>2011-09-15 09:01:35</wp:comment_date>
    <wp:comment_date_gmt>2011-09-15 16:01:35</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Congratulations with release :). Now it's out, and I can't wait to learn more about WinRT internals. Please keep posting :)!]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
  </wp:comment>
  <wp:comment xmlns:wp="http://wordpress.org/export/1.2/">
    <wp:comment_id>3184</wp:comment_id>
    <wp:comment_author><![CDATA[Using WinRT from C# //build Demo &#8211; DevHawk]]></wp:comment_author>
    <wp:comment_author_email></wp:comment_author_email>
    <wp:comment_author_url>http://devhawk.net/2011/09/15/using-winrt-from-csharp-build-demo/</wp:comment_author_url>
    <wp:comment_author_IP>184.168.254.1</wp:comment_author_IP>
    <wp:comment_date>2011-09-15 09:39:50</wp:comment_date>
    <wp:comment_date_gmt>2011-09-15 16:39:50</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[[...] DevHawk Designs                       &laquo; The Windows Runtime [...] ]]></wp:comment_content>
    <wp:comment_approved>trash</wp:comment_approved>
    <wp:comment_type>pingback</wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
  </wp:comment>
  <wp:comment xmlns:wp="http://wordpress.org/export/1.2/">
    <wp:comment_id>3185</wp:comment_id>
    <wp:comment_author><![CDATA[Cristian Remy]]></wp:comment_author>
    <wp:comment_author_email>alhudson.alhudson@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://www.gamespot.com</wp:comment_author_url>
    <wp:comment_author_IP>200.23.29.77</wp:comment_author_IP>
    <wp:comment_date>2011-09-15 14:45:46</wp:comment_date>
    <wp:comment_date_gmt>2011-09-15 21:45:46</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Great!

Finally the Longhorn promise is a fact]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
  </wp:comment>
  <wp:comment xmlns:wp="http://wordpress.org/export/1.2/">
    <wp:comment_id>3186</wp:comment_id>
    <wp:comment_author><![CDATA[Dev{eloper} Stonez]]></wp:comment_author>
    <wp:comment_author_email>dev.stonez@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://twitter.com/devstonez</wp:comment_author_url>
    <wp:comment_author_IP>82.77.217.139</wp:comment_author_IP>
    <wp:comment_date>2011-09-16 00:49:44</wp:comment_date>
    <wp:comment_date_gmt>2011-09-16 07:49:44</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[I’m just wondering how the HTML5/JavaScript Metro applications will be packaged and protected against reversal …
 For packaging I’ll expect some sort of signed zip/jar (no mention about .appx on MSDN) but for protection, outside of heavy obfuscation for JavaScript I can’t envision any other way (maybe a new precompiled/binary format ?)
 If the protection is not good, writing HTML5/JavaScript apps will not flourish to much IMHO.

Since the Metro documentation state that the applications are self-consistent (no shared DLL’s, etc), I’m just wondering how you can create a modular, BIG Metro application by creating reusable components/libraries … Another issue that bother me relate to the library reuse, since the Metro documentation state that the applications are self-consistent (no shared DLL's, etc), so I'm just wondering how you can create a modular, BIG Metro application by creating reusable components/libraries ... 

If all the HTML5/JavaScript Metro apps should contain the same CSS and WinJS scripts then it doesn't look quite good ... I expected some form of libraries/reuse to exist from the start.

Do you have more details for all of these ?

BTW, all the HTML5/JavaScript way of programming Metro apps remind me about Opera widgets that you can build for several years now]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
  </wp:comment>
  <wp:comment xmlns:wp="http://wordpress.org/export/1.2/">
    <wp:comment_id>3187</wp:comment_id>
    <wp:comment_author><![CDATA[Dev{eloper} Stonez]]></wp:comment_author>
    <wp:comment_author_email>dev.stonez@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://twitter.com/devstonez</wp:comment_author_url>
    <wp:comment_author_IP>82.77.217.139</wp:comment_author_IP>
    <wp:comment_date>2011-09-16 05:21:09</wp:comment_date>
    <wp:comment_date_gmt>2011-09-16 12:21:09</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[A deep-dive into WinRT and CLR  under Windows 8 and better details of the actual Windows 8 architecture can be found here <a href="http://dougseven.com/2011/09/15/a-bad-picture-is-worth-a-thousand-long-discussions/" rel="nofollow">A bad picture is worth a thousand long discussions.</a>]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
  </wp:comment>
  <wp:comment xmlns:wp="http://wordpress.org/export/1.2/">
    <wp:comment_id>3188</wp:comment_id>
    <wp:comment_author><![CDATA[DevHawk]]></wp:comment_author>
    <wp:comment_author_email>harry@devhawk.net</wp:comment_author_email>
    <wp:comment_author_url></wp:comment_author_url>
    <wp:comment_author_IP>71.231.40.153</wp:comment_author_IP>
    <wp:comment_date>2011-09-18 09:34:58</wp:comment_date>
    <wp:comment_date_gmt>2011-09-18 16:34:58</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Dev{eloper} Stonez, would you mind re-asking your questions over on the <a href="http://forums.dev.windows.com" rel="nofollow">Metro style apps Forum</a>? We have support engineers actively monitoring those forums and it will be easier to for others with similar questions to find answers posted there rather than here. Thanks!]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>1</wp:comment_user_id>
  </wp:comment>
</item>