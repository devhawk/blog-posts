<?xml version="1.0" encoding="utf-8"?>
<wp:comment xmlns:wp="http://wordpress.org/export/1.2/">
  <wp:comment_id>2528</wp:comment_id>
  <wp:comment_author><![CDATA[Arnon Rotem-Gal-Oz]]></wp:comment_author>
  <wp:comment_author_email>arnon@rgoarchitects.com</wp:comment_author_email>
  <wp:comment_author_url>http://www.rgoarchitects.com</wp:comment_author_url>
  <wp:comment_author_IP>89.139.153.108</wp:comment_author_IP>
  <wp:comment_date>2007-06-14 11:23:01</wp:comment_date>
  <wp:comment_date_gmt>2007-06-14 18:23:01</wp:comment_date_gmt>
  <wp:comment_content><![CDATA[Hi Harry,
> but he doesn't really go into detail as to why.
I thought I did explain it - anyway I'll try that again
REST is said to be an architectural style - i.e. it has components, relations, attributes and constrains on how to use all of them - e.g. uniform interface etc.

If it is an architectural style then you should be able to apply it in different technologies - I know I can do that with other architectural styles I know like SOA, Client/server, pipe and filters etc.
For me it is interesting on the theoretical level as a way to look at architectural problems and principles but also  on the practical level since you can't always use HTTP in a project or you may have to mix several communications protocols etc.

Arnon ]]></wp:comment_content>
  <wp:comment_approved>1</wp:comment_approved>
  <wp:comment_type></wp:comment_type>
  <wp:comment_parent>0</wp:comment_parent>
  <wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>