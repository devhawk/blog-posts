<?xml version="1.0" encoding="utf-8"?>
<wp:comment xmlns:wp="http://wordpress.org/export/1.2/">
  <wp:comment_id>2057</wp:comment_id>
  <wp:comment_author><![CDATA[Barry Kelly]]></wp:comment_author>
  <wp:comment_author_email>bkelly.ie@gmail.com</wp:comment_author_email>
  <wp:comment_author_url>http://barrkel.blogspot.com/</wp:comment_author_url>
  <wp:comment_author_IP>78.86.121.60</wp:comment_author_IP>
  <wp:comment_date>2008-04-07 13:17:10</wp:comment_date>
  <wp:comment_date_gmt>2008-04-07 20:17:10</wp:comment_date_gmt>
  <wp:comment_content><![CDATA[Never used anything like discriminated unions? Did you never use Pascal? It uses a 'case' statement-like declaration inside the record definition to define the "variant record", as Pascal calls it.

The equivalent, manually built out of union and struct, is common practice in C too, when OO-style behaviour needs to be modelled.

Integrating them with pattern matching is important too, of course, and it's mainly functional languages that have done that.]]></wp:comment_content>
  <wp:comment_approved>1</wp:comment_approved>
  <wp:comment_type></wp:comment_type>
  <wp:comment_parent>0</wp:comment_parent>
  <wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>