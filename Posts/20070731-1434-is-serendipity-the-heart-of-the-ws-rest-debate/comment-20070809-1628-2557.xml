<?xml version="1.0" encoding="utf-8"?>
<wp:comment xmlns:wp="http://wordpress.org/export/1.2/">
  <wp:comment_id>2557</wp:comment_id>
  <wp:comment_author><![CDATA[John]]></wp:comment_author>
  <wp:comment_author_email>jevdemon@microsoft.com</wp:comment_author_email>
  <wp:comment_author_url>http://blogs.msdn.com/jevdemon</wp:comment_author_url>
  <wp:comment_author_IP>131.107.0.102</wp:comment_author_IP>
  <wp:comment_date>2007-08-09 16:28:16</wp:comment_date>
  <wp:comment_date_gmt>2007-08-09 23:28:16</wp:comment_date_gmt>
  <wp:comment_content><![CDATA[The book defines SOA as "A loosely-coupled architecture designed to meet the business needs of the organization."  SOA does not necessarily require the use of Web Services or REST – these are, for most organizations, the simplest approach for implementing a loosely coupled solution architecture.   

There is no need for a REST/WS-* debate, simply use the approach best suited to the problem at hand.  The Microsoft Robotics Studio (http://msdn2.microsoft.com/en-us/robotics/default.aspx) illustrates how both can be supported, combining REST with event notifications, relationships between components and more.

"Some architectural styles are often portrayed as 'silver bullet' solutions for all forms of software. However, a good designer should select a style that matches the needs of the particular problem being solved."  - From Roy Fielding's REST dissertation ("Architectural Styles and
the Design of Network-based Software Architectures" - http://www.ics.uci.edu/~fielding/pubs/dissertation/software_arch.htm#sec_1_5)]]></wp:comment_content>
  <wp:comment_approved>1</wp:comment_approved>
  <wp:comment_type></wp:comment_type>
  <wp:comment_parent>0</wp:comment_parent>
  <wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>