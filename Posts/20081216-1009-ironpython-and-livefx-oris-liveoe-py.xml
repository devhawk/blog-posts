<?xml version="1.0" encoding="utf-8"?>
<item>
  <title>IronPython and LiveFX: Ori's LiveOE.py</title>
  <link>http://devhawk.net/2008/12/16/ironpython-and-livefx-oris-liveoe-py/</link>
  <pubDate>Tue, 16 Dec 2008 10:09:54 +0000</pubDate>
  <dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">devhawk</dc:creator>
  <guid isPermaLink="false">http://ae997eb7-047f-4600-8b5d-e0f43c59bddd</guid>
  <description></description>
  <content:encoded xmlns:content="http://purl.org/rss/1.0/modules/content/"><![CDATA[<p><a href="http://blogs.msdn.com/oriamiga/">Ori Amiga</a> is a Group Program Manager over in the Live Framework team whom you might have seen at PDC08 delivering the <a href="http://channel9.msdn.com/pdc2008/BB04/">Lap Around LiveFX &amp; Mesh Services</a> and <a href="http://channel9.msdn.com/pdc2008/BB19/">LiveFX Programming Model Architecture and Insights</a> talks. And apparently, he’s an IronPython fan as posted a small <a href="http://blogs.msdn.com/oriamiga/archive/2008/11/09/livefx-using-ironpython.aspx">LiveFX Python module</a> to his blog. It’s pretty simple – it only wraps Connect and ConnectLocal - but it does cut about ten lines of path appending, reference adding and module importing code into a single import statement. Here’s the profile access script from <a href="http://devhawk.net/2008/12/13/IronPython+And+LiveFX+Accessing+Profiles.aspx">my last post</a> rewritten to use Ori’s LiveOE module.</p><pre class="brush: python">
import LiveOE     
from devhawk import linq     

uid = raw_input("Enter Windows Live ID: ")
pwd = raw_input("Enter Password: ")

loe = LiveOE.Connect(uid, pwd)

general = linq.Single(loe.Profiles.Entries,  
  lambda e: e.Resource.Type == LiveOE.ProfileResource.ProfileType.General)

print loe.Mesh.ProvisionedUser.Name     
print loe.Mesh.ProvisionedUser.Email     
print general.Resource.ProfileInfo.PersonalStatusMessage     
print linq.Count(loe.Contacts.Entries)
</pre><p>FYI, make sure you update the sdkLibsPath in LiveOE.py – I’m not sure where Ori has installed the LiveFX SDK, but it’s *not* in the location suggested by the read me file.</p><p>BTW, it turns out the <a href="http://social.msdn.microsoft.com/Forums/en-US/liveframework/thread/81ab8f62-3244-4ca5-b376-2d5879f47c9f/">WL Profile information is read only</a> which answers a question I had. However, reading the thread it sounds like they will eventually get around to making it read-write at some point. </p>]]></content:encoded>
  <excerpt:encoded xmlns:excerpt="http://wordpress.org/export/1.2/excerpt/"><![CDATA[]]></excerpt:encoded>
  <wp:post_id xmlns:wp="http://wordpress.org/export/1.2/">1205</wp:post_id>
  <wp:post_date xmlns:wp="http://wordpress.org/export/1.2/">2008-12-16 10:09:54</wp:post_date>
  <wp:post_date_gmt xmlns:wp="http://wordpress.org/export/1.2/">2008-12-16 10:09:54</wp:post_date_gmt>
  <wp:comment_status xmlns:wp="http://wordpress.org/export/1.2/">open</wp:comment_status>
  <wp:ping_status xmlns:wp="http://wordpress.org/export/1.2/">open</wp:ping_status>
  <wp:post_name xmlns:wp="http://wordpress.org/export/1.2/">ironpython-and-livefx-oris-liveoe-py</wp:post_name>
  <wp:status xmlns:wp="http://wordpress.org/export/1.2/">publish</wp:status>
  <wp:post_parent xmlns:wp="http://wordpress.org/export/1.2/">0</wp:post_parent>
  <wp:menu_order xmlns:wp="http://wordpress.org/export/1.2/">0</wp:menu_order>
  <wp:post_type xmlns:wp="http://wordpress.org/export/1.2/">post</wp:post_type>
  <wp:post_password xmlns:wp="http://wordpress.org/export/1.2/"></wp:post_password>
  <wp:is_sticky xmlns:wp="http://wordpress.org/export/1.2/">0</wp:is_sticky>
  <category domain="category" nicename="ironpython"><![CDATA[IronPython]]></category>
  <category domain="post_tag" nicename="live-framework"><![CDATA[Live Framework]]></category>
  <category domain="post_tag" nicename="windows-live"><![CDATA[Windows Live]]></category>
  <wp:postmeta xmlns:wp="http://wordpress.org/export/1.2/">
    <wp:meta_key>dasblog_entryid</wp:meta_key>
    <wp:meta_value><![CDATA[ae997eb7-047f-4600-8b5d-e0f43c59bddd]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta xmlns:wp="http://wordpress.org/export/1.2/">
    <wp:meta_key>dasblog_compressedtitle</wp:meta_key>
    <wp:meta_value><![CDATA[IronPython+And+LiveFX+Orirsquos+LiveOEpy]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta xmlns:wp="http://wordpress.org/export/1.2/">
    <wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
    <wp:meta_value><![CDATA[2008/12/16/IronPython+And+LiveFX+Orirsquos+LiveOEpy]]></wp:meta_value>
  </wp:postmeta>
</item>