{"status":"ok","post":{"id":911,"type":"post","slug":"im-wrong-because-ruby-and-powershell-are-mainstream","url":"http:\/\/devhawk.net\/2007\/03\/15\/im-wrong-because-ruby-and-powershell-are-mainstream\/","status":"publish","title":"I&#8217;m Wrong Because Ruby and Powershell Are Mainstream","title_plain":"I&#8217;m Wrong Because Ruby and Powershell Are Mainstream","content":"<p><a href=\"http:\/\/www.agileprogrammer.com\/dotnetguy\">Brad Wilson<\/a> and <a title=\"Scott Hanselman\" href=\"http:\/\/www.hanselman.com\/blog\/\">Scott Hanselman<\/a> took me to task for my <a href=\"http:\/\/devhawk.net\/2007\/03\/13\/Morning+Coffee+44.aspx\">comment<\/a> the other day that no &#8220;mainstream&#8221; language had implemented <a href=\"http:\/\/weblogs.asp.net\/scottgu\/archive\/2007\/03\/13\/new-orcas-language-feature-extension-methods.aspx\">extension methods<\/a>:<\/p>\n<blockquote><p>How mainstream is Ruby on Rails for you? Ruby is a full fledged dynamic language. No hacks for &#8220;extension methods&#8221; (Brad)<\/p>\n<p>Ya, I kind of blanched at that statement too&#8230;method_missing is pretty mainstream&#8230; (Scott)<\/p><\/blockquote>\n<p>They&#8217;re right, Ruby does support the addition (and redefinition I think) of methods on a class at any time. There&#8217;s a sample of this in the <a href=\"http:\/\/www.ruby-doc.org\/docs\/ProgrammingRuby\/html\/classes.html\">Classes and Objects<\/a> chapter of <a href=\"http:\/\/www.ruby-doc.org\/docs\/ProgrammingRuby\/\">Programming Ruby<\/a> (aka the pick-axe book) where they add a basic documentation facility &#8220;available to any module or class&#8221; in Ruby by adding a doc instance method to the Module class.<\/p>\n<p>&nbsp;<\/p>\n<pre class=\"brush:ruby\">class Module \r\n  @@docs = Hash.new(nil) \r\n  def doc(str) \r\n    @@docs[self.name] = str \r\n  end\r\n  def Module::doc(aClass) \r\n    # If we\u2019re passed a class or module, convert to string\r\n    # (\u2018&lt;=\u2019 for classes checks for same class or subtype)\r\n    aClass = aClass.name if aClass.type &lt;= Module \r\n    @@docs[aClass] || \u201cNo documentation for #{aClass}\u201d\r\n  end\r\nend<\/pre>\n<p>Given how Ruby classes are defined, I think the newly added methods have access to the private data of the class. Extension methods in C#3\/VB9 only have access the public interface of the object. But that&#8217;s a fairly minor difference.<\/p>\n<p>&nbsp;<\/p>\n<p>FYI, Powershell can do this as well, though not as succinctly as Ruby. Scott has <a href=\"http:\/\/www.hanselman.com\/blog\/AccessingEXIFPhotoDataFromJPEGsWithPowerShell.aspx\">an example<\/a> how you can add a DatePhotoTaken property to System.IO.FileInfo using <a href=\"http:\/\/www.shahine.com\/omar\">Omar Shahine&#8217;s<\/a><a href=\"http:\/\/wiki.shahine.com\/default.aspx\/MyWiki.PhotoLibrary\">PhotoLibrary<\/a> project.<\/p>\n<p>Chalk this up to my continuing ignorance of dynamic languages. I&#8217;m working on it, albeit slowly.<\/p>\n","excerpt":"<p>Brad Wilson and Scott Hanselman took me to task for my comment the other day that no &#8220;mainstream&#8221; language had implemented extension methods: How mainstream is Ruby on Rails for you? Ruby is a full fledged dynamic language. No hacks for &#8220;extension methods&#8221; (Brad) Ya, I kind of blanched at that statement too&#8230;method_missing is pretty [&hellip;]<\/p>\n","date":"2007-03-15 13:53:13","modified":"2011-04-17 00:25:26","categories":[{"id":204,"slug":"development","title":"Development","description":"","parent":0,"post_count":165}],"tags":[{"id":229,"slug":"lanugages","title":"Lanugages","description":"","post_count":43},{"id":230,"slug":"powershell","title":"PowerShell","description":"","post_count":41},{"id":190,"slug":"ruby","title":"Ruby","description":"","post_count":23}],"author":{"id":1,"slug":"admin","name":"DevHawk","first_name":"Harry","last_name":"Pierson","nickname":"DevHawk","url":"","description":""},"comments":[{"id":2467,"name":"Anonymous","url":"","date":"2007-03-15 16:19:56","content":"<p>The biggest questions is &#8211; why invent another language for PowerShell if there are so many great popular languages already in existance?<\/p>\n","parent":0},{"id":2468,"name":"orcmid","url":"http:\/\/orcmid.com\/BlunderDome\/clueless","date":"2007-03-15 19:29:18","content":"<p>Well then, don&#8217;t both Python and Javascript count too?  You can inject new methods into any of their ordinary objects.  <\/p>\n","parent":0},{"id":2469,"name":"Jeffrey Snover","url":"","date":"2007-03-15 21:42:29","content":"<p>> The biggest questions is &#8211; why invent another language for PowerShell if > there are so many great popular languages already in existance?<\/p>\n<p>Try it and you&#8217;ll see.   I&#8217;m not aware of a language that has as wide a dynamic range as PowerShell (Please point one out if you know of one).  Bruce Payette&#8217;s book, PowerShell in Action provides both a great language reference as well as the reasoning behind the decisions we made in producing PowerShell (Bruce is the dev lead for the language).<\/p>\n<p>Jeffrey Snover [MSFT]<br \/>\nWindows PowerShell\/MMC Architect<br \/>\nVisit the Windows PowerShell Team blog at:    <a href=\"http:\/\/blogs.msdn.com\/PowerShell\" rel=\"nofollow\">http:\/\/blogs.msdn.com\/PowerShell<\/a><br \/>\nVisit the Windows PowerShell ScriptCenter at:  <a href=\"http:\/\/www.microsoft.com\/technet\/scriptcenter\/hubs\/msh.mspx\" rel=\"nofollow\">http:\/\/www.microsoft.com\/technet\/scriptcenter\/hubs\/msh.mspx<\/a><\/p>\n","parent":0},{"id":2470,"name":"DevHawk","url":"","date":"2007-03-15 22:44:55","content":"<p>orchmid, Ruby not only allows you to inject methods into objects, but into classes as well. Extension Methods in C#3\/VB9 act at the class level. Javascript doesn&#8217;t really have classes and I don&#8217;t know Python well enough to comment.<\/p>\n<p>As for why to invent another language, I certainly don&#8217;t think a single lanugage feature is enough to argue for or against the existence of the PowerShell language. I fraking love PowerShell, and it has nothing to do with the ability to add new methods to classes. <\/p>\n","parent":0}],"attachments":[],"comment_count":4,"comment_status":"closed","custom_fields":{"dasblog_entryid":["c3e358d5-10b7-413a-8f65-d8e30e8176ae"],"dasblog_compressedtitle":["Im+Wrong+Because+Ruby+And+Powershell+Are+Mainstream"],"dasblog_compressedtitleunique":["2007\/03\/15\/Im+Wrong+Because+Ruby+And+Powershell+Are+Mainstream"]}},"previous_url":"http:\/\/devhawk.net\/2007\/03\/15\/answering-dr-nicks-questions-on-ssb-wcf\/","next_url":"http:\/\/devhawk.net\/2007\/03\/16\/morning-coffee-46\/"}