{"status":"ok","post":{"id":591,"type":"post","slug":"dmd-2-dd-thanks-modelisoft","url":"http:\/\/devhawk.net\/2005\/04\/21\/dmd-2-dd-thanks-modelisoft\/","status":"publish","title":"DMD 2 DD &#8211; Thanks Modelisoft!","title_plain":"DMD 2 DD &#8211; Thanks Modelisoft!","content":"<p>Anyone who&#8217;s played with the <a href=\"http:\/\/lab.msdn.microsoft.com\/teamsystem\/Workshop\/DSLTools\/\">DSL toolkit<\/a> knows that it&#8217;s a 50\/50 experience. Building the domain model means using a pretty straight forward <a href=\"http:\/\/dnjonline.com\/images\/articles\/architect\/mar05_DSL.jpg\" class=\"grouped_elements\" rel=\"tc-fancybox-group591\">designer<\/a> (itself a DSL). Building a desinger means groveling around in a really ugly XML file. I hear that the designer design experience is going to get better in later builds, but for now it&#8217;s all hand coding. If you work thru the DSL Toolkit tutorial, you spend a lot of time finding and replacing names of domain model elements in the designer definition file. But now, Modelisoft has a utility called <a href=\"http:\/\/www.modelisoft.com\/Dmd2dd.aspx\">DMD2DD<\/a> (i.e. Domain Model Definition to Designer Defintion) that automates all of that nasty find and replace \/ hand coding. Once you build your DMD, you run their tool and it automatically adds reasonable defaults to the DD for new domain model elements and removes designer elements from the DD for domain model elements that have been removed. The <a href=\"http:\/\/modelisoft.dyndns.org\/Nouveau\/Dmd2ddTutorial.aspx\">DMD2DD tutorial<\/a> is much more straightforward than the DSL walkthru, since you don&#8217;t do all that hand editing.<\/p>\n<p>Haven&#8217;t tried it yet, but if works anywhere near as well as the tutorial makes it look I&#8217;m going to keep a sharp eye on Modelisoft. From their <a href=\"http:\/\/modelisoft.dyndns.org\/Nouveau\/Default.aspx\">homepage<\/a>, it looks like their primary business is generating and reverse engineering .NET code from\/for Rational Rose. I wonder what they&#8217;re doing w\/ the DSL Toolkit?<\/p>\n","excerpt":"<p>Anyone who&#8217;s played with the DSL toolkit knows that it&#8217;s a 50\/50 experience. Building the domain model means using a pretty straight forward designer (itself a DSL). Building a desinger means groveling around in a really ugly XML file. I hear that the designer design experience is going to get better in later builds, but [&hellip;]<\/p>\n","date":"2005-04-21 00:10:45","modified":"2005-04-21 00:10:45","categories":[{"id":177,"slug":"architecture","title":"Architecture","description":"","parent":0,"post_count":296}],"tags":[{"id":225,"slug":"modelling","title":"Modelling","description":"","post_count":61}],"author":{"id":1,"slug":"admin","name":"DevHawk","first_name":"Harry","last_name":"Pierson","nickname":"DevHawk","url":"","description":""},"comments":[],"attachments":[],"comment_count":0,"comment_status":"closed","custom_fields":{"dasblog_entryid":["79d8bb76-81e1-4600-80bf-4ffb0c7f8cc4"],"dasblog_compressedtitle":["DMD+2+DD+Thanks+Modelisoft"],"dasblog_compressedtitleunique":["2005\/04\/21\/DMD+2+DD+Thanks+Modelisoft"]}},"previous_url":"http:\/\/devhawk.net\/2005\/04\/19\/system-definition-model-sdk\/","next_url":"http:\/\/devhawk.net\/2005\/04\/21\/introducing-the-guidance-automation-toolkit\/"}