<?xml version="1.0" encoding="utf-8"?>
<wp:comment xmlns:wp="http://wordpress.org/export/1.2/">
  <wp:comment_id>2150</wp:comment_id>
  <wp:comment_author><![CDATA[Ada]]></wp:comment_author>
  <wp:comment_author_email></wp:comment_author_email>
  <wp:comment_author_url>http://AsimplewarppertoenableLinq-likestyle</wp:comment_author_url>
  <wp:comment_author_IP>207.46.92.17</wp:comment_author_IP>
  <wp:comment_date>2008-12-04 02:48:01</wp:comment_date>
  <wp:comment_date_gmt>2008-12-04 10:48:01</wp:comment_date_gmt>
  <wp:comment_content><![CDATA[import System, sys
import linq

linqs = {}
for name in dir(linq):
    if not name.startswith('__'):
        linqs[name] = getattr(linq, name)

class IpyLinq:
    def __init__(self, col):
        self.col = col
        
    def __iter__(self):
        return iter(self.col)
        
    def __str__(self):
        return '[%s]' % ', '.join( (str(v) for v in self) )
        
    def __repr__(self):
        return str(self)
        
    def __getattr__(self, name):
        def decorator(*arg, **kws):
            self.col = linqFunc(self.col, *arg, **kws)
            return self
        
        linqFunc = linqs[name]
        return decorator

if __name__ == '__main__':
    for x in IpyLinq([1, 2, 3, 4, 5]).Where(lambda x: x > 1).Where(lambda x: x < 5):
        print x]]></wp:comment_content>
  <wp:comment_approved>1</wp:comment_approved>
  <wp:comment_type></wp:comment_type>
  <wp:comment_parent>0</wp:comment_parent>
  <wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>