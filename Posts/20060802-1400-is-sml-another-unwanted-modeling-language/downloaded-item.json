{"status":"ok","post":{"id":777,"type":"post","slug":"is-sml-another-unwanted-modeling-language","url":"http:\/\/devhawk.net\/2006\/08\/02\/is-sml-another-unwanted-modeling-language\/","status":"publish","title":"Is SML Another Unwanted Modeling Language?","title_plain":"Is SML Another Unwanted Modeling Language?","content":"<p>Piyush Pant <a href=\"http:\/\/unhandledx.blogspot.com\/2006\/08\/modelling-overload.html\">wonders<\/a> if SML solves a problem that nobody has? He also points out <a href=\"http:\/\/www.sysml.org\/\">SysML<\/a>\u00a0project, which recently got folded into the <a href=\"http:\/\/omg.org\/\">OMG<\/a>. Well, that explains why we called it &#8220;Service&#8221; instead of &#8220;System&#8221; modeling language.<\/p>\n<p>Now that I work in IT, I can definitely say that SML will <em>eventually <\/em>solve a problem that I have. Most people agree that operations today is way to dependent on manual processes to scale effectively. Now SML doesn&#8217;t solve that issue directly &#8211; as Piyush pointed out SML is a meta-modeling specification. However, SML is the foundation for the next generation of operational modeling tools like what we see in <a href=\"http:\/\/msdn.microsoft.com\/vstudio\/teamsystem\/architect\/\">Visual Studio Team System for Architects<\/a>. As I <a href=\"http:\/\/devhawk.net\/2004\/02\/03\/Being+A+Model+Citizen.aspx\">wrote several years ago<\/a>, VSTS:A solves a very common problem &#8211; developers lack of understanding about the deployment environment. Piyush, haven&#8217;t you ever had a long weekend going back to the drawing board because the solution you had built was undeployable and you didn&#8217;t discover that fact until the operations team attempted to deploy it? If you haven&#8217;t, I envy you.<\/p>\n<p>On the surface, I agree with Piyush when he says that &#8220;history of software is littered with unsuccessful attempts to impose monolithic modeling constructs&#8221;. However, the fact that it keeps happening indicates the problem hasn&#8217;t been solved. Wanting to solve a problem and being able to solve a problem are two different things. Furthermore, the history of software is also littered with very successful attempts to raise the level of abstraction by the introduction of new programming languages: C, C++, VB and Ruby are all examples of this. Given that <a href=\"http:\/\/devhawk.net\/2005\/10\/05\/Code+Is+Model.aspx\">Code is Model<\/a>, what we have is a history of software littered with some successful and some unsuccessful modeling constructs. I would argue that the successful modeling constructs have taken a bottom up approach &#8211; build a language a small abstraction step above something that actually runs and compile down. These unsuccessful modeling constructs (*cough* UML *cough*) take a top down approach &#8211; build a language way above anything that actually runs and hope a miracle happens to keep it in sync with the stuff you actually build.<\/p>\n<p>The question is whether SML will be top-down (i.e. a failure) or bottoms-up (i.e. a success). So far, it&#8217;s to early to tell, but I have high hopes.<\/p>\n","excerpt":"<p>Piyush Pant wonders if SML solves a problem that nobody has? He also points out SysML\u00a0project, which recently got folded into the OMG. Well, that explains why we called it &#8220;Service&#8221; instead of &#8220;System&#8221; modeling language. Now that I work in IT, I can definitely say that SML will eventually solve a problem that I [&hellip;]<\/p>\n","date":"2006-08-02 14:00:50","modified":"2006-08-02 14:00:50","categories":[{"id":177,"slug":"architecture","title":"Architecture","description":"","parent":0,"post_count":296}],"tags":[{"id":225,"slug":"modelling","title":"Modelling","description":"","post_count":61},{"id":314,"slug":"operations","title":"Operations","description":"","post_count":3}],"author":{"id":1,"slug":"admin","name":"DevHawk","first_name":"Harry","last_name":"Pierson","nickname":"DevHawk","url":"","description":""},"comments":[{"id":2394,"name":"Piyush","url":"http:\/\/unhandledx.blogspot.com\/","date":"2006-08-02 16:27:37","content":"<p>Interesting points re: top down and bottom up &#8211; hadn&#8217;t thought of things that way and in general I agree. For this to work, though, these things need mass adoption and in an increasingly heterogenous world where systems are not all written on the technology stack of one vendor, a bottom up approach that is trying to solve a problem with a large surface area has limitations. Also, an ambitious undertaking like this seems to assume that the solution to a communication problem ( which is essentially what a modelling language solves in my opinion) , is to teach everyone to talk the same language. It doesn&#8217;t happen in the real world and I am sceptical it will happen in IT.<\/p>\n","parent":0},{"id":2395,"name":"Piyush Pant","url":"http:\/\/unhandledx.blogspot.com\/","date":"2006-08-07 06:35:00","content":"<p>I have responded to some of your ( and Pratul Dublish&#8217;s) points at<br \/>\n<a href=\"http:\/\/unhandledx.blogspot.com\/2006\/08\/further-on-sml-debate.html\" rel=\"nofollow\">http:\/\/unhandledx.blogspot.com\/2006\/08\/further-on-sml-debate.html<\/a><\/p>\n","parent":0}],"attachments":[],"comment_count":2,"comment_status":"closed","custom_fields":{"dasblog_entryid":["60f69211-7e93-4175-bc70-431d479688e6"],"dasblog_compressedtitle":["Is+SML+Another+Unwanted+Modeling+Language"],"dasblog_compressedtitleunique":["2006\/08\/02\/Is+SML+Another+Unwanted+Modeling+Language"]}},"previous_url":"http:\/\/devhawk.net\/2006\/08\/02\/lang-net-is-helping-game-developers\/","next_url":"http:\/\/devhawk.net\/2006\/08\/14\/a-few-short-takes\/"}