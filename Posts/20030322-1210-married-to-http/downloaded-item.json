{"status":"ok","post":{"id":48,"type":"post","slug":"married-to-http","url":"http:\/\/devhawk.net\/2003\/03\/22\/married-to-http\/","status":"publish","title":"Married to HTTP","title_plain":"Married to HTTP","content":"<blockquote><p> Oh, the irony, the Microsoft folks are busy <a href=\"http:\/\/www.gotdotnet.com\/team\/tewald\/default.aspx#nn2003-03-21T03:23:54Z\"> singing the<\/a><a href=\"http:\/\/www.keithba.net\/blog\/\">praises<\/a> of <a href=\"http:\/\/msdn.microsoft.com\/webservices\/default.aspx?pull=\/library\/en-us\/dnglobspec\/html\/ws-addressing.asp\"> WS-Addressing<\/a>, for its transport independentness whilst their primary web services stack is for all practical purposes hopelessly tied to HTTP. <br \/> [<a href=\"http:\/\/www.pocketsoap.com\/weblog\/2003\/03\/21.html#a1124\">Simon Fell &gt; Its just code<\/a>]<\/p><\/blockquote>\n<p>As of WS-I Basic Profile 1.0, Web Services are &#8220;hopelessly tied to HTTP&#8221;. It isn&#8217;t until you add in all the <a href=\"http:\/\/msdn.microsoft.com\/webservices\/understanding\/specs\/default.aspx\"> GXA Specifications<\/a> that you start breaking up the marriage to HTTP (and the <a href=\"http:\/\/www.gotdotnet.com\/team\/tewald\/default.aspx?key=2003-03-21T03:23:54Z\"> RPC Processing Model<\/a>). Quoting from the WS-I spec:<\/p>\n<blockquote><p>SOAP 1.1 defines a single protocol binding, for HTTP. The Profile mandates the use of that binding<\/p>\n<\/blockquote>\n<blockquote><p>R2702 : A DESCRIPTION MUST use HTTP transport protocol with SOAP binding. Specifically, the transport attribute of soapbind:binding element MUST have the value &#8220;http:\/\/schemas.xmlsoap.org\/soap\/http&#8221;.<\/p>\n<p>For interoperability the transport protocol is limited to HTTP. To permit secure transfers at the HTTP level use of HTTP(S) is allowed.<\/p>\n<p>[<a href=\"http:\/\/www.ws-i.org\/Profiles\/Basic\/2003-01\/BasicProfile-1.0-WGAD.html\">WS-I Basic Profile v1.0 Working Group Approval Draft<\/a>]<\/p>\n<\/blockquote>\n<p>Additionally, the <a href=\"http:\/\/microsoft.com\/downloads\/details.aspx?FamilyId=06255A94-2635-4D29-A90C-28B282993A41&amp;displaylang=en\"> WSE toolkit<\/a> is NOT tied to HTTP. One of the more interesting classes in the toolkit is SoapEnvelope. It&#8217;s an extension to XmlDocument that adds all the SOAP specific logic. So if you want to do web services w\/o being tied to HTTP, WSE provides all the plumbing you need &#8211; just add the transport. <\/p>\n","excerpt":"<p>Oh, the irony, the Microsoft folks are busy singing thepraises of WS-Addressing, for its transport independentness whilst their primary web services stack is for all practical purposes hopelessly tied to HTTP. [Simon Fell &gt; Its just code] As of WS-I Basic Profile 1.0, Web Services are &#8220;hopelessly tied to HTTP&#8221;. It isn&#8217;t until you add [&hellip;]<\/p>\n","date":"2003-03-22 12:10:23","modified":"2003-03-22 12:10:23","categories":[],"tags":[],"author":{"id":1,"slug":"admin","name":"DevHawk","first_name":"Harry","last_name":"Pierson","nickname":"DevHawk","url":"","description":""},"comments":[],"attachments":[],"comment_count":0,"comment_status":"closed","custom_fields":{"dasblog_entryid":["10f7ef9c-5de6-4abc-90be-a9a4b3fd499d"],"dasblog_compressedtitle":["Married+To+HTTP"],"dasblog_compressedtitleunique":["2003\/03\/22\/Married+To+HTTP"]}},"previous_url":"http:\/\/devhawk.net\/2003\/03\/21\/ws-addressing\/","next_url":"http:\/\/devhawk.net\/2003\/03\/23\/recent-reading\/"}