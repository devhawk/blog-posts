{"status":"ok","post":{"id":1188,"type":"post","slug":"ironpython-and-wpf-part-1-introduction","url":"http:\/\/devhawk.net\/2008\/11\/12\/ironpython-and-wpf-part-1-introduction\/","status":"publish","title":"IronPython and WPF Part 1: Introduction","title_plain":"IronPython and WPF Part 1: Introduction","content":"<p>I decided to start my IronPython and \u201c<a href=\"http:\/\/devhawk.net\/2008\/11\/13\/IronPython+And+LtInsert+MSFT+Technology+Heregt.aspx\">veritable universe of cool technologies<\/a>\u201d examples with WPF. I figured that since we already have Silverlight support, there might be some overlap (there was). Futhermore, after seeing <a href=\"http:\/\/www.hanselman.com\/blog\/PDC2008BabySmashPreparations.aspx\">BabySmash on Surface<\/a> I\u2019m jonesing to build a <a href=\"http:\/\/www.microsoft.com\/surface\/index.html\">Surface<\/a> app of my own. Getting vanilla WPF working with IPy seems like a smart step before trying to build a Surface WPF app with IPy.<\/p>\n<p>WPF is all about cool graphics, so I decided to build a photo viewing app. Kinda boring, I know. But it turns out my wife has posted <a href=\"http:\/\/techiewife.spaces.live.com\/photos\/\">hundreds of photos<\/a> to her <a href=\"http:\/\/techiewife.spaces.live.com\/\">WL Space<\/a>, and WL Spaces provides convenient RSS feeds of both <a href=\"http:\/\/techiewife.spaces.live.com\/photos\/feed.rss\">photo albums<\/a> as well as <a href=\"http:\/\/techiewife.spaces.live.com\/photos\/cns!3DAECC033B88329C!2885\/feed.rss\">photos in specific albums<\/a>. So I built out a simple WPF based photo viewer for my wife\u2019s WL Space photos in IronPython.<\/p>\n<p><a href=\"http:\/\/s3.amazonaws.com\/devhawk_images\/WindowsLiveWriter\/IronPythonandWPF_EFC4\/image_4.png\" class=\"grouped_elements\" rel=\"tc-fancybox-group1188\"><img style=\"border-right-width: 0px; display: block; float: none; border-top-width: 0px; border-bottom-width: 0px; margin-left: auto; border-left-width: 0px; margin-right: auto\" title=\"TechieWife Photo Viewer screenshot\" border=\"0\" alt=\"TechieWife Photo Viewer screenshot\" src=\"http:\/\/s3.amazonaws.com\/devhawk_images\/WindowsLiveWriter\/IronPythonandWPF_EFC4\/image_thumb_1.png\" width=\"684\" height=\"380\" \/><\/a><\/p>\n<p>As you can see, I&#8217;m not quitting my job to go pursue a career in design anytime soon. But hey, the point is demonstrate building a WPF app in IPy, not to be a great designer. Plus, don\u2019t those cute kids make up for the ugliness of the app?<\/p>\n<p>Turns out building this app in IPy was fairly straightforward, with a few pitfalls. I wasted half a day digging thru data binding before realized that data binding against IPy objects works out of the box &#8211; but only if you type the case of the property correctly (Title != title). Also, I couldn\u2019t make TypeConverters work the way I wanted, but python list comprehensions made it enough to transform the feed data before binding it to the UI. That approach worked great for this scenario but maybe not so much for others. (I\u2019ve got feelers out to the WPF data binding wonks, so maybe there\u2019s still hope for type converters) <\/p>\n<p>Over the next several posts, I\u2019m going to show you all the code for this app. It\u2019s pretty small, only about 50 lines of app-specific python code + 50 lines of XAML to describe the window. There\u2019s also some reusable code \u2013 50 lines of WPF module code (mostly stolen from avalon.py in the IPy tutorial), 200 lines of xml2py code <a href=\"http:\/\/devhawk.net\/2008\/05\/07\/Deserializing+XML+With+IronPython.aspx\">which I\u2019ve discussed before<\/a> and a very small C# based assembly to make accessing WPF elements by name very pythonic. <\/p>\n","excerpt":"<p>I decided to start my IronPython and \u201cveritable universe of cool technologies\u201d examples with WPF. I figured that since we already have Silverlight support, there might be some overlap (there was). Futhermore, after seeing BabySmash on Surface I\u2019m jonesing to build a Surface app of my own. Getting vanilla WPF working with IPy seems like [&hellip;]<\/p>\n","date":"2008-11-12 17:18:33","modified":"2008-11-12 17:18:33","categories":[{"id":252,"slug":"ironpython","title":"IronPython","description":"","parent":0,"post_count":99}],"tags":[{"id":271,"slug":"wpf","title":"WPF","description":"","post_count":8}],"author":{"id":1,"slug":"admin","name":"DevHawk","first_name":"Harry","last_name":"Pierson","nickname":"DevHawk","url":"","description":""},"comments":[],"attachments":[],"comment_count":0,"comment_status":"closed","custom_fields":{"dasblog_entryid":["15692716-a6ef-48f3-8fa4-afc9ddc4cc3d"],"dasblog_compressedtitle":["IronPython+And+WPF+Part+1+Introduction"],"dasblog_compressedtitleunique":["2008\/11\/13\/IronPython+And+WPF+Part+1+Introduction"]}},"previous_url":"http:\/\/devhawk.net\/2008\/11\/12\/ironpython-and-insert-msft-technology-here\/","next_url":"http:\/\/devhawk.net\/2008\/11\/14\/ironpython-and-wpf-part-2-loading-xaml\/"}