<?xml version="1.0" encoding="utf-8"?>
<wp:comment xmlns:wp="http://wordpress.org/export/1.2/">
  <wp:comment_id>2436</wp:comment_id>
  <wp:comment_author><![CDATA[Tomas Restrepo]]></wp:comment_author>
  <wp:comment_author_email>tomas@winterdom.com</wp:comment_author_email>
  <wp:comment_author_url>http://www.winterdom.com/weblog</wp:comment_author_url>
  <wp:comment_author_IP>200.116.233.120</wp:comment_author_IP>
  <wp:comment_date>2006-12-11 16:11:51</wp:comment_date>
  <wp:comment_date_gmt>2006-12-12 00:11:51</wp:comment_date_gmt>
  <wp:comment_content><![CDATA[The WF transaction model makes more sense if you come from a BizTalk background (like me), because BizTalk has essentially the same restriction. 

That said, BizTalk is far, far more flexible in its transaction facilities, but you still have to remember that message receive and send operations operate in completely separate transactions from orchestrations. However, this is improved in BizTalk because you have the MessageBox right in the middle of the messaging engine and the orchestration engine which makes implementing your kind of scenario completely natural even under the two-transaction separation.

I'm not quite sure I agree about the whole poison message thingie, though. First of all, handling "real" poison messages (i.e. malformed ones that you really need to discard) requires breaking In-order delivery semantics if you hope to keep processing. The only way to avoid if the problematic message is important is to completely stop processing, fix the offending message(s) and resume processing. And this, I think, pretty much is all across the board (not specific to SSSB or MSMQ). 

Second, MSMQ does support in-order delivery, afaik, for *messages sent in the same transaction*. This is key because MSMQ doesn't have the notion of a conversation/dialog like SSSB does (though it's certainly possible to implement it if you really want it). That said, I think you may be talking more about "in-order processing", which is a completely different thing, and which you seem to be dismissing. I'm not quite sure why you'd care so much about in-order delivery if you're not doing in-order processing after that (i.e. message 2 might finish processing before message-1 does), so that might be something to consider.

]]></wp:comment_content>
  <wp:comment_approved>1</wp:comment_approved>
  <wp:comment_type></wp:comment_type>
  <wp:comment_parent>0</wp:comment_parent>
  <wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>