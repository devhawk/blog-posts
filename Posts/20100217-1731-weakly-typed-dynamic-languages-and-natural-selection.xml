<?xml version="1.0" encoding="utf-8"?>
<item>
  <title>Weakly Typed Dynamic Languages and Natural Selection</title>
  <link>http://devhawk.net/2010/02/17/weakly-typed-dynamic-languages-and-natural-selection/</link>
  <pubDate>Wed, 17 Feb 2010 17:31:35 +0000</pubDate>
  <dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">devhawk</dc:creator>
  <guid isPermaLink="false">http://7e10e7c7-af7c-494d-aab5-eba47d58d67f</guid>
  <description></description>
  <content:encoded xmlns:content="http://purl.org/rss/1.0/modules/content/"><![CDATA[<p>I’m not reading much in the way of blogs or twitter these days – way to heads down in my new job for that right now. But I did see Scott Hanselman’s post on <a href="http://www.hanselman.com/blog/BackToBasicsC4MethodOverloadingAndDynamicTypes.aspx">method overloading and dynamic types</a> and Ted Neward’s follow-on post <a href="http://blogs.tedneward.com/2010/02/14/Dont+Fear+The+DynamicVARIANTReaper.aspx">static-typing fundamentalism</a>. Even though I’ve moved on from the IronPython team, dynamic typing is a topic that’s still <a href="http://www.zazzle.com/you_had_me_at_dynamic_shirt-235421109922997983">near and dear to my heart</a> so I can’t resist throwing in my 2¢.</p><p>First off, I agree 100% with Ted’s post - though not the over-the-top mocking tone. These static &gt; dynamic flame bait comments are so tired that they’ve literally become cliché. I agree with Ted’s points, but by answering fire with fire he’s just perpetuating the flame war that he claims to be so tired of. I really am tired of it, so I’m not going to bother to address any of the original anti-dynamic typing faux-arguments (fauxguments?) nor Ted’s artful and devastatingly mocking takedown of them.</p><p>But I do have a question for any static-typing fundamentalists in the audience: if static typing is so much better than dynamic typing, then how come dynamically typed languages are so popular? Doesn’t natural selection apply to type systems?</p><p>Those aren’t rhetorical questions. Building software takes time and effort. While developers often donate time and effort to projects (see: open source) typically they work for money. That money has to come from somewhere – usually it comes from someone who needs the software built for some business reason. And the people footing the bill for software construction demand the highest return on investment they can get.</p><p>If dynamic typing or VARIANT (which is actually weak not dynamic typing, but I digress) really did create “horrific devastation”, wouldn’t that have caused a negative feedback loop where the business people who actually foot the bills for creating software became wary and untrusting of using VB as the language of choice for their projects in favor of strong and statically typed languages that helped developers “make good choices”?</p><p>Yet the opposite happened. VB was the most popular programming language in the world for the better part of a decade. And while VB’s reign at the top is over, I’d argue that these days the most popular programming languages are PHP and JavaScript, both of which are weakly typed dynamic languages too. </p><p>Now clearly, popular != better. However, static-typing fundamentalism isn’t an argument about which way is “better” so much as an argument about which way is “worthy”. But how can you argue that you’re approach is the only worthy path when the opposite approach has been so successful? Remember, one developer’s “horrific devastation” might be another businessman's “successful project because it helped me enter a new market faster than my competitors”.  </p>]]></content:encoded>
  <excerpt:encoded xmlns:excerpt="http://wordpress.org/export/1.2/excerpt/"><![CDATA[]]></excerpt:encoded>
  <wp:post_id xmlns:wp="http://wordpress.org/export/1.2/">1302</wp:post_id>
  <wp:post_date xmlns:wp="http://wordpress.org/export/1.2/">2010-02-17 17:31:35</wp:post_date>
  <wp:post_date_gmt xmlns:wp="http://wordpress.org/export/1.2/">2010-02-17 17:31:35</wp:post_date_gmt>
  <wp:comment_status xmlns:wp="http://wordpress.org/export/1.2/">open</wp:comment_status>
  <wp:ping_status xmlns:wp="http://wordpress.org/export/1.2/">open</wp:ping_status>
  <wp:post_name xmlns:wp="http://wordpress.org/export/1.2/">weakly-typed-dynamic-languages-and-natural-selection</wp:post_name>
  <wp:status xmlns:wp="http://wordpress.org/export/1.2/">publish</wp:status>
  <wp:post_parent xmlns:wp="http://wordpress.org/export/1.2/">0</wp:post_parent>
  <wp:menu_order xmlns:wp="http://wordpress.org/export/1.2/">0</wp:menu_order>
  <wp:post_type xmlns:wp="http://wordpress.org/export/1.2/">post</wp:post_type>
  <wp:post_password xmlns:wp="http://wordpress.org/export/1.2/"></wp:post_password>
  <wp:is_sticky xmlns:wp="http://wordpress.org/export/1.2/">0</wp:is_sticky>
  <category domain="category" nicename="development"><![CDATA[Development]]></category>
  <category domain="post_tag" nicename="dynamic-languages"><![CDATA[Dynamic Languages]]></category>
  <category domain="post_tag" nicename="lanugages"><![CDATA[Lanugages]]></category>
  <category domain="post_tag" nicename="visual-basic"><![CDATA[Visual Basic]]></category>
  <wp:postmeta xmlns:wp="http://wordpress.org/export/1.2/">
    <wp:meta_key>dasblog_entryid</wp:meta_key>
    <wp:meta_value><![CDATA[7e10e7c7-af7c-494d-aab5-eba47d58d67f]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta xmlns:wp="http://wordpress.org/export/1.2/">
    <wp:meta_key>dasblog_compressedtitle</wp:meta_key>
    <wp:meta_value><![CDATA[Weakly+Typed+Dynamic+Languages+And+Natural+Selection]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta xmlns:wp="http://wordpress.org/export/1.2/">
    <wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
    <wp:meta_value><![CDATA[2010/02/18/Weakly+Typed+Dynamic+Languages+And+Natural+Selection]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment xmlns:wp="http://wordpress.org/export/1.2/">
    <wp:comment_id>2296</wp:comment_id>
    <wp:comment_author><![CDATA[Eduardo Jezierski]]></wp:comment_author>
    <wp:comment_author_email>edjez@instedd.org</wp:comment_author_email>
    <wp:comment_author_url>http://edjez.instedd.org</wp:comment_author_url>
    <wp:comment_author_IP>24.16.46.17</wp:comment_author_IP>
    <wp:comment_date>2010-02-17 18:16:49</wp:comment_date>
    <wp:comment_date_gmt>2010-02-18 02:16:49</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[You may have to look at the most successful set of patterns on the planet, and how dynamic typing may or may not help them.

http://www.joeyoder.com/papers/patterns/BBOM/mud.html

and...forget kittens! Dynamic typed languages are pumping hundreds of thousands of messages to/from surviving Haitians, in direct communication with low-level protocols from telecommunications companies. 
http://code.google.com/p/nuntium/]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
  </wp:comment>
  <wp:comment xmlns:wp="http://wordpress.org/export/1.2/">
    <wp:comment_id>2297</wp:comment_id>
    <wp:comment_author><![CDATA[Ryan Riley]]></wp:comment_author>
    <wp:comment_author_email>ryan.riley@panesofglass.org</wp:comment_author_email>
    <wp:comment_author_url>http://wizardsofsmart.net</wp:comment_author_url>
    <wp:comment_author_IP>66.193.255.227</wp:comment_author_IP>
    <wp:comment_date>2010-02-18 13:25:26</wp:comment_date>
    <wp:comment_date_gmt>2010-02-18 21:25:26</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Nice post. Interestingly enough, the most statically typed languages are functional languages with strong type inference that removes almost any need for type declaration (Haskell, F#, etc). Funny enough, these functional languages come with REPLs just like the dynamic languages, so in the end, one must conclude it isn't static vs. dynamic; it's "script" languages that rule the world. ;)]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
  </wp:comment>
  <wp:comment xmlns:wp="http://wordpress.org/export/1.2/">
    <wp:comment_id>2298</wp:comment_id>
    <wp:comment_author><![CDATA[Scott Koon]]></wp:comment_author>
    <wp:comment_author_email>scott@lazycoder.com</wp:comment_author_email>
    <wp:comment_author_url>http://lazycoder.com</wp:comment_author_url>
    <wp:comment_author_IP>207.155.204.150</wp:comment_author_IP>
    <wp:comment_date>2010-02-22 12:46:21</wp:comment_date>
    <wp:comment_date_gmt>2010-02-22 20:46:21</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[I generally leave out JavaScript whenever I talk about "popular dynamic languages" simply because there were NO other alternatives to writing client-side code in the web browser. I loves me some JavaScript, but if you're the only man left on an earth full of women, you're gonna get some lovin'.

PHP belongs on the popular list as does Python. People don't talk about Python a lot, but generally chugging away in academia or scientific research there's usually a bunch of Python scripts holding things together.

re: static typing - I always smirk when I attend a talk or read a blog post about the latest compiler gymnastics you can perform on the CLR to avoid having to pay homage to a dead typing system. 90% of all the current design patterns and best practices vanish when you use a dynamic language IMO.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
  </wp:comment>
</item>