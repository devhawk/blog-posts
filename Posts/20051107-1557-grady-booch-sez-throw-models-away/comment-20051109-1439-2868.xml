<?xml version="1.0" encoding="utf-8"?>
<wp:comment xmlns:wp="http://wordpress.org/export/1.2/">
  <wp:comment_id>2868</wp:comment_id>
  <wp:comment_author><![CDATA[CatoTheElderII]]></wp:comment_author>
  <wp:comment_author_email>jefffee@yahoo.com</wp:comment_author_email>
  <wp:comment_author_url></wp:comment_author_url>
  <wp:comment_author_IP>63.103.225.2</wp:comment_author_IP>
  <wp:comment_date>2005-11-09 14:39:36</wp:comment_date>
  <wp:comment_date_gmt>2005-11-09 22:39:36</wp:comment_date_gmt>
  <wp:comment_content><![CDATA[I think what they are saying is that you should use the UML at first to design the system, but since UML tools do not do a good job of making it easy to keep code and UML models in synch you get to a point where the maintenance is no longer worth the benefit, and therefore they toss the UML models in the trash after that point is reached.  There would be no point in keeping them unless you intend to keep them up to date with the code, and since that becomes very burdensome after a while, it is more economical to throw them away.  This, of course, has nothing to do with wether or not UML models are useful, of course they are.  It has everything to do with the failure of the tools to provide an easy means of syncrhonizing code and models.  Makes sense to me.  If the tools vendors make the link then you will find the "throw them away" rule abandonned and people will then say, "Keep them".   That's my take.]]></wp:comment_content>
  <wp:comment_approved>1</wp:comment_approved>
  <wp:comment_type></wp:comment_type>
  <wp:comment_parent>0</wp:comment_parent>
  <wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>