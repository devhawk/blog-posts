<?xml version="1.0" encoding="utf-8"?>
<wp:comment xmlns:wp="http://wordpress.org/export/1.2/">
  <wp:comment_id>2867</wp:comment_id>
  <wp:comment_author><![CDATA[Tomas Restrepo]]></wp:comment_author>
  <wp:comment_author_email>tomasr@mvps.org</wp:comment_author_email>
  <wp:comment_author_url>http://www.winterdom.com/weblog</wp:comment_author_url>
  <wp:comment_author_IP>200.116.198.52</wp:comment_author_IP>
  <wp:comment_date>2005-11-08 03:09:35</wp:comment_date>
  <wp:comment_date_gmt>2005-11-08 11:09:35</wp:comment_date_gmt>
  <wp:comment_content><![CDATA[Well, to me the UML diagrams are just a tool, a means to an end, but not the end itself. They are very nice to quickly visualize and start thinking about the relationships in the code and it's behavior, but there comes a moment at which code is just so much better at it that it might not be useful to keep synching them by hand. 

What I mean is that, at that point, the UML diagrams become useful as a visualization tool, and no longer as useful as a design tool (though by no means useless); and that's where model generation from code becomes far more interesting.]]></wp:comment_content>
  <wp:comment_approved>1</wp:comment_approved>
  <wp:comment_type></wp:comment_type>
  <wp:comment_parent>0</wp:comment_parent>
  <wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>