<?xml version="1.0" encoding="utf-8"?>
<item>
  <title>Intergrate vs. Interoperate</title>
  <link>http://devhawk.net/2004/01/22/intergrate-vs-interoperate/</link>
  <pubDate>Thu, 22 Jan 2004 14:05:17 +0000</pubDate>
  <dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">devhawk</dc:creator>
  <guid isPermaLink="false">http://55924b25-2011-41ab-91a9-5374c92d5706</guid>
  <description></description>
  <content:encoded xmlns:content="http://purl.org/rss/1.0/modules/content/"><![CDATA[<p align="left">I found this <a href="http://www.itnews.com.au/storycontent.asp?ID=8&amp;Art_ID=17952">interview</a> with the BEA deputy CTO Benjamin Renaud via a <a href="http://www.theserverside.net/news/thread.aspx?thread_id=23432">news post</a> on <a href="http://www.theserverside.net/">TSS.NET</a>. BEA's position is summed up in the following quote:</p><blockquote><p align="left">"Microsoft will standardise at the protocol level, but they won't standardise at the API level," he said. "Customers are not that gullible. The real level where integration happens is at the programming level."</p></blockquote><p align="left">I like <a href="http://www.theserverside.net/articles/article.aspx?l=Welcome">Ted's</a> response to this:</p><blockquote><p align="left">We're sorry, Mr. Renaud, but integration isn't necessarily what web services are after--interoperability, in the form of loosely coupled components that know how to exchange messages of data, are the key to truly powerful web services. If you want programmatic integration, you have to standabrdize on programming platform and language, and that's not what web services were supposed to be for. <br /><br />As to his complaint that Microsoft is engaged in a huge bait-and-switch, we believe he's either not putting enough faith in the development community to see this conspiracy, or else he's trying to cry foul over the fact that BEA has to compete with others in the Java space for the web services dollar, where Microsoft stands relatively alone. </p></blockquote><p align="left">However, I'm not sure what Ted's driving at with his interop vs. integration argument. To me, they seem to go hand in hand - two great tastes that taste great together. Web services are important for both. If I'm not integrating disparate systems, I probably don't care about interop that much. </p><p align="left">Personally, I care much more about integration than interop. Even if I was going to build a system-of-systems all using only .NET technology, I would still use a service-oriented approach and implement those services using web service technology. The service-oriented approach allows me to be more flexible in the way I stitch my services together. Using web service technology allows me to leverage platform technology (ASMX, WSE, Indigo, etc) so I don't have to roll the whole stack myself. The fact that I get interop "for free" by using this approach is an extra bonus that I don't really care much about - at first. That built-in interop, even in this single-platform-which-never-happens-in-the-real-world scenario, helps make my systems future-resistant (nothing is future-proof). New customers, new partners, mergers - come what may, I have a better-than-average chance of being able to integrate it into my system. That gives me an real advantage ($$$) in the marketplace.</p><p align="left">Of course, back in the real-world where you're creating a system-of-systems from a series of stand-alone systems that are all built with different platforms, interop is much more important. But that doesn't mean integration is any less important.</p>]]></content:encoded>
  <excerpt:encoded xmlns:excerpt="http://wordpress.org/export/1.2/excerpt/"><![CDATA[]]></excerpt:encoded>
  <wp:post_id xmlns:wp="http://wordpress.org/export/1.2/">288</wp:post_id>
  <wp:post_date xmlns:wp="http://wordpress.org/export/1.2/">2004-01-22 14:05:17</wp:post_date>
  <wp:post_date_gmt xmlns:wp="http://wordpress.org/export/1.2/">2004-01-22 14:05:17</wp:post_date_gmt>
  <wp:comment_status xmlns:wp="http://wordpress.org/export/1.2/">open</wp:comment_status>
  <wp:ping_status xmlns:wp="http://wordpress.org/export/1.2/">open</wp:ping_status>
  <wp:post_name xmlns:wp="http://wordpress.org/export/1.2/">intergrate-vs-interoperate</wp:post_name>
  <wp:status xmlns:wp="http://wordpress.org/export/1.2/">publish</wp:status>
  <wp:post_parent xmlns:wp="http://wordpress.org/export/1.2/">0</wp:post_parent>
  <wp:menu_order xmlns:wp="http://wordpress.org/export/1.2/">0</wp:menu_order>
  <wp:post_type xmlns:wp="http://wordpress.org/export/1.2/">post</wp:post_type>
  <wp:post_password xmlns:wp="http://wordpress.org/export/1.2/"></wp:post_password>
  <wp:is_sticky xmlns:wp="http://wordpress.org/export/1.2/">0</wp:is_sticky>
  <category domain="category" nicename="architecture"><![CDATA[Architecture]]></category>
  <category domain="post_tag" nicename="soa"><![CDATA[SOA]]></category>
  <wp:postmeta xmlns:wp="http://wordpress.org/export/1.2/">
    <wp:meta_key>dasblog_entryid</wp:meta_key>
    <wp:meta_value><![CDATA[55924b25-2011-41ab-91a9-5374c92d5706]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta xmlns:wp="http://wordpress.org/export/1.2/">
    <wp:meta_key>dasblog_compressedtitle</wp:meta_key>
    <wp:meta_value><![CDATA[Intergrate+Vs+Interoperate]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta xmlns:wp="http://wordpress.org/export/1.2/">
    <wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
    <wp:meta_value><![CDATA[2004/01/22/Intergrate+Vs+Interoperate]]></wp:meta_value>
  </wp:postmeta>
</item>