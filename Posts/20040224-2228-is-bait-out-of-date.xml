<?xml version="1.0" encoding="utf-8"?>
<item>
  <title>Is BAIT Out of Date?</title>
  <link>http://devhawk.net/2004/02/24/is-bait-out-of-date/</link>
  <pubDate>Tue, 24 Feb 2004 22:28:56 +0000</pubDate>
  <dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">devhawk</dc:creator>
  <guid isPermaLink="false">http://1726cf0e-e9a2-4c0f-a20e-eb994f3bef78</guid>
  <description></description>
  <content:encoded xmlns:content="http://purl.org/rss/1.0/modules/content/"><![CDATA[<p>I was re-reading the <a href="http://msdn.microsoft.com/architecture/overview/default.aspx?pull=/library/en-us/dnea/html/eaarchover.asp">Microsoft Architecture Overview</a> by <a href="http://blogs.msdn.com/michael_Platt/">Michael Platt</a> that's up on <a href="http://msdn.microsoft.com/architecture/">Architecture Center</a>. It's a little old, but still very valuable. In the overview, Michael discusses four perspectives on the enterprise architecture: business, application, information, and technology which are commonly collectively referred to as BAIT. (Note, I think it was Meta Group coined the term BAIT, but I'm not sure. Whoever did come up with the term, I'm pretty sure that it wasn't MSFT). However, as we march forward building services, I wonder if we need to regularly consider a couple of more perspectives. </p><p>I don't think service-orientation dramatically affect business or technology architecture. One of the big advantages of using web services to implement your services is that you can reuse a lot of the web-based technology infrastructure that companies spent the later part of the nineties building out. Likewise, while services will enable organizations to be agile and better achieve their business goals, I don't think it changes the actual goals significantly. However, application and technology architecture change radically when moving from an application-centric to a service-oriented approach. </p><p>When considering services, the application perspective is broadened to include both applications and services. According to our <a href="http://msdn.microsoft.com/architecture/application/default.aspx?pull=/library/en-us/dnea/html/eaappconland.asp">conceptual architecture</a>, an <a href="http://msdn.microsoft.com/architecture/application/default.aspx?pull=/library/en-us/dnea/html/eaappconapplications.asp">application</a> implements a user interface while a <a href="http://msdn.microsoft.com/architecture/application/default.aspx?pull=/library/en-us/dnea/html/eaappconservices.asp">service</a> is a discrete unit of logic exposing a message-based interface. Even though they are both typically written in code, I'm not sure lumping them together is the right architectural approach. Building a single service has many architectural similarities to building an application, but an SO design also has to tackle the architecture as a system-of-systems which the application-centric approach never had to worry about. </p><p>Likewise, the information perspective currently covers data both inside services (or apps - here the distinction is less important) and inside messages. Obviously, the approach to data private to a service will differ greatly from the approach to data inside messages. Things like transactional integrity, immutability, extensibility and encapsulation apply very differently to data and message architecture.</p><p>Each of the perspectives covers many different subtopics, so maybe there's no need to break services out from applications or messages out from information. However, I'm <a href="http://msdn.microsoft.com/architecture/community/newsletter/102003newsletter.aspx">on record</a> stating that I think using services "represents a fundamental change to the architecture model that the vast majority of systems running today were built on". Thus, I think that fundamental change should be surfaced in language we use to describe the architecture, since language influences thought. Granted, BSMAIT isn't as cool an acronym as BAIT, but it's far more representative of the way the next generation of systems are going to be architected.</p>]]></content:encoded>
  <excerpt:encoded xmlns:excerpt="http://wordpress.org/export/1.2/excerpt/"><![CDATA[]]></excerpt:encoded>
  <wp:post_id xmlns:wp="http://wordpress.org/export/1.2/">319</wp:post_id>
  <wp:post_date xmlns:wp="http://wordpress.org/export/1.2/">2004-02-24 22:28:56</wp:post_date>
  <wp:post_date_gmt xmlns:wp="http://wordpress.org/export/1.2/">2004-02-24 22:28:56</wp:post_date_gmt>
  <wp:comment_status xmlns:wp="http://wordpress.org/export/1.2/">open</wp:comment_status>
  <wp:ping_status xmlns:wp="http://wordpress.org/export/1.2/">open</wp:ping_status>
  <wp:post_name xmlns:wp="http://wordpress.org/export/1.2/">is-bait-out-of-date</wp:post_name>
  <wp:status xmlns:wp="http://wordpress.org/export/1.2/">publish</wp:status>
  <wp:post_parent xmlns:wp="http://wordpress.org/export/1.2/">0</wp:post_parent>
  <wp:menu_order xmlns:wp="http://wordpress.org/export/1.2/">0</wp:menu_order>
  <wp:post_type xmlns:wp="http://wordpress.org/export/1.2/">post</wp:post_type>
  <wp:post_password xmlns:wp="http://wordpress.org/export/1.2/"></wp:post_password>
  <wp:is_sticky xmlns:wp="http://wordpress.org/export/1.2/">0</wp:is_sticky>
  <category domain="category" nicename="architecture"><![CDATA[Architecture]]></category>
  <category domain="post_tag" nicename="soa"><![CDATA[SOA]]></category>
  <wp:postmeta xmlns:wp="http://wordpress.org/export/1.2/">
    <wp:meta_key>dasblog_entryid</wp:meta_key>
    <wp:meta_value><![CDATA[1726cf0e-e9a2-4c0f-a20e-eb994f3bef78]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta xmlns:wp="http://wordpress.org/export/1.2/">
    <wp:meta_key>dasblog_compressedtitle</wp:meta_key>
    <wp:meta_value><![CDATA[Is+BAIT+Out+Of+Date]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta xmlns:wp="http://wordpress.org/export/1.2/">
    <wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
    <wp:meta_value><![CDATA[2004/02/25/Is+BAIT+Out+Of+Date]]></wp:meta_value>
  </wp:postmeta>
</item>