<?xml version="1.0" encoding="utf-8"?>
<wp:comment xmlns:wp="http://wordpress.org/export/1.2/">
  <wp:comment_id>2257</wp:comment_id>
  <wp:comment_author><![CDATA[Lo'sos']]></wp:comment_author>
  <wp:comment_author_email></wp:comment_author_email>
  <wp:comment_author_url></wp:comment_author_url>
  <wp:comment_author_IP>66.228.93.154</wp:comment_author_IP>
  <wp:comment_date>2009-09-22 12:58:36</wp:comment_date>
  <wp:comment_date_gmt>2009-09-22 19:58:36</wp:comment_date_gmt>
  <wp:comment_content><![CDATA[XMPP is still polling. It's not a naive polling, but polling none the less.
With the client behind NAT/firewall, there doesn't seem to be any way around that. It's the client who is responsible for initiating request. Even if one uses smart tricks with multiple mini-requests and responses to emulate biderectional communications. It's still synchronous request/response model under the hood.
On the other side, if network lattency is low, client and server resources are abundant, and there is no true real-time requirements (all of which is typically the case for all the "webby" things), it should suffice for quite a few (if not most) usage scenarios.]]></wp:comment_content>
  <wp:comment_approved>1</wp:comment_approved>
  <wp:comment_type></wp:comment_type>
  <wp:comment_parent>0</wp:comment_parent>
  <wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>