<?xml version="1.0" encoding="utf-8"?>
<item>
  <title>Responses on REST</title>
  <link>http://devhawk.net/2007/05/29/responses-on-rest/</link>
  <pubDate>Tue, 29 May 2007 12:54:33 +0000</pubDate>
  <dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">devhawk</dc:creator>
  <guid isPermaLink="false">http://3b335291-38c0-492b-b7cd-4463f2ced585</guid>
  <description></description>
  <content:encoded xmlns:content="http://purl.org/rss/1.0/modules/content/"><![CDATA[<p>Here is a roundup of some responses to my <a href="http://devhawk.net/2007/05/24/REST+Is+Neither+CRUD+Nor+CRAP.aspx">REST</a><a href="http://devhawk.net/2007/05/25/This+Isnt+The+Droid+Im+Looking+For.aspx">discussion</a> with <a href="http://www.from9till2.com">David Ing</a>. Mostly, I'm passing them along with minimal comment so I figured I'd group them into one post.</p><p>David started by <a href="http://devhawk.net/CommentView,guid,077A65C2-6DBC-42E5-B927-4BE2D6E1FF98.aspx#acca030a-8507-4c74-af68-a14b430b79b4">leaving me a comment</a>, but decided instead to <a href="http://www.from9till2.com/PermaLink.aspx?guid=5f9ac25b-6e8d-412f-9a16-f9f0c0dbf9be">post the comments</a> on his blog. His big worry seems to be how well REST as CRUD will interop with REST as protocol. but in general I'm not sure that's a big worry. Bill de Hora's example below about WebDAV <strike>transactions</strike> activities seems to demonstrate at least some RESTifarians are cool with a protocol view of the world.</p><p>Erik Johnson (who's <a href="http://appside.blogspot.com/">blog</a> I mistakenly purged from my reader at some point, so needless to say I've resubscribed) <a href="http://appside.blogspot.com/2007/05/harry-david.html">writes</a> that "real-world experience shows you rarely POST exactly what you GET" and that "even with the flawed cast of characters you see a lot of whining about...the pieces are there to build good systems that also make great constituents in anyone’s SOA." I agree 100%. He goes on to agree with me agreeing with <a href="http://www.pluralsight.com/blogs/tewald/default.aspx">Tim</a> for people "not to limit their comprehension of REST around entities accessed via GET and PUT". Generally speaking, I agree with people when they agree with me, and this is no exception. Erik also has <a href="http://appside.blogspot.com/2007/05/rest-protocols-are-service-layer.html">a REST post</a> that predated my dustup with David(*) where he reaches some interesting conclusions about designing REST style systems. </p><p>Bill de Hora <a href="http://www.dehora.net/journal/2007/05/wouldnt_start_from_there.html">weighs in</a>, pointing out that "value exchange != transaction". Given that I never suggested they were equal, I'm not sure what his point is (other than to be snarky). He also points to <a href="http://subversion.tigris.org/webdav-usage.html">Subversion's use of WebDAV</a> as an example of...well, I'm not sure since it seems to prove my point that a simple CRUD style approach doesn't cut it for many scenarios. According to the page Bill linked to:</p><blockquote><p>"Subversion commits are modeled using the "activity" concept from DeltaV. An activity can be viewed as a <strong>transaction for a set of resources</strong>." [emphasis mine]</p></blockquote><p>While I'm sure this sounds snarky as well, I really don't get what Bill is getting at here. It <em>sounds</em> like he took my disparaging of CRUD as a disparagement of REST, which is NOT how it was intended. This kind of layering of higher-level protocol concepts (like WebDAV's activity) is exactly what I was thinking of when I wrote "I can spurn CRUD and still embrace REST".</p><p>And though not a direct comment on my post, Omri Gazitt <a href="https://www.gazitt.com/blog/PermaLink,guid,ccf9f2f2-a11f-4b70-bb9f-0141dd1041b6.aspx">writes about</a> REST vs. SOAP and the support for both in the next version of WCF. His main point is that "It seems like we'll continue to live in a world where multiple integration paradigms and protocol choices exist for applications". Of course, since he's with the WCF product group, regardless of your integration paradigm or protocol choice, WCF is the way to build it (at least on Windows). We'll have to wait a while to see if WCF is really "future-proof", but the ability to add <a href="https://www.gazitt.com/blog/PermaLink,guid,a8383226-a0dd-48c5-9fea-33d5da159d17.aspx">significant changes</a> in a .5 release is a fairly good sign. </p><hr /><p></p><p>(*) It's a very polite dustup, characterized mostly by agreement rather than disagreement. Which makes it, as dustups go, very boring.</p>]]></content:encoded>
  <excerpt:encoded xmlns:excerpt="http://wordpress.org/export/1.2/excerpt/"><![CDATA[]]></excerpt:encoded>
  <wp:post_id xmlns:wp="http://wordpress.org/export/1.2/">969</wp:post_id>
  <wp:post_date xmlns:wp="http://wordpress.org/export/1.2/">2007-05-29 12:54:33</wp:post_date>
  <wp:post_date_gmt xmlns:wp="http://wordpress.org/export/1.2/">2007-05-29 12:54:33</wp:post_date_gmt>
  <wp:comment_status xmlns:wp="http://wordpress.org/export/1.2/">open</wp:comment_status>
  <wp:ping_status xmlns:wp="http://wordpress.org/export/1.2/">open</wp:ping_status>
  <wp:post_name xmlns:wp="http://wordpress.org/export/1.2/">responses-on-rest</wp:post_name>
  <wp:status xmlns:wp="http://wordpress.org/export/1.2/">publish</wp:status>
  <wp:post_parent xmlns:wp="http://wordpress.org/export/1.2/">0</wp:post_parent>
  <wp:menu_order xmlns:wp="http://wordpress.org/export/1.2/">0</wp:menu_order>
  <wp:post_type xmlns:wp="http://wordpress.org/export/1.2/">post</wp:post_type>
  <wp:post_password xmlns:wp="http://wordpress.org/export/1.2/"></wp:post_password>
  <wp:is_sticky xmlns:wp="http://wordpress.org/export/1.2/">0</wp:is_sticky>
  <category domain="category" nicename="architecture"><![CDATA[Architecture]]></category>
  <category domain="post_tag" nicename="rest"><![CDATA[REST]]></category>
  <category domain="post_tag" nicename="soa"><![CDATA[SOA]]></category>
  <wp:postmeta xmlns:wp="http://wordpress.org/export/1.2/">
    <wp:meta_key>dasblog_entryid</wp:meta_key>
    <wp:meta_value><![CDATA[3b335291-38c0-492b-b7cd-4463f2ced585]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta xmlns:wp="http://wordpress.org/export/1.2/">
    <wp:meta_key>dasblog_compressedtitle</wp:meta_key>
    <wp:meta_value><![CDATA[Responses+On+REST]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta xmlns:wp="http://wordpress.org/export/1.2/">
    <wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
    <wp:meta_value><![CDATA[2007/05/29/Responses+On+REST]]></wp:meta_value>
  </wp:postmeta>
</item>