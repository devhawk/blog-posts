{"status":"ok","post":{"id":1290,"type":"post","slug":"ironpython-post-2-6-roadmap","url":"http:\/\/devhawk.net\/2009\/09\/28\/ironpython-post-2-6-roadmap\/","status":"publish","title":"IronPython Post 2.6 Roadmap","title_plain":"IronPython Post 2.6 Roadmap","content":"<p>It\u2019s not quite out the door yet, but things have gotten quieter around here since we shipped the <a href=\"http:\/\/devhawk.net\/2009\/09\/23\/IronPython+26+Release+Candidate.aspx\">Release Candidate of 2.6<\/a>. But there\u2019s no rest for the dynamic, so we\u2019ve already started thinking about what we do next.<\/p>\n<p>Since we shipped 2.0 last December, we\u2019ve shipped two service releases: 2.0.1 two months later in February and 2.0.2 four months after that in June. We weren\u2019t planning on doing a 2.0.3 release, but then we discovered the CLR folks made a breaking change to partial trust in Windows 7. David <a href=\"http:\/\/lists.ironpython.com\/pipermail\/users-ironpython.com\/2009-September\/011268.html\">recently emailed<\/a> the IronPython mailing list looking for feedback on other must-fix bugs we can get to for 2.0.3. If you\u2019ve got an opinion on 2.0.3 must-fix bugs, please respond to that thread.<\/p>\n<p>For 2.6 service releases, we\u2019re looking to tighten up the timeframe a bit from last time. We\u2019re planning to ship service releases of 2.6 in December and February. However, since we don\u2019t have a major release ship vehicle in the 2.x branch until Python 2.7 next summer, these service releases may contain new functionality in addition to bug fixes. In particular, we will look to include any missing modules work that I discussed in my <a href=\"http:\/\/devhawk.net\/2009\/09\/23\/IronPython+26+Release+Candidate.aspx\">RC announcement post<\/a> in these service releases.<\/p>\n<p>In addition to the IronPython 2.6 service releases, we\u2019ll also continue to track the <a href=\"http:\/\/www.microsoft.com\/visualstudio\/2010\">Visual Studio 2010<\/a> beta cycle as it heads to RTM. I can\u2019t comment on VS2010 dates, but I can say that we will ship a CTP of IronPython 2.6 for .NET Framework 4.0 for Visual Studio 2010 Beta 2 and that we are committed to shipping the RTM of our .NET 4.0 version the day that Visual Studio 2010 is publicly available. Given that dynamic the <a href=\"http:\/\/msdn.microsoft.com\/en-us\/library\/dd264736(VS.100).aspx\">big new feature of C# 4.0<\/a>, we want to make sure IronPython is ready to go as soon as C# 4.0 is available. <\/p>\n<p>BTW, we are well aware that \u201cIronPython 2.6 for .NET Framework 4.0\u201d is a long ugly name. Any suggestions on a different one? We\u2019ve been thinking \u201cIronPython 2.6 R2\u201d since the \u201cR2\u201d nomenclature is <a href=\"http:\/\/technet.microsoft.com\/en-us\/windowsserver\/bb428898.aspx\">big<\/a><a href=\"http:\/\/www.microsoft.com\/sqlserver\/2008\/en\/us\/R2.aspx\">around<\/a><a href=\"http:\/\/www.microsoft.com\/windowsserver2008\/en\/us\/r2-editions-overview.aspx\">here<\/a>. But \u201cR2\u201d doesn\u2019t really capture the essence of the .NET 4.0 compatible release. Besides, when has the dynamic languages team at Microsoft ever done ANYTHING because it was popular with the Microsoft marketing folks? <img src=\"http:\/\/devhawk.net\/wp-includes\/images\/smilies\/icon_smile.gif\" class=\"grouped_elements\" rel=\"tc-fancybox-group1290\" alt=\":)\" class=\"wp-smiley\" \/> <\/p>\n<p>At this point, we\u2019ve got the next few months mapped out, but not much more beyond that. Specifically, we have two gaping holes in the roadmap:<\/p>\n<ul>\n<li>Visual Studio Integration <\/li>\n<li>IronPython 3.x <\/li>\n<\/ul>\n<p>For now, I\u2019m going to leave these holes unfilled. Currently, the rest of my VS Languages teammates (along with the rest of DevDiv) are heads down driving towards beta 2 of Visual Studio 2010. Once they reach that milestone, planning on Visual Studio v.next will begin. Those plans have the potential for impacting how the IronPython team proceeds going forward. <\/p>\n<p>Frankly, several members of the dynamic languages team have been pitching in with the \u201cdrive to beta 2\u201d effort so we\u2019re a little more short handed than usual. If we get those people back, then we\u2019re in a much better position to execute on both VS Integration and IronPython 3.x. If we don\u2019t, then we have to make some hard choices about how to proceed. I\u2019m guessing most would agree that VS integration is more important IronPython 3.x support. However, those aren\u2019t equal efforts by any stretch of the imagination. How valuable is VS integration if, for example, we don\u2019t have the bandwidth to build decent intellisense? As I said, hard choices.<\/p>\n<p>If you want to make your voice heard on Microsoft\u2019s level of commitment to IronPython, make sure you go rate the <a href=\"https:\/\/connect.microsoft.com\/VisualStudio\/feedback\/ViewFeedback.aspx?FeedbackID=475830\">IronPython integration issue<\/a> on Microsoft Connect. (while you\u2019re there, rate the <a href=\"https:\/\/connect.microsoft.com\/VisualStudio\/feedback\/ViewFeedback.aspx?FeedbackID=479957\">IronRuby integration issue<\/a> too.) The IronPython integration is currently the top rated open issue on the VS Connect site and is the second highest vote getter out of all the Connect issues (active or otherwise) logged since VS 2010 shipped it\u2019s first CTP! [1] <\/p>\n<hr \/>\n<p>[1] Seriously, the next most recent Connect issue with more votes than IronPython integration is <a href=\"https:\/\/connect.microsoft.com\/VisualStudio\/feedback\/ViewFeedback.aspx?FeedbackID=308352\">HttpRuntime.ProcessRequest() does not work in IIS7 Integrated Pipeline Mode<\/a> from November 2007. The next one before that was <a href=\"https:\/\/connect.microsoft.com\/VisualStudio\/feedback\/ViewFeedback.aspx?FeedbackID=106007\">Create Service Pack for Visual Studio 2005<\/a> from November 2005. <\/p>\n","excerpt":"<p>It\u2019s not quite out the door yet, but things have gotten quieter around here since we shipped the Release Candidate of 2.6. But there\u2019s no rest for the dynamic, so we\u2019ve already started thinking about what we do next. Since we shipped 2.0 last December, we\u2019ve shipped two service releases: 2.0.1 two months later in [&hellip;]<\/p>\n","date":"2009-09-28 10:33:02","modified":"2009-09-28 10:33:02","categories":[{"id":252,"slug":"ironpython","title":"IronPython","description":"","parent":0,"post_count":99}],"tags":[],"author":{"id":1,"slug":"admin","name":"DevHawk","first_name":"Harry","last_name":"Pierson","nickname":"DevHawk","url":"","description":""},"comments":[{"id":2273,"name":"Alcides Fonseca","url":"http:\/\/alcidesfonseca.com","date":"2009-09-28 10:39:56","content":"<p>Just a small suggestion. Instead of R2 why not IronPython 2.6 n4, which stands for .net 4.0. Makes more sense than R2 to me since it reminds me of RC2.<\/p>\n","parent":0},{"id":2274,"name":"Pedro Brown","url":"","date":"2009-09-28 14:41:30","content":"<p>Hi,<\/p>\n<p>In my opinion VS integration is, indeed, more important then Python 3.x. <\/p>\n<p>If the model of choice for this integration is a VS Addin, maybe you could release a CTP with some of the features, even if it doesn&#8217;t include a decent intellisense.<\/p>\n<p>My company is considering moving a code generator written in Delphi Win32 to a VS Addin, embedding IronPython in it, using it to run the Models (somewhat like CodeSmith, but much more specific).<\/p>\n<p>The problem is that VS doesn&#8217;t even have syntax highlighting. <\/p>\n<p>Thanks. <\/p>\n","parent":0},{"id":2275,"name":"Martin Meinhardt","url":"","date":"2009-09-29 06:43:03","content":"<p>&#8220;IronPython 2.6 D4&#8243;<\/p>\n<p>&#8220;D&#8221; for &#8220;Dynamic&#8221; and &#8220;4&#8243; stands for &#8220;.NET v4&#8243;.<\/p>\n","parent":0},{"id":2276,"name":"anon","url":"","date":"2009-09-29 06:57:08","content":"<p>Ironpython 4.2.6<\/p>\n","parent":0}],"attachments":[],"comment_count":4,"comment_status":"closed","custom_fields":{"dasblog_entryid":["dbf7d543-5a65-4642-a1f0-44f25aa1ff37"],"dasblog_compressedtitle":["IronPython+Post+26+Roadmap"],"dasblog_compressedtitleunique":["2009\/09\/28\/IronPython+Post+26+Roadmap"]}},"previous_url":"http:\/\/devhawk.net\/2009\/09\/23\/ironpython-2-6-release-candidate\/","next_url":"http:\/\/devhawk.net\/2009\/10\/06\/lightweight-debugging-for-hybrid-cironpython-apps\/"}