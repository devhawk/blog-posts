<?xml version="1.0" encoding="utf-8"?>
<wp:comment xmlns:wp="http://wordpress.org/export/1.2/">
  <wp:comment_id>2269</wp:comment_id>
  <wp:comment_author><![CDATA[Michael Foord]]></wp:comment_author>
  <wp:comment_author_email>michael@voidspace.org.uk</wp:comment_author_email>
  <wp:comment_author_url>http://www.ironpythoninaction.com/</wp:comment_author_url>
  <wp:comment_author_IP>88.96.105.246</wp:comment_author_IP>
  <wp:comment_date>2009-09-24 10:01:06</wp:comment_date>
  <wp:comment_date_gmt>2009-09-24 17:01:06</wp:comment_date_gmt>
  <wp:comment_content><![CDATA[I'd love to see you guys work on performance as benchmarked in some realistic scenarios (e.g. Unladen Swallow are using the Django templating engine for benchmarking). I don't think microbenchmarks at all show the performance issues for large Python apps.

In general running IronPython with larger Python codebases (Django, Trac, Mercurial) would shake out both comaptibility *and* performance issues which I think are the most important. :-)

Oh - getting pdb working *fully* with IronPython 2.6 would be awesome by the way. ]]></wp:comment_content>
  <wp:comment_approved>1</wp:comment_approved>
  <wp:comment_type></wp:comment_type>
  <wp:comment_parent>0</wp:comment_parent>
  <wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>