<?xml version="1.0" encoding="utf-8"?>
<wp:comment xmlns:wp="http://wordpress.org/export/1.2/">
  <wp:comment_id>2855</wp:comment_id>
  <wp:comment_author><![CDATA[Magnus Christerson]]></wp:comment_author>
  <wp:comment_author_email>magnus@intentsoft.com</wp:comment_author_email>
  <wp:comment_author_url></wp:comment_author_url>
  <wp:comment_author_IP>12.109.87.34</wp:comment_author_IP>
  <wp:comment_date>2005-10-09 08:51:51</wp:comment_date>
  <wp:comment_date_gmt>2005-10-09 15:51:51</wp:comment_date_gmt>
  <wp:comment_content><![CDATA[Great post, Harry!

We often use the term "higher level of abstraction" as the one and only right answer to manage complexity. A better description would be to use the "appropriate level of abstraction" for the task at hand and I blogged on it here http://blog.intentionalsoftware.com/intentional_software/2005/09/appropriate_lev.html

In that blog we also discussed the need for multiple levels of abstractions that are editable. So the issue of bi-directional transformations between models comes up. Mentally, we think of it as a refinement between the appropriate level. The trick is to maintain model level consistency as editing progresses. In the real messy world, where code is stored in simple text files, that can be edited at will, this is a tricky and expensive problem. Integrating the code in a smarter way might make it a lot easier.

As for Steven Kelly's earlier blog comment about Intentional only doing SmartText based stuff: Your hopes are correct, we think a combination of text and graphics is the most powerful, and also the most natuaral to use.

/Magnus]]></wp:comment_content>
  <wp:comment_approved>1</wp:comment_approved>
  <wp:comment_type></wp:comment_type>
  <wp:comment_parent>0</wp:comment_parent>
  <wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>