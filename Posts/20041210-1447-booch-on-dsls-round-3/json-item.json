{"status":"ok","post":{"id":494,"type":"post","slug":"booch-on-dsls-round-3","url":"http:\/\/devhawk.net\/2004\/12\/10\/booch-on-dsls-round-3\/","status":"publish","title":"Booch on DSLs (Round 3)","title_plain":"Booch on DSLs (Round 3)","content":"<p>Steve Cook <a href=\"http:\/\/blogs.msdn.com\/stevecook\/archive\/2004\/12\/08\/278507.aspx\">responded<\/a> to Grady Booch&#8217;s latest <a href=\"http:\/\/www-106.ibm.com\/developerworks\/blogs\/dw_blog_comments.jspa?blog=317&amp;entry=67637\">comments<\/a> on software factories and DSLs, which was in turn a response to an <a href=\"http:\/\/weblogs.asp.net\/alan_cameron_wills\/archive\/2004\/11\/11\/255831.aspx\">entry<\/a> by Alan Wills. It&#8217;s obvious that Booch is never going to agree with the DSL approach, but there are a couple of fascinating elements of the exchange.<\/p>\n<p>First off is Microsoft&#8217;s &#8220;rejection&#8221; of UML, which is just plain FUD. I&#8217;m behind on news reading (as usual) but I was clued into this conversation by a <a href=\"http:\/\/www.theserverside.com\/news\/thread.tss?thread_id=30488\">post<\/a> on TSS.com that linked to Booch&#8217;s blog and read &#8220;Grady Booch explains why he disagrees with Microsoft&#8217;s rejection of the UML in favor of proprietary domain-specific languages.&#8221; Not exactly priming the pump for intelligent discourse on the subject. As Alan and Steve both point out, we&#8217;re not rejecting UML. UML is a tool, and like all tools it has things it&#8217;s good at and things it&#8217;s not good at. We&#8217;re talking about using DSLs for things UML is not good at. <\/p>\n<p>The next is Common Semantics. Every time he posts on DSLs, Booch mentions something about &#8220;covering the same semantic ground as the UML&#8221;. I promised Dan in my <a href=\"http:\/\/blogs.msdn.com\/devhawk\/archive\/2004\/10\/25\/247644.aspx#248548\">comments<\/a> that I would summarize this argument &#8220;in simple English&#8221; and I never got around to it. The term semantics simply means &#8220;meaning&#8221;. For example, in C#, the keyword &#8220;class&#8221; always means the same thing &#8211; it has what Steve <a href=\"http:\/\/blogs.msdn.com\/stevecook\/archive\/2004\/12\/08\/278507.aspx\">pointed out<\/a> is &#8220;objective semantics&#8221;. Obviously, the word &#8220;class&#8221; has widely varying semantics in common use &#8211; when a high school senior cuts class he&#8217;s not copying an object definition to the clipboard. But within the realm of C#, the word &#8220;class&#8221; has a well understood and precise meaning &#8211; it&#8217;s so precise that the C# compiler can tell you if you use it incorrectly.<\/p>\n<p>So when Booch writes about a &#8220;common semantic model&#8221;, I take that to mean that he thinks there&#8217;s a core set of well-defined concepts that all languages build on. And if that&#8217;s what he means, I imagine he assumes all the interesting concepts are already defined by UML. I think that&#8217;s where the primary disagreement lies &#8211; we don&#8217;t think any one language can provide all the possible concepts needed for all programming domains. A language for developing a web app page flow will be built on very different semantic concepts that a language for developing telephone billing systems. Trying to build both of them on top of the same set of concepts is like putting a square peg in a round hole. <\/p>\n<p>Furthermore, even if you wanted to build on a common set of concepts, it&#8217;s not clear if UML provides a precisely defined set of concepts to build on. Obviously, Booch thinks it does, but there certainly isn&#8217;t agreement in the industry. Steve refers to UML as having &#8220;cognitive semantics&#8221;, which means there is no one objective definition for a specific element of UML. For example, in covering <a href=\"http:\/\/www.martinfowler.com\/bliki\/AggregationAndComposition.html\">Aggregation and Composition<\/a>, Fowler refers to UML&#8217;s white diamond aggregation as a &#8220;modeling placebo&#8221; and having &#8220;no standard meanings&#8221;. When there&#8217;s no standard objective meaning, then each person brings their own experience and reason in order to formulate their understanding &#8211; hence the term &#8220;cognitive&#8221;. Of course, the chance that any two people will reach the same understanding via cognitive reasoning is slim to none &#8211; there&#8217;s just too much room for personal interpretation. Because of this lack of objective precision, Steve describes the resulting discussion of UML and its semantics as &#8220;political, rather than objective&#8221; which IMO is not a good foundation to build your own language on.<\/p>\n<p>In the end, the proof is in the pudding. Personally, I think Booch looks at UML with rose-colored glasses and that his beliefs don&#8217;t mesh with reality. (Of course, our DSL modeling tools and software factories approach isn&#8217;t far enough along yet to test against reality.) How about your experience? What success or failure have you had with UML?<\/p>\n","excerpt":"<p>Steve Cook responded to Grady Booch&#8217;s latest comments on software factories and DSLs, which was in turn a response to an entry by Alan Wills. It&#8217;s obvious that Booch is never going to agree with the DSL approach, but there are a couple of fascinating elements of the exchange. First off is Microsoft&#8217;s &#8220;rejection&#8221; of [&hellip;]<\/p>\n","date":"2004-12-10 14:47:50","modified":"2004-12-10 14:47:50","categories":[{"id":177,"slug":"architecture","title":"Architecture","description":"","parent":0,"post_count":296}],"tags":[{"id":225,"slug":"modelling","title":"Modelling","description":"","post_count":61}],"author":{"id":1,"slug":"admin","name":"DevHawk","first_name":"Harry","last_name":"Pierson","nickname":"DevHawk","url":"","description":""},"comments":[{"id":2735,"name":"Alex Kazovic","url":"","date":"2004-12-10 23:01:36","content":"<p>One of my concerns with UML is when getting users involved. Their attitude seems to be \u201chere we are again, IT trying to get us users to learn an IT language to describe a business problem. We would rather get IT to learn a business language to describe a business problem\u201d.<\/p>\n","parent":0},{"id":2736,"name":"JTD","url":"","date":"2004-12-13 06:51:27","content":"<p>So having a bunch of DSL&#8217;s with no common underlying foundation is a &#8216;good thing&#8217;?<\/p>\n","parent":0},{"id":2737,"name":"DevHawk","url":"","date":"2004-12-16 22:35:32","content":"<p>JTD, that&#8217;s not what I&#8217;m saying. Many DSL&#8217;s need to relate to each other. Take Whitehorse for example: You have a app modeller and a data center modeler. These each have some unique semantics and some related semantics. If you go to deploy a web app onto a web server, some type of translation or corolation needs to take place. But within that web app, there are going to be a wide variety of semantics and abstractions &#8211; pages, controls, process flows, style sheets, postbacks, etc &#8211; that have no corolation in the data center model. Trying to make a single modeling language that supports all these semantics will be overcomplex and unusable. <\/p>\n","parent":0}],"attachments":[],"comment_count":3,"comment_status":"closed","custom_fields":{"dasblog_entryid":["4ce7a305-e9a4-4fff-a3f4-095fcca52988"],"dasblog_compressedtitle":["Booch+On+DSLs+Round+3"],"dasblog_compressedtitleunique":["2004\/12\/10\/Booch+On+DSLs+Round+3"]}},"previous_url":"http:\/\/devhawk.net\/2004\/12\/08\/be-there-or-be-square\/","next_url":"http:\/\/devhawk.net\/2004\/12\/10\/ssb-wrapper-class\/"}