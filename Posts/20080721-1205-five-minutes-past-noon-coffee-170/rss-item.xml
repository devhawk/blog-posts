<?xml version="1.0" encoding="utf-8"?>
<item>
  <title>Five Minutes Past Noon Coffee 170</title>
  <link>http://devhawk.net/2008/07/21/five-minutes-past-noon-coffee-170/</link>
  <pubDate>Mon, 21 Jul 2008 19:05:43 +0000</pubDate>
  <dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">devhawk</dc:creator>
  <guid isPermaLink="false">http://a18942b5-00eb-411c-854e-70175a80daa5</guid>
  <description></description>
  <content:encoded xmlns:content="http://purl.org/rss/1.0/modules/content/"><![CDATA[<ul><li>Ben Hall <a href="http://blog.benhall.me.uk/2008/07/announcing-ironeditor-editor-for.html">announces</a><a href="http://www.codeplex.com/IronEditor">IronEditor</a>, a simple dev tool for IronPython and IronRuby. Pretty nice, though fairly simplistic (as Ben readily admits). For example, it doesn't have an interactive mode, only the ability to execute scripts and direct the output to IronEditor's output window. However, it is a good start and I'm sure it'll just get better. One thing he's <a href="http://twitter.com/Ben_Hall/statuses/862967588">apparently considering</a> is a Silverlight version. (via <a href="http://twitter.com/voidspace/statuses/862951177">Michael Foord</a>)  </li><li>Speaking of "Iron" tools, <a href="http://www.sapphiresteel.com/">Sapphire Steel</a> have had an <a href="http://www.sapphiresteel.com/Ruby-In-Steel-For-IronRuby">IronRuby version (in alpha)</a> of their <a href="http://www.sapphiresteel.com/Ruby-In-Steel-Developer-Overview">Ruby in Steel</a> product for several months now. I wonder if <a href="http://www.iunknown.com/">John's</a> had a chance to play with it.  </li><li>Speaking of John, the ASP.NET MVC / IronRuby prototype he <a href="http://www.iunknown.com/2008/06/ironruby-and-aspnet-mvc.html">talked about @ TechEd</a> is <a href="http://haacked.com/archive/2008/07/20/ironruby-aspnetmvc-prototype.aspx">now available</a> on ASP.NET MVC Preview 4 via Phil Haack.  </li><li>Ted Neward has <a href="http://code.msdn.microsoft.com/IPyDD">an article</a> exploring the IronPython VS Integration sample that ships in the VS SDK. As I <a href="http://devhawk.net/2008/07/17/IronPython+Post+20+Roadmap.aspx">mentioned the other day</a>, we're starting working on a production quality implementation of VS Integration for IPy.  </li><li>Ophir Kra-Oz (aka Evil Fish) blogs <a href="http://ophir.wordpress.com/2008/07/20/python-for-executives/">Python for Executives</a>. I like his "Risk, Recruiting, Performance and Maturity" model - four boxes, perfect for keeping an executive's attention! :) Plus Ophir has some nice things to say about IronPython. (via <a href="http://twitter.com/voidspace/statuses/863648598">Michael Foord</a>)  </li><li>Ronnie Maor <a href="http://www.ronnie-midnight-oil.net/2008/07/easier-python-evaluation-from-c.html">blogs</a> an <a href="http://www.ironpython.info/index.php/PythonEngineEvalExtension">extension method for PythonEngine</a> to make Eval simpler. I especially like how he uses string format syntax so you can dynamically generate the code to eval. I wonder what this would look like in IPy 2.0 with DLR Hosting API. (via <a href="http://ironpython-urls.blogspot.com/2008/07/easier-python-evaluation-from-c.html">IronPython URLs</a>)  </li><li>Speaking of DLR Hosting, Seshadri has <a href="http://blogs.msdn.com/seshadripv/archive/2008/07/17/dlr-hosting-sample-write-event-handlers-for-vs-in-ironpython.aspx">another great DLR hosting post</a>, this time hosting IPy inside of VS08 so you can script VS08 events (document saved, window created, etc) with Python.  </li><li>Justin Etheredge has a bunch of IronRuby posts - <a href="http://www.codethinked.com/post/2008/07/14/Getting-IronRuby-Up-and-Running.aspx">Getting IronRuby Up and Running</a>, <a href="http://www.codethinked.com/post/2008/07/17/Running-Applications-in-IronRuby.aspx">Running Applications in IronRuby</a>, <a href="http://www.codethinked.com/post/2008/07/21/Learning-Ruby-via-IronRuby-and-C-Part-1.aspx">Learning Ruby via IronRuby and C# Part 1</a>. (via <a href="http://samgentile.com/blogs/samgentile/archive/2008/07/21/new-and-notable-255.aspx">Sam Gentile</a>) </li><li>Don Syme <a href="http://blogs.msdn.com/dsyme/archive/2008/07/19/f-and-arcgis-arcobjects.aspx">links</a> to several F# related posts by <a href="http://vernagus.blogspot.com/">Ray Vernagus</a>, though he's apparently also <a href="http://vernagus.blogspot.com/2007/10/extension-methods-and-ironruby.html">experimenting with IronRuby</a>. I'm really interested in his <a href="http://www.cambridge.org/us/catalogue/catalogue.asp?isbn=0521663504">Purely Functional Data Structures</a> port to F#.  </li><li>Speaking of F#, Brian has a <a href="http://lorgonblog.spaces.live.com/blog/cns!701679AD17B6D310!282.entry">teaser screenshot</a> of F# upcoming CTP. However, he chooses the New Item dialog to tease, which looks pretty much like the current new item dialog (the new one does have fewer F# templates). However, if you look in the Solution Explorer, you'll notice a real "References" node. No more #I/#R! Yeah! </li><li>The interactive graphic in <a href="http://www.wired.com/special_multimedia/2008/st_infoporn_1607">Kevin Kelly's One Machine article</a> is fascinating. It really highlights that the vast vast vast majority of power, storage, CPU cycles and RAM come from personal computers on the edge. Even in bandwidth, where PC's still have the highest share but it looks to be around 1/3rd, the aggregate of all edge devices (PCs, mobile phones, PDAs, etc.) still dominates the data centers. </li></ul>]]></content:encoded>
  <excerpt:encoded xmlns:excerpt="http://wordpress.org/export/1.2/excerpt/"><![CDATA[]]></excerpt:encoded>
  <wp:post_id xmlns:wp="http://wordpress.org/export/1.2/">1156</wp:post_id>
  <wp:post_date xmlns:wp="http://wordpress.org/export/1.2/">2008-07-21 12:05:43</wp:post_date>
  <wp:post_date_gmt xmlns:wp="http://wordpress.org/export/1.2/">2008-07-21 19:05:43</wp:post_date_gmt>
  <wp:comment_status xmlns:wp="http://wordpress.org/export/1.2/">open</wp:comment_status>
  <wp:ping_status xmlns:wp="http://wordpress.org/export/1.2/">open</wp:ping_status>
  <wp:post_name xmlns:wp="http://wordpress.org/export/1.2/">five-minutes-past-noon-coffee-170</wp:post_name>
  <wp:status xmlns:wp="http://wordpress.org/export/1.2/">publish</wp:status>
  <wp:post_parent xmlns:wp="http://wordpress.org/export/1.2/">0</wp:post_parent>
  <wp:menu_order xmlns:wp="http://wordpress.org/export/1.2/">0</wp:menu_order>
  <wp:post_type xmlns:wp="http://wordpress.org/export/1.2/">post</wp:post_type>
  <wp:post_password xmlns:wp="http://wordpress.org/export/1.2/"></wp:post_password>
  <wp:is_sticky xmlns:wp="http://wordpress.org/export/1.2/">0</wp:is_sticky>
  <category domain="post_tag" nicename="asp-net"><![CDATA[ASP.NET]]></category>
  <category domain="post_tag" nicename="dlr"><![CDATA[DLR]]></category>
  <category domain="post_tag" nicename="f-sharp"><![CDATA[F#]]></category>
  <category domain="post_tag" nicename="ironruby"><![CDATA[IronRuby]]></category>
  <category domain="category" nicename="morning-coffee"><![CDATA[Morning Coffee]]></category>
  <category domain="post_tag" nicename="python"><![CDATA[Python]]></category>
  <category domain="post_tag" nicename="visual-studio"><![CDATA[Visual Studio]]></category>
  <wp:postmeta xmlns:wp="http://wordpress.org/export/1.2/">
    <wp:meta_key>dasblog_entryid</wp:meta_key>
    <wp:meta_value><![CDATA[a18942b5-00eb-411c-854e-70175a80daa5]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta xmlns:wp="http://wordpress.org/export/1.2/">
    <wp:meta_key>dasblog_compressedtitle</wp:meta_key>
    <wp:meta_value><![CDATA[Five+Minutes+Past+Noon+Coffee+170]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta xmlns:wp="http://wordpress.org/export/1.2/">
    <wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
    <wp:meta_value><![CDATA[2008/07/21/Five+Minutes+Past+Noon+Coffee+170]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta xmlns:wp="http://wordpress.org/export/1.2/">
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>