<?xml version="1.0" encoding="utf-8"?>
<item>
  <title>Service Factory Customization Workshop Day Two</title>
  <link>http://devhawk.net/2007/08/01/service-factory-customization-workshop-day-two/</link>
  <pubDate>Wed, 01 Aug 2007 09:23:53 +0000</pubDate>
  <dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">devhawk</dc:creator>
  <guid isPermaLink="false">http://877535d0-8706-450a-9ad5-684db4fc26ac</guid>
  <description></description>
  <content:encoded xmlns:content="http://purl.org/rss/1.0/modules/content/"><![CDATA[<p>As expected, day two of the WSSF customization workshop was much meatier than <a href="http://devhawk.net/2007/07/31/Service+Factory+Customization+Workshop+Day+One.aspx">day one</a>. If you look at the technologies that power these p&amp;p <a href="http://msdn2.microsoft.com/en-us/teamsystem/aa718951.aspx">software factories</a> - <a href="http://msdn2.microsoft.com/en-us/teamsystem/aa718948.aspx">GAT</a> and <a href="http://msdn2.microsoft.com/en-us/teamsystem/aa718368.aspx">DSL</a> - you'll notice that they're not very well integrated. They share a text templating engine and there are <a href="http://msdn2.microsoft.com/en-us/library/aa905334.aspx">some docs</a>, but that's pretty much it. WSSF v3 is the first factory from p&amp;p to heavily use both technologies, and they've had to do significant integration work to make them play nice. </p><p>In the new WSSF, there's a special "model project" where you define data and service contracts independently of an implementation technology. This allows you to postpone your implementation decision as long as possible. For WSSF, this seems pretty pointless - if you're starting a new service project from scratch, why would you build on ASMX instead of WCF? - but conceptually the idea is rock solid. But this requires a variety of cross-model and cross-project code generation and validation. The vanilla DSL toolkit doesn't support that, so the p&amp;p guys had to build it themselves. </p><p>I'd like to see p&amp;p take their GAT/DSL integration work and package it separately from WSSF. As it currently stands, you've got to install GAT &amp; the <a href="http://msdn2.microsoft.com/en-us/vstudio/aa700819.aspx">VS SDK</a> (to get DSLs) plus the integration bits from WSSF. There's also the <a href="http://www.codeplex.com/GEL">GAX Extension Library</a> (aka GEL) plus Clarius' <a href="http://www.softwarefactoriestoolkit.net/">Software Factory Toolkit</a>. How about a single install to get all that stuff guys?</p><p>BTW, there's a <a href="http://blogs.msdn.com/tomholl/archive/2007/07/03/gax-1-3-for-orcas-announced.aspx">new version of GAT</a> coming soon that will support both VS05 and VS08 Beta 2. <a href="http://blogs.msdn.com/vsxteam/archive/2007/07/01/VSX-Community-Letter-for-July-2007.aspx">According to the VSX team</a>, VS08 beta 2 SDK should also be available "early August". So if you're moving over to VS08 (I am), you can still get down and dirty with software factories.</p><p>Update: VS08 SDK for Beta 2 is <a href="http://www.microsoft.com/downloads/details.aspx?FamilyID=d9000e2c-bd3f-4717-a181-723960814e16&amp;displaylang=en">now available</a>. The new version of GAT is <a href="http://blogs.msdn.com/agile/archive/2007/07/19/shipping-gax-1-3.aspx">apparently done</a>, but isn't available for download yet.</p><p>Later Update: GAX/GAT July CTP is <a href="http://blogs.msdn.com/agile/archive/2007/08/02/new-gax-gat-july-2007-released.aspx">now available</a>.</p>]]></content:encoded>
  <excerpt:encoded xmlns:excerpt="http://wordpress.org/export/1.2/excerpt/"><![CDATA[]]></excerpt:encoded>
  <wp:post_id xmlns:wp="http://wordpress.org/export/1.2/">1018</wp:post_id>
  <wp:post_date xmlns:wp="http://wordpress.org/export/1.2/">2007-08-01 09:23:53</wp:post_date>
  <wp:post_date_gmt xmlns:wp="http://wordpress.org/export/1.2/">2007-08-01 09:23:53</wp:post_date_gmt>
  <wp:comment_status xmlns:wp="http://wordpress.org/export/1.2/">open</wp:comment_status>
  <wp:ping_status xmlns:wp="http://wordpress.org/export/1.2/">open</wp:ping_status>
  <wp:post_name xmlns:wp="http://wordpress.org/export/1.2/">service-factory-customization-workshop-day-two</wp:post_name>
  <wp:status xmlns:wp="http://wordpress.org/export/1.2/">publish</wp:status>
  <wp:post_parent xmlns:wp="http://wordpress.org/export/1.2/">0</wp:post_parent>
  <wp:menu_order xmlns:wp="http://wordpress.org/export/1.2/">0</wp:menu_order>
  <wp:post_type xmlns:wp="http://wordpress.org/export/1.2/">post</wp:post_type>
  <wp:post_password xmlns:wp="http://wordpress.org/export/1.2/"></wp:post_password>
  <wp:is_sticky xmlns:wp="http://wordpress.org/export/1.2/">0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta xmlns:wp="http://wordpress.org/export/1.2/">
    <wp:meta_key>dasblog_entryid</wp:meta_key>
    <wp:meta_value><![CDATA[877535d0-8706-450a-9ad5-684db4fc26ac]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta xmlns:wp="http://wordpress.org/export/1.2/">
    <wp:meta_key>dasblog_compressedtitle</wp:meta_key>
    <wp:meta_value><![CDATA[Service+Factory+Customization+Workshop+Day+Two]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta xmlns:wp="http://wordpress.org/export/1.2/">
    <wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
    <wp:meta_value><![CDATA[2007/08/01/Service+Factory+Customization+Workshop+Day+Two]]></wp:meta_value>
  </wp:postmeta>
</item>