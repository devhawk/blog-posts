{"status":"ok","post":{"id":771,"type":"post","slug":"devadoss-down-on-soa","url":"http:\/\/devhawk.net\/2006\/07\/28\/devadoss-down-on-soa\/","status":"publish","title":"deVadoss Down on SOA","title_plain":"deVadoss Down on SOA","content":"<p>My <a href=\"http:\/\/blogs.technet.com\/michael_platt\">old boss&#8217;s<\/a><a href=\"http:\/\/blogs.msdn.com\/jdevados\">boss<\/a> seems like he was in a downer mood yesterday. First, he blogged about the &#8220;<a href=\"http:\/\/blogs.msdn.com\/jdevados\/archive\/2006\/07\/27\/680756.aspx\">Myth of Reuse in SOA<\/a>&#8220;, then the &#8220;<a href=\"http:\/\/blogs.msdn.com\/jdevados\/archive\/2006\/07\/27\/680765.aspx\">Achilles Heel of SOA<\/a>&#8220;. Actually, truth be told, I agree with him on both counts. <\/p>\n<p>I slam the door on the reuse argument every time it comes up in my new job. Actually, I slam the door on what I call &#8220;Naive Reuse&#8221;. When John talks\u00a0factoring for agility, he&#8217;s talking about a form of reuse &#8211; similar to how use &#8220;reuse&#8221; code when you refactor. What does it mean to refactor service? How about refactoring your enterprise?<\/p>\n<p>As for the Achilles Heel &#8220;data problem&#8221;, I think that&#8217;s an artifact of the prevailing stateless request\/response mindset most people have about services that I <a href=\"http:\/\/feeds.feedburner.com\/~r\/Devhawk\/~3\/6182983\/Services+Arent+Stateless.aspx\">touched on<\/a> yesterday. I think Pat Helland <a href=\"http:\/\/msdn.microsoft.com\/library\/en-us\/dnbda\/html\/dataoutsideinside.asp\">described<\/a> a very good approach for dealing with data in an SOA, but I haven&#8217;t seen it implemented broadly. Rest assured, many of the concepts Pat described are at the forefront of my thinking as my new project takes shape.<\/p>\n","excerpt":"<p>My old boss&#8217;sboss seems like he was in a downer mood yesterday. First, he blogged about the &#8220;Myth of Reuse in SOA&#8220;, then the &#8220;Achilles Heel of SOA&#8220;. Actually, truth be told, I agree with him on both counts. I slam the door on the reuse argument every time it comes up in my new [&hellip;]<\/p>\n","date":"2006-07-28 11:34:45","modified":"2006-07-28 11:34:45","categories":[{"id":177,"slug":"architecture","title":"Architecture","description":"","parent":0,"post_count":296}],"tags":[{"id":183,"slug":"soa","title":"SOA","description":"","post_count":94}],"author":{"id":1,"slug":"admin","name":"DevHawk","first_name":"Harry","last_name":"Pierson","nickname":"DevHawk","url":"","description":""},"comments":[],"attachments":[],"comment_count":0,"comment_status":"closed","custom_fields":{"dasblog_entryid":["2d37bb76-cc71-4c89-bc0a-853e4432ff33"],"dasblog_compressedtitle":["deVadoss+Down+On+SOA"],"dasblog_compressedtitleunique":["2006\/07\/28\/deVadoss+Down+On+SOA"]}},"previous_url":"http:\/\/devhawk.net\/2006\/07\/28\/dynamics-of-software-development\/","next_url":"http:\/\/devhawk.net\/2006\/07\/31\/service-modeling-language\/"}