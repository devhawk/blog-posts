<?xml version="1.0" encoding="utf-8"?>
<item>
  <title>Roger Sessions on WS-*</title>
  <link>http://devhawk.net/2004/11/09/roger-sessions-on-ws/</link>
  <pubDate>Tue, 09 Nov 2004 16:34:44 +0000</pubDate>
  <dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">devhawk</dc:creator>
  <guid isPermaLink="false">http://657b75b9-0347-4ab5-8cf3-7c1de7dfbcce</guid>
  <description></description>
  <content:encoded xmlns:content="http://purl.org/rss/1.0/modules/content/"><![CDATA[<p><a href="http://www.objectwatch.com/about_us.htm">Roger Sessions</a>, noted architectural guru, author and Microsoft Architect MVP, has posted his <a href="http://www.objectwatch.com/newsletters/ObjectWatchNewsletter048.pdf">latest newsletter</a> on the WS-* family of specs. In typical Roger fashion, he decides to give them his own name - WS-SCRAM with SCRAM standing for "Secure, Coordinated, Reliable Async Messages". (I forget where, but I once heard Roger refer to "three-phase transactions" instead of the relatively standard "two-phase commit transactions".) Roger claims MS et. al. are pushing WS-STAR where "STAR" is an acronym standing for "Secure, Transacted, Async, Reliable". Personally, I've never seen it written out like a an acronym and I always thought the * in WS-* was used as a wildcard, but it is true that we are focused more on transactions than coordination. On the <a href="http://msdn.microsoft.com/Longhorn">Longhorn DevCenter</a>, Indigo is <a href="http://msdn.microsoft.com/Longhorn/understanding/pillars/Indigo">described</a> as providing "secure, reliable, and transacted messaging along with interoperability." </p><p>This is actually the second time Roger's taken on transactions in a web services architecture. His <a href="http://www.objectwatch.com/newsletters/issue_41.htm">last newsletter</a> on the topic had a much more detailed but harder to follow example. He points out that there are two related specs in this space - <a href="http://msdn.microsoft.com/ws/2004/10/ws-atomictransaction/">WS-AtomicTransaction</a> and <a href="http://msdn.microsoft.com/ws/2004/10/ws-businessactivity/">WS-BusinessActivity</a> but that he thinks only WS-BA is going to work in the long run. WS-AT requires holding locks open in the DB, which is highly unlikely between services in different trust boundaries communicating with async messaging. Am I really going to lock the records in my database while I wait for a service that I don't trust to figure out if it is able to commit or abort? I don't think so. Pat's <a href="http://blogs.msdn.com/pathelland/archive/2004/08/12/213552.aspx">wrote a great scenario</a> showing how unrealistic the concept of long-running transactions really are.</p><p>However, at the end of the newsletter, Roger takes Indigo to task for implementing WS-AT and not WS-BA and I don't agree with him. While I think WS-AT shouldn't be used in web services architectures, Indigo is also responsible for moving existing technologies like COM+ forward. Leaving out WS-AT isn't really an option in those scenarios. As for not implementing WS-BA, I've got to wonder just how valuable is WS-BA? While WS-BA avoids the DB locking issue of WS-AT, it still doesn't deal with the delegation of control. WS-BA still leaves me beholden to the decision of some outside coordinator. This seems to violate two of <a href="http://www.pluralsight.com/blogs/dbox">Don's</a><a href="http://msdn.microsoft.com/longhorn/understanding/pillars/indigo/default.aspx?pull=/msdnmag/issues/04/01/Indigo/default.aspx">tenets of service orientation</a>: "Boundaries are Explicit" and "Services are Autonomous".</p>]]></content:encoded>
  <excerpt:encoded xmlns:excerpt="http://wordpress.org/export/1.2/excerpt/"><![CDATA[]]></excerpt:encoded>
  <wp:post_id xmlns:wp="http://wordpress.org/export/1.2/">479</wp:post_id>
  <wp:post_date xmlns:wp="http://wordpress.org/export/1.2/">2004-11-09 16:34:44</wp:post_date>
  <wp:post_date_gmt xmlns:wp="http://wordpress.org/export/1.2/">2004-11-09 16:34:44</wp:post_date_gmt>
  <wp:comment_status xmlns:wp="http://wordpress.org/export/1.2/">open</wp:comment_status>
  <wp:ping_status xmlns:wp="http://wordpress.org/export/1.2/">open</wp:ping_status>
  <wp:post_name xmlns:wp="http://wordpress.org/export/1.2/">roger-sessions-on-ws</wp:post_name>
  <wp:status xmlns:wp="http://wordpress.org/export/1.2/">publish</wp:status>
  <wp:post_parent xmlns:wp="http://wordpress.org/export/1.2/">0</wp:post_parent>
  <wp:menu_order xmlns:wp="http://wordpress.org/export/1.2/">0</wp:menu_order>
  <wp:post_type xmlns:wp="http://wordpress.org/export/1.2/">post</wp:post_type>
  <wp:post_password xmlns:wp="http://wordpress.org/export/1.2/"></wp:post_password>
  <wp:is_sticky xmlns:wp="http://wordpress.org/export/1.2/">0</wp:is_sticky>
  <category domain="category" nicename="architecture"><![CDATA[Architecture]]></category>
  <category domain="post_tag" nicename="soa"><![CDATA[SOA]]></category>
  <wp:postmeta xmlns:wp="http://wordpress.org/export/1.2/">
    <wp:meta_key>dasblog_entryid</wp:meta_key>
    <wp:meta_value><![CDATA[657b75b9-0347-4ab5-8cf3-7c1de7dfbcce]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta xmlns:wp="http://wordpress.org/export/1.2/">
    <wp:meta_key>dasblog_compressedtitle</wp:meta_key>
    <wp:meta_value><![CDATA[Roger+Sessions+On+WS]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta xmlns:wp="http://wordpress.org/export/1.2/">
    <wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
    <wp:meta_value><![CDATA[2004/11/10/Roger+Sessions+On+WS]]></wp:meta_value>
  </wp:postmeta>
</item>