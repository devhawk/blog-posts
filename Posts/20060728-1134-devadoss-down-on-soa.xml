<?xml version="1.0" encoding="utf-8"?>
<item>
  <title>deVadoss Down on SOA</title>
  <link>http://devhawk.net/2006/07/28/devadoss-down-on-soa/</link>
  <pubDate>Fri, 28 Jul 2006 11:34:45 +0000</pubDate>
  <dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">devhawk</dc:creator>
  <guid isPermaLink="false">http://2d37bb76-cc71-4c89-bc0a-853e4432ff33</guid>
  <description></description>
  <content:encoded xmlns:content="http://purl.org/rss/1.0/modules/content/"><![CDATA[<p>My <a href="http://blogs.technet.com/michael_platt">old boss's</a><a href="http://blogs.msdn.com/jdevados">boss</a> seems like he was in a downer mood yesterday. First, he blogged about the "<a href="http://blogs.msdn.com/jdevados/archive/2006/07/27/680756.aspx">Myth of Reuse in SOA</a>", then the "<a href="http://blogs.msdn.com/jdevados/archive/2006/07/27/680765.aspx">Achilles Heel of SOA</a>". Actually, truth be told, I agree with him on both counts. </p><p>I slam the door on the reuse argument every time it comes up in my new job. Actually, I slam the door on what I call "Naive Reuse". When John talks factoring for agility, he's talking about a form of reuse - similar to how use "reuse" code when you refactor. What does it mean to refactor service? How about refactoring your enterprise?</p><p>As for the Achilles Heel "data problem", I think that's an artifact of the prevailing stateless request/response mindset most people have about services that I <a href="http://feeds.feedburner.com/~r/Devhawk/~3/6182983/Services+Arent+Stateless.aspx">touched on</a> yesterday. I think Pat Helland <a href="http://msdn.microsoft.com/library/en-us/dnbda/html/dataoutsideinside.asp">described</a> a very good approach for dealing with data in an SOA, but I haven't seen it implemented broadly. Rest assured, many of the concepts Pat described are at the forefront of my thinking as my new project takes shape.</p>]]></content:encoded>
  <excerpt:encoded xmlns:excerpt="http://wordpress.org/export/1.2/excerpt/"><![CDATA[]]></excerpt:encoded>
  <wp:post_id xmlns:wp="http://wordpress.org/export/1.2/">771</wp:post_id>
  <wp:post_date xmlns:wp="http://wordpress.org/export/1.2/">2006-07-28 11:34:45</wp:post_date>
  <wp:post_date_gmt xmlns:wp="http://wordpress.org/export/1.2/">2006-07-28 11:34:45</wp:post_date_gmt>
  <wp:comment_status xmlns:wp="http://wordpress.org/export/1.2/">open</wp:comment_status>
  <wp:ping_status xmlns:wp="http://wordpress.org/export/1.2/">open</wp:ping_status>
  <wp:post_name xmlns:wp="http://wordpress.org/export/1.2/">devadoss-down-on-soa</wp:post_name>
  <wp:status xmlns:wp="http://wordpress.org/export/1.2/">publish</wp:status>
  <wp:post_parent xmlns:wp="http://wordpress.org/export/1.2/">0</wp:post_parent>
  <wp:menu_order xmlns:wp="http://wordpress.org/export/1.2/">0</wp:menu_order>
  <wp:post_type xmlns:wp="http://wordpress.org/export/1.2/">post</wp:post_type>
  <wp:post_password xmlns:wp="http://wordpress.org/export/1.2/"></wp:post_password>
  <wp:is_sticky xmlns:wp="http://wordpress.org/export/1.2/">0</wp:is_sticky>
  <category domain="category" nicename="architecture"><![CDATA[Architecture]]></category>
  <category domain="post_tag" nicename="soa"><![CDATA[SOA]]></category>
  <wp:postmeta xmlns:wp="http://wordpress.org/export/1.2/">
    <wp:meta_key>dasblog_entryid</wp:meta_key>
    <wp:meta_value><![CDATA[2d37bb76-cc71-4c89-bc0a-853e4432ff33]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta xmlns:wp="http://wordpress.org/export/1.2/">
    <wp:meta_key>dasblog_compressedtitle</wp:meta_key>
    <wp:meta_value><![CDATA[deVadoss+Down+On+SOA]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta xmlns:wp="http://wordpress.org/export/1.2/">
    <wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
    <wp:meta_value><![CDATA[2006/07/28/deVadoss+Down+On+SOA]]></wp:meta_value>
  </wp:postmeta>
</item>