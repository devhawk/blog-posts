{"status":"ok","post":{"id":150,"type":"post","slug":"messenger-net-futures","url":"http:\/\/devhawk.net\/2003\/07\/21\/messenger-net-futures\/","status":"publish","title":"Messenger.NET Futures","title_plain":"Messenger.NET Futures","content":"<p>Two things have revived my interest in <a href=\"prj_messenger.aspx\"> Messenger.NET<\/a> (though it needs a new name &#8211; <a href=\"mailto:harry@devhawk.net\">any suggestions<\/a>?). <a href=\"http:\/\/weblogs.asp.net\/NUnitAddin\/\">Jamie&#8217;s<\/a><a href=\"http:\/\/www.managedaddins.net\/gallery\/\">addin<\/a> and the upcoming release of <a href=\"http:\/\/msdn.microsoft.com\/library\/en-us\/rtcclnt\/rtc\/real_time_communications_rtc_client_start_page.asp\"> RTC Client API v1.2<\/a>. The new client API is designed lockstep with <a href=\"http:\/\/www.microsoft.com\/office\/preview\/rtcserver\/default.asp\"> Microsoft Office Real-Time Communication Server 2003<\/a> (otherwise known as just RTC Server). <\/p>\n<p align=\"left\">The current version of Messenger.NET is built on <a href=\"http:\/\/www.sellsbrothers.com\/tools\/#imcli\">imcli<\/a>, an implementation of MSNP7 &#8211; the IM protocol used by MSN Messenger prior to v5. While <a href=\"http:\/\/messenger.msn.com\/\">MSN Messenger<\/a> still uses later versions of that protocol, <a href=\"http:\/\/www.microsoft.com\/windowsxp\/windowsmessenger\/default.asp\"> Windows Messenger<\/a> can support other protocols as well, such as <a href=\"http:\/\/www.microsoft.com\/exchange\/evaluation\/features\/instantmessage.asp\"> Exchange 2000&#8242;s IM Service<\/a>. The new RTC Server and Client API are using the <a href=\"http:\/\/www.ietf.org\/home.html\">IETF&#8217;s<\/a><a href=\"http:\/\/www.ietf.org\/html.charters\/sip-charter.html\">Session Initiation Protocol<\/a> (SIP) and the <a href=\"http:\/\/www.ietf.org\/html.charters\/simple-charter.html\">SIP Instant Messaging and Presence Language Extensions<\/a> (SIMPLE). That seems like a much more interesting foundation to build an app \/ addin around. <\/p>\n<p align=\"left\">One quick downside of the new RTC Client API &#8211; it&#8217;s still COM based. The v1 shipped with Windows XP way way back before CLR and the new v1.2 is a refinement to that model. Of course, part of a &#8220;next-gen&#8221; Messenger.NET implementation could include a managed wrapper around that COM API. I&#8217;ve been diving into Code Access Security (CAS) recently, so building such a library would be a good opportunity to practice <a href=\"http:\/\/msdn.microsoft.com\/security\/default.aspx?pull=\/library\/en-us\/dnnetsec\/html\/THCMCh07.asp\"> building secure assemblies<\/a>.<\/p>\n","excerpt":"<p>Two things have revived my interest in Messenger.NET (though it needs a new name &#8211; any suggestions?). Jamie&#8217;saddin and the upcoming release of RTC Client API v1.2. The new client API is designed lockstep with Microsoft Office Real-Time Communication Server 2003 (otherwise known as just RTC Server). The current version of Messenger.NET is built on [&hellip;]<\/p>\n","date":"2003-07-21 17:57:39","modified":"2003-07-21 17:57:39","categories":[],"tags":[],"author":{"id":1,"slug":"admin","name":"DevHawk","first_name":"Harry","last_name":"Pierson","nickname":"DevHawk","url":"","description":""},"comments":[],"attachments":[],"comment_count":0,"comment_status":"closed","custom_fields":{"dasblog_entryid":["f5a2c0c2-f96b-44f2-8a75-fc4d8e03993e"],"dasblog_compressedtitle":["MessengerNET+Futures"],"dasblog_compressedtitleunique":["2003\/07\/22\/MessengerNET+Futures"]}},"previous_url":"http:\/\/devhawk.net\/2003\/07\/21\/coming-up-for-air\/","next_url":"http:\/\/devhawk.net\/2003\/07\/23\/finally-back-home\/"}