{"status":"ok","post":{"id":531,"type":"post","slug":"crazy-idea","url":"http:\/\/devhawk.net\/2005\/02\/06\/crazy-idea\/","status":"publish","title":"Crazy Idea","title_plain":"Crazy Idea","content":"<p>When web servers were first built, there was a one-to-one mapping between virtual files (i.e. addressable via http)\u00a0and the physical files (the ones in the file system). Over time, two important capabilities were added. First, the contents of a given file became dynamic. So while you the reader always come back to default.aspx (or rss.aspx as the case may be) the content changes everytime I post something new. Secondly, the physical file dependency was removed. It&#8217;s not used much in dasBlog, but in .TEXT this is very prevelant. My <a href=\"http:\/\/blogs.msdn.com\/devhawk\/archive\/2005\/02\/01\/364380.aspx\">last post<\/a> on blogs.msdn.com is located at http:\/\/blogs.msdn.com\/devhawk\/archive\/2005\/02\/01\/364380.aspx. Obviously, there is no actual file named 364380.aspx, .TEXT uses the filename as a key into the DB to find the actual entry content. This technique is used extensively in the new <a href=\"msdn2.microsoft.com\">MSDN2<\/a> (if you haven&#8217;t already, check out <a href=\"http:\/\/www.pluralsight.com\/blogs\/tewald\/default.aspx\">Tim Ewald&#8217;s<\/a> MSDN Magazine <a href=\"http:\/\/msdn.microsoft.com\/msdnmag\/issues\/05\/02\/InsideMSDN\/default.aspx\">article<\/a> about URL design for MSDN2).<\/p>\n<p>So now for the funky idea part &#8211; why couldn&#8217;t we generate dynamic local files the same way? I&#8217;m not sure I&#8217;ve got a great use for this yet &#8211; most of the apps I use are programmable to some extent, so dynamic content can be generated at the app level rather than at the file system level. But I&#8217;m thinking there may be some scenarios where it would make sense to do this at the file system. For example, in the new <a href=\"http:\/\/www.microsoft.com\/genuine\/offers\/details.aspx?displaylang=en&amp;OfferId=74AA1C1D-DFFC-4D91-BC6F-515BE8E59948\">Winter Fun Pack<\/a> there&#8217;s a new version of the WMP blogging plugin that autoupdates the Outlook and Outlook Express signature files whenever the song being played changes (a la Duncan&#8217;s Coding4Fun <a href=\"http:\/\/msdn.microsoft.com\/library\/en-us\/dncodefun\/html\/code4fun09072004.asp\">article<\/a>). But with virtual files in the file system, you could generate these files when they are accessed instead of writing new ones everytime the song changes, even if Outlook open.<\/p>\n<p>Of course, our local file system typically has more writing activity than the web, so I&#8217;m thinking this isn&#8217;t that great an idea. But I figured I&#8217;d share in case someone else could think of some good uses. Or maybe this already exists and I just don&#8217;t know about it.<\/p>\n","excerpt":"<p>When web servers were first built, there was a one-to-one mapping between virtual files (i.e. addressable via http)\u00a0and the physical files (the ones in the file system). Over time, two important capabilities were added. First, the contents of a given file became dynamic. So while you the reader always come back to default.aspx (or rss.aspx [&hellip;]<\/p>\n","date":"2005-02-06 22:32:38","modified":"2005-02-06 22:32:38","categories":[{"id":204,"slug":"development","title":"Development","description":"","parent":0,"post_count":165}],"tags":[],"author":{"id":1,"slug":"admin","name":"DevHawk","first_name":"Harry","last_name":"Pierson","nickname":"DevHawk","url":"","description":""},"comments":[{"id":2771,"name":"Tiago Pascoal","url":"http:\/\/weblogs.asp.net","date":"2005-02-07 02:11:10","content":"<p>Humm i think Linux (i&#8217;m sure other unixes have it too) has this, \/proc\/* for example. But this is done at a kernel level, not sure if such thing exists at the user process level, i bet there is something. But if there isn&#8217;t i sure it would be an easy hack.<\/p>\n<p>What kind of semantics were you thinking? would these virtual files be seekable? how would they be versioned? what kind of concurrency controls would need to exist? <\/p>\n<p>Sure pull instead of push (with a lot of unnecessary pushing ocurring in your described scenario) is nice, but i wonder if the effort would be worth it?<\/p>\n<p>just wondering.<\/p>\n","parent":0},{"id":2772,"name":"Chris Bilson","url":"http:\/\/weblogs.factored-software.com\/chris","date":"2005-02-07 05:56:28","content":"<p>I agree that there are some exciting possibilities for this type of thing, and I use several &#8220;virtual filesystems&#8221; everyday (Daemontools (for mounting ISO files), web folders (for mounting WebDAV directories)), etc. If you zoom in a little closer, I think you&#8217;ll see all filesystems are virtual. There aren&#8217;t actually any files on a disk&#8230;just sectors\/blocks.<\/p>\n<p>But I think there are some dangers too. I think the assumption that filesystems are fairly static and computationally cheap to access is too baked into most software. I think this goes back to the idea that, &#8220;boundaries should be explicit.&#8221;<\/p>\n<p>If you really wanted to, however, you could make a fairly decent dynamic virtual file system using web folders and WebDAV pointing at a web server.<\/p>\n","parent":0},{"id":2773,"name":"Oran","url":"","date":"2005-02-07 09:54:51","content":"<p>Check out the &#8220;subst&#8221; command that comes with Windows.  This might get you part of the way there.<\/p>\n","parent":0}],"attachments":[],"comment_count":3,"comment_status":"closed","custom_fields":{"dasblog_entryid":["951a05f3-95b1-4477-ac23-9dba308b012d"],"dasblog_compressedtitle":["Crazy+Idea"],"dasblog_compressedtitleunique":["2005\/02\/07\/Crazy+Idea"]}},"previous_url":"http:\/\/devhawk.net\/2005\/02\/06\/rss-bandit-wolverine-thumbs-up\/","next_url":"http:\/\/devhawk.net\/2005\/02\/07\/napster-to-go-got-going\/"}