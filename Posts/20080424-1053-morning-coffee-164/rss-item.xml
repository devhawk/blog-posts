<?xml version="1.0" encoding="utf-8"?>
<item>
  <title>Morning Coffee 164</title>
  <link>http://devhawk.net/2008/04/24/morning-coffee-164/</link>
  <pubDate>Thu, 24 Apr 2008 17:53:32 +0000</pubDate>
  <dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">devhawk</dc:creator>
  <guid isPermaLink="false">http://1b609add-8724-4b91-9610-8f93ead98f6b</guid>
  <description></description>
  <content:encoded xmlns:content="http://purl.org/rss/1.0/modules/content/"><![CDATA[<ul><li>Big news since my last Morning Coffee post was the announcement of <a href="https://www.mesh.com/">Live Mesh</a>. I've been running it for about a month, and I'm really digging it. Make sure you check out the <a href="http://blogs.msdn.com/livemesh/">team blog</a> and watch the <a href="http://www.mesh.com/Welcome/TourDeveloper.aspx">developer tour video</a> (be on the lookout for IPy about half way thru the video)</li></ul><p>ALT.NET</p><ul><li>I had a great time @ the <a href="http://altdotnet.org/">ALT.NET</a> open space conference last weekend. I was somewhat distracted on Saturday as due to a family communication mixup, I had to bring my son Patrick with me. <a href="http://codebetter.com/blogs/jeffrey.palermo/">Jeffrey Palermo</a> shot a <a href="http://codebetter.com/blogs/jeffrey.palermo/archive/2008/04/19/alt-net-attendees-video-posted.aspx">cute video of him</a> (3 minutes in) where he explains that he's at the conference "to be with my dad". Having a five year old is a little distracting, but everyone was amazingly cool with having him around. When he gets a little older I have no doubt he'll be attending conferences and leading open sessions.  </li><li>I did a session on F#, but it felt kinda all over the place. I hadn't touched F# in a few months and it showed IMO. <a href="http://weblogs.asp.net/podwysocki/default.aspx">Matt Podwysocki</a> was there to help keep the session from devolving into mass chaos. Thanks Matt.  </li><li>My favorite session of the conference was Scott Hanselman's "Are We Innovating?" talk, which I think originated from a question I asked him: There are many examples of large OSS projects in other dev communities that get ported to .NET (<a href="http://www.hibernate.org/343.html">NHibernate</a>, <a href="http://nant.sourceforge.net/">NAnt</a>, <a href="http://www.castleproject.org/monorail/index.html">MonoRail</a>, etc). Can you name one that's gone the other way? I can't.  </li><li>I took <a href="http://weblogs.asp.net/podwysocki/archive/2008/04/24/alt-net-open-spaces-closing-day-recap.aspx">Matt's advice</a> and joined the local <a href="http://groups.google.com/group/altnetseattle">ALT.NET Seattle group</a>. </li></ul><p>DyLang Stuff</p><ul><li>Martin Maly <a href="http://blogs.msdn.com/mmaly/archive/2008/04/22/dlr-caches.aspx">posts about</a> how dynamic method dispatches are cached in three different layers by the DLR. You shouldn't care about this stuff if you're a DLR language user, but you will certainly care about it if you're a DLR language builder.  </li><li>I'm really excited to see Phil Haack (whom I met F2F @ ALT.NET) is <a href="http://haacked.com/archive/2008/04/22/defining-asp.net-mvc-routes-and-views-in-ironruby.aspx">experimenting with IronRuby &amp; ASP.NET MVC</a>. True, I'd rather it was IPy, but his Routes.LoadFromRuby would work with Python with very little code change.  </li><li>Note to self, take a deeper look at <a href="http://www.t3rse.com/twining/">Twining</a>, the IPy database DSL by <a href="http://metadeveloper.blogspot.com/">David Seruyange</a>.  </li><li>Daily Michael Foord - <a href="http://www.voidspace.org.uk/python/weblog/arch_d7_2008_04_19.shtml#e968">Ironclad 0.2 Released</a>. Ironclad is a project to implement <a href="http://docs.python.org/api/api.html">Python's C extension API</a> in C# so that IronPython could load standard Python C modules like <a href="http://www.scipy.org/">SciPy</a> and <a href="http://www.numpy.org/">NumPy</a>. So far, they're able to load the <a href="http://docs.python.org/lib/module-bz2.html">bz2 module</a>.  </li></ul><p>Other Stuff</p><ul><li>Congrats to <a href="http://bradwilson.typepad.com/blog/2008/04/xunitnet-10-rel.html">Brad</a> and <a href="http://jamesnewkirk.typepad.com/posts/2008/04/xunitnet-10-rel.html">Jim</a> for shipping <a href="http://www.codeplex.com/xunit/Release/ProjectReleases.aspx?ReleaseId=12516">xUnit.net 1.0</a>.  </li><li>Everyone seems to be jumping on the functional C# coding bandwagon. Bart De Smet's series on pattern matching in C# is <a href="http://community.bartdesmet.net/blogs/bart/archive/2008/04/16/pattern-matching-in-c-part-8.aspx">currently at eight posts</a>. Now Luca Bolognese is in on the action, with three posts so far on <a href="http://blogs.msdn.com/lucabol/archive/2008/04/21/a-c-library-to-write-functional-code-part-iii-records.aspx">functional code in C#</a>. I like how Luca keeps writing that the C# syntax is "not terrible" for functional programming. Again, why suffer thru the "not terrible" syntax when you could be using F# instead? (via <a href="http://blogs.msdn.com/charlie/archive/2008/04/23/community-convergence-xliii.aspx">Charlie Calvert</a>)  </li><li>I need to take a look at <a href="http://blogs.msdn.com/mitsu/archive/2008/04/02/visual-linq-query-builder-for-linq-to-sql-vlinq.aspx">VLinq</a>. Charlie and <a href="http://feeds.feedburner.com/~r/ScottHanselman/~3/267517424/TheWeeklySourceCode23BigSolutionEdition.aspx">Scott Hanselman</a> both mentioned it recently.  </li><li>I would like to have been <a href="http://blogs.tedneward.com/2008/04/16/Do+You+Fall+Prey+To+Technical+Folk+Etymology.aspx">in the conversation</a> with Ted Neward, Neal Ford, Venkat Subramaniam, Don Box and Amanda Silver.  </li><li>I haven't had any time to play with XNA of late, which means the <a href="http://blogs.msdn.com/xna/archive/2008/04/20/gdc-2008-presenations-are-now-available.aspx">great list of GDC videos</a> Dave Weller posted on the XNA team blog will remain beyond my ability to invest time for now.  </li><li>There's a <a href="http://research.microsoft.com/research/downloads/Details/8826adb9-8398-40d6-a22d-951923fe2647/Details.aspx">new drop</a> of <a href="http://research.microsoft.com/specsharp/?0sr=a">Spec#</a> from MS Research. <a href="http://rubyforge.org/projects/ironruby/">IronRuby</a> is using Spec# heavily as I recall.</li></ul>]]></content:encoded>
  <excerpt:encoded xmlns:excerpt="http://wordpress.org/export/1.2/excerpt/"><![CDATA[]]></excerpt:encoded>
  <wp:post_id xmlns:wp="http://wordpress.org/export/1.2/">1140</wp:post_id>
  <wp:post_date xmlns:wp="http://wordpress.org/export/1.2/">2008-04-24 10:53:32</wp:post_date>
  <wp:post_date_gmt xmlns:wp="http://wordpress.org/export/1.2/">2008-04-24 17:53:32</wp:post_date_gmt>
  <wp:comment_status xmlns:wp="http://wordpress.org/export/1.2/">open</wp:comment_status>
  <wp:ping_status xmlns:wp="http://wordpress.org/export/1.2/">open</wp:ping_status>
  <wp:post_name xmlns:wp="http://wordpress.org/export/1.2/">morning-coffee-164</wp:post_name>
  <wp:status xmlns:wp="http://wordpress.org/export/1.2/">publish</wp:status>
  <wp:post_parent xmlns:wp="http://wordpress.org/export/1.2/">0</wp:post_parent>
  <wp:menu_order xmlns:wp="http://wordpress.org/export/1.2/">0</wp:menu_order>
  <wp:post_type xmlns:wp="http://wordpress.org/export/1.2/">post</wp:post_type>
  <wp:post_password xmlns:wp="http://wordpress.org/export/1.2/"></wp:post_password>
  <wp:is_sticky xmlns:wp="http://wordpress.org/export/1.2/">0</wp:is_sticky>
  <category domain="post_tag" nicename="asp-net"><![CDATA[ASP.NET]]></category>
  <category domain="post_tag" nicename="database"><![CDATA[Database]]></category>
  <category domain="post_tag" nicename="dlr"><![CDATA[DLR]]></category>
  <category domain="post_tag" nicename="domain-specific-languages"><![CDATA[Domain Specific Languages]]></category>
  <category domain="post_tag" nicename="f-sharp"><![CDATA[F#]]></category>
  <category domain="post_tag" nicename="ironruby"><![CDATA[IronRuby]]></category>
  <category domain="post_tag" nicename="linq"><![CDATA[LINQ]]></category>
  <category domain="post_tag" nicename="microsoft"><![CDATA[Microsoft]]></category>
  <category domain="category" nicename="morning-coffee"><![CDATA[Morning Coffee]]></category>
  <category domain="post_tag" nicename="open-space"><![CDATA[Open Space]]></category>
  <category domain="post_tag" nicename="web-2-0"><![CDATA[Web 2.0]]></category>
  <category domain="post_tag" nicename="windows-live"><![CDATA[Windows Live]]></category>
  <category domain="post_tag" nicename="xna"><![CDATA[XNA]]></category>
  <wp:postmeta xmlns:wp="http://wordpress.org/export/1.2/">
    <wp:meta_key>dasblog_entryid</wp:meta_key>
    <wp:meta_value><![CDATA[1b609add-8724-4b91-9610-8f93ead98f6b]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta xmlns:wp="http://wordpress.org/export/1.2/">
    <wp:meta_key>dasblog_compressedtitle</wp:meta_key>
    <wp:meta_value><![CDATA[Morning+Coffee+164]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta xmlns:wp="http://wordpress.org/export/1.2/">
    <wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
    <wp:meta_value><![CDATA[2008/04/24/Morning+Coffee+164]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta xmlns:wp="http://wordpress.org/export/1.2/">
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment xmlns:wp="http://wordpress.org/export/1.2/">
    <wp:comment_id>2063</wp:comment_id>
    <wp:comment_author><![CDATA[Oran]]></wp:comment_author>
    <wp:comment_author_email></wp:comment_author_email>
    <wp:comment_author_url>http://orand.blogspot.com</wp:comment_author_url>
    <wp:comment_author_IP>209.112.218.6</wp:comment_author_IP>
    <wp:comment_date>2008-04-25 00:12:05</wp:comment_date>
    <wp:comment_date_gmt>2008-04-25 07:12:05</wp:comment_date_gmt>
    <wp:comment_content><![CDATA["Can you name one that's gone the other way?"  Not if you filter by "large" and "OSS".  Otherwise, there are a few examples.

There are LINQ knock-offs in JavaScript, Java, and PHP.  I'm sure more will follow.

.NET Attributes and the style of unit test integration first invented by NUnit have found their way back into Java Annotations and Java unit test frameworks.

There are a number of XAML clones.

Live Mesh is an interesting one since it's meant to have broad reach with platforms and languages, but I'll bet that besides that, there will by several whole-sale concept knock-offs.

The conclusion I draw is that currently most of the .NET innovation is happening inside of Microsoft, but I wouldn't be surprised if OSS .NET projects that heavily depend on LINQ don't get ported to other platforms.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
  </wp:comment>
  <wp:comment xmlns:wp="http://wordpress.org/export/1.2/">
    <wp:comment_id>2064</wp:comment_id>
    <wp:comment_author><![CDATA[Oran]]></wp:comment_author>
    <wp:comment_author_email></wp:comment_author_email>
    <wp:comment_author_url>http://orand.blogspot.com</wp:comment_author_url>
    <wp:comment_author_IP>209.112.218.6</wp:comment_author_IP>
    <wp:comment_date>2008-04-25 00:35:12</wp:comment_date>
    <wp:comment_date_gmt>2008-04-25 07:35:12</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[SharpDevelop -> MonoDevelop is another interesting one.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
  </wp:comment>
</item>