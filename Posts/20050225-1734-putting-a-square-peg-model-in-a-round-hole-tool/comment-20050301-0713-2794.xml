<?xml version="1.0" encoding="utf-8"?>
<wp:comment xmlns:wp="http://wordpress.org/export/1.2/">
  <wp:comment_id>2794</wp:comment_id>
  <wp:comment_author><![CDATA[Charles Rivet]]></wp:comment_author>
  <wp:comment_author_email>tevirselrahc@gmail.com</wp:comment_author_email>
  <wp:comment_author_url></wp:comment_author_url>
  <wp:comment_author_IP></wp:comment_author_IP>
  <wp:comment_date>2005-03-01 07:13:07</wp:comment_date>
  <wp:comment_date_gmt>2005-03-01 15:13:07</wp:comment_date_gmt>
  <wp:comment_content><![CDATA[I completely agree!!!

Too many people are making up a lot of noise about how these approaches are very different when they are talking about basically the same thing: the need to present people with constructs that they understand at _their_ level of abstractions.

If you can do that on a common base, then you gain the benefit of existing tools. But if the DSL is too complex for that common base, let's not shy away from creating a new tool. The important thing, in the end, is the user's productivity.]]></wp:comment_content>
  <wp:comment_approved>1</wp:comment_approved>
  <wp:comment_type></wp:comment_type>
  <wp:comment_parent>0</wp:comment_parent>
  <wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>