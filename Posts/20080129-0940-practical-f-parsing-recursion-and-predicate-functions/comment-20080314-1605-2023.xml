<?xml version="1.0" encoding="utf-8"?>
<wp:comment xmlns:wp="http://wordpress.org/export/1.2/">
  <wp:comment_id>2023</wp:comment_id>
  <wp:comment_author><![CDATA[ToolmakerSteve]]></wp:comment_author>
  <wp:comment_author_email>toolmakersteve98@shawstudio.com</wp:comment_author_email>
  <wp:comment_author_url>http://toolmakersteve.com</wp:comment_author_url>
  <wp:comment_author_IP>24.10.93.210</wp:comment_author_IP>
  <wp:comment_date>2008-03-14 16:05:28</wp:comment_date>
  <wp:comment_date_gmt>2008-03-14 23:05:28</wp:comment_date_gmt>
  <wp:comment_content><![CDATA["These five functions significantly reduced the complexity of the code. Unfortunately, I'm not sure it's much easier to read. The conciseness is offset IMO by the ugliness of using the active pattern's true names."

I consider the new version MUCH easier to read. To be precise, as I get used to the split-banana syntax by experimenting with active patterns, it is becoming a familiar visual entity with a known meaning, that I can rapidly scan and associate with that meaning. Contrast that with the original, which requires examining several lines of code to recognize a usage pattern.

As far as how to make this less ugly, I am concerned that removing that visual cue would take away meaning; remove that immediate knowledge "its a split-banana active pattern". I suggest simply having the code editor recognize bananas and splits, and color them blue. Its not like full names of banana entities are going to be heavily used in ordinary code. Keeping them distinctive is a good thing!]]></wp:comment_content>
  <wp:comment_approved>1</wp:comment_approved>
  <wp:comment_type></wp:comment_type>
  <wp:comment_parent>0</wp:comment_parent>
  <wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>