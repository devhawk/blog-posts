{"status":"ok","post":{"id":329,"type":"post","slug":"build-slide-export","url":"http:\/\/devhawk.net\/2004\/03\/10\/build-slide-export\/","status":"publish","title":"Build Slide Export","title_plain":"Build Slide Export","content":"<div>I <a href=\"http:\/\/devhawk.net\/PermaLink.aspx?guid=903afb72-e67e-4592-b631-0a9edb383bfe\">blogged<\/a> yesterday about the issues I\u2019m having with manually repurposing content. One of the specific issues has to do with the <a href=\"http:\/\/msdn.microsoft.com\/architecture\/overview\/series\/\">Architecture Strategy Series<\/a>. We provide that content via three channels \u2013 DVD, online seminars and (soon) download. We use <a href=\"http:\/\/www.microsoft.com\/office\/powerpoint\/producer\/prodinfo\/default.mspx\">Producer<\/a> to create the DVD and download files. However, online seminar system doesn\u2019t support Producer. The primary issue is that Producer uses the Save as HTML version of the PPT, but the online seminar system only supports static images. This means having to manually strip out the animations, which is a pain in the ass. Since I don\u2019t ever want to have to do that again, I wrote a PowerPoint add-in to do it for me.<\/div>\n<div>When you invoke the <a href=\"http:\/\/cid-0d9bc809858885a4.office.live.com\/self.aspx\/DevHawk%20Content\/BlogFiles\/BuildSlideExport.msi\">Build Slide Export add-in<\/a> , it will step thru your presentation and screen capture each slide build to disk. It\u2019s very similar to the built in Save as JPEG\/GIF\/PNG feature, except that it creates an image per build, not per slide. So those complex build slides turn out multiple image files. It\u2019s sort that you can\u2019t use the machine for anything else while it\u2019s processing, but it was really easy to write the code. I tested it on a long complex PPT file with lots of builds (i.e. the one that took me hours to repurpose on Monday) and it took about 10 minutes.<\/div>\n<div>I\u2019m also providing the <a href=\"http:\/\/cid-0d9bc809858885a4.office.live.com\/self.aspx\/DevHawk%20Content\/BlogFiles\/BuildSlideExport Source.zip\">source<\/a> to the add-in. It\u2019s not much code: maybe 150 lines of relevant code at most. I grabbed the screen capture code from <a href=\"http:\/\/www.c-sharpcorner.com\/Code\/2003\/Dec\/ScreenCapture.asp\">Perry Lee on C# Corner<\/a>.<\/div>\n<div>There were a couple of gotchas involved with this add-in. For example, the add-in project type uses version 7.0 of the office.dll that comes with VS.NET. However, Office 2003 comes with version 11.0 of that DLL and not 7.0, so the first time I went to deploy on my production machine, it didn\u2019t work. I had to grab the right version of office.dll out of the GAC in order to reference it, so it\u2019s included in the lib directory of the source archive (it looks like <a href=\"http:\/\/www.simonguest.com\/\">Simon<\/a> did something similar with <a href=\"http:\/\/workspaces.gotdotnet.com\/niobe\">Niobe<\/a>). Also, PowerPoint\u2019s object model is a little funky. Specifically, SlideShowView.Next() has to be called differently depending on the types of builds in the slides. I handle four different scenarios in the code: no builds, only auto trigger builds, and manual trigger builds, optionally with a set of auto trigger builds before the first manual trigger build.<\/div>\n<div>I\u2019m sure there\u2019s other enhancements that could be made \u2013 for example, the directory the images are saved isn\u2019t selectable nor is the image format. If there\u2019s any interest, I\u2019ll spin up a GDN workspace.<\/div>\n<div><strong>Update<\/strong>: I just noticed a bug, albiet a cut-and-paste bug on my part. Turns out the <a href=\"http:\/\/www.c-sharpcorner.com\/Code\/2003\/Dec\/ScreenCapture.asp\">screen capture code<\/a> that I used is creating four\u00a0image objects for each screen capture. To make matters worse, three of them are never assigned to a variable, so you can&#8217;t call Dispose() on them. So for any real-sized presenation, memory usage goes thru the roof. It&#8217;s relatively easy to fix. Take the code that looks like this:<\/div>\n<div>\n<pre class=\"brush:csharp\">Bitmap image = new Bitmap(\r\n\u00a0   Image.FromHbitmap(new IntPtr(hBitmap)),\r\n\u00a0   Image.FromHbitmap(new IntPtr(hBitmap)).Width,\r\n\u00a0   Image.FromHbitmap(new IntPtr(hBitmap)).Height);\r\nimage.Save(fileName,imageFormat);<\/pre>\n<\/div>\n<div dir=\"ltr\">And replace it with this:<\/div>\n<div dir=\"ltr\">\n<pre class=\"brush:csharp\">Bitmap image = Image.FromHbitmap(new IntPtr(hBitmap));\r\nimage.Save(fileName,imageFormat);image.Dispose();<\/pre>\n<\/div>\n<div dir=\"ltr\">With the improved code, only one bitmap per screen capture is made, and it&#8217;s explicitly disposed. That keeps memory usage under control.<\/div>\n<div dir=\"ltr\"><strong>Another Update<\/strong>: I&#8217;ve updated the binary and the code links above with the new v1.0.1 version that fixes the memory hogging problem.<\/div>\n","excerpt":"<p>I blogged yesterday about the issues I\u2019m having with manually repurposing content. One of the specific issues has to do with the Architecture Strategy Series. We provide that content via three channels \u2013 DVD, online seminars and (soon) download. We use Producer to create the DVD and download files. However, online seminar system doesn\u2019t support [&hellip;]<\/p>\n","date":"2004-03-10 17:41:16","modified":"2011-04-16 23:12:01","categories":[{"id":204,"slug":"development","title":"Development","description":"","parent":0,"post_count":165}],"tags":[],"author":{"id":1,"slug":"admin","name":"DevHawk","first_name":"Harry","last_name":"Pierson","nickname":"DevHawk","url":"","description":""},"comments":[{"id":3025,"name":"Chris","url":"","date":"2004-03-15 16:00:49","content":"<p>I am trying to do this thing you are talking about.  i have a need to export as individual builds.  It used to be an option, but is no longer there.  HOWEVER, i am not a developer and have no idea what you are talking about?  Is there any hope for me?<\/p>\n","parent":0},{"id":3026,"name":"Bruce Bieber","url":"","date":"2004-06-07 12:08:44","content":"<p>&#8220;When you invoke the Build Slide Export add-in&#8230;&#8221;  How do you invoke this add-in?<\/p>\n","parent":0},{"id":3027,"name":"Matthew O'Brien","url":"","date":"2006-04-04 12:40:35","content":"<p>I am extremely excited to get this working so I don&#8217;t have to keep taking build screenshots manually <img src=\"http:\/\/devhawk.net\/wp-includes\/images\/smilies\/icon_smile.gif\" alt=\":)\" class=\"wp-smiley\" \/>   But actually I&#8217;m not sure how to invoke the add in.  As far as I can see, there isn&#8217;t actually an add in.  I&#8217;ve tried referencing the type library, (.tlb file,) in VBA, but I&#8217;m not sure where to go from there.  What am I missing?  Thanks alot<\/p>\n","parent":0}],"attachments":[],"comment_count":3,"comment_status":"closed","custom_fields":{"dasblog_entryid":["5c560426-b750-4eac-b618-e254c7b14298"],"dasblog_compressedtitle":["Build+Slide+Export"],"dasblog_compressedtitleunique":["2004\/03\/11\/Build+Slide+Export"]}},"previous_url":"http:\/\/devhawk.net\/2004\/03\/09\/looking-for-spsynd-volunteers\/","next_url":"http:\/\/devhawk.net\/2004\/03\/11\/pat-helland-is-blogging\/"}