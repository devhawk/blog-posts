<?xml version="1.0" encoding="utf-8"?>
<wp:comment xmlns:wp="http://wordpress.org/export/1.2/">
  <wp:comment_id>2611</wp:comment_id>
  <wp:comment_author><![CDATA[Joshua Hayworth]]></wp:comment_author>
  <wp:comment_author_email>joshua@hayworth.com</wp:comment_author_email>
  <wp:comment_author_url>http://www.hayworthsoftware.com/personal</wp:comment_author_url>
  <wp:comment_author_IP></wp:comment_author_IP>
  <wp:comment_date>2004-05-27 00:37:06</wp:comment_date>
  <wp:comment_date_gmt>2004-05-27 07:37:06</wp:comment_date_gmt>
  <wp:comment_content><![CDATA[I posted this on your Dad's site, but I wanted to get your opinion as well.

Cool/Not Cool?

[post: http://halpierson.blogspot.com/2004/05/models.html]

Hello,

I'm a 25 year old up and comming developer, working with a small company while I'm going to school. 

One of the things my manager is trying to instill in me is the importance of modeling. He insists on "blueprinting" the application before I write a line of code. We're using the Rational Unified Process to develop our product.

Now understand that I have come from a Microsoft Access/Visual Basic 6 background. The desire to just code first is incredible. Development Lifecycle models like "Agile" or "eXtreme Programming" sound extremely appealing.

I'm learning to like UML and designing before I code.

I was curious how you felt about it? Good/Bad/Indifferent?

Would you be willing to give me a little advise on making the long journey from apprentice coder to software architect?

Joshua
(joshua@hayworth.com)
[/post]]]></wp:comment_content>
  <wp:comment_approved>1</wp:comment_approved>
  <wp:comment_type></wp:comment_type>
  <wp:comment_parent>0</wp:comment_parent>
  <wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>