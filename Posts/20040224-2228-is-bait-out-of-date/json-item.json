{"status":"ok","post":{"id":319,"type":"post","slug":"is-bait-out-of-date","url":"http:\/\/devhawk.net\/2004\/02\/24\/is-bait-out-of-date\/","status":"publish","title":"Is BAIT Out of Date?","title_plain":"Is BAIT Out of Date?","content":"<p>I was re-reading the <a href=\"http:\/\/msdn.microsoft.com\/architecture\/overview\/default.aspx?pull=\/library\/en-us\/dnea\/html\/eaarchover.asp\">Microsoft Architecture Overview<\/a> by <a href=\"http:\/\/blogs.msdn.com\/michael_Platt\/\">Michael Platt<\/a>\u00a0that&#8217;s up on <a href=\"http:\/\/msdn.microsoft.com\/architecture\/\">Architecture Center<\/a>. It&#8217;s a little old, but still very valuable. In the overview, Michael discusses four perspectives on the enterprise architecture: business, application, information, and technology which are commonly collectively referred to as BAIT. (Note, I think it was Meta Group coined the term BAIT, but I&#8217;m not sure. Whoever did come up with the term, I&#8217;m pretty sure that it wasn&#8217;t MSFT). However, as we march forward building services, I wonder if we need to regularly consider a couple of more perspectives. <\/p>\n<p>I don&#8217;t think service-orientation dramatically affect business or technology architecture. One of the big advantages of using web services to implement your services is that you can reuse a lot of the web-based technology infrastructure that companies spent the later part of the nineties building out. Likewise, while services will enable organizations to be agile and better achieve their business goals, I don&#8217;t think it changes the actual goals significantly. However, application and technology architecture change radically when moving from an application-centric to a service-oriented approach. <\/p>\n<p>When considering services, the application perspective is broadened to include both applications and services. According to our <a href=\"http:\/\/msdn.microsoft.com\/architecture\/application\/default.aspx?pull=\/library\/en-us\/dnea\/html\/eaappconland.asp\">conceptual architecture<\/a>, an <a href=\"http:\/\/msdn.microsoft.com\/architecture\/application\/default.aspx?pull=\/library\/en-us\/dnea\/html\/eaappconapplications.asp\">application<\/a> implements a user interface while a <a href=\"http:\/\/msdn.microsoft.com\/architecture\/application\/default.aspx?pull=\/library\/en-us\/dnea\/html\/eaappconservices.asp\">service<\/a> is a discrete unit of logic exposing a message-based interface. Even though they are both typically written in code, I&#8217;m not sure lumping them together is the right architectural approach. Building a single service has many architectural similarities to building an application, but an SO design also has to tackle the architecture as a system-of-systems which the application-centric approach never had to worry about. <\/p>\n<p>Likewise, the information perspective currently covers data both inside services (or apps &#8211; here the distinction is less important) and inside messages. Obviously, the approach to data private to a service will differ greatly from the approach to data inside messages. Things like transactional integrity, immutability, extensibility and encapsulation apply very differently to data and message architecture.<\/p>\n<p>Each of the perspectives covers many different subtopics, so maybe there&#8217;s no need to break services out from applications or messages out from information. However, I&#8217;m <a href=\"http:\/\/msdn.microsoft.com\/architecture\/community\/newsletter\/102003newsletter.aspx\">on record<\/a> stating that I think using services &#8220;represents a fundamental change to the architecture model that the vast majority of systems running today were built on&#8221;. Thus, I think that fundamental change should be surfaced in language we use to describe the architecture, since language influences thought. Granted, BSMAIT isn&#8217;t as cool an acronym as BAIT, but it&#8217;s far more representative of the way the next generation of systems are going to be architected.<\/p>\n","excerpt":"<p>I was re-reading the Microsoft Architecture Overview by Michael Platt\u00a0that&#8217;s up on Architecture Center. It&#8217;s a little old, but still very valuable. In the overview, Michael discusses four perspectives on the enterprise architecture: business, application, information, and technology which are commonly collectively referred to as BAIT. (Note, I think it was Meta Group coined the [&hellip;]<\/p>\n","date":"2004-02-24 22:28:56","modified":"2004-02-24 22:28:56","categories":[{"id":177,"slug":"architecture","title":"Architecture","description":"","parent":0,"post_count":296}],"tags":[{"id":183,"slug":"soa","title":"SOA","description":"","post_count":94}],"author":{"id":1,"slug":"admin","name":"DevHawk","first_name":"Harry","last_name":"Pierson","nickname":"DevHawk","url":"","description":""},"comments":[],"attachments":[],"comment_count":0,"comment_status":"closed","custom_fields":{"dasblog_entryid":["1726cf0e-e9a2-4c0f-a20e-eb994f3bef78"],"dasblog_compressedtitle":["Is+BAIT+Out+Of+Date"],"dasblog_compressedtitleunique":["2004\/02\/25\/Is+BAIT+Out+Of+Date"]}},"previous_url":"http:\/\/devhawk.net\/2004\/02\/20\/dont-read-sldies-in-fact-try-not-to-use-slides\/","next_url":"http:\/\/devhawk.net\/2004\/02\/25\/strategy-series-on-longhorn-dev-center\/"}