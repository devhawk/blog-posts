{"status":"ok","post":{"id":1160,"type":"post","slug":"ipy-post-2-0-roadmap-clarifications","url":"http:\/\/devhawk.net\/2008\/07\/30\/ipy-post-2-0-roadmap-clarifications\/","status":"publish","title":"IPy Post 2.0 Roadmap Clarifications","title_plain":"IPy Post 2.0 Roadmap Clarifications","content":"<p>Two weeks ago, I posted a <a href=\"http:\/\/devhawk.net\/2008\/07\/17\/IronPython+Post+20+Roadmap.aspx\">roadmap<\/a> for where IPy is heading after we get 2.0 out the door later this year. I got two questions in <a href=\"http:\/\/devhawk.net\/CommentView,guid,663bc86a-8185-4c5b-8a5b-c01634a1b1bc.aspx#commentstart\">the comments<\/a> that I wanted to address. <\/p>\n<ul>\n<li><a href=\"http:\/\/www.ironpythoninaction.com\">Michael Foord<\/a> wants to know &#8220;will you actively maintain IronPython 2 and IronPython 3 in parallel?&#8221;  <\/li>\n<li><a href=\"http:\/\/francois.schnell.free.fr\">francois<\/a> wants to know for the VS integration &#8220;Will it be necessary to buy VS standard\/Pro to benefit from it?&#8221;<\/li>\n<\/ul>\n<p>As to the first question, Curt Hagenlocher (aka <a href=\"http:\/\/blogs.msdn.com\/curth\/\">Iron Curt<\/a>) from the IPy dev team <a href=\"http:\/\/lists.ironpython.com\/pipermail\/users-ironpython.com\/2008-July\/007728.html\">wrote the following<\/a> on the IPy mailing list:<\/p>\n<blockquote><p>&#8220;I think it&#8217;s fair to say that this will be driven mostly by the needs of our community and of the larger Python community. By the time IronPython 3.0 ships, it&#8217;s likely that CPython 3.0 will have been out for a year or even longer, and we&#8217;ll have a much better idea of what the uptake is like in the community.&#8221;<\/p>\n<\/blockquote>\n<p>Let me second Curt&#8217;s comment. I used to think getting to 3.0 as quickly as possible was one of our highest priorities. However, it looks like the CPy 3.0 uptake rate is a real open question right now. If the Python community takes 3-4 years to fully embrace 3.0 (as <a href=\"http:\/\/lists.ironpython.com\/pipermail\/users-ironpython.com\/2008-July\/007729.html\">Michael suggested<\/a>) then I don&#8217;t see how we will have any choice but to maintain both in parallel. It also suggests that better 2.6 support may be more important than 3.0 support, at least for the next 18-24 months.<\/p>\n<p>Francois&#8217;s question is much easier: No, we will not require you to buy any version of VS in order to get IPy VS integration. It will work with the <a href=\"http:\/\/msdn.microsoft.com\/en-us\/vstudio\/bb510103.aspx\">Visual Studio Shell<\/a>, much like the current IronPythonStudio VSX sample does today. <\/p>\n<p>For out first release, we are focusing on the integrated mode scenario. This means that if you own a copy of VS (other than express), the IPy tools will snap into your existing VS installation. If you don&#8217;t own a copy of VS, you&#8217;ll be able to download and install the integrated shell for free and our IPy tools will snap into that. Down the road, we might investigate an &#8220;IronPython Express&#8221; version that leverages the isolated shell, but that&#8217;s not a priority right now.<\/p>\n<p>The VS shell <a href=\"http:\/\/msdn.microsoft.com\/en-us\/vstudio\/bb856491.aspx\">includes support<\/a> for the WinForms and WPF designers and we expect to support both eventually. WPF support is fairly straightforward since the designer works with XAML files rather than code files. WinForms support is harder, since it wants to emit statically typed code into code files &#8211; a neat trick for a dynamically typed language like Python. The current implementation that the IronPythonStudio sample uses requires us to inject a bunch of custom type hints disguised as python @decorators in order to round trip between the designer and code views. However, we&#8217;re not bringing those custom type hints forward in the 2.0 release so we&#8217;ll need to find a better way to integrate with the WinForms designer. <\/p>\n<p>As for web apps, ASP.NET support is currently on the back burner while Jimmy and David <a href=\"http:\/\/blog.jimmy.schementi.com\/2008\/07\/aspnet-and-dynamic-languages.html\">drink coffee and expensive juice<\/a> while they figure out the ASP.NET \/ dynamic language story. We also want to support Silverlight development for IronPython in VS, but I&#8217;m exactly sure how we get Silverlight designer support yet. <a href=\"http:\/\/go.microsoft.com\/fwlink\/?LinkId=120319\">Silverlight Tools for VS08<\/a> today require VS Standard, so I&#8217;m guessing there&#8217;s some leg work to do if we want to support the SL designer in VS Shell.<\/p>\n<p>As always, feel free to ask here or on <a href=\"http:\/\/lists.ironpython.com\/listinfo.cgi\/users-ironpython.com\">the mailing list<\/a> if you&#8217;ve got any questions or feedback on our plans. <\/p>\n","excerpt":"<p>Two weeks ago, I posted a roadmap for where IPy is heading after we get 2.0 out the door later this year. I got two questions in the comments that I wanted to address. Michael Foord wants to know &#8220;will you actively maintain IronPython 2 and IronPython 3 in parallel?&#8221; francois wants to know for [&hellip;]<\/p>\n","date":"2008-07-30 15:43:40","modified":"2008-07-30 15:43:40","categories":[{"id":252,"slug":"ironpython","title":"IronPython","description":"","parent":0,"post_count":99}],"tags":[],"author":{"id":1,"slug":"admin","name":"DevHawk","first_name":"Harry","last_name":"Pierson","nickname":"DevHawk","url":"","description":""},"comments":[{"id":2097,"name":"francois","url":"http:\/\/francois.schnell.free.fr","date":"2008-07-31 13:51:40","content":"<p>Thanks for these informations, I will look forward for this VS integration <img src=\"http:\/\/devhawk.net\/wp-includes\/images\/smilies\/icon_smile.gif\" alt=\":)\" class=\"wp-smiley\" \/>  <\/p>\n","parent":0}],"attachments":[],"comment_count":1,"comment_status":"closed","custom_fields":{"dasblog_entryid":["79c950fa-5fc9-46b9-b17a-fda01477f3ae"],"dasblog_compressedtitle":["IPy+Post+20+Roadmap+Clarifications"],"dasblog_compressedtitleunique":["2008\/07\/30\/IPy+Post+20+Roadmap+Clarifications"]}},"previous_url":"http:\/\/devhawk.net\/2008\/07\/30\/monadic-philosophy-part-2-the-linq-monad\/","next_url":"http:\/\/devhawk.net\/2008\/07\/31\/monadic-philosophy-part-3-the-parser-monad-in-c\/"}