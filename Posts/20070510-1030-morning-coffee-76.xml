<?xml version="1.0" encoding="utf-8"?>
<item>
  <title>Morning Coffee 76</title>
  <link>http://devhawk.net/2007/05/10/morning-coffee-76/</link>
  <pubDate>Thu, 10 May 2007 10:30:19 +0000</pubDate>
  <dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">devhawk</dc:creator>
  <guid isPermaLink="false">http://4f0a9a85-87c3-4df0-a8f8-88ded97d277a</guid>
  <description></description>
  <content:encoded xmlns:content="http://purl.org/rss/1.0/modules/content/"><![CDATA[<ul><li>Dare Obasanjo sez <a href="http://www.25hoursaday.com/weblog/PermaLink.aspx?guid=25e5009e-0889-4883-8d03-58e7775882ac">Cool URIs Don't Change</a>. He's got other versioning advice, but that's the main takeaway. Good advice that dovetails nicely with "<a href="http://hyperthink.net/blog/PermaLink,guid,40c0cf83-27b1-49e7-8086-c57d1b5007cd.aspx">It's the URI, Stupid</a>".  </li><li>I usually agree with <a href="http://soa-eda.blogspot.com/">Jack van Hoof's</a> stuff, but I don't agree with <a href="http://soa-eda.blogspot.com/2007/05/how-to-implement-loosely-coupled.html">his thoughts</a> on loosely coupled transaction processing. It's much better than suggesting the use of 2PC system like <a href="http://specs.xmlsoap.org/ws/2004/10/wsat/wsat.pdf">WS-AT</a>, but when he writes that "by design every action has a compensating action to undo the original action" I am reminded of Pat's old post <a href="http://blogs.msdn.com/pathelland/archive/2004/08/12/213552.aspx">Why I hate the phrase "Long Running Transactions"</a>. Personally, I'm a fan of using the Tentative Operation or Reservation pattern, <a href="http://msdn2.microsoft.com/en-us/library/ms954638.aspx#soade_topic3">described</a> by <a href="http://blogs.msdn.com/jevdemon/">John Evdemon</a>. Note the lack of a transaction coordinator in that pattern.  </li><li>Speaking of service anti-patterns, I wonder how we rationalize the following two statements, both from Microsoft, in documents published by my old team:  <ul><li>"CRUD operations are the wrong level of factoring for a Web service. CRUD operations may be implemented within or across services, but should not be exposed to consumers in such a fashion. This is an example of a service that allowed internal (private) capabilities to bleed into the service's public interface." <a href="http://blogs.msdn.com/jevdemon/">John Evdemon</a>, <a href="http://msdn2.microsoft.com/en-us/library/ms954638.aspx">Principles of Service Design: Service Patterns and Anti-Patterns</a>, <a href="http://msdn2.microsoft.com/en-us/architecture/aa479349.aspx">Readings in Service Orientation</a></li><li>"It is very common for Entity Services to support a create, read, update and delete (CRUD) interface at the entity level, and add additional domain-speciic operations needed to address the problem-domain and support the application’s features and use cases." <a href="http://blogs.msdn.com/shycohen/">Shy Cohen</a>, Ontology and Taxonomy of Services in a Service-Oriented Architecture, <a href="http://download.microsoft.com/download/e/8/b/e8b39fdb-0a4c-4f52-a5bc-9af66b9fa7df/AJ11_EN.zip">Journal 11</a></li></ul></li><li>Ian Thomas wonders <a href="http://itblagger.wordpress.com/2007/05/04/does-erp-suck/">Does ERP suck</a>? In a word: Yes! :) Seriously, I'm a strong believer in what Ian alternatively calls "unbundling" and "disaggregation" of monolithic enterprise systems - ERP is the most glaring example of such systems.  </li><li>Jamie Cansdale is <a href="http://weblogs.asp.net/nunitaddin/archive/2007/05/10/silverlight-console-applications.aspx">figuring out</a> how to host Silverlight's CLR outside of the browser. He's already got a console runner up and running. He's working of adding "Test With Silverlight" option to <a href="http://www.testdriven.net/">TestDriven.NET</a>. You go Jamie.</li></ul>]]></content:encoded>
  <excerpt:encoded xmlns:excerpt="http://wordpress.org/export/1.2/excerpt/"><![CDATA[]]></excerpt:encoded>
  <wp:post_id xmlns:wp="http://wordpress.org/export/1.2/">954</wp:post_id>
  <wp:post_date xmlns:wp="http://wordpress.org/export/1.2/">2007-05-10 10:30:19</wp:post_date>
  <wp:post_date_gmt xmlns:wp="http://wordpress.org/export/1.2/">2007-05-10 10:30:19</wp:post_date_gmt>
  <wp:comment_status xmlns:wp="http://wordpress.org/export/1.2/">open</wp:comment_status>
  <wp:ping_status xmlns:wp="http://wordpress.org/export/1.2/">open</wp:ping_status>
  <wp:post_name xmlns:wp="http://wordpress.org/export/1.2/">morning-coffee-76</wp:post_name>
  <wp:status xmlns:wp="http://wordpress.org/export/1.2/">publish</wp:status>
  <wp:post_parent xmlns:wp="http://wordpress.org/export/1.2/">0</wp:post_parent>
  <wp:menu_order xmlns:wp="http://wordpress.org/export/1.2/">0</wp:menu_order>
  <wp:post_type xmlns:wp="http://wordpress.org/export/1.2/">post</wp:post_type>
  <wp:post_password xmlns:wp="http://wordpress.org/export/1.2/"></wp:post_password>
  <wp:is_sticky xmlns:wp="http://wordpress.org/export/1.2/">0</wp:is_sticky>
  <category domain="category" nicename="morning-coffee"><![CDATA[Morning Coffee]]></category>
  <category domain="post_tag" nicename="silverlight"><![CDATA[Silverlight]]></category>
  <category domain="post_tag" nicename="soa"><![CDATA[SOA]]></category>
  <wp:postmeta xmlns:wp="http://wordpress.org/export/1.2/">
    <wp:meta_key>dasblog_entryid</wp:meta_key>
    <wp:meta_value><![CDATA[4f0a9a85-87c3-4df0-a8f8-88ded97d277a]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta xmlns:wp="http://wordpress.org/export/1.2/">
    <wp:meta_key>dasblog_compressedtitle</wp:meta_key>
    <wp:meta_value><![CDATA[Morning+Coffee+76]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta xmlns:wp="http://wordpress.org/export/1.2/">
    <wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
    <wp:meta_value><![CDATA[2007/05/10/Morning+Coffee+76]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta xmlns:wp="http://wordpress.org/export/1.2/">
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>