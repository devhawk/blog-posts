<?xml version="1.0" encoding="utf-8"?>
<item>
  <title>varchar(???)</title>
  <link>http://devhawk.net/2003/03/26/varchar/</link>
  <pubDate>Wed, 26 Mar 2003 16:32:53 +0000</pubDate>
  <dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">devhawk</dc:creator>
  <guid isPermaLink="false">http://90e2b600-f054-4923-965c-b6ac27d2da36</guid>
  <description></description>
  <content:encoded xmlns:content="http://purl.org/rss/1.0/modules/content/"><![CDATA[<p>I'm thinking about redoing the backend of this website. I started to do pingback/trackback support and got discouraged by the fact that I would again have to pick an arbitrary length for the database columns. Of all the annoyances with databases, that's my biggest pet peeve. Maybe <a href="http://www.microsoft.com/sql/evaluation/yukon.asp">SQL "Yukon"</a> with it's ability to <a href="http://www.microsoft.com/technet/treeview/default.asp?url=/technet/itcommunity/chats/trans/sql/sql0517.asp"> natively store XML</a> will solve this problem.</p><p>However, until then, I need to use something to store my entries in. <a href="http://www.simplegeek.com/">BlogX</a> uses XML files, which seems like trading one evil for another. Picking a max length for a column is annoying, but I don't relish rolling my own database. <a href="http://bbooprevalence.sourceforge.net">Bamboo.Prevalence</a> is interesting, but I don't like the fact that everything is kept in memory all the time. I've read the <a href="http://www.prevayler.org/wiki.jsp?topic=PrevalenceSkepticalFAQ"> Prevalence Skeptical FAQ</a> with their entries on <a href="http://www.prevayler.org/wiki.jsp?topic=BreakthroughsInMemoryTechnology"> Breakthroughs in Memory Technology</a> (which haven't happened yet) and their <a href="http://www.prevayler.org/wiki.jsp?topic=IsItTrueThatPrevaylerIsThreeThousandTimesFasterThanMYSQL"> Scalability Test Results</a> (testing a paltry 1 million rows in a single table - though obviously DevHawk has much less data than that) and I'm still skeptical. </p><p>I am impressed with the implementation of Prevalance - especially the <a href="http://bbooprevalence.sourceforge.net/MyFirstPrevalentSystem.htm"> transparent engine</a> feature of Bamboo. From what I can tell from the outside, it serializes the methods calls against the Prevalyent (?) object so on app restart, the engine can return to when it left off. It also can serialize the Prevalyent object itself for snapshot purposes. Simple, but elegant - except for the memory usage. I tested a simple Bamboo.Prevalence app with a snapshot of DevHawk's database. The entry list wasn't too bad but the referrals list was huge - an order of magnitude bigger in memory than the entry list! Given that I do nothing with the referrals list but archive it keeping it in memory seems like a waste. What I want is something like Prevalence but with more flexibility with regard to memory usage. I only want to keep the past month's worth of entries and the past day's worth of referrals in memory all the time.</p><p>I'm thinking that you could build something similar to Prevalance that used <a href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/cpref/html/frlrfsystemweakreferenceclasstopic.asp"> Weak References</a> to enable the GC to clean up memory of infrequently used objects but then use <a href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/cpref/html/frlrfSystemRuntimeRemotingProxiesRealProxyClassTopic.asp"> Proxies</a> to reload them transparently from disk on command. <a href="http://msdn.microsoft.com/msdnmag/issues/1100/GCI/default.aspx"> Resurrection</a> could be used to avoid collecting objects that are likely to be used in the near future (i.e. recent entries).</p>]]></content:encoded>
  <excerpt:encoded xmlns:excerpt="http://wordpress.org/export/1.2/excerpt/"><![CDATA[]]></excerpt:encoded>
  <wp:post_id xmlns:wp="http://wordpress.org/export/1.2/">55</wp:post_id>
  <wp:post_date xmlns:wp="http://wordpress.org/export/1.2/">2003-03-26 16:32:53</wp:post_date>
  <wp:post_date_gmt xmlns:wp="http://wordpress.org/export/1.2/">2003-03-26 16:32:53</wp:post_date_gmt>
  <wp:comment_status xmlns:wp="http://wordpress.org/export/1.2/">open</wp:comment_status>
  <wp:ping_status xmlns:wp="http://wordpress.org/export/1.2/">open</wp:ping_status>
  <wp:post_name xmlns:wp="http://wordpress.org/export/1.2/">varchar</wp:post_name>
  <wp:status xmlns:wp="http://wordpress.org/export/1.2/">publish</wp:status>
  <wp:post_parent xmlns:wp="http://wordpress.org/export/1.2/">0</wp:post_parent>
  <wp:menu_order xmlns:wp="http://wordpress.org/export/1.2/">0</wp:menu_order>
  <wp:post_type xmlns:wp="http://wordpress.org/export/1.2/">post</wp:post_type>
  <wp:post_password xmlns:wp="http://wordpress.org/export/1.2/"></wp:post_password>
  <wp:is_sticky xmlns:wp="http://wordpress.org/export/1.2/">0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta xmlns:wp="http://wordpress.org/export/1.2/">
    <wp:meta_key>dasblog_entryid</wp:meta_key>
    <wp:meta_value><![CDATA[90e2b600-f054-4923-965c-b6ac27d2da36]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta xmlns:wp="http://wordpress.org/export/1.2/">
    <wp:meta_key>dasblog_compressedtitle</wp:meta_key>
    <wp:meta_value><![CDATA[varchar]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta xmlns:wp="http://wordpress.org/export/1.2/">
    <wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
    <wp:meta_value><![CDATA[2003/03/26/varchar]]></wp:meta_value>
  </wp:postmeta>
</item>