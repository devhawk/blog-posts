<?xml version="1.0" encoding="utf-8"?>
<wp:comment xmlns:wp="http://wordpress.org/export/1.2/">
  <wp:comment_id>2848</wp:comment_id>
  <wp:comment_author><![CDATA[Tom Vande Stouwe]]></wp:comment_author>
  <wp:comment_author_email>tomv@conpro.net</wp:comment_author_email>
  <wp:comment_author_url>http://architecturematters.net</wp:comment_author_url>
  <wp:comment_author_IP>68.63.188.194</wp:comment_author_IP>
  <wp:comment_date>2005-10-04 14:08:53</wp:comment_date>
  <wp:comment_date_gmt>2005-10-04 21:08:53</wp:comment_date_gmt>
  <wp:comment_content><![CDATA[I think the problem is beyond the obvious disconnect between software and hardware. We first have to get to the notion of a 'fly by wire' automobile paradigm. I have been looking at the options for a fully digital car, and the issue is 'standardization' of interface. By that I mean that I should be able to bring my dashboard to any car, and plug in my smart card and it will light up as if I was in my own car. Gas right where I like it with warnings at 2.3L to reserve etc.

But to accomplish that, we need to start making cars truly modular. Some of the 'skate board' prototypes for fuel cell cars are in that mode. A set of chassis with all the mechanics inside, looking very much like a skateboard. A shell with passenger compartment is dropped on top, and that is where all the customization takes place. Once the car is 'by wire' then our OOP model starts to work. Until then, we are still in the custom tool shop mode.

Tom
]]></wp:comment_content>
  <wp:comment_approved>1</wp:comment_approved>
  <wp:comment_type></wp:comment_type>
  <wp:comment_parent>0</wp:comment_parent>
  <wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>