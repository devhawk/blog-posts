{"status":"ok","post":{"id":139,"type":"post","slug":"the-end-of-code-as-we-know-it","url":"http:\/\/devhawk.net\/2003\/07\/01\/the-end-of-code-as-we-know-it\/","status":"publish","title":"The End of Code As We Know It?","title_plain":"The End of Code As We Know It?","content":"<p>Early Adopter has a <a href=\"http:\/\/radio.weblogs.com\/0117167\/2003\/06\/30.html\">couple<\/a> of <a href=\"http:\/\/radio.weblogs.com\/0117167\/2003\/07\/01.html\">thoughts<\/a> on code generation that mirror my own. It&#8217;s not the end of coding as we know it. My big problem with code generation is intelligence: developers (usually) have it, code generating programs don&#8217;t. They can only generate what they&#8217;ve been programmed to. Which means they&#8217;re only good for redundant tasks. Data access code is a good example of this. But I can&#8217;t write my whole program that way. <\/p>\n<p>Code generation is a simple first step, but it&#8217;s only the first step on a road that ends in language innovation. The point of higher level programming languages is to eliminate the redundant mindless tasks. While code generation is valuable (the original C++ compiler was simply a C code generator) you don&#8217;t stop there and declare victory. Developers are much more productive when the higher level abstraction is embedded in the language. VB.NET&#8217;s event handling mechanism is a great example of this. In C#, you (or the tool) need to write a bunch of code to wire up event handlers. In VB.NET, I just declare the method handles a specific event with the &#8220;Handles&#8221; keyword. True, VS.NET writes that for you in C#, but you still have to manually manage it. I&#8217;ve deleted event handler methods in C# countless times, which results in a compiler error since the auto-magically generated code isn&#8217;t auto-magically deleted. <\/p>\n<p>Places where code generators are useful are indicative of future <a href=\"PermaLink.aspx?guid=1e7d894f-0457-4a23-b85d-46aa48a8a2ce\">disruptive programming<\/a><a href=\"PermaLink.aspx?guid=896fcfbd-dede-4c62-8f59-24aece862218\"> language innovations<\/a>.<\/p>\n","excerpt":"<p>Early Adopter has a couple of thoughts on code generation that mirror my own. It&#8217;s not the end of coding as we know it. My big problem with code generation is intelligence: developers (usually) have it, code generating programs don&#8217;t. They can only generate what they&#8217;ve been programmed to. Which means they&#8217;re only good for [&hellip;]<\/p>\n","date":"2003-07-01 14:51:30","modified":"2003-07-01 14:51:30","categories":[],"tags":[],"author":{"id":1,"slug":"admin","name":"DevHawk","first_name":"Harry","last_name":"Pierson","nickname":"DevHawk","url":"","description":""},"comments":[],"attachments":[],"comment_count":0,"comment_status":"closed","custom_fields":{"dasblog_entryid":["ff1394c7-87e6-4c6e-9a96-7401343c3990"],"dasblog_compressedtitle":["The+End+Of+Code+As+We+Know+It"],"dasblog_compressedtitleunique":["2003\/07\/01\/The+End+Of+Code+As+We+Know+It"]}},"previous_url":"http:\/\/devhawk.net\/2003\/06\/26\/wss-rss-v0-4-1-coming-soon\/","next_url":"http:\/\/devhawk.net\/2003\/07\/01\/spsynd-v0-4-1\/"}