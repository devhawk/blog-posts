{"status":"ok","post":{"id":993,"type":"post","slug":"what-is-the-rails-question","url":"http:\/\/devhawk.net\/2007\/06\/26\/what-is-the-rails-question\/","status":"publish","title":"What is the Rails Question?","title_plain":"What is the Rails Question?","content":"<p>Nick Malik asked &#8220;what is the Rails &#8220;answer&#8221; on the Microsoft platform? If we don&#8217;t install Ruby, do we use Rails on JS or is there a Rails version we may want to put up ourselves?&#8221; I guess it depends, what is the Rails &#8220;question&#8221;? <\/p>\n<p>On the one hand, the question could be &#8220;What&#8217;s the best way to run Rails on Windows?&#8221; I think the short answer to that is <a href=\"http:\/\/www.iunknown.com\/2007\/04\/introducing_iro.html\">IronRuby<\/a>. In the wake of the IronRuby announcement, John Lam <a href=\"http:\/\/channel9.msdn.com\/ShowPost.aspx?PostID=305092#305092\">wrote<\/a> that &#8220;Nobody would take our implementation seriously if it doesn&#8217;t run Rails.&#8221; <a href=\"http:\/\/ola-bini.blogspot.com\/2007\/06\/there-can-be-only-one-tale-about-ruby.html\">Some<\/a><a href=\"http:\/\/martinfowler.com\/bliki\/RubyMicrosoft.html\">people<\/a> question the DLR&#8217;s teams ability to ship a compatible version of Ruby without looking at the source, but my money is on the DLR team. (Of course it is, I&#8217;m a kool-aid drinker!)<\/p>\n<p>BTW, I don&#8217;t think having a JavaScript port of Rails (JailS?) is much of a help for the Microsoft platform. I&#8217;m not sure if Steve Yegge&#8217;s JavaScript Rails port would run on <a href=\"http:\/\/en.wikipedia.org\/wiki\/JScript_.NET\">JScript.NET<\/a>, but I wouldn&#8217;t bet on it. I would expect you need either the old <a href=\"http:\/\/en.wikipedia.org\/wiki\/JScript\">Active Scripting JScript<\/a> or the new <a href=\"http:\/\/blogs.msdn.com\/jscript\/archive\/2007\/05\/07\/introducing-managed-jscript.aspx\">Managed JScript<\/a> (aka the <a href=\"http:\/\/blogs.msdn.com\/hugunin\/archive\/2007\/04\/30\/a-dynamic-language-runtime-dlr.aspx\">DLR<\/a> based version of JavaScript). Of course, IronRuby runs on DLR as well so why wouldn&#8217;t you just run Rails on IronRuby instead of the JavaScript port of Rails on Managed JScript? <\/p>\n<p>(Side note &#8211; why isn&#8217;t the new JScript engine called IronJavaScript? Wouldn&#8217;t that be cooler than Managed JScript? Don&#8217;t they know &#8220;Iron&#8221; is the new &#8220;#&#8221;?)<\/p>\n<p>On the other hand, maybe the question is &#8220;can ASP.NET evolve to be more Rails-esque?&#8221; I think it&#8217;s starting to, slowly. Rails at it&#8217;s core is a <a href=\"http:\/\/www.martinfowler.com\/eaaCatalog\/modelViewController.html\">Model View Controller<\/a> web app pattern (aka <a href=\"http:\/\/api.rubyonrails.org\/files\/vendor\/rails\/actionpack\/README.html\">Action Pack<\/a>) combined with an <a href=\"http:\/\/www.martinfowler.com\/eaaCatalog\/activeRecord.html\">Active Record<\/a> data access pattern (aka <a href=\"http:\/\/api.rubyonrails.org\/files\/vendor\/rails\/activerecord\/README.html\">Rails&#8217; Active Record<\/a>). Certainly, nothing stops you from using a similar approach with ASP.NET. The Castle Project has an ASP.NET implementation of MVC (aka <a href=\"http:\/\/www.castleproject.org\/monorail\/index.html\">MonoRail<\/a>) and Active Record (also called <a href=\"http:\/\/www.castleproject.org\/activerecord\/index.html\">Active Record<\/a>). But I assume Nick&#8217;s more interested in what ships natively in the platform to compare to Rails.<\/p>\n<p>On the data access side, I think LINQ to SQL is a a compelling alternative to the various Active Record implementations. It&#8217;s not an implementation of the Active Record pattern, it looks more like a <a href=\"http:\/\/www.martinfowler.com\/eaaCatalog\/tableDataGateway.html\">Table Data Gateway<\/a> patten. Also, it&#8217;s not <a href=\"http:\/\/en.wikipedia.org\/wiki\/DRY\">DRY<\/a> like Rails Active Record, but I think that&#8217;s more of a function of dynamic vs. static languages. Castle Active Record <a href=\"http:\/\/www.castleproject.org\/activerecord\/index.html\">isn&#8217;t DRY<\/a> either. But once you get the hang of the slightly funky syntax (the from clause is first so you can get intellisense) I find LINQ very easy to use. Certainly, building <a href=\"http:\/\/www.martinfowler.com\/eaaCatalog\/queryObject.html\">Query Objects<\/a> is a snap. <\/p>\n<p>On the web app framework side, the story isn&#8217;t so pretty. The agile folks like MVC because it&#8217;s <a href=\"http:\/\/codebetter.com\/blogs\/jeremy.miller\/archive\/2007\/03\/07\/Jay_2700_s-TDD-QuickStart_2C00_-and-the-underlying-problems-he-stumbled-into.aspx\">easier to test<\/a> (among other reasons &#8211; see update below). Apparently, there&#8217;s an ASP.NET MVC framework that&#8217;s &#8220;<a href=\"http:\/\/codebetter.com\/blogs\/jeffrey.palermo\/archive\/2007\/03\/16\/Big-News-_2D00_-MVC-framework-for-ASP.NET-in-the-works-_2D00_-level-300.aspx\">in the works<\/a>&#8220;, but AFAIK no one has seen or heard anything about it since the MVP summit. <a href=\"http:\/\/codebetter.com\/blogs\/jeffrey.palermo\/default.aspx\">Jeffrey Palermo<\/a> was impressed with what he saw, but I guess everyone else has to reserve judgement until it gets a little more public.<\/p>\n<p>Actually, I don&#8217;t think it&#8217;s an either-or question, it&#8217;s both. In order to be the <em><u>Common<\/u><\/em> Language Runtime, I think it needs to support common dynamic languages like Ruby, Python and JavaScript natively. And, in order to be the best platform, I think the .NET Framework in general and ASP.NET in particular need to support multiple approaches to meet the needs of different developers. <\/p>\n<p>UPDATE &#8211; in the <a href=\"http:\/\/devhawk.net\/CommentView,guid,c444e0c2-f9e8-4625-b12a-7a4c00f859e8.aspx#commentstart\">comments<\/a>, <a href=\"http:\/\/www.jeffreypalermo.com\/\">Jeffrey Palermo<\/a> points out that he likes MVC &#8220;mostly because it separates concerns of controlling screen and rendering the screen. It makes the application more maintainable and keeps the code easily changeable.&#8221; Point taken. I didn&#8217;t mean to imply that testability was the only virtue of MVC.<\/p>\n","excerpt":"<p>Nick Malik asked &#8220;what is the Rails &#8220;answer&#8221; on the Microsoft platform? If we don&#8217;t install Ruby, do we use Rails on JS or is there a Rails version we may want to put up ourselves?&#8221; I guess it depends, what is the Rails &#8220;question&#8221;? On the one hand, the question could be &#8220;What&#8217;s the [&hellip;]<\/p>\n","date":"2007-06-26 14:33:24","modified":"2007-06-26 14:33:24","categories":[],"tags":[{"id":178,"slug":"asp-net","title":"ASP.NET","description":"","post_count":27},{"id":190,"slug":"ruby","title":"Ruby","description":"","post_count":23}],"author":{"id":1,"slug":"admin","name":"DevHawk","first_name":"Harry","last_name":"Pierson","nickname":"DevHawk","url":"","description":""},"comments":[{"id":2533,"name":"Arnon Rotem-Gal-Oz","url":"http:\/\/www.rgoarchitects.com","date":"2007-06-26 15:04:58","content":"<p>I would think that the closest thing is Monorail which is part of the Castle project(<a href=\"http:\/\/www.castleproject.org\/monorail\/index.html\" rel=\"nofollow\">http:\/\/www.castleproject.org\/monorail\/index.html<\/a>) <\/p>\n","parent":0},{"id":2534,"name":"Jeffrey Palermo","url":"http:\/\/www.jeffreypalermo.com","date":"2007-06-26 15:46:18","content":"<p>>&#8221;The agile folks like MVC because it&#8217;s easier to test.&#8221;<<\/p>\n<p>I would consider myself and &#8220;agile folk&#8221;, but I like MVC for other reasons, not because it&#8217;s easier to test.  I like it mostly because it separates concerns of controlling screen and rendering the screen.  It makes the application more maintainable and keeps the code easily changeable.<\/p>\n","parent":0},{"id":2535,"name":"Mitch Barnett","url":"http:\/\/softwareindustrialization.com","date":"2007-06-26 15:59:33","content":"<p>Slowly is right &#8211; As an old time ASP.NET developer and using ASP.NET AJAX for the last year (all early CTP&#8217;s), I still need all the help I can get.  <\/p>\n<p>The GridView control still needs to be sub-classed and overridden if you want something as simple as horizontal scrolls bars or remember scroll position on partial postback or even what row you selected (onpostback again).  Meaning the controls could be a lot more rich and powerful and I don\u2019t know how improved it is in Orcas.  <\/p>\n<p>Also, I end using other JavaScript frameworks (i.e. Sam Stephenson\u2019s Prototype) or even roll my own cause I can\u2019t get synchronous support in ASP.NET AJAX framework. ASP.NET just needs to catch up\u2026regardless of MVC pattern.<\/p>\n","parent":0},{"id":2536,"name":"Mike Moore","url":"http:\/\/blowmage.com\/","date":"2007-06-27 09:06:53","content":"<p>ASP.NET does not use MVC, it uses a Page Controller.<\/p>\n<p><a href=\"http:\/\/msdn2.microsoft.com\/en-us\/library\/ms998548.aspx\" rel=\"nofollow\">http:\/\/msdn2.microsoft.com\/en-us\/library\/ms998548.aspx<\/a><\/p>\n<p>ASP.NET punished you if you want to care about request dispatching, pretty URLs, or just keeping your code DRY.  Page controls, post-back, and view-state are great, but akin to putting lipstick on a pig.  I&#8217;d rather use IronRuby on Rails than ASP.NET for web apps of moderate to heavy complexity.<\/p>\n","parent":0}],"attachments":[],"comment_count":4,"comment_status":"closed","custom_fields":{"dasblog_entryid":["c444e0c2-f9e8-4625-b12a-7a4c00f859e8"],"dasblog_compressedtitle":["What+Is+The+Rails+Question"],"dasblog_compressedtitleunique":["2007\/06\/26\/What+Is+The+Rails+Question"]}},"previous_url":"http:\/\/devhawk.net\/2007\/06\/25\/morning-coffee-94\/","next_url":"http:\/\/devhawk.net\/2007\/06\/26\/the-myth-of-the-service-catalog\/"}