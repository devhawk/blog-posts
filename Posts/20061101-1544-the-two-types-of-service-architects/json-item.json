{"status":"ok","post":{"id":826,"type":"post","slug":"the-two-types-of-service-architects","url":"http:\/\/devhawk.net\/2006\/11\/01\/the-two-types-of-service-architects\/","status":"publish","title":"The Two Types of Service Architects","title_plain":"The Two Types of Service Architects","content":"<p>Tomas Restrepo <a href=\"http:\/\/www.winterdom.com\/weblog\/2006\/10\/29\/WCFAndDuplexChannels.aspx\">comments<\/a> on my recent SSB and WCF posts:<\/p>\n<blockquote><p><a href=\"http:\/\/www.winterdom.com\/weblog\/ct.ashx?id=d948c914-95e1-4fe1-ba48-392fd6468be7&amp;url=http%3a%2f%2fdevhawk.net%2f\">Harry Pierson<\/a> asks how well <a href=\"http:\/\/www.winterdom.com\/weblog\/ct.ashx?id=d948c914-95e1-4fe1-ba48-392fd6468be7&amp;url=http%3a%2f%2fdevhawk.net%2f2006%2f10%2f29%2fIs%2bWCF%2bQuotStraightforwardquot%2bFor%2bLong%2bRunning%2bTasks.aspx\">WCF supports long running tasks<\/a>. He suggests that WCF does not support them very well, and says that&#8217;s one reason he likes SQL Server Service Broker so much. I&#8217;d say SSSB is a good match\u00a0only as long as the long running tasks you&#8217;re going to be executing are purely database driven and can be executed completely within the database. Sure, this is an &#8220;expanded universe&#8221; with the CLR support in SQL Server 2005, but even so it makes me nervous at times <img src=\"http:\/\/www.winterdom.com\/weblog\/smilies\/happy.gif\" class=\"grouped_elements\" rel=\"tc-fancybox-group826\" \/>. <\/p>\n<p>You could also consider using a custom service with MSMQ or something like BizTalk Server for this if you had long running processes that were not completely tied to the DB (or a single DB for that matter).<\/p>\n<\/blockquote>\n<p>Sam Gentile <a href=\"http:\/\/feeds.feedburner.com\/~r\/SamGentile\/~3\/43478464\/New-and-Notable-118.aspx\">follows up<\/a>:<\/p>\n<blockquote><p>In that same post, but I needed to call it out separate, Tomas rightfully says, &#8220;I&#8217;d say SSSB is a good match\u00a0only as long as the long running tasks you&#8217;re going to be executing are purely database driven and can be executed completely within the database,&#8221; in response to <a href=\"http:\/\/devhawk.net\/2006\/10\/29\/Is+WCF+QuotStraightforwardquot+For+Long+Running+Tasks.aspx\">Harry liking Service Broker so much<\/a>. Talk about a narrow edge case. That&#8217;s way I never really got excited or cared about Service Broker. Its a narrow solution to a special edge case when everything is database driven and can be executed totally inside the database. That&#8217;s the old Microsoft Data-Driven Architecture for sure. Me, I&#8217;d rather have a rich Domain-Driven architecture most of the time. Then if you have Oracle databases in your architecture too, where does it leave you? Nowhere.<\/p>\n<\/blockquote>\n<p>As you might expect, I have a few comments,\u00a0\u00a0clarifications and corrections.<\/p>\n<p>First, Tomas&#8217; statement that Service Broker only supports service logic &#8220;executed completely within the database&#8221; in flat out wrong. Service Broker can be used from any environment that can connect to SQL Server and execute DML statements. If you can call SELECT\/INSERT\/UPDATE\/DELETE, then you\u00a0can also call BEGIN DIALOG\/SEND\/RECEIVE\/END CONVERSATION. This includes Windows apps and services, web apps and services, console apps and even <a href=\"http:\/\/msdn.microsoft.com\/data\/ref\/jdbc\/\">Java apps<\/a>. Of course, you can also access Service Broker from stored procedures if you wish, but you&#8217;re not limited to them as Tomas suggested. <\/p>\n<p>Tomas&#8217; misconception may come from a feature of Service Broker called <a href=\"http:\/\/msdn2.microsoft.com\/en-us\/library\/ms171617.aspx\">Activation<\/a>. Activation is a feature of Service Broker that <a href=\"http:\/\/msdn2.microsoft.com\/en-us\/library\/ms171601.aspx\">dynamically scales message processing to match demand<\/a>. For example, Service Broker can be configured to launch a new instance of a specified stored procedure if messaging processing isn&#8217;t keeping up with incoming message traffic on a given queue. This is called <a href=\"http:\/\/msdn2.microsoft.com\/en-us\/library\/ms171585.aspx\">internal activation<\/a> and because it uses stored procedures it does execute within the database as Thomas said. Service Broker also supports <a href=\"http:\/\/msdn2.microsoft.com\/en-us\/library\/ms171581.aspx\">external activation<\/a>\u00a0where it notifies an external application when activation is needed. You do have to build an application to host your service logic and handle these notifications, but that application doesn&#8217;t execute within the database.\u00a0So while you could argue that it&#8217;s easier\u00a0to execute your service logic within the database (no need to build a separate host app), it&#8217;s not required.<\/p>\n<p>Given that you don&#8217;t have host your service logic in the database, then you&#8217;re also not limited to &#8220;a single DB&#8221; as Tomas suggests. You don&#8217;t, in fact, have to put your Service Broker queues in the same database with your business data. So if you have Oracle in your environment, like the scenario Sam mentioned, you would host your service logic in an external application that processed messages from a queue in a SQL 2005 database while accessing and modifying business data from tables in the Oracle database. Using multiple databases does require using distributed instead of local transactions, but if you&#8217;re using MSMQ as Tomas recommended, you&#8217;re already stuck with the DTC anyway. <\/p>\n<p>Finally, I didn&#8217;t get Tomas&#8217; &#8220;purely database driven&#8221; or Sam&#8217;s &#8220;everything is database driven&#8221; comments at all. While there are exceptions, the vast majority of systems I&#8217;ve ever seen\/built\/designed have essentially been one or more stateless tiers sitting in front of a stateful database. If it&#8217;s a traditional three tier web app, there&#8217;s a stateless presentation tier, a stateless business logic tier and a stateless data access logic tier. For a web service, there&#8217;s no presentation tier, but there&#8217;s is the stateless SOAP processing tier typically provided by the web service stack.\u00a0Does this mean the vast majority of web apps and services are \u00a0&#8220;purely database driven&#8221; too? If so, then I guess it&#8217;s a good thing, right?<\/p>\n<p>In the end, maybe there are two types of service architects &#8211; those that believe the majority of services will be atomic and those that believe the majority of services will be long running. For atomic services, Service Broker is overkill. But if it turns out that most services are long running, <a href=\"http:\/\/devhawk.net\/2006\/10\/29\/Is+WCF+QuotStraightforwardquot+For+Long+Running+Tasks.aspx\">WCF&#8217;s lack of support<\/a> is going to be a pretty big roadblock. <\/p>\n<p>I&#8217;m obviously in the long running camp. I&#8217;m not sure, but I get the feeling this is the less popular camp, at least for now. We&#8217;ll have to wait to see, but I do know is that whenever someone brings me what they think is an atomic business scenario, it doesn&#8217;t take much digging to reveal that the atomic scenario is actually a single step of a long running business scenario that also needs to be automated. <\/p>\n<p>Here&#8217;s a question for Tomas, Sam and the rest of you: Which group do you self select into? Are most services going to be atomic or long running in the (pardon the pun) long run?<\/p>\n","excerpt":"<p>Tomas Restrepo comments on my recent SSB and WCF posts: Harry Pierson asks how well WCF supports long running tasks. He suggests that WCF does not support them very well, and says that&#8217;s one reason he likes SQL Server Service Broker so much. I&#8217;d say SSSB is a good match\u00a0only as long as the long [&hellip;]<\/p>\n","date":"2006-11-01 15:44:18","modified":"2006-11-01 15:44:18","categories":[{"id":177,"slug":"architecture","title":"Architecture","description":"","parent":0,"post_count":296}],"tags":[{"id":320,"slug":"service-broker","title":"Service Broker","description":"","post_count":14},{"id":183,"slug":"soa","title":"SOA","description":"","post_count":94},{"id":313,"slug":"wcf","title":"WCF","description":"","post_count":31}],"author":{"id":1,"slug":"admin","name":"DevHawk","first_name":"Harry","last_name":"Pierson","nickname":"DevHawk","url":"","description":""},"comments":[],"attachments":[],"comment_count":0,"comment_status":"closed","custom_fields":{"dasblog_entryid":["d6fd829a-6770-489a-b276-72c972083f53"],"dasblog_compressedtitle":["The+Two+Types+Of+Service+Architects"],"dasblog_compressedtitleunique":["2006\/11\/01\/The+Two+Types+Of+Service+Architects"]}},"previous_url":"http:\/\/devhawk.net\/2006\/11\/01\/essential-windows-workflow-foundation\/","next_url":"http:\/\/devhawk.net\/2006\/11\/03\/slight-workflow-annoyance\/"}