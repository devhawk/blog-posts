{"status":"ok","post":{"id":1271,"type":"post","slug":"probably-wrong-info-is-worse-than-no-info-at-all","url":"http:\/\/devhawk.net\/2009\/07\/13\/probably-wrong-info-is-worse-than-no-info-at-all\/","status":"publish","title":"Probably Wrong Info Is Worse Than No Info At All","title_plain":"Probably Wrong Info Is Worse Than No Info At All","content":"<p>Like many geeks, I love <a href=\"http:\/\/dilbert.com\/\">Dilbert<\/a>. However, I rarely identify with it as well as I did Sunday.<\/p>\n<p><a title=\"Dilbert.com\" href=\"http:\/\/dilbert.com\/strips\/comic\/2009-07-12\/\"><img style=\"display: block; float: none; margin-left: auto; margin-right: auto\" border=\"0\" alt=\"Dilbert.com\" src=\"http:\/\/dilbert.com\/dyn\/str_strip\/000000000\/00000000\/0000000\/000000\/60000\/0000\/300\/60359\/60359.strip.sunday.gif\" class=\"grouped_elements\" rel=\"tc-fancybox-group1271\" \/><\/a><\/p>\n<p>I kid you not, I\u2019ve had almost exactly this conversation back when I worked in MS IT. They have this big repository of information about deployed applications. Technically, you\u2019re not supposed to deploy an application without listing it in the application repository. Like Dilbert, I never really understood what people were going to do with this information, but the projects I was on dutifully collected the relevant information and put it into the repository.<\/p>\n<p>And never thought of it again. Ever. <\/p>\n<p>And therein lies the problem. Populating the application repository was an artificial step on the critical path of the deployment process. Writing the software, acquiring the physical hardware to run it on, stuff like that really is on the critical path. Populating the application repository was extra busy work legislated by someone (I forget if it was the central architecture team or management) that didn\u2019t benefit the project in the slightest. As such, it was given the minimal about of attention and effort, meaning there was little quality or consistency in the data. Worse yet, when the application changed or was decommissioned , updating the application repository just didn\u2019t happen. I mean, it was supposed to, but rarely did.<\/p>\n<p>So you ended up with a repository of information that was worse than useless. I had a colleague who insisted that the repository had some value because \u201cnot all of the data was wrong\u201d. Of course, he couldn\u2019t tell me with any consistency which data was accurate and therefore valuable and which was not. Hence, my argument that it was \u201cworse than useless\u201d.<\/p>\n<p>The only way an application repository is going to be of any value at all is if you can collect the data automatically. My old teammate Buzz coined a phrase we used often: \u201cThe Truth Is On The Edge\u201d. You should always regard any central repository of information with a very critical eye since it\u2019s rarely going to be the truth. <\/p>\n<p>(Ed. Note \u2013 Man, it\u2019s been a long time since I\u2019ve written about Architecture. My last Architecture post was <a href=\"http:\/\/devhawk.net\/2008\/07\/25\/Morning+Coffee+171.aspx\">almost a year ago<\/a>. I don\u2019t miss the job but I do miss my old teammates \u2013 in particular Buzz, Rick, Dale and of course <a href=\"http:\/\/blogs.msdn.com\/nickmalik\">Nick Malik<\/a>.)<\/p>\n","excerpt":"<p>Like many geeks, I love Dilbert. However, I rarely identify with it as well as I did Sunday. I kid you not, I\u2019ve had almost exactly this conversation back when I worked in MS IT. They have this big repository of information about deployed applications. Technically, you\u2019re not supposed to deploy an application without listing [&hellip;]<\/p>\n","date":"2009-07-13 10:37:06","modified":"2009-07-13 10:37:06","categories":[{"id":177,"slug":"architecture","title":"Architecture","description":"","parent":0,"post_count":296}],"tags":[],"author":{"id":1,"slug":"admin","name":"DevHawk","first_name":"Harry","last_name":"Pierson","nickname":"DevHawk","url":"","description":""},"comments":[{"id":2231,"name":"Michael Foord","url":"http:\/\/www.ironpythoninaction.com\/","date":"2009-07-13 10:40:00","content":"<p>Has your view on architecture as a discipline separate from coding changed since working with dynamic languages?<\/p>\n","parent":0},{"id":2232,"name":"Seo Sanghyeon","url":"","date":"2009-07-14 04:37:45","content":"<p>The Truth Is On The Edge, so true. On the other hand, automatically collected central repository of information in the large scale can be very valuable, e.g. Ohloh.<\/p>\n","parent":0},{"id":2233,"name":"Nick Malik","url":"http:\/\/blogs.msdn.com\/nickmalik","date":"2009-07-14 09:56:39","content":"<p>Hi Harry,<\/p>\n<p>Great Dilbert.  It is funny partly because it is painfully true.  We do have that repository, and it does contain &#8220;partly valid&#8221; information, and it is expensive and painful to update.<\/p>\n<p>Traditionally, in organizations that want to perform an unpopular activity, they will put that activity into a small team of people who are responsible for doing that activity over and over, in different places.  This is a &#8220;business support function&#8221; and occurs variously in everything from financial audits to investigations for sexual harassment.  Unfortunately, in IT, we didn&#8217;t develop a single team that had to maintain the repository&#8230; we distributed the function, figuring it would be so much more efficient.<\/p>\n<p>As a result, the pain is distributed.  That means that it never reaches the level of annoyance that someone will invest to fix the pain.  It is also distributed to people who pay the costs of doing the work but, as you noted, reap few of the benefits of the data.  As a result, data quality suffers.  <\/p>\n<p>There are uses for data such as this, if the data is accurate.  As Dilbert points out, if the person who has to collect the data is NOT the person who benefits from its collection, then you will get mistakes, quality issues, and delays in delivery.<\/p>\n<p>This is not a data issue.  It is an issue of IT not running like a business.  We do a good job of security in IT, because we have people directly accountable for security who own the teams responsible for delivering security.  <\/p>\n<p>Automated data collection is a potential solution to a poorly described problem.  Unfortunately, without the team responsibility in place to make the problem visible, and to demonstrate the value of fixing it, no one will invest in that automated data collection.  I cannot even tell you if it is GOOD solution to the problem, because there is no person who can provide a consistent view on what the actual problem is (yet&#8230; this is changing).<\/p>\n<p>I believe that MS IT is typical in many of these problems.  <\/p>\n<p>We are investing to replace that particularly onerous solution with something a bit better, with better support for the actual value-add activites that occur downstream, and with organizational alignment to insure that someone can answer the question &#8220;what are you going to do with the data.&#8221;<\/p>\n<p>That said, your observation is salient.  Manual data collection is rarely a good long term solution.<\/p>\n<p>Good to chat with you again.<br \/>\n&#8212; Nick<\/p>\n","parent":0}],"attachments":[],"comment_count":3,"comment_status":"closed","custom_fields":{"dasblog_entryid":["cf59d65d-af8c-41c5-9562-a26969d76a5d"],"dasblog_compressedtitle":["Probably+Wrong+Info+Is+Worse+Than+No+Info+At+All"],"dasblog_compressedtitleunique":["2009\/07\/13\/Probably+Wrong+Info+Is+Worse+Than+No+Info+At+All"]}},"previous_url":"http:\/\/devhawk.net\/2009\/07\/09\/syntax-highlighting-textboxes-in-wpf-a-sad-story\/","next_url":"http:\/\/devhawk.net\/2009\/07\/14\/dynamic-languages-in-architecture\/"}