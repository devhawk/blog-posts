{"status":"ok","post":{"id":918,"type":"post","slug":"when-is-a-service-not-a-service","url":"http:\/\/devhawk.net\/2007\/03\/21\/when-is-a-service-not-a-service\/","status":"publish","title":"When is a Service Not a Service?","title_plain":"When is a Service Not a Service?","content":"<p>Conceptually, I like both Service Oriented Architecture (aka SOA) and Software as a Service (aka SaaS). However, I think we&#8217;ve done the industry a disservice by overloading the term &#8220;service&#8221;. <\/p>\n<p>John deVadoss <a href=\"http:\/\/blogs.msdn.com\/jdevados\/archive\/2007\/03\/04\/what-is-software-as-a-service.aspx\">likes<\/a> the following definition of SaaS from <a href=\"http:\/\/en.wikipedia.org\/wiki\/Software_as_a_Service\">Wikipedia<\/a>. So do I.<\/p>\n<blockquote><p><b>Software as a service<\/b> (<b>SaaS<\/b>) is a model of software delivery where the software company provides maintenance, daily technical operation, and support for the software provided to their client. SaaS is a model of software delivery rather than a market segment; it assumes the software is delivered over the Internet. Software can be delivered using this method to any market segment including home consumers, small business, medium and large business.<\/p>\n<\/blockquote>\n<p>To paraphrase, SaaS is software that traditionally you might have bought, installed and run yourself but instead now can access over the network where someone else is responsible for installing and running it. For example, instead of buying, setting up and managing my own mail server to handle a <a href=\"mailto:harry@devhawk.net\">single @devhawk.net email address<\/a>, I use the <a href=\"http:\/\/domains.live.com\/\">WL Custom Domains<\/a> service. <\/p>\n<p>SOA on the other hand isn&#8217;t a model of software delivery, it&#8217;s a model of software segmentation. Again, here&#8217;s the <a href=\"http:\/\/en.wikipedia.org\/wiki\/Service-oriented_architecture\">Wikipedia definition<\/a>, this time for SOA:<\/p>\n<blockquote><p>There is no widely-agreed upon definition of <b>Service-oriented architecture<\/b> other than its literal translation that it is an architecture that relies on service-orientation as its fundamental design principle.<\/p>\n<\/blockquote>\n<p>Err, that&#8217;s not very helpful. Let&#8217;s check out the <a href=\"http:\/\/www.oasis-open.org\/\">OASIS<\/a> definition (cribbed from Wikipedia).<\/p>\n<blockquote><p>[SOA is]\u00a0A paradigm for organizing and utilizing distributed capabilities that may be under the control of different ownership domains. It provides a uniform means to offer, discover, interact with and use capabilities to produce desired effects consistent with measurable preconditions and expectations.<\/p>\n<\/blockquote>\n<p>Well, at least it&#8217;s not a self-referential recursive definition. But it is littered with committee-speak. (Who talks like that in real life?) Frak it, here&#8217;s my definition:<\/p>\n<blockquote><p>SOA is a way of implementing IT systems as a web of interconnected yet independent loosely coupled subsystems (typically called services) instead of as big honking systems we have traditionally built that tend to be unwieldy, in-agile, difficult to change and probably obsolete by the time they were deployed.<\/p>\n<\/blockquote>\n<p>We could argue about the language, but you get the point. There would be a ton of argument about the <em>size<\/em> of the subsystems (i.e. the service granularity), but I think most people can agree that SOA encourages building multiple smaller interconnected subsystems instead of one big (honking) system.<\/p>\n<p>Which brings me back to my original point: Service, in the SOA sense, describes the approach to factoring parts of an software solution. Service, in the SaaS sense, describes a software delivery mechanism. Certainly, you can use both together and take an SOA approach to building a SaaS product. But you don&#8217;t have to. So having the same term &#8220;service&#8221; used in both is very confusing.<\/p>\n<p>How many SaaS products use SOA today? I would guess &#8220;not many&#8221; since there hasn&#8217;t been much demand for it. When you&#8217;re selling to the long tail of the LOB market, support for service-oriented integration isn&#8217;t a critical selling feature. As SaaS becomes more attractive to larger companies (i.e. ones with dedicated IT staffs), using a SOA approach will be more important to SaaS product vendors. So they will converge in a way, but not in the way their naming suggests.<\/p>\n<p>Of the two uses, SaaS seems closer to the <a href=\"http:\/\/dictionary.reference.com\/browse\/service\">dictionary definition<\/a> of service. Maybe the S in SOA should stand for &#8220;Subsystem&#8221;? Nah, I like the term &#8220;<a href=\"http:\/\/msdn2.microsoft.com\/en-us\/architecture\/aa699418.aspx\">connected systems<\/a>&#8221; better than &#8220;service oriented&#8221; anyway. <\/p>\n","excerpt":"<p>Conceptually, I like both Service Oriented Architecture (aka SOA) and Software as a Service (aka SaaS). However, I think we&#8217;ve done the industry a disservice by overloading the term &#8220;service&#8221;. John deVadoss likes the following definition of SaaS from Wikipedia. So do I. Software as a service (SaaS) is a model of software delivery where [&hellip;]<\/p>\n","date":"2007-03-21 13:19:43","modified":"2007-03-21 13:19:43","categories":[{"id":177,"slug":"architecture","title":"Architecture","description":"","parent":0,"post_count":296}],"tags":[{"id":183,"slug":"soa","title":"SOA","description":"","post_count":94}],"author":{"id":1,"slug":"admin","name":"DevHawk","first_name":"Harry","last_name":"Pierson","nickname":"DevHawk","url":"","description":""},"comments":[{"id":2472,"name":"Jack van Hoof","url":"http:\/\/soa-eda.blogspot.com","date":"2007-03-24 15:24:19","content":"<p>Hi Harry,<\/p>\n<p>Great article! I think service in SOA (as SOA is currently understood) is a software component, but a component with a strong business function constraint. In my view SOA is an instance of a component based architecture as I concluded here: <a href=\"http:\/\/soa-eda.blogspot.com\/2007\/01\/what-is-service-in-soa.html\" rel=\"nofollow\">http:\/\/soa-eda.blogspot.com\/2007\/01\/what-is-service-in-soa.html<\/a><\/p>\n<p>This idea makes an SOA a composition of hierarchically encapsulated layers of callable business services that map to one or more processes.<\/p>\n<p>I notice a misconception spreading around at a large sale between SOA-bloggers and article-writers, even by the great gurus. They are mixing up services which are functional components, and &#8220;Web Services&#8221; which is an interface implementation technology. To me it makes more sense to discuss at which levels of granularity the use of web services technology is appropriate. And that depends on system implementation characteristics such as degree of distribution and heterogeneity and desired openness.<\/p>\n","parent":0}],"attachments":[],"comment_count":1,"comment_status":"closed","custom_fields":{"dasblog_entryid":["e177e591-1ee6-417e-a4b9-b83df97e4a57"],"dasblog_compressedtitle":["When+Is+A+Service+Not+A+Service"],"dasblog_compressedtitleunique":["2007\/03\/21\/When+Is+A+Service+Not+A+Service"]}},"previous_url":"http:\/\/devhawk.net\/2007\/03\/21\/morning-coffee-49\/","next_url":"http:\/\/devhawk.net\/2007\/03\/22\/morning-coffee-50\/"}