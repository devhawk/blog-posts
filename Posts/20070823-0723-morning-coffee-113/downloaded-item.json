{"status":"ok","post":{"id":1033,"type":"post","slug":"morning-coffee-113","url":"http:\/\/devhawk.net\/2007\/08\/23\/morning-coffee-113\/","status":"publish","title":"Morning Coffee 113","title_plain":"Morning Coffee 113","content":"<ul>\n<li>I&#8217;m in Chicago today and tomorrow for a reunion of sorts. In my last job, I managed a group of external architects called the Microsoft Architecture Advisory Board (aka the MAAB). We discontinued the program a while back, but the core of the group found the program valuable enough they have continued to meet anyway. I found the MAAB meetings incredibly valuable and insightful, so I&#8217;m really excited to be invited to continue my involvement with the group. <\/li>\n<li>I picked up Bioshock Tuesday (Circuit City <a href=\"http:\/\/www.xbox360fanboy.com\/2007\/08\/19\/get-bioshock-and-all-pro-football-for-the-cheap\/\">had it on sale<\/a>) on my way to my bi-weekly campus excursion. My meetings were over around 2pm so I headed home early, expecting to surprise the kids. But Jules had decided to skip naps and go shopping with them. Her cell phone was dead, so I ended up at home with a couple of hours to myself and a brand new copy of Bioshock. Wow, is that a good game. Certainly deserving of the <a href=\"http:\/\/www.metacritic.com\/games\/platforms\/xbox360\/bioshock\">amazingly good reviews<\/a> it&#8217;s garnered. <\/li>\n<li>Speaking of reviews, <a href=\"http:\/\/www.sonydefenseforce.com\/?p=83\">this transparently biased review of Bioshock<\/a> over at Sony Defense <strike>Farce<\/strike> Force is frakking hilarious. Somehow, I doubt their dubious review will stem the tidal wave of Bioshock&#8217;s well-deserved hype. Can&#8217;t wait to read their Halo 3 review. <\/li>\n<li>Pat Helland <a href=\"http:\/\/blogs.msdn.com\/pathelland\/archive\/2007\/08\/19\/thoughts-about-multi-master-replication-of-tree-structured-data.aspx\">writes at length<\/a> on master-master replication. I <a href=\"http:\/\/blogs.msdn.com\/pathelland\/archive\/2007\/08\/20\/easier-to-read-version-of-my-last-post.aspx\">reformated it into PDF<\/a> so I could read it &#8211; the large images were messing up the text flow on my system. As usual for Pat, there&#8217;s gold in that thar post. His thoughts on DAGs of versions and vector clocks as identifiers are very exciting. However, I think he glosses over the importance of declarative merging. I would think programmatic merge would likely be non-deterministic across nodes. If so, wouldn&#8217;t you end up with two documents with the same vector-clock identifier by different data? <\/li>\n<li>Joe McKendrick <a href=\"http:\/\/blogs.zdnet.com\/service-oriented\/?p=939\">points to<\/a> a few people who predict the term &#8220;service-oriented&#8221; will eventually be subsumed under the general heading of &#8220;architecture&#8221;. Not to brag, but I made that exact same prediction <a href=\"http:\/\/blogs.msdn.com\/jevdemon\/archive\/2004\/12\/17\/323889.aspx\">almost three years ago<\/a>. <\/li>\n<li>Erik Johnson <a href=\"http:\/\/appside.blogspot.com\/2005\/08\/patterns-for-soa-20.html\">thinks<\/a> that SOA 2.0 centers on transformational patterns. The idea (I think) is that if systems &#8220;understand each other more deeply&#8221;, then we can build a &#8220;smarter stack&#8221; and design apps via new constructs to promote agility and simplicity. Personally, I&#8217;m skeptical that we can define unambiguously system semantics except in the simplest scenarios, but Erik talks about using &#8220;graph transformation mathematics&#8221; to encode semantics. I don&#8217;t know anything about graph transformation mathematics, but at least Erik has progressed beyond hand waving to describing the &#8220;what&#8221;. Here&#8217;s looking forward to the &#8220;how&#8221;. <\/li>\n<li><a href=\"http:\/\/vasters.com\/clemensv\/PermaLink,guid,70d581f0-577d-4f80-aa11-248574b1e420.aspx\">New dad<\/a> Clemens Vasters somehow <a href=\"http:\/\/vasters.com\/clemensv\/PermaLink,guid,9677a491-9037-4b79-baa3-bcf093737957.aspx\">finds time to implement<\/a> an XML-RPC binding for WCF 3.5. I was encouraged that it didn&#8217;t require any custom attributes or extensions at the programmer level. Of course, XML-RPC fits semantically into WCF&#8217;s interface based service model, so it shouldn&#8217;t be a huge surprise that it didn&#8217;t require any custom extensions. But did it need WCF 3.5? Would this work if recompiled against the 3.0 assemblies? <\/li>\n<li>Phil Haack <a href=\"http:\/\/haacked.com\/archive\/2007\/08\/19\/why-duck-typing-matters-to-c-developers.aspx\">writes a long post<\/a> on Duck Typing. VB9 <a href=\"http:\/\/download.microsoft.com\/download\/5\/8\/6\/5868081c-68aa-40de-9a45-a3803d8134b8\/Visual_Basic_9.0_Overview.doc\">originally supported<\/a> duck typing &#8211; the feature was called Dynamic Interfaces &#8211; when it was first announced, but it was <a href=\"http:\/\/blogs.msdn.com\/vbteam\/archive\/2007\/01\/11\/extension-methods-part-2.aspx#1458124\">subsequently cut<\/a>. I was really looking forward to that feature. Between it and XML Literals, VB9 was really stepping out of C#&#8217;s shadow. I guess <a href=\"http:\/\/steve.emxsoftware.com\/LINQ\/XLinq+has+me+wanting+to+code+in+VBNET\">it still is<\/a>, even without dynamic interfaces. <\/li>\n<li>Since I&#8217;ve been doing some LINQ to XML work lately, I decided to go back and re-write my code in VB9 using XML literals. While XML literals are nice, I don&#8217;t think they&#8217;re a must have. First, LINQ to XML has a nice fluent interface, so the literals don&#8217;t give you that much cleaner code (though you do avoid writing XElement and XAttribute over and over.) Second, I find VB9&#8242;s template syntax (like ASP &lt;%= expression %&gt;) clunky to work with, especially in nested templates. Finally, I like the namespace support of XNames better. As far as I can tell, VB9 defines namespaces with xmlns attributes just like XML does. So I&#8217;m not dying for literal XML support in a future version of C#. How about you? <\/li>\n<\/ul>\n","excerpt":"<p>I&#8217;m in Chicago today and tomorrow for a reunion of sorts. In my last job, I managed a group of external architects called the Microsoft Architecture Advisory Board (aka the MAAB). We discontinued the program a while back, but the core of the group found the program valuable enough they have continued to meet anyway. [&hellip;]<\/p>\n","date":"2007-08-23 07:23:53","modified":"2011-04-17 15:51:50","categories":[{"id":180,"slug":"morning-coffee","title":"Morning Coffee","description":"","parent":0,"post_count":184}],"tags":[{"id":224,"slug":"linq","title":"LINQ","description":"","post_count":24},{"id":183,"slug":"soa","title":"SOA","description":"","post_count":94},{"id":313,"slug":"wcf","title":"WCF","description":"","post_count":31}],"author":{"id":1,"slug":"admin","name":"DevHawk","first_name":"Harry","last_name":"Pierson","nickname":"DevHawk","url":"","description":""},"comments":[{"id":2577,"name":"Clemens Vasters","url":"","date":"2007-08-23 13:48:45","content":"<p>The XML-RPC download should be a 3.0 compatible assembly. It&#8217;s 3.5 &#8220;ready&#8221; in that it gains partial trust support on 3.5 automatically.<\/p>\n","parent":0}],"attachments":[],"comment_count":1,"comment_status":"closed","custom_fields":{"dasblog_entryid":["08f02252-de04-4a8d-933d-eff57cf3c186"],"dasblog_compressedtitle":["Morning+Coffee+113"],"dasblog_compressedtitleunique":["2007\/08\/23\/Morning+Coffee+113"]}},"previous_url":"http:\/\/devhawk.net\/2007\/08\/17\/datareaders-linq-to-xml-and-range-generation\/","next_url":"http:\/\/devhawk.net\/2007\/08\/23\/the-one-business-case-for-integration\/"}