{"status":"ok","post":{"id":873,"type":"post","slug":"how-i-learned-to-stop-worrying-and-love-wcf","url":"http:\/\/devhawk.net\/2007\/02\/06\/how-i-learned-to-stop-worrying-and-love-wcf\/","status":"publish","title":"How I Learned to Stop Worrying and Love WCF","title_plain":"How I Learned to Stop Worrying and Love WCF","content":"<p>Regular readers of DevHawk are likely aware of my <strike>obsession<\/strike> interest in <a href=\"http:\/\/msdn2.microsoft.com\/en-us\/library\/ms166043.aspx\">SQL Service Broker<\/a>\u00a0(aka SSB). I&#8217;ve also been doing a lot of <a href=\"http:\/\/msdn2.microsoft.com\/en-us\/library\/aa388579.aspx\">WCF<\/a> work lately. While there are parts of WCF that <a href=\"http:\/\/devhawk.net\/2006\/10\/27\/Custom+Authentication+With+WCF+Is+Top+Shelf.aspx\">I think rock<\/a>, overall I&#8217;ve found WCF lacking due to it&#8217;s <a href=\"http:\/\/devhawk.net\/2006\/10\/29\/Is+WCF+QuotStraightforwardquot+For+Long+Running+Tasks.aspx\">lack of support for long running services<\/a>, which SSB excels at.<\/p>\n<p>So it was with great interest that I read this recent article on <a href=\"http:\/\/msdn2.microsoft.com\/en-us\/library\/bb266709.aspx\">Integrating WF and WCF<\/a>. WF is expressly designed for long running systems, so I wanted to see how the article dealt with the WCF&#8217;s lack of support for such scenarios.\u00a0Unfortunately, the article basically sidesteps the issue. While it has lots of great info about hosting WF inside a WCF service, the article <a href=\"http:\/\/msdn2.microsoft.com\/en-us\/library\/bb266709.aspx#intgrwfwcf_topic8\">uses duplex channels<\/a>\u00a0for communication between the service and its clients. As <a href=\"http:\/\/devhawk.net\/2006\/10\/29\/Is+WCF+QuotStraightforwardquot+For+Long+Running+Tasks.aspx\">I have pointed out before<\/a>, this approach is impractical because it requires that both the service and its consumer remain alive in memory until the WF end. <\/p>\n<p>Remember <a href=\"http:\/\/devhawk.net\/2006\/11\/01\/Essential+Windows+Workflow+Foundation.aspx\">this quote from Essential WF<\/a>?<\/p>\n<blockquote><p>&#8220;It is wishful thinking to assume that the operating system process (or CLR application domain) in which the program begins execution will survive for the required duration.&#8221;<\/p>\n<\/blockquote>\n<p>So basically this WCF\/WF sample is wishful thinking. Fine for a demo, but given the severe lack of information out there on integrating these two technologies, I&#8217;m worried that many people will read this article as best practice guidance, which in my opinion would be a mistake. <\/p>\n<p>But instead of firing up my blog (that is, like <a href=\"http:\/\/devhawk.net\/2006\/10\/17\/WF+Clarifications+And+Corrections.aspx\">last time<\/a>) to write a scathing post about how broken this sample is, I emailed <a href=\"http:\/\/blogs.msdn.com\/pandrew\/\">Paul<\/a> which led to a concall with <a href=\"http:\/\/blogs.msdn.com\/shycohen\">Shy<\/a>\u00a0to discuss WCF&#8217;s lack of support for long running services. Imagine my surprise when Shy agreed with me completely, furthermore\u00a0saying that support for long running services had been &#8220;out of scope&#8221; for v1 of WCF. I thought that the whole point of <a href=\"http:\/\/msdn2.microsoft.com\/en-us\/library\/ms731064.aspx\">duplex channels<\/a> was for long running services. But apparently I was wrong. <\/p>\n<p>Shy said to think of the duplex channel in terms of sockets, rather than long running conversations. And just like that, WCF made a ton more sense to me. I had been directly comparing the SSB and WCF communication models, but that&#8217;s apples and oranges. It would be like comparing SSB to TCP. <\/p>\n<p>If you think about it, vanilla HTTP works a lot more like UDP, even though it&#8217;s layered on top of TCP. Both UDP and HTTP support connectionless operations and neither UDP nor HTTP are reliable or provide message ordering. The comparison isn&#8217;t perfect: for example, UDP isn&#8217;t limited to a single response for an incoming request. But by and large, HTTP is a\u00a0very UDP\u00a0style protocol.<\/p>\n<p>If HTTP is basically UDP, then WS-* is trying to be TCP. Frankly, I never understood the point of <a href=\"http:\/\/msdn2.microsoft.com\/en-us\/library\/ms951271.aspx\">WS-ReliableMessaging<\/a>.\u00a0I always thought reliability == durability ==\u00a0SSB or MSMQ. But when you realize that HTTP lacks TCP-like reliability and ordering capabilities, suddenly this WS spec makes sense. In fact, Shy made <a href=\"http:\/\/blogs.msdn.com\/shycohen\/archive\/2006\/02\/20\/535717.aspx\">this exact point<\/a> almost a year ago. At the time, I didn&#8217;t get it\u00a0because I didn&#8217;t understand the duplex channel as sockets analogy.\u00a0Now, I see the value of adding these capabilities to HTTP.<\/p>\n<p>What Shy said was clear and to the point but unfortunately completely missing in the official WCF documentation. For example, the\u00a0<a href=\"http:\/\/msdn2.microsoft.com\/en-us\/library\/ms731064.aspx\">docs on Duplex Services<\/a> say this:<\/p>\n<blockquote><p>A duplex service contract is a message exchange pattern in which both endpoints can send messages to the other independently. A duplex service, therefore, can send messages back to the client endpoint, providing event-like behavior. Duplex communication occurs when a client connects to a service and provides the service with a channel on which the service can send messages back to the client.<\/p>\n<\/blockquote>\n<p>The docs\u00a0make no mention that the &#8220;event-like behavior&#8221;\u00a0of duplex\u00a0services only works within a session. And I&#8217;m not the only one who mistakenly believed that duplex services could be used for long running services (here&#8217;s <a href=\"http:\/\/ddj.com\/dept\/webservices\/193104809?pgno=6\">an article in DDJ<\/a> that makes the same mistake). Shy used the term &#8220;episodic&#8221; to describe services that span session boundaries. I&#8217;d like to see the docs updated to include that concept. <\/p>\n<p>Taking the TCP\/UDP analogy even further, I think it demonstrates how pointless\u00a0the REST vs. SOAP debate is. As UDP is a thin layer on top of IP, REST is a thin layer on top of HTTP.\u00a0But nobody argues much about UDP vs. TCP these days. I was in grade school when UDP and TCP were standardized, so maybe there were big TCP vs UDP flame wars at the time. But twenty five years later, it&#8217;s pretty clear that TCP vs UDP is not an either-or proposition. Some protocols are better built on UDP while others are better built on TCP. I&#8217;m guessing we&#8217;ll see a similar evolution with SOAP and REST. <\/p>\n<p>Personally, I would expect that message exchanges between services will become more complex over time. Complex message exchanges would seem to favor stateful SOAP over stateless REST for the same reason complex network protocols favor connection-oriented TCP over connectionless UDP. But SOAP could never displace REST any more than TCP could ever displace UDP. Furthermore, as Larry O&#8217;Brien <a href=\"http:\/\/www.knowing.net\/PermaLink,guid,3fc3b88d-ff3a-4149-bb6c-e5091d93a6ce.aspx\">recently wrote<\/a>\u00a0&#8220;the onus is on the WS-* advocates to prove the need&#8221;. TCP standardization only lagged a year behind UDP standardization where WS-* has lagged at least six years behind REST. I wonder if UDP would be more prevalent today if it had gotten a six year head start on TCP.<\/p>\n<p>Finally, this &#8220;SOAP as Sockets&#8221; flash of understanding has also helped me understand how SSB \/ WCF can evolve together in the future. Some folks have suggested an <a href=\"http:\/\/blog.yassers.com\/2006\/09\/25\/ssb-transport-anyone.aspx\">SSB transport for WCF<\/a>\u00a0and I&#8217;ve personally looked into such an approach. But given since SSB is at a higher level of abstraction than WCF, it makes much more sense to layer SSB on top of WCF instead of the other way around. Today, SSB\u00a0uses <a href=\"http:\/\/msdn2.microsoft.com\/en-us\/library\/ms166061.aspx\">two protocol layers<\/a>: the top level Dialog Protocol, which is built on top of the lower-level Adjacent Broker Protocol (ABP), which in turn is built on TCP. I&#8217;d like to see a version of ABP that was built on top of WCF instead of directly on top of TCP. SSB&#8217;s Dialog Protocol would tie together the WCF duplex sessions into a long-running conversation the same way that it ties together TCP sessions today. <\/p>\n<p>Eventually, I would love to see something that has the programming semantics of SSB and the interoperability of WCF. That would be\u00a0like the the Reese&#8217;s Peanut Butter Cup of service messaging. <\/p>\n","excerpt":"<p>Regular readers of DevHawk are likely aware of my obsession interest in SQL Service Broker\u00a0(aka SSB). I&#8217;ve also been doing a lot of WCF work lately. While there are parts of WCF that I think rock, overall I&#8217;ve found WCF lacking due to it&#8217;s lack of support for long running services, which SSB excels at. [&hellip;]<\/p>\n","date":"2007-02-06 11:16:06","modified":"2007-02-06 11:16:06","categories":[{"id":177,"slug":"architecture","title":"Architecture","description":"","parent":0,"post_count":296}],"tags":[{"id":257,"slug":"infrastructure","title":"infrastructure","description":"","post_count":5},{"id":320,"slug":"service-broker","title":"Service Broker","description":"","post_count":14},{"id":313,"slug":"wcf","title":"WCF","description":"","post_count":31},{"id":290,"slug":"web-services","title":"Web Services","description":"","post_count":12}],"author":{"id":1,"slug":"admin","name":"DevHawk","first_name":"Harry","last_name":"Pierson","nickname":"DevHawk","url":"","description":""},"comments":[{"id":2451,"name":"Ramkishore","url":"","date":"2007-02-22 16:29:09","content":"<p>Hello Harry<\/p>\n<p>Do you know if the Composite Duplex NetMsmqBinding uses a single socket connection or two one-way socket connections as in DualHttpBinding.<\/p>\n<p>Thanks,<br \/>\nRamkishore<\/p>\n","parent":0}],"attachments":[],"comment_count":1,"comment_status":"closed","custom_fields":{"dasblog_entryid":["0ad9411e-7bb4-4b0e-887e-5d3b16739479"],"dasblog_compressedtitle":["How+I+Learned+To+Stop+Worrying+And+Love+WCF"],"dasblog_compressedtitleunique":["2007\/02\/06\/How+I+Learned+To+Stop+Worrying+And+Love+WCF"]}},"previous_url":"http:\/\/devhawk.net\/2007\/02\/06\/morning-coffee-25\/","next_url":"http:\/\/devhawk.net\/2007\/02\/06\/perusing-powershell-part-1-get-sqlserver\/"}