<?xml version="1.0" encoding="utf-8"?>
<item>
  <title>IronPython Nightly Builds</title>
  <link>http://devhawk.net/2009/01/07/ironpython-nightly-builds/</link>
  <pubDate>Wed, 07 Jan 2009 15:18:13 +0000</pubDate>
  <dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">devhawk</dc:creator>
  <guid isPermaLink="false">http://96cf813b-cc2b-4941-8fea-7bc98b3a0db9</guid>
  <description></description>
  <content:encoded xmlns:content="http://purl.org/rss/1.0/modules/content/"><![CDATA[<p><a href="http://www.codeplex.com/IronPython/Release/ProjectReleases.aspx?ReleaseId=8365">IronPython 2.0</a> shipped <a href="http://devhawk.net/2008/12/10/IPy+RTW+FTW.aspx">about a month ago</a>, but we’re still chugging along with our post 2.0 work. We’ve shipped seven <a href="http://www.codeplex.com/IronPython/SourceControl/ListDownloadableCommits.aspx">source code releases</a> since we shipped 2.0 and we should be back to our normal schedule of updating the source 2-3 times a week schedule by next week. Given how often we ship source, we’re thinking of extending the the time between binary drops. Binary releases have to be signed and there’s a fairly arduous process we have to go thru in order to get each binary release out the door.</p><p>However, there’s something nice and convenient about downloading a pre-compiled binary release. So I spent my Christmas vacation building a script to download and build IronPython nightly builds. Once built, I compress the binaries and upload them to <a href="http://msdn.microsoft.com/en-us/library/dd135733.aspx">Azure blob storage</a>. Finally, I built a <a href="http://nightlybuilds.cloudapp.net/">*very* simple cloud app</a> for users to view and download available nightly builds. As an extra benefit, I’m also providing nightly builds of the <a href="http://codeplex.com/dlr">DLR</a>. </p><p>Please note, these are *NOT* official Microsoft releases of IronPython and/or DLR. They aren’t signed and they haven’t gone through the aforementioned release process. I’m just downloading the public source, building it with the publicly available tools, then making them available on a a publicly accessible website.</p><p>The website for the IronPython (and DLR) nightly builds is <a href="http://nightlybuilds.cloudapp.net">http://nightlybuilds.cloudapp.net</a>. </p><p>As usual, I welcome any feedback. Is having prebuilt unsigned binaries of IPy releases useful? Do you want IronRuby binaries as well? What about social features (rating releases, comments, etc)? Please let me know what you think. </p>]]></content:encoded>
  <excerpt:encoded xmlns:excerpt="http://wordpress.org/export/1.2/excerpt/"><![CDATA[]]></excerpt:encoded>
  <wp:post_id xmlns:wp="http://wordpress.org/export/1.2/">1209</wp:post_id>
  <wp:post_date xmlns:wp="http://wordpress.org/export/1.2/">2009-01-07 15:18:13</wp:post_date>
  <wp:post_date_gmt xmlns:wp="http://wordpress.org/export/1.2/">2009-01-07 15:18:13</wp:post_date_gmt>
  <wp:comment_status xmlns:wp="http://wordpress.org/export/1.2/">open</wp:comment_status>
  <wp:ping_status xmlns:wp="http://wordpress.org/export/1.2/">open</wp:ping_status>
  <wp:post_name xmlns:wp="http://wordpress.org/export/1.2/">ironpython-nightly-builds</wp:post_name>
  <wp:status xmlns:wp="http://wordpress.org/export/1.2/">publish</wp:status>
  <wp:post_parent xmlns:wp="http://wordpress.org/export/1.2/">0</wp:post_parent>
  <wp:menu_order xmlns:wp="http://wordpress.org/export/1.2/">0</wp:menu_order>
  <wp:post_type xmlns:wp="http://wordpress.org/export/1.2/">post</wp:post_type>
  <wp:post_password xmlns:wp="http://wordpress.org/export/1.2/"></wp:post_password>
  <wp:is_sticky xmlns:wp="http://wordpress.org/export/1.2/">0</wp:is_sticky>
  <category domain="post_tag" nicename="dlr"><![CDATA[DLR]]></category>
  <category domain="category" nicename="ironpython"><![CDATA[IronPython]]></category>
  <wp:postmeta xmlns:wp="http://wordpress.org/export/1.2/">
    <wp:meta_key>dasblog_entryid</wp:meta_key>
    <wp:meta_value><![CDATA[96cf813b-cc2b-4941-8fea-7bc98b3a0db9]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta xmlns:wp="http://wordpress.org/export/1.2/">
    <wp:meta_key>dasblog_compressedtitle</wp:meta_key>
    <wp:meta_value><![CDATA[IronPython+Nightly+Builds]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta xmlns:wp="http://wordpress.org/export/1.2/">
    <wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
    <wp:meta_value><![CDATA[2009/01/07/IronPython+Nightly+Builds]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment xmlns:wp="http://wordpress.org/export/1.2/">
    <wp:comment_id>2164</wp:comment_id>
    <wp:comment_author><![CDATA[Kevin Hazzard, MVP]]></wp:comment_author>
    <wp:comment_author_email>kevin@gotnet.biz</wp:comment_author_email>
    <wp:comment_author_url>http://www.gotnet.biz/Blog</wp:comment_author_url>
    <wp:comment_author_IP>75.199.177.176</wp:comment_author_IP>
    <wp:comment_date>2009-01-08 11:39:49</wp:comment_date>
    <wp:comment_date_gmt>2009-01-08 19:39:49</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[This is awesome, Harry. Thanks for taking the time to put it together.

Kevin]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
  </wp:comment>
</item>