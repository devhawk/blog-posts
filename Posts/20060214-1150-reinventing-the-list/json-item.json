{"status":"ok","post":{"id":690,"type":"post","slug":"reinventing-the-list","url":"http:\/\/devhawk.net\/2006\/02\/14\/reinventing-the-list\/","status":"publish","title":"Reinventing the List","title_plain":"Reinventing the List","content":"<p>Marc Canter seems pretty excited that Songbird is going to support XSPF. While Marc has written about it many times, I had no idea what it was. It&#8217;s the <a href=\"http:\/\/www.xspf.org\/\">XML Shareable Playlist Format<\/a> (pronounced &#8220;spiff&#8221;). It&#8217;s designed to be simple and open and built on XML. Typically, that&#8217;s coolness but while reading the <a href=\"http:\/\/www.xspf.org\/xspf-v1.html\">spec<\/a>, I had a strong sense of deja-vu. XSPF defines a list of songs for a playlist, much the same way that <a href=\"http:\/\/www.rssboard.org\/rss-2-0\">RSS<\/a> defines a list of blog entries. <\/p>\n<p>So that begs the question, why didn&#8217;t XSPF just use RSS instead of starting from scratch? RSS is simple, open, built on XML and is massively popular? Remember when Adam Bosworth that <a href=\"http:\/\/acmqueue.com\/modules.php?name=Content&amp;pa=showpage&amp;pid=337&amp;page=4\">pointed out<\/a> that RSS and Atom are &#8220;both support a base schema that provides a model for sets&#8221;. I&#8217;m all for a simple, open and extensible playlist format, but I&#8217;m not excited that XSPF has gone of an reinvented the concept of &#8220;list&#8221; in order to do it. <\/p>\n","excerpt":"<p>Marc Canter seems pretty excited that Songbird is going to support XSPF. While Marc has written about it many times, I had no idea what it was. It&#8217;s the XML Shareable Playlist Format (pronounced &#8220;spiff&#8221;). It&#8217;s designed to be simple and open and built on XML. Typically, that&#8217;s coolness but while reading the spec, I [&hellip;]<\/p>\n","date":"2006-02-14 11:50:50","modified":"2006-02-14 11:50:50","categories":[],"tags":[{"id":248,"slug":"music","title":"Music","description":"","post_count":20},{"id":188,"slug":"web-2-0","title":"Web 2.0","description":"","post_count":67}],"author":{"id":1,"slug":"admin","name":"DevHawk","first_name":"Harry","last_name":"Pierson","nickname":"DevHawk","url":"","description":""},"comments":[{"id":2897,"name":"Lucas Gonze","url":"http:\/\/gonze.com","date":"2006-02-14 13:22:07","content":"<p>Along with a study of existing playlist formats (at <a href=\"http:\/\/gonze.com\/playlists\/playlist-format-survey.html\" rel=\"nofollow\">http:\/\/gonze.com\/playlists\/playlist-format-survey.html<\/a>), there was a preliminary study on RSS for this purpose:<br \/>\n<a href=\"http:\/\/gonze.com\/rss_plus_time.html\" rel=\"nofollow\">http:\/\/gonze.com\/rss_plus_time.html<\/a> .<\/p>\n<p>RSS didn&#8217;t make sense for a lot of reasons.  We were paving cowpaths, and RSS for playlists was very much not a cowpath.  Playlists are about sequence, while RSS has no concept of sequence except reverse chronological order.  We needed abstractions to deal with the fact that music and movies frequently don&#8217;t have URLs, and RSS didn&#8217;t have them.  If not starting from scratch was critical, HTML preceded RSS and would be the default to work from.<\/p>\n<p>That said, I would have liked for XSPF to be a lot closer to feed formats, even though it didn&#8217;t work out that way.  Maybe in the long run that&#8217;s the direction it will go.<\/p>\n","parent":0},{"id":2898,"name":"Online-Poker","url":"http:\/\/online-poker.30mb.com","date":"2006-03-09 07:26:04","content":"<p>Along with a study of existing playlist formats (at <a href=\"http:\/\/gonze.com\/playlists\/playlist-format-survey.html\" rel=\"nofollow\">http:\/\/gonze.com\/playlists\/playlist-format-survey.html<\/a>), there was a preliminary study on RSS for this purpose:<br \/>\n<a href=\"http:\/\/gonze.com\/rss_plus_time.html\" rel=\"nofollow\">http:\/\/gonze.com\/rss_plus_time.html<\/a> . <\/p>\n","parent":0},{"id":2899,"name":"Online Poker","url":"http:\/\/online-poker.30mb.com","date":"2006-03-09 07:27:11","content":"<p>RSS didn&#8217;t make sense for a lot of reasons. We were paving cowpaths, and RSS for playlists was very much not a cowpath. Playlists are about sequence, while RSS has no concept of sequence except reverse chronological order. We needed abstractions to deal with the fact that music and movies frequently don&#8217;t have URLs, and RSS didn&#8217;t have them. If not starting from scratch was critical, HTML preceded RSS and would be the default to work from. <\/p>\n","parent":0}],"attachments":[],"comment_count":3,"comment_status":"closed","custom_fields":{"dasblog_entryid":["32bca2ee-e564-4151-af30-e1d23e7f517e"],"dasblog_compressedtitle":["Reinventing+The+List"],"dasblog_compressedtitleunique":["2006\/02\/14\/Reinventing+The+List"]}},"previous_url":"http:\/\/devhawk.net\/2006\/02\/13\/yet-another-ajax-toolkit\/","next_url":"http:\/\/devhawk.net\/2006\/02\/14\/more-on-xsfp\/"}