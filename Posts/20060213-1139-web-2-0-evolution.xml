<?xml version="1.0" encoding="utf-8"?>
<item>
  <title>Web 2.0 Evolution</title>
  <link>http://devhawk.net/2006/02/13/web-2-0-evolution/</link>
  <pubDate>Mon, 13 Feb 2006 11:39:21 +0000</pubDate>
  <dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">devhawk</dc:creator>
  <guid isPermaLink="false">http://0e02c2eb-c4c1-471c-aa30-f86a22bcfe07</guid>
  <description></description>
  <content:encoded xmlns:content="http://purl.org/rss/1.0/modules/content/"><![CDATA[In his <a href="http://www.identity20.com/">now-famous talk</a>, <a href="http://blame.ca/dick/">Dick Hardt</a> describes <a href="http://www.identity20.com/">Identity 2.0</a> as inevitable. As in "coming for sure, but not here yet". I wonder how much of Web 2.0 is here now, and how much is inevitable? And furthermore, how much can we generalize about the future of Web 2.0 from what is happening now? As in many things, I think the answer isn't black and white. 
<p>For example, I think we can generalize about the bright future of peer-to-peer based technologies from looking at systems like <a href="http://www.skype.com/">Skype</a> and <a href="https://www.foldershare.com/">FolderShare</a>. Naturally, with the power shifting to the edge, I believe it's inevitable for more edge machines to communicate directly with each other rather than being mediated by a service in the center. In fact, in many cases I believe were going to want to shift a significant percentage of social computing to the peer-to-peer model. It scales better and doesn't have centralized privacy concerns. Furthermore, I think there may be be specific peer-to-peer capabilities that are difficult or impossible to replicate with a centralized model, though so far, I haven't them yet. </p><p>However, I'm not sure we can generalize about the future of mashups the same way. This isn't to say I think mashups are going away - far from it. I just think that mashups a year from now will look very different than they do today. </p><p>First off, I don't think we can  generalize the success of Google Maps. In the <a href="http://www.programmableweb.com/howto">Programmable Web how to guide</a>, they mention that "Plotting markers on maps is probably the easiest place to start". Apparently, many people are taking that advice because 297 of the <a href="http://www.programmableweb.com/mashups">411 mashups listed</a> use one of the three major (i.e. GYM) mapping services. However, maps are unique because of the massive amount of data, the extremely simple API and the ubiquity of location information. They are also one of the few mashup API's that runs in the browser - the vast majority of mashup API's are back end data type services like <a href="http://www.amazon.com/gp/browse.html/ref=sc_fe_l_2/102-5580662-4480110?_encoding=UTF8&amp;node=12738641&amp;no=14256891&amp;me=A36L942TSJ2AJA">Amazon's E-Commerce Service</a>. How many more in-browser <a href="http://www.programmableweb.com/apis">mashup API's</a> are out there waiting to be built? I'm not sure, but as I wrote in <a href="http://devhawk.net/2006/02/03/Browser+As+Virtual+Machine.aspx">Browser as VM</a>, the problem with these in-browser mashup API's is that you can't protect your IP. </p><p>As for back-end service mashup APIs, there needs to be a way for these service providers to make money. Even if the software they use to build the service is free, things like hardware and bandwidth are not. For an Amazon or Ebay, making money on thier services is relatively easy since they are facilitating sales transactions. In the end, they probably won't care much if a sales transaction originated on their site or on a site leveraging their APIs. However, if the service provider is ad-funded, the service API effectively routes around the site's revenue mechanism. Take, for example, a site for tracking events like <a href="http://www.zvents.com/">Zvents</a>, <a href="http://eventful.com/">Eventful</a> or <a href="http://upcoming.org/">Upcoming</a>. They need to drive users to the actual site in order to drive revenue. So it remains to be seen exactly how the API based access is going to work out. Today, these API's are specifically provided for "non-commercial use only" so one way would be to charge for access via the API (either flat-rate subscription, a per-use charge or a combination of the two). Alternatively, they could be bought up by a larger company who could then afford to run the business at a loss. Yahoo already bought Upcoming and Google Base already has an event item type, but the other big companies in this space (I'd guess Microsoft, Amazon, Ebay and maybe Apple) might be interested. Again, I'm not sure how this evolves either, but it's got to evolve beyond "non-commercial access".</p>]]></content:encoded>
  <excerpt:encoded xmlns:excerpt="http://wordpress.org/export/1.2/excerpt/"><![CDATA[]]></excerpt:encoded>
  <wp:post_id xmlns:wp="http://wordpress.org/export/1.2/">689</wp:post_id>
  <wp:post_date xmlns:wp="http://wordpress.org/export/1.2/">2006-02-13 11:39:21</wp:post_date>
  <wp:post_date_gmt xmlns:wp="http://wordpress.org/export/1.2/">2006-02-13 11:39:21</wp:post_date_gmt>
  <wp:comment_status xmlns:wp="http://wordpress.org/export/1.2/">open</wp:comment_status>
  <wp:ping_status xmlns:wp="http://wordpress.org/export/1.2/">open</wp:ping_status>
  <wp:post_name xmlns:wp="http://wordpress.org/export/1.2/">web-2-0-evolution</wp:post_name>
  <wp:status xmlns:wp="http://wordpress.org/export/1.2/">publish</wp:status>
  <wp:post_parent xmlns:wp="http://wordpress.org/export/1.2/">0</wp:post_parent>
  <wp:menu_order xmlns:wp="http://wordpress.org/export/1.2/">0</wp:menu_order>
  <wp:post_type xmlns:wp="http://wordpress.org/export/1.2/">post</wp:post_type>
  <wp:post_password xmlns:wp="http://wordpress.org/export/1.2/"></wp:post_password>
  <wp:is_sticky xmlns:wp="http://wordpress.org/export/1.2/">0</wp:is_sticky>
  <category domain="category" nicename="architecture"><![CDATA[Architecture]]></category>
  <category domain="post_tag" nicename="web-2-0"><![CDATA[Web 2.0]]></category>
  <wp:postmeta xmlns:wp="http://wordpress.org/export/1.2/">
    <wp:meta_key>dasblog_entryid</wp:meta_key>
    <wp:meta_value><![CDATA[0e02c2eb-c4c1-471c-aa30-f86a22bcfe07]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta xmlns:wp="http://wordpress.org/export/1.2/">
    <wp:meta_key>dasblog_compressedtitle</wp:meta_key>
    <wp:meta_value><![CDATA[Web+20+Evolution]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta xmlns:wp="http://wordpress.org/export/1.2/">
    <wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
    <wp:meta_value><![CDATA[2006/02/13/Web+20+Evolution]]></wp:meta_value>
  </wp:postmeta>
</item>