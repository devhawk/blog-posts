<?xml version="1.0" encoding="utf-8"?>
<item>
  <title>Zooming In From High Levels of Abstraction</title>
  <link>http://devhawk.net/2004/08/30/zooming-in-from-high-levels-of-abstraction/</link>
  <pubDate>Mon, 30 Aug 2004 13:03:02 +0000</pubDate>
  <dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">devhawk</dc:creator>
  <guid isPermaLink="false">http://7cd9ce89-49cb-49ff-93c5-35abca2b1c68</guid>
  <description></description>
  <content:encoded xmlns:content="http://purl.org/rss/1.0/modules/content/"><![CDATA[<p></p><p><a href="http://www.figuerres.com/">Denny Figuerres</a> left the following <a href="http://weblogs.asp.net/devhawk/archive/2004/08/29/222328.aspx#222366">comment</a> on my <a href="http://devhawk.net/PermaLink.aspx?guid=beb13ac1-f5a0-42e0-9670-f6843601d33e">last post</a>:</p><blockquote><p>[O]ne of my "wish" items would be a kind of editor that would be a merge of flow-chart and text editor so that I could view my function as text or as a kind of zooming diagram with more details as I drilldown. like when you use a map program, first you see an area and major routes, rivers, lakes etc... and as you zoom-in you see a smaller area with more detail. at some point you are down to a single line of code that is an expression of some kind. </p></blockquote><p>I think this is a great idea, and is completely in line with Software Factories. Denny, what you're talking about is working at higher levels of abstractions. If you read the <a href="http://theserverside.net/articles/showarticle.tss?id=SoftwareFactories">Software Factories article</a> on <a href="http://theserverside.net/">TheServerSide.NET</a>, Jack writes: </p><blockquote><p>How...do we work at higher levels of abstraction? We use more abstract models, and move the platform closer to the models with either frameworks or transformations, as illustrated in Figure 4. </p></blockquote><img src="http://theserverside.net/articles/content/SoftwareFactories/images/IM04.gif" /><blockquote><ul><li>We can use a framework to implement higher level abstractions that appear in the models, and use the models to generate snippets of code at framework extension points. Conversely, the models help users complete the framework by visualizing framework concepts, and exposing its extension points in intuitive ways. A pattern language can be used instead of a framework, as described by <a href="http://www.eaipatterns.com/">Hohpe and Woolf</a>. This requires the tool to generate the pattern implementations, in addition to the completion code. This approach is illustrated in Figure 4 (a). 
</li><li>Instead of a framework or pattern language, we can generate to a lower level DSL. We can also use more than two DSLs to span a wide gap, leading to progressive transformation, where models written using the highest level DSLs are transformed into executables through a series of refinements, as shown in Figure 4 (b). </li></ul></blockquote><p>I think we'll see a combination of these two approaches. Obviously, as an industry, we have lots of experience building frameworks and I don't see those going away anytime soon. The second approach, however, is much more fascinating as you get that "zooming" effect that Denny describes. </p><p>One thing to note about this zooming approach of using higher level abstractions - different systems use different abstractions. The abstractions you use to build an ERP system are not the same as the ones you would use to build a telephone billing system. So the view of the top-level abstractions will be very different, even if they both end up implemented on the same platform using the same programming language.</p>]]></content:encoded>
  <excerpt:encoded xmlns:excerpt="http://wordpress.org/export/1.2/excerpt/"><![CDATA[]]></excerpt:encoded>
  <wp:post_id xmlns:wp="http://wordpress.org/export/1.2/">428</wp:post_id>
  <wp:post_date xmlns:wp="http://wordpress.org/export/1.2/">2004-08-30 13:03:02</wp:post_date>
  <wp:post_date_gmt xmlns:wp="http://wordpress.org/export/1.2/">2004-08-30 13:03:02</wp:post_date_gmt>
  <wp:comment_status xmlns:wp="http://wordpress.org/export/1.2/">open</wp:comment_status>
  <wp:ping_status xmlns:wp="http://wordpress.org/export/1.2/">open</wp:ping_status>
  <wp:post_name xmlns:wp="http://wordpress.org/export/1.2/">zooming-in-from-high-levels-of-abstraction</wp:post_name>
  <wp:status xmlns:wp="http://wordpress.org/export/1.2/">publish</wp:status>
  <wp:post_parent xmlns:wp="http://wordpress.org/export/1.2/">0</wp:post_parent>
  <wp:menu_order xmlns:wp="http://wordpress.org/export/1.2/">0</wp:menu_order>
  <wp:post_type xmlns:wp="http://wordpress.org/export/1.2/">post</wp:post_type>
  <wp:post_password xmlns:wp="http://wordpress.org/export/1.2/"></wp:post_password>
  <wp:is_sticky xmlns:wp="http://wordpress.org/export/1.2/">0</wp:is_sticky>
  <category domain="category" nicename="architecture"><![CDATA[Architecture]]></category>
  <category domain="post_tag" nicename="modelling"><![CDATA[Modelling]]></category>
  <wp:postmeta xmlns:wp="http://wordpress.org/export/1.2/">
    <wp:meta_key>dasblog_entryid</wp:meta_key>
    <wp:meta_value><![CDATA[7cd9ce89-49cb-49ff-93c5-35abca2b1c68]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta xmlns:wp="http://wordpress.org/export/1.2/">
    <wp:meta_key>dasblog_compressedtitle</wp:meta_key>
    <wp:meta_value><![CDATA[Zooming+In+From+High+Levels+Of+Abstraction]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta xmlns:wp="http://wordpress.org/export/1.2/">
    <wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
    <wp:meta_value><![CDATA[2004/08/30/Zooming+In+From+High+Levels+Of+Abstraction]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment xmlns:wp="http://wordpress.org/export/1.2/">
    <wp:comment_id>2674</wp:comment_id>
    <wp:comment_author><![CDATA[小说]]></wp:comment_author>
    <wp:comment_author_email>icebluewxl@163.com</wp:comment_author_email>
    <wp:comment_author_url>http://www.novelsky.com</wp:comment_author_url>
    <wp:comment_author_IP></wp:comment_author_IP>
    <wp:comment_date>2004-09-02 20:18:40</wp:comment_date>
    <wp:comment_date_gmt>2004-09-03 03:18:40</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[I think that you know ERP system in different field is different. ]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
  </wp:comment>
</item>