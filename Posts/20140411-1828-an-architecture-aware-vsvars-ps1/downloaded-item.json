{"status":"ok","post":{"id":2081,"type":"post","slug":"an-architecture-aware-vsvars-ps1","url":"http:\/\/devhawk.net\/2014\/04\/11\/an-architecture-aware-vsvars-ps1\/","status":"publish","title":"An Architecture Aware VsVars.ps1","title_plain":"An Architecture Aware VsVars.ps1","content":"<p>Like many in the Microsoft dev community, I&#8217;m a heavy user of <a href=\"http:\/\/www.visualstudio.com\">Visual Studio<\/a> and <a href=\"http:\/\/microsoft.com\/powershell\">Powershell<\/a>. And so, of course, I&#8217;ve been a heavy\u00a0user <a href=\"http:\/\/www.tavaresstudios.com\/Blog\/post\/The-last-vsvars32ps1-Ill-ever-need.aspx\">Chris Tavares&#8217; vsvars32.ps1 script<\/a>. However, recently I needed the ability to specify my desired processor architecture when setting up a VS command line session. Unfortunately, Chris&#8217;s script\u00a0wraps\u00a0vsvars32.bat\u00a0which only supports generating 32-bit apps. Luckily, VC++ includes a vcvarsall.bat script that let&#8217;s you specify processor architecture. So I updated my local copy of <a href=\"http:\/\/1drv.ms\/1kf8g9I\">vsvars.ps1\u00a0<\/a>to use vcvarsall.bat under the hood and added an -x64 switch to enable setting up a 64-bit command line environment. Vcvarsall.bat supports a <a href=\"http:\/\/msdn.microsoft.com\/en-us\/library\/x4d2c09s.aspx\">variety of additional options<\/a>, but 64-bit support is all I needed so that&#8217;s all I added. I didn&#8217;t change the name of the script because there&#8217;s WAY too much muscle memory associated with typing &#8220;vsvars&#8221; to bother changing that now.<\/p>\n<p>If you want it, you can get my architecture aware version of vsvars.ps1 from my OneDrive here: <a href=\"http:\/\/1drv.ms\/1kf8g9I\">http:\/\/1drv.ms\/1kf8g9I<\/a>.<\/p>\n","excerpt":"<p>Like many in the Microsoft dev community, I&#8217;m a heavy user of Visual Studio and Powershell. And so, of course, I&#8217;ve been a heavy\u00a0user Chris Tavares&#8217; vsvars32.ps1 script. However, recently I needed the ability to specify my desired processor architecture when setting up a VS command line session. Unfortunately, Chris&#8217;s script\u00a0wraps\u00a0vsvars32.bat\u00a0which only supports generating 32-bit [&hellip;]<\/p>\n","date":"2014-04-11 18:28:55","modified":"2014-04-11 18:29:50","categories":[{"id":204,"slug":"development","title":"Development","description":"","parent":0,"post_count":165}],"tags":[{"id":376,"slug":"command-line","title":"command line","description":"","post_count":1},{"id":230,"slug":"powershell","title":"PowerShell","description":"","post_count":41},{"id":187,"slug":"visual-studio","title":"Visual Studio","description":"","post_count":21},{"id":377,"slug":"vsvars","title":"vsvars","description":"","post_count":1}],"author":{"id":1,"slug":"admin","name":"DevHawk","first_name":"Harry","last_name":"Pierson","nickname":"DevHawk","url":"","description":""},"comments":[],"attachments":[],"comment_count":1,"comment_status":"closed","custom_fields":{"layout_key":[""],"post_slider_check_key":["0"]}},"previous_url":"http:\/\/devhawk.net\/2014\/04\/11\/brokered-component-wake-on-callback-demo-video\/","next_url":"http:\/\/devhawk.net\/2014\/04\/25\/brokered-winrt-components-step-by-step\/"}