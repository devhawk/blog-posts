{"status":"ok","post":{"id":823,"type":"post","slug":"custom-authentication-with-wcf-is-top-shelf","url":"http:\/\/devhawk.net\/2006\/10\/27\/custom-authentication-with-wcf-is-top-shelf\/","status":"publish","title":"Custom Authentication with WCF is Top Shelf","title_plain":"Custom Authentication with WCF is Top Shelf","content":"<p>I&#8217;ve spent the last three days heads down in WCF security and color me massively impressed. I just checked in a prototype that provides customized authentication for a business service. The idea that you could bang up a custom authentication service fairly easily blows my mind.<\/p>\n<p>The cornerstone to this support in WCF is the standard <a href=\"http:\/\/windowssdk.msdn.microsoft.com\/en-us\/library\/system.servicemodel.wsfederationhttpbinding.aspx\">WSFederationHttpBinding<\/a>. While the binding name implies support for <a href=\"http:\/\/msdn.microsoft.com\/library\/en-us\/dnglobspec\/html\/ws-federation.asp\">WS-Federation<\/a>\u00a0which in turn implies the use of infrastructure like <a href=\"http:\/\/www.microsoft.com\/WindowsServer2003\/R2\/Identity_Management\/ADFSwhitepaper.mspx\">Active Directory Federation Services<\/a>, the binding also scales down to support simple federation scenarios with a single Security Token Service (aka STS) as defined by <a href=\"http:\/\/msdn.microsoft.com\/library\/en-us\/dnglobspec\/html\/WS-trust.pdf\">WS-Trust<\/a>. WS-Trust appears similar to <a href=\"http:\/\/web.mit.edu\/kerberos\/\">Kerberos<\/a>. If you want to access a service using the federation binding, you first obtain a security token from the associated STS. Tokens contain <a href=\"http:\/\/en.wikipedia.org\/wiki\/SAML\">SAML<\/a> assertions, which can be standard &#8211; such as Name and Windows SID &#8211; or entirely custom, which opens up very interesting and flexible security scenarios.\n<\/p>\n<p>If you want to support multiple authentication systems (windows, certificates, <a href=\"http:\/\/cardspace.netfx3.com\/\">CardSpace<\/a>, <strike>Passport<\/strike><a href=\"http:\/\/dev.live.com\/liveid\/\">Windows Live ID<\/a>, etc), STS is perfect because you can centralize the multiple authentication schemes at the STS, which then hands out a standard token the business service understands. Adding a new auth scheme can happen centrally at the STS rather than in each and every service. Support for multiple authentication schemes was the focus of our current prototype and it worked extremely well.\n<\/p>\n<p>WCF includes a <a href=\"http:\/\/windowssdk.msdn.microsoft.com\/en-us\/library\/aa355045.aspx\">federation sample<\/a> which is where you should start if you&#8217;re interested in this stuff. That scenario includes a chain of two STS&#8217;s. Accessing the secure bookstore service requires authenticating against the bookstore STS which in turn requires authenticating against a generic &#8220;HomeRealm&#8221; STS. Since there are two STS&#8217;s, they factored the common STS code into a shared assembly. You can use that common code to build an STS of your own.\n<\/p>\n<p>For our prototype, we made only minor changes to the common STS code from the sample. In fact, the only significant change we made was to support programmatic selection of the proof key encryption token. In the sample, both the issuer token and the proof key encryption token are hard coded (passed into the base class constructor). The issuer token is used to sign the custom security token so the target service knows it came from the STS. The encryption token is used to &#8211; you guessed it &#8211; encrypt the token so it can only be used by the target service. Hard-coding the encryption token means you can only use your STS with a single target service. We changed that so the encryption token can be chosen based on the incoming service token request.\n<\/p>\n<p>Of course, it wasn&#8217;t all puppy dogs and ice cream. While I like the config system of WCF, anyone who calls it &#8220;easy&#8221; is full of it. I&#8217;ve spend most of the last three days looking at config files. Funny thing about config files is that they&#8217;re hard to debug. So most of my effort over the last few days has been in a cycle of run app \/ app throws exception \/ tweak config \/ repeat. Ugh.\n<\/p>\n<p>Also, while the federation sample is comprehensive, I wonder why this functionality isn&#8217;t in the based WCF platform.\u00a0For example, the sample includes implementations of RequestSecurityToken and RequestSecurityTokenResponse, the input and output messages of the STS. But I realized that WCF has to have its own implementations of RST and RSTR as well, since it has to send the RST to the STS and process the RSTR it gets in response. A little <a href=\"http:\/\/www.aisto.com\/roeder\/dotnet\/\">spelunking<\/a> revealed the presence of an official WCF implementation of RST and RSTR, both marked internal. I normally fall on the pragmatic side of the <a href=\"http:\/\/www.hanselman.com\/blog\/IsThereAGoodReasonToMarkAClassPublic.aspx\">internal\/public debate<\/a>, but this one makes little sense to me.\n<\/p>\n<p>Otherwise, the prototype went smooth as silk and my project teammates were very impressed at how quickly this came together. Several of the project teams we&#8217;re working with have identified multiple authentication as the &#8220;killer&#8221; capability they&#8217;re looking to us to provide, so it&#8217;s good to know we&#8217;re making progress in the right direction. <\/p>\n","excerpt":"<p>I&#8217;ve spent the last three days heads down in WCF security and color me massively impressed. I just checked in a prototype that provides customized authentication for a business service. The idea that you could bang up a custom authentication service fairly easily blows my mind. The cornerstone to this support in WCF is the [&hellip;]<\/p>\n","date":"2006-10-27 14:20:30","modified":"2006-10-27 14:20:30","categories":[],"tags":[{"id":182,"slug":"security","title":"Security","description":"","post_count":3},{"id":313,"slug":"wcf","title":"WCF","description":"","post_count":31}],"author":{"id":1,"slug":"admin","name":"DevHawk","first_name":"Harry","last_name":"Pierson","nickname":"DevHawk","url":"","description":""},"comments":[],"attachments":[],"comment_count":0,"comment_status":"closed","custom_fields":{"dasblog_entryid":["a0566855-4b27-46cb-b90b-99155d7a5d35"],"dasblog_compressedtitle":["Custom+Authentication+With+WCF+Is+Top+Shelf"],"dasblog_compressedtitleunique":["2006\/10\/27\/Custom+Authentication+With+WCF+Is+Top+Shelf"]}},"previous_url":"http:\/\/devhawk.net\/2006\/10\/25\/feedflare-finally-fixed\/","next_url":"http:\/\/devhawk.net\/2006\/10\/28\/is-wcf-straightforward-for-long-running-tasks\/"}