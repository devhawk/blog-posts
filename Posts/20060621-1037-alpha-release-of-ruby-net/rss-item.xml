<?xml version="1.0" encoding="utf-8"?>
<item>
  <title>Alpha Release of Ruby.NET</title>
  <link>http://devhawk.net/2006/06/21/alpha-release-of-ruby-net/</link>
  <pubDate>Wed, 21 Jun 2006 10:37:03 +0000</pubDate>
  <dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">devhawk</dc:creator>
  <guid isPermaLink="false">http://995cb378-1049-4f6b-9b8c-4aeb598b9e3f</guid>
  <description></description>
  <content:encoded xmlns:content="http://purl.org/rss/1.0/modules/content/"><![CDATA[<p>I'm not sure what a "Preliminary Beta" is but <a href="http://www.qut.edu.au/">QIT</a> has released a one for their <a href="http://plas.fit.qut.edu.au/Ruby.NET/">Ruby.NET compiler</a>. They expect to achieve "full semantic compatibility" (can you tell this is an acidemic project?) by the end of the year. Thanks to <a href="http://www.from9till2.com/PermaLink.aspx?guid=fae70ab9-29c8-44f1-b076-46eee9f839d1">David Ing</a> for the link.</p><p>They claim to "pass all 871 tests in the samples/test.rb installation test suite of <a href="http://www.ruby-lang.org/">Ruby</a> 1.8.2." which seems odd since later they say "We have a plan for how to deal with continuations but we have not yet implemented them." Doesn't the Ruby test suite test continuations? I wish they would provide more details on this plan, continuations might not be the most interesting thing in Ruby, but it's up there and it's probably the hardest thing to implement on top of the CLR.</p><p>BTW, there are two other projects @ QIT that Ruby.NET leverages that look interesting. The <a href="http://plas.fit.qut.edu.au/gppg/">Gardens Point Parser Generator</a> is essentially a <a href="http://en.wikipedia.org/wiki/Yacc">YACC</a> clone written in C# and making extensive use of generics. Personally, I'm more interested in <a href="http://pdos.csail.mit.edu/~baford/packrat/">Parsing Expression Grammars</a>, but there's no C# implementation as of yet. QIT also has a library for <em><a href="http://plas.fit.qut.edu.au/perwapi/">reading and writing program executable files</a></em> (i.e. EXEs and DLLs). </p><p>As a quick aside, I'm getting pretty tired of all the different euphemisms for "alpha". In the age of perpetual beta, isn't alpha the new beta? But everyone seems worried about calling their releases alpha as if it means "it might not cause your machine to explode, if you could actually get it to compile". So we end up with things like "Preliminary Beta" and "Community Tech Preview". We all KNOW what these terms mean, so lets just call an alpha and alpha, shall we?</p>]]></content:encoded>
  <excerpt:encoded xmlns:excerpt="http://wordpress.org/export/1.2/excerpt/"><![CDATA[]]></excerpt:encoded>
  <wp:post_id xmlns:wp="http://wordpress.org/export/1.2/">758</wp:post_id>
  <wp:post_date xmlns:wp="http://wordpress.org/export/1.2/">2006-06-21 10:37:03</wp:post_date>
  <wp:post_date_gmt xmlns:wp="http://wordpress.org/export/1.2/">2006-06-21 10:37:03</wp:post_date_gmt>
  <wp:comment_status xmlns:wp="http://wordpress.org/export/1.2/">open</wp:comment_status>
  <wp:ping_status xmlns:wp="http://wordpress.org/export/1.2/">open</wp:ping_status>
  <wp:post_name xmlns:wp="http://wordpress.org/export/1.2/">alpha-release-of-ruby-net</wp:post_name>
  <wp:status xmlns:wp="http://wordpress.org/export/1.2/">publish</wp:status>
  <wp:post_parent xmlns:wp="http://wordpress.org/export/1.2/">0</wp:post_parent>
  <wp:menu_order xmlns:wp="http://wordpress.org/export/1.2/">0</wp:menu_order>
  <wp:post_type xmlns:wp="http://wordpress.org/export/1.2/">post</wp:post_type>
  <wp:post_password xmlns:wp="http://wordpress.org/export/1.2/"></wp:post_password>
  <wp:is_sticky xmlns:wp="http://wordpress.org/export/1.2/">0</wp:is_sticky>
  <category domain="post_tag" nicename="clr"><![CDATA[CLR]]></category>
  <category domain="category" nicename="development"><![CDATA[Development]]></category>
  <category domain="post_tag" nicename="ruby"><![CDATA[Ruby]]></category>
  <wp:postmeta xmlns:wp="http://wordpress.org/export/1.2/">
    <wp:meta_key>dasblog_entryid</wp:meta_key>
    <wp:meta_value><![CDATA[995cb378-1049-4f6b-9b8c-4aeb598b9e3f]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta xmlns:wp="http://wordpress.org/export/1.2/">
    <wp:meta_key>dasblog_compressedtitle</wp:meta_key>
    <wp:meta_value><![CDATA[Alpha+Release+Of+RubyNET]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta xmlns:wp="http://wordpress.org/export/1.2/">
    <wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
    <wp:meta_value><![CDATA[2006/06/21/Alpha+Release+Of+RubyNET]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment xmlns:wp="http://wordpress.org/export/1.2/">
    <wp:comment_id>2368</wp:comment_id>
    <wp:comment_author><![CDATA[Anonymous]]></wp:comment_author>
    <wp:comment_author_email></wp:comment_author_email>
    <wp:comment_author_url></wp:comment_author_url>
    <wp:comment_author_IP>71.241.156.86</wp:comment_author_IP>
    <wp:comment_date>2006-06-21 12:31:18</wp:comment_date>
    <wp:comment_date_gmt>2006-06-21 19:31:18</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[... can you tell this is an acidemic project?

Can you tell that this blog isn't ;)]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
  </wp:comment>
  <wp:comment xmlns:wp="http://wordpress.org/export/1.2/">
    <wp:comment_id>2369</wp:comment_id>
    <wp:comment_author><![CDATA[DevHawk]]></wp:comment_author>
    <wp:comment_author_email>harry@devhawk.net</wp:comment_author_email>
    <wp:comment_author_url></wp:comment_author_url>
    <wp:comment_author_IP>72.34.69.70</wp:comment_author_IP>
    <wp:comment_date>2006-06-21 21:22:08</wp:comment_date>
    <wp:comment_date_gmt>2006-06-22 04:22:08</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Yes. :)]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
  </wp:comment>
</item>