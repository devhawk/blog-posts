<?xml version="1.0" encoding="utf-8"?>
<item>
  <title>Updated Powershell Scripts</title>
  <link>http://devhawk.net/2009/04/29/updated-powershell-scripts/</link>
  <pubDate>Wed, 29 Apr 2009 12:25:27 +0000</pubDate>
  <dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">devhawk</dc:creator>
  <guid isPermaLink="false">http://2ca56559-8e23-46d4-bd05-3d89e3823545</guid>
  <description></description>
  <content:encoded xmlns:content="http://purl.org/rss/1.0/modules/content/"><![CDATA[For those who are interested, I just uploaded a bunch of changes to the <a href="http://cid-0d9bc809858885a4.skydrive.live.com/browse.aspx/DevHawk%20Content/Powershell">PowerShell Scripts folder</a> on my SkyDrive. Feel free to download them and use them as you need.
<ul>
	<li><a href="http://cid-0d9bc809858885a4.skydrive.live.com/self.aspx/DevHawk%20Content/Powershell/find-to-set-alias.ps1">find-to-set-alias</a> – Brad Wilson <a href="http://bradwilson.typepad.com/blog/2008/12/find-to-set-aliasps1.html">enhanced this function significantly</a> and broke it out into it’s own script. I had a small issue with his version where the folder search may only return a single value, so you can’t treat it like collection. My version wraps that command in @(…) so that you can always treat it like a collection.</li>
	<li><a href="http://cid-0d9bc809858885a4.skydrive.live.com/self.aspx/DevHawk%20Content/Powershell/find-in-path.ps1">find-in-path</a> – searches all the folders in your path for a given file name (wildcards supported. Very useful for “where is this app actually installed” kind of debugging.</li>
	<li><a href="http://cid-0d9bc809858885a4.skydrive.live.com/self.aspx/DevHawk%20Content/Powershell/get-git-branch.ps1">get-git-branch</a> – returns the current git branch of a given folder. Got the idea for this originally from <a href="http://flanders.co.nz/2009/03/19/pimp-your-command-line-for-git/">Ivan Porto Carrero</a>.</li>
	<li><a href="http://cid-0d9bc809858885a4.skydrive.live.com/self.aspx/DevHawk%20Content/Powershell/prompt.ps1">prompt</a> – my powershell prompt. Pretty basic, but it now shows current git branch.</li>
	<li><a href="http://cid-0d9bc809858885a4.skydrive.live.com/self.aspx/DevHawk%20Content/Powershell/elevate-process.ps1">elevate-process</a> – create a new PowerShell window or run an app as an administrator. I alias this to su on my machine. I recently reworked the “run an app” part of this script, so it will search the current folder and then the path to run the app you specify.</li>
	<li><a href="http://cid-0d9bc809858885a4.skydrive.live.com/self.aspx/DevHawk%20Content/Powershell/%7C_profile.ps1">_profile</a> – this is my main profile script, which I share across multiple machines via Mesh. I reworked all my alias setting to use the new find-to-set-alias and moved setting the color of the command window to the top of the script.</li>
</ul>
<strong>Update</strong> – I just updated elevate-process again, adding a special clause to handle .bat and .cmd files. cmd.exe seems to ignore the working directory setting, so if your batch file relies on being run from the folder it’s in, it’ll break with elevate-process. That’s annoying. So if you elevate a batch file, the script runs cmd.exe directly and executes the specified batch file after first changing to the current directory. Ugly, but it seems to work.]]></content:encoded>
  <excerpt:encoded xmlns:excerpt="http://wordpress.org/export/1.2/excerpt/"><![CDATA[]]></excerpt:encoded>
  <wp:post_id xmlns:wp="http://wordpress.org/export/1.2/">1256</wp:post_id>
  <wp:post_date xmlns:wp="http://wordpress.org/export/1.2/">2009-04-29 12:25:27</wp:post_date>
  <wp:post_date_gmt xmlns:wp="http://wordpress.org/export/1.2/">2009-04-29 12:25:27</wp:post_date_gmt>
  <wp:comment_status xmlns:wp="http://wordpress.org/export/1.2/">open</wp:comment_status>
  <wp:ping_status xmlns:wp="http://wordpress.org/export/1.2/">open</wp:ping_status>
  <wp:post_name xmlns:wp="http://wordpress.org/export/1.2/">updated-powershell-scripts</wp:post_name>
  <wp:status xmlns:wp="http://wordpress.org/export/1.2/">publish</wp:status>
  <wp:post_parent xmlns:wp="http://wordpress.org/export/1.2/">0</wp:post_parent>
  <wp:menu_order xmlns:wp="http://wordpress.org/export/1.2/">0</wp:menu_order>
  <wp:post_type xmlns:wp="http://wordpress.org/export/1.2/">post</wp:post_type>
  <wp:post_password xmlns:wp="http://wordpress.org/export/1.2/"></wp:post_password>
  <wp:is_sticky xmlns:wp="http://wordpress.org/export/1.2/">0</wp:is_sticky>
  <category domain="category" nicename="development"><![CDATA[Development]]></category>
  <category domain="post_tag" nicename="powershell"><![CDATA[PowerShell]]></category>
  <wp:postmeta xmlns:wp="http://wordpress.org/export/1.2/">
    <wp:meta_key>dasblog_entryid</wp:meta_key>
    <wp:meta_value><![CDATA[2ca56559-8e23-46d4-bd05-3d89e3823545]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta xmlns:wp="http://wordpress.org/export/1.2/">
    <wp:meta_key>dasblog_compressedtitle</wp:meta_key>
    <wp:meta_value><![CDATA[Updated+Powershell+Scripts]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta xmlns:wp="http://wordpress.org/export/1.2/">
    <wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
    <wp:meta_value><![CDATA[2009/04/29/Updated+Powershell+Scripts]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta xmlns:wp="http://wordpress.org/export/1.2/">
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment xmlns:wp="http://wordpress.org/export/1.2/">
    <wp:comment_id>2201</wp:comment_id>
    <wp:comment_author><![CDATA[David Mohundro]]></wp:comment_author>
    <wp:comment_author_email>drmohundro@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://www.mohundro.com/blog/</wp:comment_author_url>
    <wp:comment_author_IP>70.178.86.27</wp:comment_author_IP>
    <wp:comment_date>2009-05-11 15:26:14</wp:comment_date>
    <wp:comment_date_gmt>2009-05-11 22:26:14</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Nice - I like the cleanness of your usage of find-to-set-alias in your prompt. Definitely makes working with versioned folders nicer.

I'm curious, is there something your find-in-path does that the get-command cmdlet doesn't do?

Thanks for sharing!]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
  </wp:comment>
</item>