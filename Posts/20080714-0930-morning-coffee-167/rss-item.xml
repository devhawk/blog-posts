<?xml version="1.0" encoding="utf-8"?>
<item>
  <title>Morning Coffee 167</title>
  <link>http://devhawk.net/2008/07/14/morning-coffee-167/</link>
  <pubDate>Mon, 14 Jul 2008 09:30:10 +0000</pubDate>
  <dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">devhawk</dc:creator>
  <guid isPermaLink="false">http://b93bcbe5-a9e9-42c3-a64a-3db4d92526c7</guid>
  <description></description>
  <content:encoded xmlns:content="http://purl.org/rss/1.0/modules/content/"><![CDATA[<ul><li>If you're a gamer, you're probably already well aware that <a href="http://www.xbox.com/en-US/community/events/e32008/">E3 is this week</a>. The <a href="http://majornelson.com/archive/2008/07/14/demo-too-human.aspx">Too Human demo</a> has already been released. I have a friend who's been working on "something" that will be announced today (I think).  </li><li>Live Mesh folks <a href="http://blogs.msdn.com/livemesh/archive/2008/07/11/service-update-new-build-new-features-coming-today-0-9-3103-2.aspx">pushed out an update</a> Friday. Among the new features is the ability to sync folders among peers but NOT up to the cloud. This is cool because it means I can sync my many many GB of pictures and music on my home machine backed up with Carbonite. This means I can sync them without blowing thru my 5GB Mesh storage limit.  </li><li>It looks like there's a new F# drop - <a href="http://research.microsoft.com/research/downloads/Details/7ac148a7-149b-4056-aa06-1e6754efd36f/Details.aspx">1.9.4.19</a> - <strike>but as usual there is no announcement or details as to what's new. Release notes guys, look into it.</strike>  UPDATE - Don Syme <a href="http://blogs.msdn.com/dsyme/archive/2008/07/14/1-9-4-19-release.aspx">blogged the release</a>, and it's pretty minor. a .NET FX 3.5 SP1 bug fix, a fix for Mono, and they removed WebRequest.GetResponseAsync to make F# work on Silverlight. And the release notes are in the readme. My bad. </li><li>Speaking of F#, it was "partially inspired" by <a href="http://en.wikipedia.org/wiki/OCaml">OCaml</a>, so when I see papers related to OCaml, I immediately wonder if I an apply the described techniques to F#. "<a href="http://www.univ-orleans.fr/lifo/Members/David.Teller/publications/ml2008.pdf">Catch me if you can, Towards type-safe, hierarchical, lightweight, polymorphic and efﬁcient error management in OCaml</a>" is one such paper. (via <a href="http://lambda-the-ultimate.org/node/2892">LtU</a>)  </li><li>Speaking of functional programming, Matthew Podwysocki <a href="http://weblogs.asp.net/podwysocki/archive/2008/07/10/aspects-of-functional-programming-in-c-presentation-and-code.aspx">posted</a> a bunch of FP links as well as a Code Gallery Sample <a href="http://code.msdn.microsoft.com/FunctionalCSharp/">on FP in C#.</a> Good stuff.  </li><li>As <a href="http://weblogs.asp.net/scottgu/archive/2008/07/14/asp-net-mvc-preview-4-release-part-1.aspx">per Scott Guthrie</a>, it looks like there's a new ASP.NET MVC drop coming this week.  </li><li>Based on posts by <a href="http://blogs.tedneward.com/2008/07/11/So+You+Say+You+Want+To+Kill+XML.aspx">Ted Neward</a>, <a href="http://www.25hoursaday.com/weblog/2008/07/10/TheRevengeOfRPCGoogleProtocolBuffersAndFacebookThrift.aspx">Dare Obasanjo</a> and <a href="http://steve.vinoski.net/blog/2008/07/11/protocol-buffers-no-big-deal/">Steve Vinoski</a>, Google <a href="http://code.google.com/p/protobuf/">Protocol Buffers</a> sounds like it's going to be a dud. Note, I haven't looked at it depth personally, I'm just passing on opinions of some folks I read and trust.  </li><li>Speaking of Dare, both <a href="http://www.25hoursaday.com/weblog/2008/07/14/ProjectCassandraFacebooksOpenSourceAlternativeToGoogleBigTable.aspx">he</a> and <a href="http://perspectives.mvdirona.com/2008/07/12/FacebookReleasesCassandraAsOpenSource.aspx">James Hamilton</a> take a look at <a href="http://code.google.com/p/the-cassandra-project/">Cassandra</a> and come away impressed. I wonder how easy it is to code against from Python and/or .NET?  </li><li>Bart de Smet has a <a href="http://community.bartdesmet.net/blogs/bart/archive/2008/07/06/windows-powershell-through-ironruby-writing-a-custom-pshost.aspx">cool sample</a> of calling out to PowerShell from IronRuby via the backtick command. Pretty cool, but it would even cooler to show how to call out to PS and return .NET objects to Ruby (though that would probably not be spec compliant for the backtick command).  </li><li>Here's a MS code name I had never heard before - <a href="https://connect.microsoft.com/site/sitehome.aspx?SiteID=642">Zermatt</a>. It's "a framework for implementing claims-based identity in your applications." (via <a href="http://stevegilham.blogspot.com/2008/07/links-for-14-jul.html">Steve Gilham</a>)</li></ul>]]></content:encoded>
  <excerpt:encoded xmlns:excerpt="http://wordpress.org/export/1.2/excerpt/"><![CDATA[]]></excerpt:encoded>
  <wp:post_id xmlns:wp="http://wordpress.org/export/1.2/">1151</wp:post_id>
  <wp:post_date xmlns:wp="http://wordpress.org/export/1.2/">2008-07-14 09:30:10</wp:post_date>
  <wp:post_date_gmt xmlns:wp="http://wordpress.org/export/1.2/">2008-07-14 09:30:10</wp:post_date_gmt>
  <wp:comment_status xmlns:wp="http://wordpress.org/export/1.2/">open</wp:comment_status>
  <wp:ping_status xmlns:wp="http://wordpress.org/export/1.2/">open</wp:ping_status>
  <wp:post_name xmlns:wp="http://wordpress.org/export/1.2/">morning-coffee-167</wp:post_name>
  <wp:status xmlns:wp="http://wordpress.org/export/1.2/">publish</wp:status>
  <wp:post_parent xmlns:wp="http://wordpress.org/export/1.2/">0</wp:post_parent>
  <wp:menu_order xmlns:wp="http://wordpress.org/export/1.2/">0</wp:menu_order>
  <wp:post_type xmlns:wp="http://wordpress.org/export/1.2/">post</wp:post_type>
  <wp:post_password xmlns:wp="http://wordpress.org/export/1.2/"></wp:post_password>
  <wp:is_sticky xmlns:wp="http://wordpress.org/export/1.2/">0</wp:is_sticky>
  <category domain="post_tag" nicename="asp-net"><![CDATA[ASP.NET]]></category>
  <category domain="post_tag" nicename="f-sharp"><![CDATA[F#]]></category>
  <category domain="post_tag" nicename="functional-programming"><![CDATA[Functional Programming]]></category>
  <category domain="post_tag" nicename="ironruby"><![CDATA[IronRuby]]></category>
  <category domain="category" nicename="morning-coffee"><![CDATA[Morning Coffee]]></category>
  <category domain="post_tag" nicename="powershell"><![CDATA[PowerShell]]></category>
  <category domain="post_tag" nicename="windows-live"><![CDATA[Windows Live]]></category>
  <category domain="post_tag" nicename="xbox-360"><![CDATA[Xbox 360]]></category>
  <wp:postmeta xmlns:wp="http://wordpress.org/export/1.2/">
    <wp:meta_key>dasblog_entryid</wp:meta_key>
    <wp:meta_value><![CDATA[b93bcbe5-a9e9-42c3-a64a-3db4d92526c7]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta xmlns:wp="http://wordpress.org/export/1.2/">
    <wp:meta_key>dasblog_compressedtitle</wp:meta_key>
    <wp:meta_value><![CDATA[Morning+Coffee+167]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta xmlns:wp="http://wordpress.org/export/1.2/">
    <wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
    <wp:meta_value><![CDATA[2008/07/14/Morning+Coffee+167]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment xmlns:wp="http://wordpress.org/export/1.2/">
    <wp:comment_id>2082</wp:comment_id>
    <wp:comment_author><![CDATA[Michael Foord]]></wp:comment_author>
    <wp:comment_author_email>fuzzyman@voidspace.org.uk</wp:comment_author_email>
    <wp:comment_author_url>http://www.ironpythoninaction.com/</wp:comment_author_url>
    <wp:comment_author_IP>87.194.212.65</wp:comment_author_IP>
    <wp:comment_date>2008-07-14 09:37:22</wp:comment_date>
    <wp:comment_date_gmt>2008-07-14 16:37:22</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[As Powershell is all implemented as .NET assemblies (surprise!) calling into Powershell from IronPython is quite easy. There are examples of it (and embedding IronPython in Powershell) in IronPython in Action.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
  </wp:comment>
  <wp:comment xmlns:wp="http://wordpress.org/export/1.2/">
    <wp:comment_id>2083</wp:comment_id>
    <wp:comment_author><![CDATA[DevHawk]]></wp:comment_author>
    <wp:comment_author_email>harry@devhawk.net</wp:comment_author_email>
    <wp:comment_author_url></wp:comment_author_url>
    <wp:comment_author_IP>98.203.236.114</wp:comment_author_IP>
    <wp:comment_date>2008-07-15 21:54:33</wp:comment_date>
    <wp:comment_date_gmt>2008-07-16 04:54:33</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Looking forward to it Michael!]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
  </wp:comment>
</item>