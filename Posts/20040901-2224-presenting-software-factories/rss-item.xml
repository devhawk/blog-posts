<?xml version="1.0" encoding="utf-8"?>
<item>
  <title>Presenting Software Factories</title>
  <link>http://devhawk.net/2004/09/01/presenting-software-factories/</link>
  <pubDate>Wed, 01 Sep 2004 22:24:17 +0000</pubDate>
  <dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">devhawk</dc:creator>
  <guid isPermaLink="false">http://dce315b6-54ac-4a27-bc8b-afe4652a3339</guid>
  <description></description>
  <content:encoded xmlns:content="http://purl.org/rss/1.0/modules/content/"><![CDATA[<p align="left">I presented <a href="http://msdn.microsoft.com/architecture/overview/softwarefactories/">Software Factories</a> for the first time today and I think I did a pretty good job. We had some architects were in town from a new managed SI partner and they wanted to discuss modeling. They are (were?) an IBM partner, so they're a big WebSphere shop. They're also XDE users, so I laid out the Software Factories concept as well as the <a href="http://msdn.microsoft.com/msdnmag/issues/04/07/whitehorse/default.aspx">modeling tools that are coming in VS2005</a>. They seemed pretty impressed. Of course, they're having what I expect is a typical experience with UML tools - they use XDE for documentation and communication only (i.e. <a href="http://www.martinfowler.com/bliki/UmlAsSketch.html">UmlAsSketch</a>). They don't even try to generate code from the models anymore. </p><p>To help explain the Factories concept, I used Steve Maine's <a href="http://hyperthink.net/blog/PermaLink,guid,6a264d60-3652-4662-bfff-77bdc3ebf2b2.aspx">Efficiency/Precision/Generality modeling approach</a> (and gave him credit for it, of course. Steve, I will find a way to properly thank you for that brain.save) as well as my own ideas about <a href="http://devhawk.net/PermaLink.aspx?guid=beb13ac1-f5a0-42e0-9670-f6843601d33e">VB as a Software Factory</a>. Both worked out very well to help communicate the goals of the Factories approach, though I could refine the delivery quite a bit. I also talked about the <a href="http://st-www.cs.uiuc.edu/users/droberts/evolve.html">Evolving Frameworks Pattern Language</a>, which Jack outlines in the <a href="http://msdn.microsoft.com/architecture/overview/softwarefactories/default.aspx?pull=/library/en-us/dnmaj/html/aj3softfac.asp">JOURNAL factories article</a> this way:</p><blockquote><ul><li>After developing a number of systems in a given problem domain, we identify a set of reusable abstractions for that domain, and then we document a set of patterns for using those abstractions.</li><li>We then develop a runtime, such as a framework or server, to codify the abstractions and patterns. This lets us build systems in the domain by instantiating, adapting, configuring, and assembling components defined by the runtime. </li><li>We then define a language and build tools that support the language, such as editors, compilers, and debuggers, to automate the assembly process. This helps us respond faster to changing requirements, since part of the implementation is generated, and can be easily changed.</li></ul></blockquote><p>The problem is that each of these steps is much much harder than the preceding ones. Identifying problem domain abstractions &amp; patterns is something that most organizations are already doing, even if they don't do it explicitly today. Codifying those abstractions in a reusable framework is much harder, primarily because it's hard to think through all the usage variations a framework may experience. Still, many companies have the skills to develop reusable frameworks. However few companies have the language and tool development experience to make investing in custom tools cost effective. For example, even though <a href="http://www.eaipatterns.com/gregor.html">Gregor</a> and Bobby have defined a <a href="http://www.eaipatterns.com/Introduction.html">language</a> for <a href="http://www.eaipatterns.com/">integration patterns</a>, the only tooling available is a <a href="http://www.eaipatterns.com/downloads.html">Visio stencil</a>. </p><p>For Software Factories to work, we need to make it much easier to build domain specific languages and modeling environments. This is one of the big hurdles to adopting the factories approach today.</p>]]></content:encoded>
  <excerpt:encoded xmlns:excerpt="http://wordpress.org/export/1.2/excerpt/"><![CDATA[]]></excerpt:encoded>
  <wp:post_id xmlns:wp="http://wordpress.org/export/1.2/">429</wp:post_id>
  <wp:post_date xmlns:wp="http://wordpress.org/export/1.2/">2004-09-01 22:24:17</wp:post_date>
  <wp:post_date_gmt xmlns:wp="http://wordpress.org/export/1.2/">2004-09-01 22:24:17</wp:post_date_gmt>
  <wp:comment_status xmlns:wp="http://wordpress.org/export/1.2/">open</wp:comment_status>
  <wp:ping_status xmlns:wp="http://wordpress.org/export/1.2/">open</wp:ping_status>
  <wp:post_name xmlns:wp="http://wordpress.org/export/1.2/">presenting-software-factories</wp:post_name>
  <wp:status xmlns:wp="http://wordpress.org/export/1.2/">publish</wp:status>
  <wp:post_parent xmlns:wp="http://wordpress.org/export/1.2/">0</wp:post_parent>
  <wp:menu_order xmlns:wp="http://wordpress.org/export/1.2/">0</wp:menu_order>
  <wp:post_type xmlns:wp="http://wordpress.org/export/1.2/">post</wp:post_type>
  <wp:post_password xmlns:wp="http://wordpress.org/export/1.2/"></wp:post_password>
  <wp:is_sticky xmlns:wp="http://wordpress.org/export/1.2/">0</wp:is_sticky>
  <category domain="category" nicename="architecture"><![CDATA[Architecture]]></category>
  <category domain="post_tag" nicename="modelling"><![CDATA[Modelling]]></category>
  <wp:postmeta xmlns:wp="http://wordpress.org/export/1.2/">
    <wp:meta_key>dasblog_entryid</wp:meta_key>
    <wp:meta_value><![CDATA[dce315b6-54ac-4a27-bc8b-afe4652a3339]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta xmlns:wp="http://wordpress.org/export/1.2/">
    <wp:meta_key>dasblog_compressedtitle</wp:meta_key>
    <wp:meta_value><![CDATA[Presenting+Software+Factories]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta xmlns:wp="http://wordpress.org/export/1.2/">
    <wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
    <wp:meta_value><![CDATA[2004/09/02/Presenting+Software+Factories]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment xmlns:wp="http://wordpress.org/export/1.2/">
    <wp:comment_id>2675</wp:comment_id>
    <wp:comment_author><![CDATA[小说]]></wp:comment_author>
    <wp:comment_author_email>icebluewxl@163.com</wp:comment_author_email>
    <wp:comment_author_url>http://www.novelsky.com</wp:comment_author_url>
    <wp:comment_author_IP></wp:comment_author_IP>
    <wp:comment_date>2004-09-02 20:21:41</wp:comment_date>
    <wp:comment_date_gmt>2004-09-03 03:21:41</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Each of these steps is much much harder than the preceding ones.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
  </wp:comment>
</item>