<?xml version="1.0" encoding="utf-8"?>
<item>
  <title>LINQ + WAP == Coolness</title>
  <link>http://devhawk.net/2006/04/06/linq-wap-coolness/</link>
  <pubDate>Thu, 06 Apr 2006 17:48:43 +0000</pubDate>
  <dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">devhawk</dc:creator>
  <guid isPermaLink="false">http://495490e7-335d-4eed-8f03-6b4512fe9601</guid>
  <description></description>
  <content:encoded xmlns:content="http://purl.org/rss/1.0/modules/content/"><![CDATA[I never really missed <a href="http://msdn.microsoft.com/asp.net/reference/infrastructure/wap/default.aspx">Web Application Project</a> support in VS05 until I realized what I could do with it. I've been experimenting with LINQ and wanted to be able to use it in a web application I'm prototyping. Under the file system model, there's no easy way to change the compiler used for dynamic compilation of web pages. With WAP, it's no problem.

If you've got both WAP and LINQ installed, you can enable LINQ support in your web apps by doing the folllowing.
<ol>
	<li>Open your WebApp.csproj file in notepad.</li>
	<li>Add references to System.Query, System.Data.DLinq and System.Xml.XLinq.</li>
	<li>Change the Target Import element to import "$(ProgramFiles)LINQ PreviewMiscLinq.targets" instead of "$(MSBuildBinPath)Microsoft.CSharp.targets"</li>
</ol>
That's it! Seems simple, but it let me bind a GridView to the following function:

&nbsp;
<pre class="brush:csharp">public static IEnumerable GetTitles()
{
  var con = new SqlConnection(Properties.Settings.Default.PubsConString);
  var db = new Pubs(con);
  var q = from t in db.Titles select t;

  return q;
}</pre>
&nbsp;

It would be even cooler if I could simply write that query in the conext of the ObjectDataSource, but of course ObjectDataSource doesn't know about LINQ. I imagine a LinqDataSource would be a logical next step.]]></content:encoded>
  <excerpt:encoded xmlns:excerpt="http://wordpress.org/export/1.2/excerpt/"><![CDATA[]]></excerpt:encoded>
  <wp:post_id xmlns:wp="http://wordpress.org/export/1.2/">733</wp:post_id>
  <wp:post_date xmlns:wp="http://wordpress.org/export/1.2/">2006-04-06 17:48:43</wp:post_date>
  <wp:post_date_gmt xmlns:wp="http://wordpress.org/export/1.2/">2006-04-06 17:48:43</wp:post_date_gmt>
  <wp:comment_status xmlns:wp="http://wordpress.org/export/1.2/">open</wp:comment_status>
  <wp:ping_status xmlns:wp="http://wordpress.org/export/1.2/">open</wp:ping_status>
  <wp:post_name xmlns:wp="http://wordpress.org/export/1.2/">linq-wap-coolness</wp:post_name>
  <wp:status xmlns:wp="http://wordpress.org/export/1.2/">publish</wp:status>
  <wp:post_parent xmlns:wp="http://wordpress.org/export/1.2/">0</wp:post_parent>
  <wp:menu_order xmlns:wp="http://wordpress.org/export/1.2/">0</wp:menu_order>
  <wp:post_type xmlns:wp="http://wordpress.org/export/1.2/">post</wp:post_type>
  <wp:post_password xmlns:wp="http://wordpress.org/export/1.2/"></wp:post_password>
  <wp:is_sticky xmlns:wp="http://wordpress.org/export/1.2/">0</wp:is_sticky>
  <category domain="category" nicename="development"><![CDATA[Development]]></category>
  <category domain="post_tag" nicename="linq"><![CDATA[LINQ]]></category>
  <wp:postmeta xmlns:wp="http://wordpress.org/export/1.2/">
    <wp:meta_key>dasblog_entryid</wp:meta_key>
    <wp:meta_value><![CDATA[495490e7-335d-4eed-8f03-6b4512fe9601]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta xmlns:wp="http://wordpress.org/export/1.2/">
    <wp:meta_key>dasblog_compressedtitle</wp:meta_key>
    <wp:meta_value><![CDATA[LINQ+WAP+Coolness]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta xmlns:wp="http://wordpress.org/export/1.2/">
    <wp:meta_key>dasblog_compressedtitleunique</wp:meta_key>
    <wp:meta_value><![CDATA[2006/04/07/LINQ+WAP+Coolness]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta xmlns:wp="http://wordpress.org/export/1.2/">
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment xmlns:wp="http://wordpress.org/export/1.2/">
    <wp:comment_id>2347</wp:comment_id>
    <wp:comment_author><![CDATA[Steve Eichert]]></wp:comment_author>
    <wp:comment_author_email>steve.eichert@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://steve.emxsoftware.com/</wp:comment_author_url>
    <wp:comment_author_IP>198.139.157.254</wp:comment_author_IP>
    <wp:comment_date>2006-04-07 05:32:51</wp:comment_date>
    <wp:comment_date_gmt>2006-04-07 12:32:51</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Have you seen Andres post on DLinq ASP.NET Build providers [1]?  He had some issues with creating an object data source because of some limitations in ASP.NET's support for generics but it sounds like he's doing some interesting stuff.

http://weblogs.asp.net/aaguiar/archive/2005/12/14/433143.aspx]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
  </wp:comment>
</item>