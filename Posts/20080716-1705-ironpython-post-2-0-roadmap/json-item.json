{"status":"ok","post":{"id":1154,"type":"post","slug":"ironpython-post-2-0-roadmap","url":"http:\/\/devhawk.net\/2008\/07\/16\/ironpython-post-2-0-roadmap\/","status":"publish","title":"IronPython Post 2.0 Roadmap","title_plain":"IronPython Post 2.0 Roadmap","content":"<p><a href=\"http:\/\/www.voidspace.org.uk\/python\/weblog\/index.shtml\">Michael Foord<\/a> (aka voidspace) <a href=\"http:\/\/twitter.com\/voidspace\/statuses\/855791807\">twittered<\/a> that &#8220;None of the IronPython team can get it together to blog regularly, except @<a href=\"http:\/\/twitter.com\/jschementi\">jschementi<\/a> of course.&#8221; While I&#8217;m not sure <a href=\"http:\/\/blog.jimmy.schementi.com\/\">Jimmy<\/a> is all that prolific either, Michael&#8217;s certainly right about me. I started this job at the beginning of April, and I&#8217;ve only blogged twenty one times in the three and a half months since. Worse, I&#8217;ve only blogged <em>six <\/em>times in the past month and a half &#8211; and half of those have been since Michael called out my lack o&#8217; posting. My wife has blogged like <em>twenty five <\/em>times in that same time period. I can only plead pressures of a new job plus a two week vacation. I have been <a href=\"http:\/\/twitter.com\/devhawk\">twittering a lot<\/a>. <\/p>\n<p>Michael was twittering in response to Todd Ogasawara&#8217;s <a href=\"http:\/\/www.oreillynet.com\/onlamp\/blog\/2008\/07\/ironpython_20_beta_3_and_pytho.html\">post<\/a> wondering about our Python 3.0 plans. Since we haven&#8217;t been particularly transparent (my fault) I thought I&#8217;d lay out our near and middle term plans.<\/p>\n<p>First off, we&#8217;re on the verge of releasing 1.1.2 (the <a href=\"http:\/\/www.codeplex.com\/Release\/ProjectReleases.aspx?ProjectName=IronPython&amp;ReleaseId=15198\">release candidate<\/a> is available now), a service release in our 1.x branch which contains a bunch of bug fixes we&#8217;ve back ported from our 2.0 work. This is our last planned release in the 1.x branch. For those who don&#8217;t know, our 1.x branch tracks <a href=\"http:\/\/www.python.org\/download\/releases\/2.4\/\">CPython&#8217;s 2.4 branch<\/a>. <\/p>\n<p>Most of our team&#8217;s focus has been on 2.0 which we&#8217;re on track to shipping later this year. Our 2.0 corresponds to <a href=\"http:\/\/www.python.org\/download\/releases\/2.5\">CPython&#8217;s 2.5 branch<\/a>. It&#8217;s a major release for us because of the addition of the <a href=\"http:\/\/blogs.msdn.com\/hugunin\/archive\/2007\/04\/30\/a-dynamic-language-runtime-dlr.aspx\">Dynamic Language Runtime<\/a>. Currently, you can get <a href=\"http:\/\/www.codeplex.com\/IronPython\/Release\/ProjectReleases.aspx?ReleaseId=12988\">2.0 Beta 3<\/a>, with Beta 4 scheduled for early August (we go about 6 weeks between beta releases). If you want even fresher code than our latest release, you can pull and build <a href=\"http:\/\/www.codeplex.com\/IronPython\/SourceControl\/ListDownloadableCommits.aspx\">the source<\/a> yourself. We went about two months without pushing source due to some broken scripts, but they&#8217;re fixed now so we&#8217;re going to try and push out code much more often than we have in the past.<\/p>\n<p>For the non-Python geeks in the audience, Python is undergoing a major change. <a href=\"http:\/\/www.python.org\/dev\/peps\/pep-3000\/\">Python 3.0<\/a> is going to break backwards compatibility with Python 2.x in <a href=\"http:\/\/www.python.org\/dev\/peps\/pep-3100\/\">number of ways<\/a>. Breaking backwards compatibility always has to be handled carefully, so the Python community is investing quite a bit of effort to make the transition as smooth as possible.The Python Software Foundation is currently working on both <a href=\"http:\/\/www.python.org\/download\/releases\/2.6\/\">2.6<\/a> and <a href=\"http:\/\/www.python.org\/download\/releases\/3.0\/\">3.0<\/a> simultaneously. The idea is to have as much feature parity between the two releases (except for the stuff being removed from 3.0) and to provide an <a href=\"http:\/\/svn.python.org\/view\/sandbox\/trunk\/2to3\/\">automatic tool<\/a> to translating to the new version.<\/p>\n<p>Let me be very clear (since as Todd discovered, we haven&#8217;t been to date) that once we get IronPython 2.0 out the door, we will start working towards IronPython 3.0, which will be our version of Python 3.0. We want to take the same stepping-stone approach that CPython is taking. So that means <em>at a minimum<\/em> we&#8217;ll do an IPy 2.1 with CPython 2.6&#8242;s <a href=\"http:\/\/docs.python.org\/dev\/whatsnew\/2.6.html\">new language and library features<\/a>, (along with the usual bug fixing and other quality improvements we do every cycle) before then proceeding to work on IPy 3.0. <\/p>\n<p>Until we get IPy 2.0 out the door, I&#8217;m not willing to talk about specific timelines. We&#8217;re an agile project and we&#8217;re going to be feature and quality driven, full stop. There were about seven months between the release of IPy 1.0 and 1.1, however that didn&#8217;t include much new Python feature work so it&#8217;s not a good comparison IMO. My gut tells me the IPy 2.1 release will take longer than a typical minor release while the IPy 3.0 release won&#8217;t take as long as a typical major release. Note, those are <em><u>guesses<\/u><\/em>, not <em><u>commitments<\/u><\/em>. <\/p>\n<p>Besides IPy 2.1 and 3.0, the other major thing we&#8217;re working on is Visual Studio integration for IronPython. Yes, there is <a href=\"http:\/\/codeplex.com\/IronPythonStudio\">IronPythonStudio<\/a>, but that&#8217;s a VS SDK sample not a production-quality VS integration the IPy team maintains or supports. The IntelliSense implementation is pretty flaky, the compile-oriented project system feels pretty un-pythonic and of course we need to upgrade it to support IPy 2.0 and the DLR (it would be nice if IronRuby could leverage our efforts down the road). Like everything else we do in this group, we&#8217;ll be publishing the VS Integration source code up on CodePlex as early and often as we can. <\/p>\n<p>So to recap our current thinking:<\/p>\n<ul>\n<li>IPy 1.1.2 in RC now, shipping in several weeks assuming we don&#8217;t find any major regressions  <\/li>\n<li>IPy 2.0 in beta now, shipping later this year  <\/li>\n<li>IPy 2.1 supporting new CPy 2.6 features at some point after IPy 2.1, probably longer than a typical minor release <\/li>\n<li>First release of IPy integration with VS in the same timeframe as IPy 2.1 but with alpha drops as soon as we can\u00a0 <\/li>\n<li>IPy 3.0 supporting new CPy 3.0 after IPy 2.1, probably shorter than a typical major release<\/li>\n<\/ul>\n<p>One last thing, as many of you know the IronRuby project supports <a href=\"http:\/\/www.ironruby.com\/Frequently_Asked_Questions\/How_do_I_contribute_modifications_I've_made_to_the_code%3f\">community contributions<\/a> to the standard libraries. I wanted the IPy community to know I&#8217;m 100% committed for establishing a similar arrangement for IronPython. I&#8217;ve got nothing to announce yet, but rest assured I&#8217;ve been spending a lot of time talking to lawyers. <\/p>\n<p>As always, if you&#8217;ve got opinions to share please feel free to leave me comments below, <a href=\"mailto:harry.pierson@microsoft.com\">shoot me an email<\/a>, or join the <a href=\"http:\/\/lists.ironpython.com\/listinfo.cgi\/users-ironpython.com\">IPy mailing list<\/a>.<\/p>\n","excerpt":"<p>Michael Foord (aka voidspace) twittered that &#8220;None of the IronPython team can get it together to blog regularly, except @jschementi of course.&#8221; While I&#8217;m not sure Jimmy is all that prolific either, Michael&#8217;s certainly right about me. I started this job at the beginning of April, and I&#8217;ve only blogged twenty one times in the [&hellip;]<\/p>\n","date":"2008-07-16 17:05:43","modified":"2008-07-16 17:05:43","categories":[{"id":252,"slug":"ironpython","title":"IronPython","description":"","parent":0,"post_count":99}],"tags":[],"author":{"id":1,"slug":"admin","name":"DevHawk","first_name":"Harry","last_name":"Pierson","nickname":"DevHawk","url":"","description":""},"comments":[{"id":2084,"name":"Michael Foord","url":"http:\/\/htto:\/\/www.ironpythoninaction.com","date":"2008-07-17 15:32:30","content":"<p>Hi Harry &#8211; nice blog entry. My comment on Twitter wasn&#8217;t really aimed at you &#8211; I was hoping to prod Dino, MArtin or Sri into blogging more!<\/p>\n<p>One question. When IronPython 3 is started, targeting CPython 3.0, will you actively maintain IronPython and IronPython 3 in parallel?<\/p>\n<p>This is what the Python developers will do for several years to come as it will be a long time before the majority of the community has switched over to Python 3. OF course because of the Unicode strings Python 3 is a better fit for IronPython, but for example the library support outside the standard library won&#8217;t be there for quite a long time.<\/p>\n","parent":0},{"id":2085,"name":"Michael Foord","url":"http:\/\/htto:\/\/www.ironpythoninaction.com","date":"2008-07-17 15:33:31","content":"<p>&#8220;will you actively maintain IronPython and IronPython 3 in parallel?&#8221;<\/p>\n<p>That should have read &#8220;will you actively maintain IronPython 2 and IronPython 3 in parallel?&#8221;.<\/p>\n<p>Sorry&#8230;<\/p>\n","parent":0},{"id":2086,"name":"francois","url":"http:\/\/francois.schnell.free.fr","date":"2008-07-26 06:58:02","content":"<p>Hello and thanks for these informations especially about Visual Studio.<\/p>\n<p>Sorry for my naive question but what do you mean exactly when you say &#8220;Visual Studio integration&#8221;?<br \/>\nWill it be necessary to buy VS standard\/Pro to benefit from it?<\/p>\n<p>When I first saw &#8220;Iron Python Studio&#8221;  I went over the Moon before emergency landing (when I realized it was more an example\/&#8221;proof of concept demo&#8221; for the VS shell, without support or answers from the author on the forum).<\/p>\n<p>My hope is to see something approaching the quality of VS Express free as in beer (or for a reasonable price for hobbyist, around 50$)<\/p>\n<p>I say this because the Python world lack a reasonable GUI designer and Microsoft excels at building such tools.<br \/>\nI can&#8217;t count the number of people coming to Python, *loving the language* and then asking where to download the GUI designer (&#8220;you know like in visual studio&#8221;)&#8230; For my part I then continue to use WxPython &#8220;by hand&#8221; but I lose too much time for destop GUI.<\/p>\n<p>If Microsoft releases such a &#8220;free&#8221; IDE\/GUI designer I bet lots of people will jump in the IronPython band-wagon and leverage even more the .Net world.<\/p>\n<p>On a side note for the &#8220;education world&#8221; maybe Microsoft could be more &#8220;broad&#8221;. For example Adobe gives away &#8220;Flex Bulder Pro&#8221; to any students and *any staff* working in education (no need to be part of a special program or agreement):<br \/>\n<a href=\"https:\/\/freeriatools.adobe.com\/\" rel=\"nofollow\">https:\/\/freeriatools.adobe.com\/<\/a><br \/>\n(At the place I work in my university it&#8217;s one of the reason we&#8217;re going the Flex\/Air way instead of Silverlight).<\/p>\n<p>Anyway thanks to Microsoft for working on Iron Python. After the FUD years against Open Source I&#8217;m surprise to see Microsoft again as a very innovative and cool place <img src=\"http:\/\/devhawk.net\/wp-includes\/images\/smilies\/icon_smile.gif\" alt=\":)\" class=\"wp-smiley\" \/>  (when I see IronPython\/Ruby, DLR, Silverlight, PhotoSynth, DeepZoom, CodePlex, PowerShell, Apache support, etc&#8230;).<br \/>\nInteresting times.<\/p>\n<p>francois<\/p>\n","parent":0}],"attachments":[],"comment_count":3,"comment_status":"closed","custom_fields":{"dasblog_entryid":["663bc86a-8185-4c5b-8a5b-c01634a1b1bc"],"dasblog_compressedtitle":["IronPython+Post+20+Roadmap"],"dasblog_compressedtitleunique":["2008\/07\/17\/IronPython+Post+20+Roadmap"]}},"previous_url":"http:\/\/devhawk.net\/2008\/07\/15\/ironpython-1-1-2-rc\/","next_url":"http:\/\/devhawk.net\/2008\/07\/17\/morning-coffee-169\/"}