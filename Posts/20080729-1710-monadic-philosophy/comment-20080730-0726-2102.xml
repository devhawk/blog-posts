<?xml version="1.0" encoding="utf-8"?>
<wp:comment xmlns:wp="http://wordpress.org/export/1.2/">
  <wp:comment_id>2102</wp:comment_id>
  <wp:comment_author><![CDATA[Anthony Mills]]></wp:comment_author>
  <wp:comment_author_email></wp:comment_author_email>
  <wp:comment_author_url>http://amills.net/</wp:comment_author_url>
  <wp:comment_author_IP>66.46.108.118</wp:comment_author_IP>
  <wp:comment_date>2008-07-30 07:26:34</wp:comment_date>
  <wp:comment_date_gmt>2008-07-30 14:26:34</wp:comment_date_gmt>
  <wp:comment_content><![CDATA[I remember having trouble with monads until I understood that monads made things quasi-imperative by taking advantage of the fact that in order to evaluate the body of a function, you have to evaluate the parameters first.

So, imperative form:

function1(state); function2(state); function3(state);

And monadic form:

function3(function2(function1(state), state), state)

Something like that, anyway. The point being, in both forms function1 must execute before function2, which must execute before function3.]]></wp:comment_content>
  <wp:comment_approved>1</wp:comment_approved>
  <wp:comment_type></wp:comment_type>
  <wp:comment_parent>0</wp:comment_parent>
  <wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>