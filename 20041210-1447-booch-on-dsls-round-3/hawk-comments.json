[
  {
    "id": 2735,
    "author-name": "Alex Kazovic",
    "author-email": "alex_kazovic@msn.com",
    "author-url": "",
    "date": "2004-12-10T23:01:36-08:00",
    "content": "One of my concerns with UML is when getting users involved. Their attitude seems to be “here we are again, IT trying to get us users to learn an IT language to describe a business problem. We would rather get IT to learn a business language to describe a business problem”.",
    "parent-id": 494,
    "RowKey": "20041210-230136"
  },
  {
    "id": 2736,
    "author-name": "JTD",
    "author-email": "",
    "author-url": "",
    "date": "2004-12-13T06:51:27-08:00",
    "content": "So having a bunch of DSL's with no common underlying foundation is a 'good thing'?",
    "parent-id": 494,
    "RowKey": "20041213-065127"
  },
  {
    "id": 2737,
    "author-name": "DevHawk",
    "author-email": "harry@devhawk.net",
    "author-url": "",
    "date": "2004-12-16T22:35:32-08:00",
    "content": "JTD, that's not what I'm saying. Many DSL's need to relate to each other. Take Whitehorse for example: You have a app modeller and a data center modeler. These each have some unique semantics and some related semantics. If you go to deploy a web app onto a web server, some type of translation or corolation needs to take place. But within that web app, there are going to be a wide variety of semantics and abstractions - pages, controls, process flows, style sheets, postbacks, etc - that have no corolation in the data center model. Trying to make a single modeling language that supports all these semantics will be overcomplex and unusable. ",
    "parent-id": 494,
    "RowKey": "20041216-223532"
  }
]